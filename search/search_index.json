{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Mathesar Wiki","text":""},{"location":"#overview","title":"Overview","text":"<p>This wiki is a knowledge base for people who are helping build Mathesar. We use it to document technical specs, designs, meeting notes, roles, responsibilities, and other workflow-related information.</p>"},{"location":"#editing","title":"Editing","text":"<p>Anyone can propose edits to this wiki by making a PR against the wiki repository.</p>"},{"location":"#see-also","title":"See also","text":"<ul> <li>Contributor guide with information to get started making code changes</li> <li>User and administrator documentation</li> </ul>"},{"location":"archive/","title":"Archive","text":"<p>These pages are no longer relevant to Mathesar\u2019s development, but are preserved for historical interest.</p>"},{"location":"archive/product/engineering-resources/","title":"Resources","text":"<p>This is a miscellaneous set of reading and resources that may or may not be relevant to Mathesar. Feel free to add more!</p>"},{"location":"archive/product/engineering-resources/#apis","title":"APIs","text":"<ul> <li>Best practices for REST API design - Stack Overflow Blog</li> </ul>"},{"location":"archive/product/engineering-resources/#deployment","title":"Deployment","text":"<ul> <li>Best Practices Around Production Ready Web Apps with Docker Compose</li> </ul>"},{"location":"archive/product/engineering-resources/#licensing","title":"Licensing","text":"<ul> <li>Maintaining Permissive-Licensed Files in a GPL-Licensed Project: Guidelines for Developers</li> </ul>"},{"location":"archive/product/engineering-resources/#postgres","title":"Postgres","text":"<p>Information on Postgres related projects and tools.</p>"},{"location":"archive/product/engineering-resources/#articles","title":"Articles","text":"<ul> <li>Migration Opinions opinions on writing database migrations in Postgres. Invaluable for long-running production production projects with breaking schema changes.</li> <li>Evaluating PostGraphile For Your Project: The section on \u201cSchema Driven APIs\u201d here has some great insights.</li> <li>Advice on Indexes in Postgres</li> <li>10 Things I Hate About PostgreSQL</li> </ul>"},{"location":"archive/product/engineering-resources/#primary-keys","title":"Primary Keys","text":"<ul> <li>UUID, serial or identity columns for PostgreSQL auto-generated primary keys?</li> <li>Sequential UUID Generators</li> </ul>"},{"location":"archive/product/engineering-resources/#projects","title":"Projects","text":"<ul> <li>The graphile organization on GitHub is full of postgres-related projects written in TypeScript. Clean,  straightforward codebases with very good documentation.</li> </ul>"},{"location":"archive/product/engineering-resources/#introspection-api-generation","title":"Introspection + API Generation","text":"<ul> <li>PostgREST - Introspects, generates, and serves OpenAPI-complaint REST apis from Postgres databases.</li> <li>Postgraphile The same thing, but for GraphQL and written in TypeScript. They have really rich documentation that gets into a lot of interesting Postgres best practices and architectural patterns.<ul> <li>A package for realtime communication with Postgres <code>LISTEN / NOTIFY</code> https://github.com/graphile/graphile-engine/tree/v4/packages/pg-pubsub</li> </ul> </li> </ul>"},{"location":"archive/product/feature-ideas/","title":"Feature Ideas","text":"<p>These are potential feature ideas for Mathesar. Each section represents a conceptual grouping of features.</p> <p>Warning</p> <p>Please note that this list is long and disorganized. Some are slated to be built in our roadmap, and others we might not build at all. Features ideas that are already specced out in our roadmap are not listed here.</p>"},{"location":"archive/product/feature-ideas/#views","title":"Views","text":"<p>Users should be able to:</p> <ul> <li>Save filtered/sorted/grouped tables as views.</li> <li>Create a calendar view based on date and time fields in their data</li> <li>Create a histogram chart view based on their data</li> <li>Create a pie chart view based on their data</li> <li>Create a line graph view based on their data</li> <li>Create a scatter plot view based on their data</li> <li>View all saved views and switch between views</li> <li>Set a default view for a table/schema</li> <li>Delete a view</li> <li>Rename a view</li> </ul>"},{"location":"archive/product/feature-ideas/#computed-data","title":"Computed Data","text":"<p>Users should be able to:</p> <ul> <li>Create a new column that computes data from other columns using forumulas.</li> <li>Create \u201csubtotals\u201d for grouped views<ul> <li>Support different types of subtotals: SUM, AVG, MIN, MAX, MED</li> </ul> </li> <li>Create summary views based on subtotals, and use that data in views<ul> <li>e.g. given a database of sales with dates, create a summary view of sales per quarter and put that into a histogram</li> </ul> </li> </ul>"},{"location":"archive/product/feature-ideas/#installation-and-configuration","title":"Installation and Configuration","text":"<p>Users should be able to:</p> <ul> <li>Follow provided instructions to install Mathesar on a server.<ul> <li>The installation process should only install PostgreSQL if needed.</li> </ul> </li> <li>Access existing PostgreSQL databases via Mathesar using existing PostgreSQL user credentials.<ul> <li>Existing databases should reflect all columns and types correctly in the user interface.</li> </ul> </li> <li>Set up a PostgreSQL server automatically if none exists.</li> <li>Create a new database from scratch.</li> <li>Create an initial user if needed.</li> <li>Configure sending email (for password resets, notifications)</li> </ul>"},{"location":"archive/product/feature-ideas/#user-management","title":"User Management","text":"<p>Users should be able to:</p> <ul> <li>Log in</li> <li>Log out</li> <li>Create a new user with permissions: admin, editor, viewer</li> <li>Change a user\u2019s permissions</li> <li>Reset a user\u2019s password</li> <li>Reset their own password (if email is enabled)</li> </ul>"},{"location":"archive/product/feature-ideas/#collaboration","title":"Collaboration","text":"<ul> <li>Users should be able to share tables, schemas, and/or views with either:<ul> <li>the general public (no sign in required)</li> <li>all signed in users</li> <li>specific users</li> </ul> </li> <li>Each of these should support:<ul> <li>admin, view, edit permissions</li> </ul> </li> <li>Existing postgres permissions should be respected/reflected</li> </ul>"},{"location":"archive/product/feature-ideas/#data-workflow-improvements","title":"Data Workflow Improvements","text":"<p>Users should be able to:</p> <ul> <li>Search for data across various tables and schemas</li> <li>Bulk edit data</li> <li>Bulk import new data into an existing collection</li> <li>Export data to:<ul> <li>SQL</li> <li>CSV</li> <li>TSV</li> <li>JSON</li> <li>Excel</li> <li>XML</li> </ul> </li> </ul>"},{"location":"archive/product/feature-ideas/#additional-imports","title":"Additional Imports","text":"<p>Users should be able to import data in the following additional formats:</p> <ul> <li>SQL</li> <li>JSON</li> <li>XML</li> <li>Google Sheets import (via API)</li> <li>Excel file upload</li> <li>Excel web import (via API)</li> <li>Apple Numbers file upload</li> <li>Collabora import</li> <li>Airtable</li> </ul>"},{"location":"archive/product/feature-ideas/#location-type","title":"Location Type","text":"<ul> <li>Add new type, using existing PostGIS type where possible:<ul> <li>Location</li> </ul> </li> <li>Autodetect this type during import</li> <li>Allow user to change columns to this type</li> <li>Add additional grouping options:      Street Address      Country      Administrative Area Level 1 (in the US, these are states)      Administrative Area Level 2 (in the US, these are counties)      Administrative Area Level 3      Administrative Area Level 4      Administrative Area Level 5      Locality (city/town)      Sublocality (subdivision of city/town)      Neighborhood      Postal Code      Latitude      Longitude</li> </ul> <p>The attributes of the location column type are based on results returned by the Google Maps Geocoding API, Since they've done the work of putting addresses into a global format.</p>"},{"location":"archive/product/feature-ideas/#phone-number-type","title":"Phone Number Type","text":"<ul> <li>Add new type<ul> <li>Phone Number</li> </ul> </li> <li>Autodetect this type during import</li> <li>Allow user to change columns to this type</li> <li>Add grouping options:<ul> <li>Country Code</li> <li>Area Code</li> </ul> </li> </ul>"},{"location":"archive/product/feature-ideas/#additional-fields","title":"Additional Fields","text":"<ul> <li>File field (for images, attachments, etc.)</li> <li>IP Address field</li> <li>Formula field (use of spreadsheet like formulas)</li> <li>JSON field</li> </ul>"},{"location":"archive/product/feature-ideas/#additional-views","title":"Additional Views","text":"<ul> <li>Map view</li> <li>Card (Gallery) view</li> <li>Kanban view</li> <li>Data modeling view (of entire schema or database)</li> </ul>"},{"location":"archive/product/feature-ideas/#forms","title":"Forms","text":"<ul> <li>Create forms that allow users to enter data into views</li> </ul>"},{"location":"archive/product/feature-ideas/#data-syncing","title":"Data Syncing","text":"<p>Users should be able to sync data both ways from:</p> <ul> <li>Google Sheets</li> <li>Airtable</li> <li>Excel (web)</li> <li>Airbyte connectors?</li> </ul>"},{"location":"archive/product/feature-ideas/#data-suggestions","title":"Data Suggestions","text":"<p>Users should get suggestions about:</p> <ul> <li>Visualizations they can apply to their data</li> <li>Aggregations they can apply to their data</li> <li>Schema imporovements they can make to their data</li> </ul>"},{"location":"archive/product/feature-ideas/#versioning","title":"Versioning","text":"<p>Users should be able to:</p> <ul> <li>Save a snapshot of their database, schema, or table.</li> <li>Revert to a previous version of their database, schema, or table.</li> <li>Undo and redo recent actions.</li> </ul>"},{"location":"archive/product/feature-ideas/#events","title":"Events","text":"<p>Events in the system should be exposed via an API. e.g.</p> <ul> <li>New table created</li> <li>Table schema changed</li> <li>New data added</li> </ul>"},{"location":"archive/product/feature-ideas/#notifications","title":"Notifications","text":"<p>Users should be able to:</p> <ul> <li>Get email notifications of various events.</li> <li>Get web notifications of various events.</li> </ul>"},{"location":"archive/product/feature-ideas/#templates","title":"Templates","text":"<p>Users should be able to:</p> <ul> <li>Save databases, schemas, applications as templates.</li> <li>Use a template to create a new database, schema, or application.</li> <li>Edit template attributes.</li> <li>Delete a template.</li> <li>Browse existing templates.</li> <li>Search for templates.</li> </ul>"},{"location":"archive/product/feature-ideas/#improved-user-management","title":"Improved User Management","text":"<p>Users should be able to:</p> <ul> <li>Create teams of users, teams can have similar permissions to users.</li> </ul>"},{"location":"archive/product/feature-ideas/#api","title":"API","text":"<ul> <li>API key management</li> <li>API documentation</li> </ul>"},{"location":"archive/product/feature-ideas/#freeform-data-support","title":"Freeform Data Support","text":"<ul> <li>UI to handle freeform data (JSON) well</li> <li>Suggest conversion of non-tabular data to tabular data based on schema</li> <li>Automatically generate appropriate tabular data if consistency exists in imported freeform data</li> </ul>"},{"location":"archive/product/feature-ideas/#sql-exploration","title":"SQL Exploration","text":"<ul> <li>Run SQL from the web interface</li> </ul>"},{"location":"archive/product/feature-ideas/#comments","title":"Comments","text":"<ul> <li>Comment on data</li> </ul>"},{"location":"archive/product/feature-ideas/#database-feature-support","title":"Database Feature Support","text":"<ul> <li>Handle editing, deleting, and infinite scroll for tables without primary keys or with multiple primary keys.</li> <li>Cursor based pagination.</li> </ul>"},{"location":"archive/product/resources/","title":"Resources","text":"<p>This is a miscellaneous set of reading and resources that may or may not be relevant to Mathesar. Feel free to add more!</p> <ul> <li>Speed is the killer feature</li> <li>\u201cEarly Work\u201d by Paul Graham</li> </ul>"},{"location":"archive/product/resources/#post-mortems-of-related-products","title":"Post-mortems of related products","text":"<ul> <li>RethinkDB: why we failed<ul> <li>Related Hacker News discussion</li> </ul> </li> <li>What Happened at Fieldbook</li> </ul>"},{"location":"archive/product/resources/#dabble-db","title":"Dabble DB","text":"<ul> <li>DabbleDB pre-beta demo</li> <li>DabbleDB product demo</li> <li>Old Computer World review of database builder applications, including Dabble DB: useful because it articulates what was special about Dabble DB.</li> <li>Twitter\u2019s announcement of DabbleDB acquisition</li> </ul>"},{"location":"archive/product/roadmap/","title":"Roadmap","text":"<p>Our feature roadmap is tracked via GitHub milestones.</p>"},{"location":"archive/product/roadmap/#about-the-roadmap","title":"About the Roadmap","text":"<p>Our initial roadmap is aimed at creating a very basic version of Mathesar that demonstrates our value proposition. To help us pick which features to build for the initial release, we are using three criteria:</p> <ul> <li>Users should have the features needed to manage a basic collaborative media inventory using Mathesar. We do not have a specific set of features, but keeping a simple use case in mind helps us cut features that may be too advanced.</li> <li>Please see the following design documents for our initial exploration on this topic:<ul> <li>Inventory Use Case exploratory document</li> <li>Inventory: Data Exploration exploratory document</li> <li>Inventory Use Case report/conclusions</li> </ul> </li> <li>Mathesar should work with any existing Postgres databases gracefully. We may not be able to support full editing functionality for all database configurations, but we should not show the user erroneous or missing information.</li> <li>We\u2019re aiming for users to be able to connect Mathesar as a GUI to their existing databases and see its potential immediately.</li> <li>We think the Dabble DB demo video is a good demonstration of end-to-end data management features.</li> <li>Also see our Product Principles.</li> </ul> <p>Once we\u2019ve released our alpha release, we will then expand the roadmap based on user feedback and enabling more complex use cases.</p>"},{"location":"archive/product/roadmap/#target-users","title":"Target users","text":"<p>We\u2019re initially targeting users of differing technical skill levels who want to collaborate on the same data. We assume that the person who sets up Mathesar for a group of users will be a developer or sysadmin, but the remaining users may have no pre-existing knowledge of database or database concepts.</p> <p>Mathesar will be designed so that developers can use the Mathesar API or SQL to work with the database instead of the GUI (or build an entirely new GUI).</p>"},{"location":"archive/product/roadmap/#future-features","title":"Future Features","text":"<p>Please see Feature Ideas for a long and disorganized list of feature ideas that we\u2019re drawing from to create this roadmap.</p>"},{"location":"archive/product/concepts/data-types/","title":"Data Types","text":""},{"location":"archive/product/concepts/data-types/#about","title":"About","text":"<p>A data type is an attribute of a column in a Table. It describes the kind of data that can be stored by a record in that column. Examples of data types include text, number, date, email address, etc.</p> <p>Different data types have their own filters, groups, and other functionality available to help you work better with information of that type.</p> <p>Examples of filtering include:</p> <ul> <li>numbers based on whether they\u2019re greater than <code>2000</code></li> <li>dates based on whether they\u2019re before or after <code>today</code></li> <li>URLs based on whether they\u2019re <code>.com</code> or <code>.net</code>.</li> </ul> <p>Examples of grouping include: </p> <ul> <li>text based on first letter (<code>A</code>, <code>B</code>, <code>C</code>, etc.)</li> <li>numbers based on ranges (e.g. <code>1-100</code>, <code>101-200</code>, etc.)</li> <li>emails based on domain names (e.g. <code>gmail.com</code>, <code>outlook.com</code>, etc.)</li> </ul>"},{"location":"archive/product/concepts/data-types/#data-types-in-mathesar","title":"Data Types in Mathesar","text":"<p>All Table columns have a data type in the Mathesar UI. By default, we use the text data type since it has the least restrictions, but you can change the data type to anything else. Here\u2019s an early design of what selecting a data type will look like:</p> <p></p> <p>You can pick from a set of options and depending on what option you pick (in this example, it\u2019s Number), you can choose additional settings to configure your column correctly. These additional settings are optional. </p>"},{"location":"archive/product/concepts/data-types/#under-the-hood","title":"Under the hood","text":"<p>Unlike Databases, Schemas, Tables, and Views, data types are not a direct representation of the configuration in the database. We\u2019ve simplified data types within Mathesar to make them easier to use. Based on the settings you choose, we pick the correct underlying data type to use in the database. If you\u2019re curious, the underlying database configuration is shown as <code>Database Type</code> at the bottom of the menu (seen in the screenshot above)</p>"},{"location":"archive/product/concepts/data-types/#usage","title":"Usage","text":"<ul> <li>We recommend that you take the time to set the correct data type for each of your columns to help ensure data quality. For example, if you\u2019re storing people\u2019s ages in a column, setting the column to the <code>Number</code> type will:</li> <li>Ensure that everything saved in that column is a number. You can\u2019t accidentally save someone\u2019s age as <code>34b</code> or <code>thirty four</code>.</li> <li>Give you access to operations that work on numbers. You can add up everyone\u2019s ages, average them, find all the rows belonging to someone older than <code>25</code>, group rows by age groups, and so on.</li> <li>Note to Mathesar administrators: Some UI data types such as emails and URLs require custom database types to be installed in order to be available for use. This will be covered in installation instructions for Mathesar users once they are written.</li> </ul>"},{"location":"archive/product/concepts/data-types/#future-plans","title":"Future Plans","text":"<p>In the future, users will be able to plug in their own data types into Mathesar.</p>"},{"location":"archive/product/concepts/data-types/#resources","title":"Resources","text":"<ul> <li>Code-focused wiki page on UI data types</li> <li>PostgreSQL documentation for data types.</li> </ul>"},{"location":"archive/product/concepts/databases/","title":"Databases","text":""},{"location":"archive/product/concepts/databases/#about","title":"About","text":"<p>A database is an organized collection of data, managed by software called a database management system. Please see \u201cWhat is a Database?\u201d on Oracle\u2019s website if you\u2019d like to know more about the general concept.</p>"},{"location":"archive/product/concepts/databases/#databases-in-mathesar","title":"Databases in Mathesar","text":"<p>Mathesar provides a friendly user interface for databases managed by the PostgreSQL database management software. This means that you can connect one or more PostgreSQL databases to Mathesar and use Mathesar to interact with your data.</p> <p>Within a database, you can store different kinds of data in different Schemas. Data is stored in Tables and can also be manipulated through Views.</p>"},{"location":"archive/product/concepts/databases/#usage","title":"Usage","text":"<ul> <li>Mathesar will create a new database for users unless one is already provided.</li> <li>We encourage users to use Schemas for storing different sets of unrelated data rather than creating multiple databases.</li> </ul>"},{"location":"archive/product/concepts/filters/","title":"Filters","text":""},{"location":"archive/product/concepts/filters/#about","title":"About","text":"<p>A Filter allows you to reduce the amount of data displayed in a Table or a View based on specified criteria.</p>"},{"location":"archive/product/concepts/filters/#example","title":"Example","text":"<p>Imagine this table containing movies.</p> ID Title Release Year Watched? 1 Dante\u2019s Peak 1997 TRUE 2 The Bourne Identity 2002 TRUE 3 The Karate Kid 1984 TRUE 4 Full Metal Jacket 1987 TRUE 5 The French Dispatch 2021 FALSE 6 \u96e8\u6708\u7269\u8a9e 1953 FALSE 7 Big Trouble 2002 TRUE <p>You might want to only see movies you\u2019ve watched. You could apply the filter <code>\"Watched?\" is TRUE</code> and then you\u2019d only see these rows:</p> ID Title Release Year Watched? 1 Dante\u2019s Peak 1997 TRUE 2 The Bourne Identity 2002 TRUE 3 The Karate Kid 1984 TRUE 4 Full Metal Jacket 1987 TRUE 7 Big Trouble 2002 TRUE <p>Then you might want to see movies released after 1990 that you\u2019ve watched, so you\u2019d apply an additional filter of <code>Release Year &gt; 1990</code> and see:</p> ID Title Release Year Watched? 1 Dante\u2019s Peak 1997 TRUE 2 The Bourne Identity 2002 TRUE 7 Big Trouble 2002 TRUE"},{"location":"archive/product/concepts/filters/#filters-in-mathesar","title":"Filters in Mathesar","text":"<p>You can filter data in a Table or a View in Mathesar using either the \u201cFilters\u201d button or each column\u2019s menu.</p>"},{"location":"archive/product/concepts/filters/#further-reading","title":"Further Reading","text":"<ul> <li>If you\u2019re curious, you can look at our engineering page about Filters.</li> </ul>"},{"location":"archive/product/concepts/schemas/","title":"Schemas","text":""},{"location":"archive/product/concepts/schemas/#about","title":"About","text":"<p>A schema is a workspace within a Database that contains Tables, Views, and other database objects. </p>"},{"location":"archive/product/concepts/schemas/#schemas-in-mathesar","title":"Schemas in Mathesar","text":"<p>You can organize your data into schemas in Mathesar and switch between schemas. In the Mathesar UI, you can only open one schema at a time.</p> <p>Every database starts off with a schema called <code>public</code>.</p>"},{"location":"archive/product/concepts/schemas/#usage","title":"Usage","text":"<ul> <li>If you have different sets of unrelated data, we recommend using one schema for each set of data. For example, you can use separate schemas for (a) tracking your movie collection, and (b) budgeting.</li> <li>If you\u2019re familiar with Airtable, think of schemas as a \u201cBase\u201d. </li> </ul>"},{"location":"archive/product/concepts/schemas/#resources","title":"Resources","text":"<ul> <li>To learn more about how schemas work at the database level, visit the PostgreSQL documentation.</li> </ul>"},{"location":"archive/product/concepts/tables/","title":"Tables","text":""},{"location":"archive/product/concepts/tables/#about","title":"About","text":"<p>A table is where data in a Database is actually stored.</p> <p>Tables consist of columns and records (rows).</p> <ul> <li>A column describes the data stored, including (but not limited to ) its Data Type.</li> <li>A record is a single unit of data that can be stored in a table. Each record stores data corresponding to each column defined on the table.</li> </ul>"},{"location":"archive/product/concepts/tables/#tables-in-mathesar","title":"Tables in Mathesar","text":"<p>Creating a table is the first step to managing your data within Mathesar.</p>"},{"location":"archive/product/concepts/tables/#example","title":"Example","text":"ID Name Country Age Birth 1 Jayanta Caoimhe Papua New Guinea 22 March 26, 1999 (8:01 AM) 2 Tatenda Birgitta Zimbabwe 8 October 31, 2013 (9:11 PM) 3 Barend Reinhild Belgium 45 October 2, 1976 (9:36 AM) <p>In this table, we have 5 columns and 3 records (rows).</p> <ul> <li>The columns are: <code>ID</code>, <code>Name</code>, <code>Country</code>, <code>Age</code>, and <code>Birth</code>.</li> <li>Each record fits the parameters defined by the column. So every record has a number as <code>ID</code> and date &amp; time as <code>Birth</code>.</li> </ul>"},{"location":"archive/product/concepts/tables/#usage","title":"Usage","text":"<p>In order to avoid duplicating data and make data entry easier, we encourage users to set up a single table for each category of data and then create links betweeen them as needed.</p> <p>In the above example, it would be better to have a separate table for <code>Country</code> as follows.</p>"},{"location":"archive/product/concepts/tables/#people","title":"People","text":"ID Name Country ID Age Birth 1 Jayanta Caoimhe 21 22 March 26, 1999 (8:01 AM) 2 Tatenda Birgitta 23 8 October 31, 2013 (9:11 PM) 3 Barend Reinhild 25 45 October 2, 1976 (9:36 AM)"},{"location":"archive/product/concepts/tables/#countries","title":"Countries","text":"ID Country 21 Papua New Guinea 23 Zimbabwe 25 Belgium <p>Now, if you need to add a new person from Papua New Guinea to the People table, you don\u2019t need to type <code>Papua New Guinea</code> again and risk making a typo. You don\u2019t need to remember that Papua New Guinea\u2019s ID is 21 either - Mathesar offers auto-complete functionality for linked tables and will find the correct record from Countries when you start typing the country name.</p> <p>Although this is convenient for data entry, while looking at the data or analyzing it, you might want to see the full country name next to each person\u2019s name. For that functionality, you should set up a View. </p>"},{"location":"archive/product/concepts/views/","title":"Views","text":""},{"location":"archive/product/concepts/views/#about","title":"About","text":"<p>Views are \u201cvirtual tables\u201d. Data is presented in rows and columns just like a table, but these rows and columns are calculated on the fly by pulling other data from wherever it is stored.</p> <p>Views can involve combining data from multiple tables or other views, filtering, sorting, aggregating (grouping), or even creating entirely computed columns.</p> <p>Under the hood, views are defined by a database (SQL) query. </p>"},{"location":"archive/product/concepts/views/#views-in-mathesar","title":"Views in Mathesar","text":"<p>We expect that Tables will be used for entering simple data quickly and Views will be used for looking at data, creating reports, or editing inter-related data easily.</p> <p>You should use Views when you\u2019d like to:</p> <ul> <li>see data aggregated across multiple tables in one place.</li> <li>bookmark a subset of data in a table (e.g. filtered, sorted, or grouped data)</li> <li>summarize data (e.g. have a column that shows counts of records in a table)</li> <li>compute data (e.g. subtract the value of one column from another column and show the result in a new column)</li> </ul>"},{"location":"archive/product/concepts/views/#usage","title":"Usage","text":"<p>Tables that are structured to avoid data duplication (i.e. are properly normalized) are not the most useful for seeing the most relevant information in a single place.</p>"},{"location":"archive/product/concepts/views/#views-vs-tables","title":"Views vs. Tables","text":"<p>To think about the difference between Views and Tables, here\u2019s an example. Imagine you want to track your movie watches in Mathesar. Questions you might be thinking about are:</p> <ul> <li>On what day of the week do I usually watch movies?</li> <li>When did I last see Brad Pitt in a movie?</li> <li>How many movies did I watch that were released in the 90s vs. the 2000s.</li> <li>What was the last foreign movie I watched?</li> </ul>"},{"location":"archive/product/concepts/views/#table-structure","title":"Table Structure","text":"<p>In order to track the data necessary to answer these questions, here\u2019s a possible structure for your tables:</p>"},{"location":"archive/product/concepts/views/#movies","title":"Movies","text":"ID Title Release Year Primary Language 13 Thelma &amp; Louise 1991 English 22 Meet Joe Black 1998 English 33 Crouching Tiger, Hidden Dragon 2000 Mandarin 41 Crazy Rich Asians 2018 English .. .. .. .."},{"location":"archive/product/concepts/views/#actors","title":"Actors","text":"ID Name 34 Michelle Yeoh 45 Brad Pitt 71 Geena Davis 83 Zhang Ziyi .. .."},{"location":"archive/product/concepts/views/#movie-actor-map","title":"Movie Actor Map","text":"ID Movie ID Actor ID 67 13 45 68 22 45 69 33 34 70 41 34 89 13 71 97 33 83 .. .. .."},{"location":"archive/product/concepts/views/#movie-watch","title":"Movie Watch","text":"ID Movie ID Date 91 13 2021-10-13 100 22 2021-10-01 104 33 2021-09-23 190 41 2021-08-12 203 13 2019-01-20 .. .. .."},{"location":"archive/product/concepts/views/#the-role-of-views","title":"The Role of Views","text":"<p>As is obvious, none of these tables answer your questions by themselves, even when filters, sorts, or aggregations are applied to an individual table. Also, when you watch a new movie, logging it would involve adding data to four separate tables. The job of views is to simplify that.</p> <p>Imagine a view with this structure:</p> ID Title Actors Last Watched Times Watched Language Release Year 13 Thelma &amp; Louise Brad Pitt, Geena Davis 2021-10-13 2 English 1991 22 Meet Joe Black Brad Pitt 2021-10-01 1 English 1998 33 Crouching Tiger, Hidden Dragon Michelle Yeoh, Zhang Ziyi 2021-09-23 1 Mandarin 2000 41 Crazy Rich Asians Michelle Yeoh 2021-08-12 1 English 2018 .. .. .. .. <p>Once you have set up this view, you could filter and sort to get answers to your questions, or add new movie watches easily by adding all relevant data from one place.</p>"},{"location":"archive/product/concepts/views/#future-plans","title":"Future Plans","text":"<p>In the future, we will offer alternate display modes for Views (e.g. calendar, map, kanban, etc.).</p>"},{"location":"archive/product/design/","title":"Early Design Work","text":"<p>Status</p> <p>Mathesar no longer follows this design process. These pages are preserved for historical interest.</p>"},{"location":"archive/product/design/#documents","title":"Documents","text":"<p>Outputs of our design process.</p> <ul> <li>Specs - List of design specs</li> <li>Exploration - Rough notes for initial research and discovery</li> <li>Reports - Conclusions drawn after research<ul> <li>Inventory Use Case</li> <li>Tool Category</li> </ul> </li> </ul>"},{"location":"archive/product/design/#workflow","title":"Workflow","text":"<ul> <li>Spec Guidelines - Guidelines for creating and reviewing design specs.</li> <li>Design System - Description of Mathesar\u2019s design system</li> <li>Design Standards - Rules to follow for Mathesar\u2019s UI</li> </ul>"},{"location":"archive/product/design/#philosophy","title":"Philosophy","text":"<p>High-level information about the philosophy behind our design.</p> <ul> <li>Design Principles. - Principles that guide our design</li> <li>Design Process - High-level overview of our approach to solving design problems.</li> <li>Deliverables - Format of deliverables from the design process.</li> <li>Resources - Reading and external resources</li> </ul>"},{"location":"archive/product/design/principles/","title":"Design Principles","text":"<p>Our design principles are a set of beliefs, views, or approaches we chose to guide our design decisions.</p> <p>Information</p> <p>See also Product Principles.</p>"},{"location":"archive/product/design/principles/#why-do-we-need-design-principles","title":"Why do we need design principles?","text":"<ul> <li>To improve our decision process as a team</li> <li>To align on what matters</li> <li>To promote productive discussions around design problems</li> <li>To define specific criteria to measure design solutions</li> </ul>"},{"location":"archive/product/design/principles/#principle-1-focus","title":"Principle 1: Focus","text":"<p>Our team does not want to spend time on decisions that don\u2019t help our users or us.</p>"},{"location":"archive/product/design/principles/#we-are-process-oriented","title":"We are process-oriented","text":"<ul> <li>Enable spaces that are appropriate for co-creation, participative design</li> <li>Provide an environment in which designers and non-designers feel like their opinions are valued</li> <li>Create resources so that the team and community can learn more about design</li> </ul>"},{"location":"archive/product/design/principles/#we-are-results-oriented","title":"We are results-oriented","text":"<ul> <li>Create features that users will accept and care about</li> <li>Confirm user satisfaction with the product through objective and subjective measurements, not just one of them</li> </ul>"},{"location":"archive/product/design/principles/#principle-2-impact","title":"Principle 2: Impact","text":"<p>We try our best to predict how users will respond to a design and find ways to maximize the benefits and minimize risks. We anticipate the various effects of the project result on the users.</p>"},{"location":"archive/product/design/principles/#we-value-data-and-empirical-support-over-assumptions","title":"We value data and empirical support over assumptions","text":"<ul> <li>As we implement features, we gather data, we observe, we iterate based on those observations</li> <li>We make assumptions about what will happen to prototype and test our designs, but we are careful to question them and double-check that our beliefs and hypotheses are reasonable</li> </ul>"},{"location":"archive/product/design/principles/#principle-3-adaptability","title":"Principle 3: Adaptability","text":"<p>We consider the whole environment in which our product is used and what interactions are unique to each product component. We adapt to that context by consistently testing and refining our designs.</p>"},{"location":"archive/product/design/principles/#just-enough-design-so-that-we-can-adapt-to-new-ideas-and-fail-fast","title":"Just enough design so that we can adapt to new ideas and fail fast","text":"<ul> <li>We can change the plan as circumstances change</li> <li>We are in regular contact with the key stakeholders of the project</li> </ul>"},{"location":"archive/product/design/resources/","title":"Resources","text":""},{"location":"archive/product/design/resources/#from-matrix","title":"From Matrix","text":"<p>These links were shared on the <code>Design</code> channel on Matrix.</p> <ul> <li>Article about Notion\u2019s design process</li> <li>A thread talking about how a lot of open source projects have poor UX and why (context is a discussion about Mumble)</li> <li>Article about the nuance built into browser form fields</li> </ul>"},{"location":"archive/product/design/standards/","title":"Design Standards","text":""},{"location":"archive/product/design/standards/#casing","title":"Casing","text":"<ul> <li> <p>Use Title Case for:</p> <ul> <li>Page titles</li> <li>Tab titles</li> <li>Modal titles</li> <li>Toast titles</li> <li>Headings</li> <li>Buttons</li> <li>Menu items</li> <li>Dropdown triggers</li> </ul> </li> <li> <p>Use Sentence case for:</p> <ul> <li>Form field labels</li> <li>Field set legends</li> <li>Radio options</li> <li>Select options</li> <li>Tool tips</li> <li>Help text</li> <li>Pagination</li> <li>Image alt text</li> </ul> </li> </ul>"},{"location":"archive/product/design/standards/#placement-and-positioning","title":"Placement and positioning","text":"<ul> <li>Buttons which move the user \u201cforward\u201d should be placed to the right of buttons which move the user \u201cbackwards\u201d. For example, if a modal dialog has buttons for \u201cCancel\u201d and \u201cSubmit\u201d, \u201cCancel\u201d should be on the left and \u201cSubmit\u201d should be on the right.</li> </ul>"},{"location":"archive/product/design/exploration/","title":"Design Explorations","text":""},{"location":"archive/product/design/exploration/#fall-2022","title":"Fall 2022","text":"<p>The Mathesar team participated again as a client in UC Berkeley\u2019s Product Design Studio class in 2022.</p>"},{"location":"archive/product/design/exploration/#attachment-data-type","title":"Attachment data type","text":"<p>A single student worked on a design concept for an \u201cattachment\u201d data type in Mathesar.</p> <ul> <li>Final deliverable - Figma file</li> <li>Final presentation - Figma prototype</li> <li>Project kick off and research - FigJam file</li> </ul>"},{"location":"archive/product/design/exploration/#sharing-data","title":"Sharing data","text":"<p>A group of four students worked on designing a \u201csharing\u201d feature i.e. how Mathesar users could invite collaborators, and share data sets via URL or embedding.</p> <ul> <li>Final deliverable - Figma file </li> <li>Final deliverable - Figma prototype </li> <li>Final deliverable - Product spec</li> <li>User Interviews and Competitive Analysis presentatipn </li> </ul>"},{"location":"archive/product/design/exploration/#fall-2021","title":"Fall 2021","text":"<p>The Mathesar team participated as a client in UC Berkeley\u2019s Product Design Studio class in 2021.</p>"},{"location":"archive/product/design/exploration/#data-aggregation","title":"Data Aggregation","text":"<p>A single student worked on a design concept for how users could aggregate data within a table. We\u2019ll be using the work as inspiration for our Views feature and future visualization features.</p> <ul> <li>Design prototype Figma prototype demonstrating the feature</li> </ul>"},{"location":"archive/product/design/exploration/#media-asset-browsing","title":"Media Asset browsing","text":"<p>A group of four students worked on design concepts for how Mathesar users could work with photos and videos more easily. We hope to use their work as inspiration for future plugins.</p> <ul> <li>User Research Presentation covering research and user interviews</li> <li>Final Presentation Final work product, including completed designs</li> </ul>"},{"location":"archive/product/design/exploration/#april-2021","title":"April 2021","text":"<ul> <li>Inventory Use Case User journey for creating a basic media inventory using Mathesar</li> <li>Inventory: Data Exploration Data exploration features for the inventory use case</li> <li>Data Management Skills Notes on skills needed by users to interact with data</li> </ul>"},{"location":"archive/product/design/exploration/#ui-inspiration","title":"UI Inspiration","text":"<p>These are screenshots, articles etc. related to UI/UX patterns that may be useful to us while designing Mathesar.</p> <ul> <li>Data Types</li> <li>Advanced Filters</li> </ul>"},{"location":"archive/product/design/exploration/data-management-skills/","title":"Data Management Skills","text":"<p>This research project explores the factors that influence the adoption and acquisition of data management skills and how Mathesar can minimize the negative impact of skill gaps in this area.</p>"},{"location":"archive/product/design/exploration/data-management-skills/#data-management-skills_1","title":"Data management skills?","text":""},{"location":"archive/product/design/exploration/data-management-skills/#what-are-data-management-skills","title":"What are data management skills?","text":"<p>Data management skills are learned abilities that allow people to accomplish different goals using data. These skills are applied to various scenarios, such as when working with data as part of a business process or creating data-driven strategies. It\u2019s important to note that data management skills are not necessarily about technology alone. There are also procedural and conceptual aspects that influence proficiency in this area.</p> <p>Most data management skills fall into the following categories: * Data Assessment     * Identify problems with data accuracy, completion, recency     * Evaluate coverage and content of a data set  * Data Mining     * Turn raw data into useful information     * Look for patterns in large batches of data * Data Validation     * Ensure correct data types are used or entered * Data Analysis     * Clean, transform, and model data to discover useful information * Data Storage and Retrieval     * Store, manipulate, and retrieve data from a database * Workflow Optimization     * Improve the efficiency of workflows that rely on data     * Clearly understand a database usage purpose     * Produce complete and reliable information of events in a process</p>"},{"location":"archive/product/design/exploration/data-management-skills/#adapting-use-cases-to-data-management-skill-levels","title":"Adapting use cases to data management skill levels","text":"<p>We rely on use cases to come up with different scenarios and situations where applying Mathesar can solve a user problem. However, if the use case is very complex it can introduce a lot of variables and make it harder to incrementally work on defining and implementing Mathesar\u2019s set of features and functionality.</p> <p>For example, in the case of tracking health data, as per Kriti\u2019s example:</p> <p>\u201cWould be great to be able to upload Apple Health exports, Migraine Buddy exports, MyFitnessPal exports, etc. and find patterns in data, correlate different types of data.\u201d</p> <p>A user looking to accomplish this task will require almost all of the skills listed above, except maybe for SQL and workflow optimization ones. A user will need to obtain the data from different sources, determine the correct data types, combine datasets and identify patterns.</p>"},{"location":"archive/product/design/exploration/data-management-skills/#the-role-of-mathesar-in-enabling-data-management-skills","title":"The role of Mathesar in enabling data management skills","text":"<p>Mathesar features should aim to alleviate the consequences of data management skill gaps and enable users to accomplish their goals. For example, filtering, sorting, and grouping features can help uncover patterns in large data sets. Providing aggregate metrics such as sums, counts, averages, or others for filtered views could further enhance user\u2019s pattern-finding abilities. We might want to consider these details when thinking about the interface and interaction design aspects for the Mathesar product. However, no product will ever satisfy all user needs, and using Mathesar alone might not work for all user goals. For this reason, Mathesar seeks to simplify integration with other tools and offer extensibility options.</p>"},{"location":"archive/product/design/exploration/data-management-skills/#common-issues","title":"Common Issues","text":""},{"location":"archive/product/design/exploration/data-management-skills/#database-design-or-breaking-data-into-tables","title":"Database Design or Breaking Data into Tables","text":"<p>Users tend to discover problems related to their initial design too late into the project and have a hard time fixing them without recurring to a lot of manual effort or starting from scratch. If the data is spread over several tables, it can also be much more time consuming to fix data issues. This can happen in cases where they are already using their database to solve an actual problem, making the fix a lot more complicated, for example, collaborators are already entering data. These problems often become visible when the solution needs to scale, such as when adding a new client to a business project. Once the initial solution flaws are uncovered the user is left with few options on how to resolve them. A hypothesis on why this happens is that they aren\u2019t clear on their database\u2019s purpose beyond solving the immediate problem, mainly centered on capturing the data rather than thinking about the entire design. They also lack the appropriate knowledge to diagnose and resolve the issue once they find it, implementing solutions that introduce additional manual work and increases the risk of data inconsistency, duplication, and time waste. Unexpected scenarios can also lead to this in otherwise well-designed databases. For example, the case of a user assuming a one-to-one relationship for a set of entities and then realizing that a one-to-many relationship was possible.</p> <p>User Quote:</p> <p>\u201cI worked so hard on creating these tables, and I\u2019d hate to think that I have to completely rebuild the damn things every time I need to use them on a different project.\u201d</p> <p>\u201cWith Airtable, I\u2019ll get good, easy, relationships, with a great UI, but all sorts of garbage in, garbage out (GIGO) problems with the non-relational attribute values.\u201d</p>"},{"location":"archive/product/design/exploration/data-management-skills/#database-relationships-or-linked-data","title":"Database Relationships or Linked Data","text":"<p>Common linked records issues occur when users manually link to other tables or have various linked records across multiple tables. There\u2019s a tendency for users to avoid separating entities into different tables. Some users consider doing this as overkill or see it as a potential factor that will slow them down in the future. They don\u2019t feel capable of keeping track of all tables and fear the complexity resulting from the load. Sometimes users refer to tables as main or child, which might demonstrate an attempt to establish a hierarchy or make the database more manageable. A hypothesis on why this happens could be that users can\u2019t easily plan the relationships between entities or lack the appropriate knowledge to make those decisions, such as knowing the difference between values or entity sets. It could also be that since they lack database querying skills, the idea of too many tables seems unmanageable. Users are reluctant to increase the size of a project if they feel incapable of managing it effectively and might choose sub-optimal ways to structure it.</p> <p>User Quote:</p> <p>\u201cDoing changes to the table while having so many fields is difficult because too stuff to plow through in general (e.g. while having many different views with different configuration) and if new fields were added in the table, the fields will need to be moved around in views manually because new fields are added at the end of fields in these various additional views\u201d</p> <p>\u201cIs there an easy way of knowing if fields in my tables are being used anywhere in the base?\u201d</p>"},{"location":"archive/product/design/exploration/data-management-skills/#roadmap-considerations","title":"Roadmap Considerations","text":"<p>Based on user research, the ideal roadmap will seek to balance core database management features with additional features to assist users with database design tasks, such as data cleansing, data modeling suggestions, automatic data type detection, relationship exploration tools, and more. We should also consider, for every task, how the user might revert their actions or modify the database structure based on emerging or changing requirements.</p>"},{"location":"archive/product/design/exploration/data-management-skills/#other-considerations","title":"Other Considerations","text":"<p>(Hvorecky, Drlik &amp; Munk, 2010) stress the role of interface design in the acquisition of database querying skills. Their study identified the factors that influence how people learn to interact with data in a relational database and found that query interfaces based on natural language increased user\u2019s satisfaction, accuracy and speed. </p> <p>In another study, they identified the different concepts and knowledge required for appropriate learning of database management skills and proposed the following order for concept introduction: </p>"},{"location":"archive/product/design/exploration/data-types/","title":"Data Types Inspiration","text":""},{"location":"archive/product/design/exploration/data-types/#dates-times","title":"Dates &amp; Times","text":"<p>Here\u2019s how Calendly communicates \u201cdates with timezones\u201d and \u201cdates agnostic of timezones\u201d to their users. </p> <p></p> <p>See also: Timezones GitHub discussion.</p>"},{"location":"archive/product/design/exploration/filters/","title":"Filters Inspiration","text":""},{"location":"archive/product/design/exploration/filters/#advanced-filters","title":"Advanced Filters","text":"<p>Example of advanced filtering with filter groups. </p>"},{"location":"archive/product/design/exploration/inventory-data-exploration/","title":"Inventory: Data Exploration","text":"<p>Information</p> <p>Refer to Inventory Use Case for additional context.</p>"},{"location":"archive/product/design/exploration/inventory-data-exploration/#context","title":"Context","text":"<p>The user has created a new table in Mathesar via file import. The table is used to organize their music album collection.</p> <p></p> <p>The user\u2019s goal is to create a top-level releases table and break artists into another table.</p>"},{"location":"archive/product/design/exploration/inventory-data-exploration/#goals","title":"Goals","text":"<ul> <li>Create separate tables for related information</li> <li>Move data that will repeat often into a reference table</li> <li>Connect reference tables with foreign keys</li> </ul>"},{"location":"archive/product/design/exploration/inventory-data-exploration/#user-creates-a-new-table-inside-an-existing-schema","title":"User creates a new table inside an existing schema","text":"<p>Once the user has created their initial table, they need to add an additional one to include the data they want to link. The user can enter the data manually or they can create a new table by import, the difference is that this time they add it to an existing schema.</p> <p></p> <p></p>"},{"location":"archive/product/design/exploration/inventory-data-exploration/#notes","title":"Notes","text":"<ul> <li>ID field is visible </li> <li>If ID is detected during import the user can accept it</li> <li>Assumption is that ID = primary key</li> <li>Import from file can detect attributes and propose an append rather than replacing</li> </ul>"},{"location":"archive/product/design/exploration/inventory-data-exploration/#questions","title":"Questions","text":"<ul> <li>When creating a new table, do we show a sample field? Or no fields at all?</li> <li>Can an existing table be replaced by file import?</li> </ul>"},{"location":"archive/product/design/exploration/inventory-data-exploration/#user-opens-a-table","title":"User opens a table","text":"<p>From a sidebar panel, the user can see a list of all tables inside a schema. To open a table, all they have to do is click on the corresponding item link. The table will open as a tab in the content area and be closed from the tab.</p> <p>There are two alternatives to solve this step, and each has its pros and cons.</p>"},{"location":"archive/product/design/exploration/inventory-data-exploration/#open-tables-as-tabs-that-can-be-closed","title":"Open tables as tabs that can be closed","text":""},{"location":"archive/product/design/exploration/inventory-data-exploration/#pros","title":"Pros","text":"<ul> <li>Can open tables from different schemas</li> <li>Can access multiple schemas from sidebar</li> </ul>"},{"location":"archive/product/design/exploration/inventory-data-exploration/#cons","title":"Cons","text":"<ul> <li>Sidebar takes horizontal space</li> </ul>"},{"location":"archive/product/design/exploration/inventory-data-exploration/#list-all-tables-as-tabs-that-can-be-selected","title":"List all tables as tabs that can be selected","text":""},{"location":"archive/product/design/exploration/inventory-data-exploration/#pros_1","title":"Pros","text":"<ul> <li>Save up space by removing sidebar</li> </ul>"},{"location":"archive/product/design/exploration/inventory-data-exploration/#cons_1","title":"Cons","text":"<ul> <li>Can\u2019t fit too many tables in the same view</li> </ul>"},{"location":"archive/product/design/exploration/inventory-data-exploration/#user-creates-a-relationship-between-two-tables","title":"User creates a relationship between two tables","text":""},{"location":"archive/product/design/exploration/inventory-data-exploration/#questions-notes","title":"Questions &amp; Notes","text":""},{"location":"archive/product/design/exploration/inventory-data-exploration/#questions_1","title":"Questions","text":"<ul> <li>How does the user know changes have been saved?<ul> <li>Interface needs to show auto-save status</li> <li>Consider activity log</li> </ul> </li> <li>Can users undo changes?<ul> <li>Yes</li> </ul> </li> <li>Can users undo table deletion?<ul> <li>Yes. Users should be able to retrieve a table from an archive.</li> </ul> </li> </ul>"},{"location":"archive/product/design/exploration/inventory-data-exploration/#notes_1","title":"Notes","text":"<ul> <li>Add views to sidebar</li> <li>User breaks column into a new table (look at dabble DB example)</li> <li>New view is created to show combined data, user redirected to that new table</li> <li>If user wants to add a computed field a view is added</li> </ul>"},{"location":"archive/product/design/exploration/use-cases/","title":"Use Cases","text":"<p>inventory-use-case</p>"},{"location":"archive/product/design/exploration/use-cases/inventory-use-case/","title":"Inventory Use Case","text":"<p>People usually need inventories to keep track of things they own or manage. Creating and using these inventories within Mathesar shouldn\u2019t be too different from creating any other spreadsheet. Most of the steps in this process aren\u2019t new to users, making inventory an ideal use case to build first.</p>"},{"location":"archive/product/design/exploration/use-cases/inventory-use-case/#use-case-goals","title":"Use Case Goals","text":"<p>A use case describes the interaction between a user and a system to achieve a goal. The primary user goal for this use case is to create their inventory using Mathesar, either from scratch or by importing their existing data. To help users achieve this goal, we aim to design an intuitive application to perform all steps of inventory creation in a similar fashion to typical spreadsheets.</p>"},{"location":"archive/product/design/exploration/use-cases/inventory-use-case/#preconditions","title":"Preconditions","text":"<ul> <li>The user is not looking to collaborate with other users within Mathesar at the moment</li> <li>The user already has a CSV file with catalog items</li> <li>The user has access to a server for the installation</li> </ul>"},{"location":"archive/product/design/exploration/use-cases/inventory-use-case/#termination-outcomes","title":"Termination Outcomes","text":"<ul> <li>The user can complete every step of the basic inventory flow without requiring external assistance or resources outside of Mathesar</li> <li>The user can build their inventory from scratch or using existing data</li> <li>The user can modify their inventory content (e.g., add, delete, edit records or fields)</li> <li>The user can modify their inventory presentation (e.g., filtering, sorting)</li> <li>The user can perform simple statistical analysis of their inventory data (e.g., count, frequency, etc.)</li> <li>The user can search through their inventory and retrieve a record</li> </ul>"},{"location":"archive/product/design/exploration/use-cases/inventory-use-case/#questions-we-want-to-answer","title":"Questions We Want To Answer","text":"<ul> <li>Are we aware of all the critical steps required to fulfill the inventory use case?</li> <li>Are there any opportunities to simplify the steps, eliminate complexity?</li> <li>Are there any risks that we can avoid or eliminate by modifying or introducing steps?</li> </ul>"},{"location":"archive/product/design/exploration/use-cases/inventory-use-case/#the-design-process","title":"The Design Process","text":"<p>Visit the Design Process section to read an overview of the product design process that the team will follow to build the inventory prototype. This design will include the user experience, user interface and interactions, and the underlying features and patterns.</p>"},{"location":"archive/product/design/exploration/use-cases/inventory-use-case/#inventory-use-case-basic-flow","title":"Inventory Use Case Basic Flow","text":"<p>Information</p> <p>These wireframes are meant to work as abstract representations of the user journey. Content and layout will most likely change as we add more definitions to each step.</p> <ul> <li>User visits Mathesar\u2019s website or documentation, reads about the features and finds the documentation quickly.<ul> <li>User locates a list of features and confirms Mathesar will solve their problem.</li> <li>User locates a list of requirements and confirms they have what it takes to install and run Mathesar.</li> </ul> </li> </ul> <p></p> <ul> <li>The user downloads the files (zip file or pull code from GitHub mirror) and places them on a server. The user follows additional configuration steps and other tuning required to install Mathesar.</li> </ul> <p></p> <ul> <li> <p>The user creates a database to use with Mathesar. The user can perform this step as a standalone operation or part of the installation process if they don\u2019t have a database.</p> </li> <li> <p>By following the documentation instructions, the user locates the database config file and edits the information (database name, user, password, host, etc.). </p> </li> </ul> <p></p> <ul> <li> <p>The user runs the install.</p> </li> <li> <p>The user completes some administration settings (create user, email) and can now start using Mathesar. </p> </li> <li> <p>The user is taken to a page that displays different options to start working with Mathesar. They can choose to create a new schema or import data from a file. The user decides to import from a file and navigates to the import options view.</p> </li> </ul> <p></p> <p></p> <ul> <li>The user reviews the import preview and data types that the system detected automatically</li> </ul> <p></p> <ul> <li>The user reviews and finishes importing data from the CSV file. The data is added as a new schema table.</li> </ul> <p></p> <ul> <li>The user can now explore the data contained on the table, modify its content, sort or filter it.</li> </ul> <p></p> <ul> <li>The user breaks some of the fields into separate tables until satisfied with the data structure.</li> </ul> <p></p> <ul> <li>The user sets a default view for the table.</li> </ul> <p></p> <p></p> <ul> <li>The user creates an additional chart view by aggregating data</li> </ul> <p></p> <p></p>"},{"location":"archive/product/design/process/","title":"Design Process","text":"<p>There are five phases in our design process.</p> <p>Information</p> <p>See Specs for deliverables from this process.</p>"},{"location":"archive/product/design/process/#design-problem-framing","title":"Design Problem Framing","text":"<p>During this phase, we try to define the boundaries and context of the design problem by drawing connections between the product\u2019s current situation and its desired future state. Once we understand the gap between these two, we can describe the design problem from the user\u2019s perspective. We look at the situation from their perspective and consider what they need.</p>"},{"location":"archive/product/design/process/#goals","title":"Goals","text":"<p>Frame the design problems that need to be solved to implement the roadmap.</p>"},{"location":"archive/product/design/process/#activities","title":"Activities","text":"<ul> <li>Research: practical research on the problem from literature review, user testing with prototypes, user interviews, and collected product feedback.</li> <li>Data Analysis: learn more about the problem through analyzing qualitative and quantitative data.</li> <li>Facilitated Discussion: have a discussion to gain an understanding of the way each team member views the design problem.</li> </ul>"},{"location":"archive/product/design/process/#questions","title":"Questions","text":""},{"location":"archive/product/design/process/#how-do-we-know-what-the-desired-future-state-is","title":"How do we know what the desired future state is?","text":"<p>The desired future state is defined by our product strategy and the required functionality that it aims to deliver as captured in our roadmap. The product strategy is the \u201cbig picture\u201d that drives our work, and it helps us communicate what the product stands for, why it exists and where it should go.</p>"},{"location":"archive/product/design/process/#what-if-the-roadmap-changes","title":"What if the roadmap changes?","text":"<p>In a perfect world, we would build everything we outlined in our product roadmap. However, as we often learn the hard way, nobody has time to do everything in the roadmap at once. So we have to compromise and determine what we absolutely can build based on constraints like time and current team size.</p> <p>When prioritizing, we select the features that will significantly impact users or that we already know will require less effort for us to build. To understand the user needs, we develop use cases. A use case scenario depicts how a user would use the product to solve a particular problem. We validate these use cases against our current roadmap version. If the features fail to solve the user needs, we revisit them to add the missing parts or simplify the use case.</p>"},{"location":"archive/product/design/process/#what-are-design-problems","title":"What are design problems?","text":"<p>Design problems are concerned with design aspects of the product that are lacking, unresolved, or otherwise preventing a desirable future state from being achieved.</p>"},{"location":"archive/product/design/process/#point-of-view-goals-and-constraints","title":"Point-of-view, Goals and Constraints","text":"<p>During the point-of-view phase, we turn the problem into an actionable, goal-oriented statement. \u2018Actionable\u2019 is the key word here, as we understand there\u2019s no \u201cright\u201d product feature or design solution; we have to decide which is best for a particular situation. The point of view is essential for decision-making and helps us focus our energies to prioritize.</p>"},{"location":"archive/product/design/process/#goals_1","title":"Goals","text":"<p>Transform the framed problems into a set of goals and use those to kickstart the possibility exploration process. </p>"},{"location":"archive/product/design/process/#activities_1","title":"Activities","text":"<ul> <li>Exploratory Wireframing</li> <li>User Journey Maps</li> <li>Storyboards</li> </ul>"},{"location":"archive/product/design/process/#explore-possibilities","title":"Explore Possibilities","text":"<p>During this phase, we explore the universe of possible design solutions and identify those that can potentially help us meet the goals we\u2019re trying to achieve. Design solutions don\u2019t have to be fully worked out to start the selection process.</p>"},{"location":"archive/product/design/process/#goals_2","title":"Goals","text":"<p>Explore the different ways in which we can solve a design problem </p>"},{"location":"archive/product/design/process/#activities_2","title":"Activities","text":"<ul> <li>Possibility Definition </li> <li>Define Selection Criteria</li> <li>Possibility Selection</li> </ul>"},{"location":"archive/product/design/process/#questions_1","title":"Questions","text":""},{"location":"archive/product/design/process/#how-are-ideas-selected","title":"How are ideas selected?","text":"<p>We work towards selecting ideas in different ways, based on the implications of the decision being made. Some design solutions are critical for the product strategy, and others are less so. Identifying which ones are the most critical allows us to define the criteria we\u2019re going to use during the final selection process.</p>"},{"location":"archive/product/design/process/#how-do-we-balance-methodology-and-creativity","title":"How do we balance methodology and creativity?","text":"<p>As is the case with most design projects, there isn\u2019t a single correct outcome. While methods, when applied properly, have a solid chance of leading to good results, creativity often trumps methodology when exploring the seemingly endless options and nuances of design ideas. We need to sacrifice our methodology to stay open to new possibilities, loosen up, and embrace the chaos from time to time. The fewer constraints we put on ourselves during the ideation process, the more creative we can get.</p>"},{"location":"archive/product/design/process/#prototyping","title":"Prototyping","text":"<p>During the prototyping phase, the ideas from the previous step will evolve into more realistic representations of the final solution. To this end, prototypes can be interactive, use actual data, or whatever means exist to make the concepts more tangible. Prototypes should be used to create a testable solution that the team can implement. </p> <p>It\u2019s essential to be attentive to sources of feedback when iterating through prototypes. We often over-design a prototype to the point where we are not testing the intended solution but simply refining it. To ensure that every iteration has a clear purpose, we must move from prototyping into testing as soon as possible and many times as necessary during the design process.</p>"},{"location":"archive/product/design/process/#goals_3","title":"Goals","text":"<p>Create a testable, working model of the solution that the team or users can experience.</p>"},{"location":"archive/product/design/process/#activities_3","title":"Activities","text":"<ul> <li>Select components and patterns</li> <li>Design interactive prototypes</li> <li>Share prototypes</li> </ul>"},{"location":"archive/product/design/process/#testing","title":"Testing","text":"<p>During the testing phase, the prototypes produced in the previous step go through different forms of user-centered testing, where they are evaluated based on pre-established acceptance criteria.</p>"},{"location":"archive/product/design/process/#goals_4","title":"Goals","text":"<p>Evaluate how usable (i.e., can users use it?), desirable (i.e., do users want it?), and performant the prototypes are; collect that information to improve the final design or start an additional prototype iteration.</p>"},{"location":"archive/product/design/process/#activities_4","title":"Activities","text":"<ul> <li>Informal action analysis<ul> <li>Take a look at the sequence of actions users have to perform to complete a task</li> </ul> </li> <li>Analyze each action based on how frequent they might be, how many facts does the user have to learn to perform an action etc. </li> <li>Cognitive walkthrough<ul> <li>Imagine what people are thinking or doing while using the prototype</li> </ul> </li> <li>Find obvious problems, missing controls, confusing labels</li> <li>Heuristic evaluation of prototypes (against predefined design principles)<ul> <li>Evaluate a design based on guidelines or general principles</li> <li>Evaluators do the analysis alone then problems are combined</li> <li>Often useful to analyze combined results as a group activity</li> </ul> </li> <li>Conduct user testing (comparative or explorative)</li> <li>Conduct surveys or interviews to obtain user insights</li> </ul>"},{"location":"archive/product/design/process/#questions_2","title":"Questions","text":""},{"location":"archive/product/design/process/#do-we-need-to-always-test-with-actual-users","title":"Do we need to always test with actual users?","text":"<p>User-centered testing can be conducted with or without actual users depending on the requirements and context. However, in the end, both types of testing will always be required. </p>"},{"location":"archive/product/design/process/deliverables/","title":"Deliverables","text":""},{"location":"archive/product/design/process/deliverables/#design-hand-off","title":"Design Hand-Off","text":"<p>The Design Hand-Off document contains the necessary information, links to assets, supporting documentation, and a high-level overview of the functionality to be delivered for implementing a design. The design hand-off is created as a throwaway document, to be used only during the implementation phase. Once the design is implemented, it should lead to subsequent updates to permanent design documents such as component libraries.</p>"},{"location":"archive/product/design/process/deliverables/#goal","title":"Goal","text":"<ul> <li>After reading the document, the team should have a conceptual understanding of the current state of the design, the desired design state, and the necessary actions for implementing it. </li> <li>The team should be able to identify and resolve any remaining issues or gaps in the design before implementation.</li> </ul>"},{"location":"archive/product/design/process/deliverables/#content","title":"Content","text":"<p>The design hand-off document covers the following aspects of the design:</p>"},{"location":"archive/product/design/process/deliverables/#user-experience","title":"User Experience","text":""},{"location":"archive/product/design/process/deliverables/#interactions","title":"Interactions","text":""},{"location":"archive/product/design/process/deliverables/#user-interface","title":"User Interface","text":""},{"location":"archive/product/design/process/deliverables/#process","title":"Process","text":"<p>Once the team is done reading the design hand-off document, the implementation phase can begin. There are several steps to follow in the implementation phase to ensure that the design implementation lives up to the requirements in the hand-off document.</p> <p>LINK TO IMPLEMENTATION PHASE</p>"},{"location":"archive/product/design/process/design-system/","title":"Design System","text":"<ul> <li>Documented elements, components, including both design and front-end guidelines</li> <li>Includes underlying design principles</li> </ul>"},{"location":"archive/product/design/process/design-system/#styles","title":"Styles","text":"<ul> <li>Brand applied to interface elements</li> <li>Color, typography, iconography</li> </ul>"},{"location":"archive/product/design/process/design-system/#component-library","title":"Component Library","text":"<ul> <li>Common core elements that the team can use throughout the product</li> <li>Design Files or living code</li> </ul>"},{"location":"archive/product/design/process/design-system/#ways-to-create-library-components","title":"Ways to create library components","text":"<p>There\u2019s no single best approach when it comes to building components. Methods like fast-prototyping will sometimes require interfaces to use components before they become available and documented in the library. </p> <p>In the book Building Design Systems, two different approaches to creating new components are described. Both methods of construction are outlined here:</p> <ul> <li>Build Up Components to Create Interfaces: Start with building the components and grouping them until the interface is complete.</li> <li>Break Down Interfaces into Components: Break an interface into parts until and start creating components for the reusable ones.</li> </ul> <p>Both methods will still require documentation to be created at the end of the process. Still, the former method focuses more on anticipating design requirements based on available solutions, and the latter happens as the result of prototyping activities.</p>"},{"location":"archive/product/design/process/design-system/#documenting-components","title":"Documenting components","text":"<p>Documenting components is a crucial step of the design process. It provides the team with a resource to reuse and integrate components and maintain consistency as the product evolves.</p> <p>Ideally a component library entry should contain the following:</p> <ul> <li>Name of the component</li> <li>Description of the component</li> <li>Usage guidelines<ul> <li>Behavior</li> <li>Properties</li> <li>States</li> </ul> </li> <li>Applicable examples</li> <li>Links to code examples if available</li> </ul>"},{"location":"archive/product/design/process/design-system/#front-end-guidelines","title":"Front-end Guidelines","text":"<p>WIP</p>"},{"location":"archive/product/design/process/review-guidelines/","title":"Design Review Guidelines","text":"<p>The design team creates specs to describe the design solutions related to the Mathesar product. Whether small or large, all design issues should be accompanied by a spec containing the solution details and information relevant to its implementation.</p> <p>The spec creation process begins when a design issue on GitHub is started and finalizes when the spec is approved and merged. When a design issue is ready for review, a spec is created, and a pull request (PR) is opened. Finalizing a design spec means, in most cases, that the design issue has also been fully solved. If this is not the case, or the problem is solved partially, then the reason and additional requirements must be communicated in the associated GitHub issue and documented in the spec. Additional GitHub issues to track the unresolved parts of the design problem need to be created before the spec is finalized.</p> <p>Every spec goes through a review process so that members of the team can discuss it and ask questions. During these discussions, the reviewers\u2019 unique perspectives and expertise are captured to ensure the design solution is technically feasible, uncover missing implementation scenarios, and, most importantly, strengthen adherence to the product\u2019s vision. A productive review will result in a better design and a smoother implementation.</p>"},{"location":"archive/product/design/process/review-guidelines/#design-review-team","title":"Design Review Team","text":"<p>This is the list of team members who have volunteered to review new designs.</p> Name Role Kriti Product Ghislaine Design Brent Backend Pavish Frontend Sean Frontend"},{"location":"archive/product/design/process/review-guidelines/#process-for-authors","title":"Process for Authors","text":"<ul> <li>Clone the Mathesar Wiki Repo and create a new page under the Design Specs directory. Additionally, create a link to it from the top-level Documents page.</li> <li>Please follow the format of the most recent spec. Spec formats may change over time.</li> <li>Add the spec content to the page. Make sure the page date is updated as well.</li> <li>Once you think the spec is ready for review, create a PR that includes in its description:</li> <li>a link to the referenced design issue from the Mathesar Repo formatted as \u201cFixes <code>&lt;link to the issue&gt;</code>.\u201d</li> <li>an expected timeline for the review, if any.</li> <li>Be sure to include the specific feedback you are seeking.</li> <li>Assign the required reviewers by their GitHub username.</li> <li>Choose reviewers from the Design Review Team section above.</li> <li>Always request a review from all Mathesar members with Product or Design roles (see Team for handles. From the engineering roles, assign both a frontend and backend engineer. If there are multiple engineers with a role, rotate the person assigned for subsequent reviews.</li> <li>Please post the GitHub PR link to <code>#design-review:matrix.mathesar.org</code>.</li> <li>If the reviewers request changes or have questions, please make the changes and re-request the review.</li> <li>Once everyone has had a chance to review (or the timeline expires) and you\u2019re satisfied with the feedback, update the spec and ensure that it all fits together nicely.</li> </ul>"},{"location":"archive/product/design/process/review-guidelines/#spec-content","title":"Spec Content","text":"<p>The spec content will depend on the particular design problem being addressed. However, it is recommended that you include the following parts:</p> <ul> <li>An overview or summary of the problem.</li> <li>Assume the person looking at the spec didn\u2019t read the related issue.</li> <li>User Scenarios.</li> <li>Go from simplest to complex so that new details are added incrementally, for example, \u2018User opens a table\u2019 to \u2018User opens multiple tables at once.</li> <li>A link to a prototype or wireframes or any artifact used to demonstrate the design solution.</li> <li>Including video walkthroughs for prototypes or wireframes can help the team better understand the proposed solution. A Mathesar Loom account is available for design team members for this purpose.</li> </ul>"},{"location":"archive/product/design/process/review-guidelines/#design-issues","title":"Design Issues","text":"<p>We use GitHub issues to track design work. Issues used to track design problems are marked with the <code>work: design</code> label.</p>"},{"location":"archive/product/design/process/review-guidelines/#process-for-reviewers","title":"Process for Reviewers","text":"<ul> <li>Assignees are required to review specs. Everyone else should feel free to add reviews.</li> <li>Check for outstanding design spec review requests at least once a day.</li> <li> <p>Comment on the GitHub PR with feedback. Please follow the general advice below. Once you\u2019re done reviewing the document, approve the changes or unassign yourself from the PR if you don\u2019t have any feedback.</p> </li> <li> <p>Request changes explicitly if you want them included in the spec before it is finalized.</p> </li> <li>By sharing feedback, you actively participate in the UX process; make sure you read the context documents and are clear on the user\u2019s needs. If needed, ask questions, don\u2019t make assumptions.</li> </ul>"},{"location":"archive/product/design/process/review-guidelines/#advice-for-reviewers","title":"Advice for Reviewers","text":"<ul> <li>Describe the problem with the design but don\u2019t assume a specific design solution</li> <li>Strive to think from the user\u2019s perspective, not your own</li> <li>If you find inconsistencies in the design, describe what you expected to encounter instead</li> <li>Adapt your feedback to the design\u2019s fidelity level</li> <li>e.g., pointing out alignment issues on wireframes is not useful because they are not meant to be high-fidelity</li> <li>Avoid ambiguity, try to articulate problems clearly and concisely</li> <li>Use descriptive words such as \u201cclear\u201d, \u201chelpful\u201d, \u201cobvious\u201d, \u201cconfusing\u201d, \u201ccomplex\u201d, rather than \u201cbad\u201d, \u201cwrong\u201d, \u201coff\u201d, etc.</li> <li>Think backwards from the end-goal</li> <li>Don\u2019t highlight only the negative aspects of the design. Positive feedback provides valuable information.</li> </ul>"},{"location":"archive/product/design/reports/inventory-use-case/","title":"Inventory Use Case","text":"<p>The inventory use case presented many opportunities to understand how the design of the Mathesar application could influence user goals.  We selected the inventory use case because it combined simple data storage with minimal analysis needs.</p> <p>Information</p> <p>See also: Mathesar Tool Category Exploration</p> <p>To learn from this use case, wireframes that depicted the various user steps needed to build an inventory were created and shared for feedback. An additional wireframe round was conducted to dig deeper into the data exploration process.</p>"},{"location":"archive/product/design/reports/inventory-use-case/#conclusions","title":"Conclusions","text":""},{"location":"archive/product/design/reports/inventory-use-case/#installation-and-configuration-ux","title":"Installation and Configuration UX","text":"<ul> <li>Although ease of installation and configuration are key adoption drivers, they are not a design priority due to low definition from the engineering side and should be revisited once more information is available.</li> <li>We have determined that the target user for the MVP will have sufficient technical skills to self-host, install and configure Mathesar related technologies such as the PostgreSQL database.</li> <li>We have determined that ideally, we want to offer multiple installation options similar to what Wiki.js provides.</li> </ul>"},{"location":"archive/product/design/reports/inventory-use-case/#onboarding-or-first-steps","title":"Onboarding or First Steps","text":"<ul> <li>We are assuming, for the MVP, that a majority of first-time users will start from existing data. Thus the onboarding needs to consider their specific needs, such as import from file, file type support for standard file types, data type detection, and more.</li> <li>The initial design supports importing from CSV as it is likely that most platforms support exporting data as CSV. Pasting content directly from a spreadsheet will also enable users to start exploring the tool with little effort.</li> <li>We determined that it will be necessary for an optimal user experience to expose users to the concept of \u2018views\u2019 as soon as they start the database normalization process. The views automatically generated will help create a more cohesive experience for the user as they learn to navigate the different tables and relationships generated during the process.</li> </ul>"},{"location":"archive/product/design/reports/inventory-use-case/#import-file-into-existing-table","title":"Import File into Existing Table","text":"<ul> <li>We discussed the option of proposing a data table append if the same columns are detected in the imported file.</li> </ul>"},{"location":"archive/product/design/reports/inventory-use-case/#working-from-tables-and-views","title":"Working from Tables and Views","text":"<ul> <li>Unlike Dabble DB, users will be able to browse the different tables that make up their schema. However, it is still unclear how we\u2019ll handle modifications of table data at the view level. These interaction requirements are a potential UX priority.</li> </ul>"},{"location":"archive/product/design/reports/inventory-use-case/#error-recovery-and-prevention-experience","title":"Error recovery and Prevention Experience","text":"<ul> <li>Encouraging users to explore and try different things within the application is a primary concern, mainly because we aim to increase their knowledge regarding database design and normalization concepts. It will be necessary to prioritize features that enable users to recover from errors so that learning can take place.</li> </ul>"},{"location":"archive/product/design/reports/inventory-use-case/#proposed-next-steps","title":"Proposed Next Steps","text":"<ul> <li>Define the optimal experience, interactions, and UI for a user importing data from a CSV file into a new or existing table.</li> <li>Define the optimal experience, interactions, and UI for a user locating, preparing, modifying, and sharing a view of their table data.</li> </ul>"},{"location":"archive/product/design/reports/tool-category/","title":"Tool Category Exploration","text":""},{"location":"archive/product/design/reports/tool-category/#is-mathesar-a-database-gui-tool","title":"Is Mathesar a Database GUI tool?","text":"<p>Based on discussions with the team, the answer is no. While Mathesar shares many of the core features found on database GUI tools, it is not intended to support advanced database administration and operations. </p>"},{"location":"archive/product/design/reports/tool-category/#then-what-kind-of-tool-is-mathesar","title":"Then what kind of tool is Mathesar?","text":"<p>One of Mathesar\u2019s primary purposes is data storage, with the addition of robust data model customization features, integration with external data sources, data visualization, and sharing capabilities. This combination of features makes Mathesar a mix between a database GUI and analysis &amp; visualization tools.</p>"},{"location":"archive/product/design/reports/tool-category/#what-might-be-valuable-to-mathesar-users","title":"What might be valuable to Mathesar users?","text":""},{"location":"archive/product/design/reports/tool-category/#most-valued-features-for-data-analysis-tools","title":"Most valued features for Data Analysis Tools","text":"<p>Data analysis tools are focused on data manipulation and statistical analysis to aid in decision-making processes. Most commercial tools offer out-of-the-box pre-built data transformations and visualizations to accommodate users of all data-literacy levels.</p> <ul> <li>Easily connect to multiple data sources.</li> <li>Create actionable dashboards automatically.</li> <li>Manage data permissions</li> <li>Share data, analysis easily.</li> <li>Automated data transformation (clean and normalize)</li> <li>Team collaboration</li> <li>Formulas, functions, and data modeling</li> <li>Pre-built visualizations</li> <li>Present data in different ways</li> <li>Spreadsheet-like UI</li> </ul>"},{"location":"archive/product/design/reports/tool-category/#most-valued-features-for-database-gui-tools","title":"Most valued features for Database GUI Tools","text":"<p>Database GUI tools help database users to manage, manipulate and visualize their data. Compared to the traditional command-line interface methods, GUI tools have a lower learning curve, making it easy to browse databases and tables. One of the top reasons to use a GUI tool is increased productivity reported by the users of such applications.</p> <ul> <li>Easy to install</li> <li>Handy administration tools</li> <li>Great user management</li> <li>Secure connections</li> <li>Import and export of standard file types</li> <li>Cross-platform</li> </ul>"},{"location":"archive/product/design/reports/tool-category/#most-valued-features-for-visualization-tools","title":"Most valued features for Visualization Tools","text":"<p>Data visualization tools deal with the graphic representation of data. They are primarily focused on the creation of dashboards and real-time monitoring of data. Performance is essential for these tools as they require running many complex queries to generate the visualizations.</p> <ul> <li>Pre-built data connectors</li> <li>Natural language querying</li> <li>Custom infographics</li> <li>Interactive visualizations</li> <li>Guided data discovery</li> <li>Dashboard builder</li> <li>Sharing or embedding outside of the organization (social media, cloud, websites)</li> </ul>"},{"location":"archive/product/design/reports/tool-category/#conclusions","title":"Conclusions","text":"<ul> <li>We don\u2019t want to over-specialize in solving a particular problem as we still haven\u2019t learned enough from target users and how they might apply Mathesar to meet their needs.</li> <li>The roadmap should first focus on the core functionality required to transform various sources of data into normalized databases with minimum effort from users and only then move to the application of those databases into solving more specific problems.</li> <li>We want to make sure that we solve the needs of a single app user before we introduce collaboration features.</li> </ul>"},{"location":"archive/product/design/reports/tool-category/#proposed-next-steps","title":"Proposed Next Steps","text":"<ul> <li>Define UX principles based on our current knowledge of potential target users and their needs.</li> <li>Consider how and when we might interact with potential target users during the design process.</li> </ul>"},{"location":"archive/product/design/specs/","title":"Design Specs","text":""},{"location":"archive/product/design/specs/#pre-launch-work","title":"Pre-Launch Work","text":"<p>See styling and UX improvements across the entire product in Figma, use the Figma icon on the top left to navigate between different pages.</p>"},{"location":"archive/product/design/specs/#features","title":"Features","text":"<p>These are specs for new features, corresponding to our development milestones.</p>"},{"location":"archive/product/design/specs/#table-inspector","title":"Table Inspector","text":"<ul> <li>Inline Saving and Editing</li> <li>Table Inspector</li> <li>Data Type Options</li> </ul>"},{"location":"archive/product/design/specs/#navigation","title":"Navigation","text":"<ul> <li>Navigation Updates</li> <li>Add Table from Import/URI/Data paste Specs<ul> <li>This is under \u201cNavigation\u201d because we needed to update it after the navigation changed from having tabs for different tables.</li> </ul> </li> </ul>"},{"location":"archive/product/design/specs/#queries","title":"Queries","text":"<ul> <li>Data Explorer</li> <li>Formula Columns</li> </ul>"},{"location":"archive/product/design/specs/#data-modeling","title":"Data Modeling","text":"<ul> <li>Column Extraction</li> </ul>"},{"location":"archive/product/design/specs/#records","title":"Records","text":"<ul> <li>Record Page</li> <li>Record Summary</li> </ul>"},{"location":"archive/product/design/specs/#views","title":"Views","text":"<ul> <li>Listing Views</li> <li>Editing Records Within a View</li> <li>Create, Edit, Delete Views</li> <li>Viewing Views</li> </ul>"},{"location":"archive/product/design/specs/#links-between-tables-foreign-keys-table-relationships","title":"Links between Tables (Foreign Keys, Table Relationships)","text":"<ul> <li>Record Selector</li> <li>Usage of Foreign Key Constraints</li> <li>Multiple Records Associated with a Single Record</li> <li>One-to-Many Relationships</li> </ul>"},{"location":"archive/product/design/specs/#data-types","title":"Data Types","text":"<ul> <li>Global Data Types</li> <li>Non-Mathesar Data Types</li> <li>Duration Data Type</li> <li>Date/Time Data Type</li> <li>Boolean Data Type</li> <li>Money Data Type</li> <li>URL Data Type</li> <li>Email Data Type</li> <li>Number Data Type</li> <li>Text Data Type</li> </ul>"},{"location":"archive/product/design/specs/#tables","title":"Tables","text":"<ul> <li>UX for NULL Values</li> <li>Working with Columns</li> <li>Basic Table Operations</li> <li>Add, Update, Delete Records</li> <li>Filter, Sort, Group Tables</li> <li>Add Table from File Import</li> <li>Read Only Table</li> <li>Import Status</li> <li>Table Creation Controls</li> <li>Pagination Component</li> </ul>"},{"location":"archive/product/design/specs/#database-and-schemas","title":"Database and Schemas","text":"<ul> <li>Working with Schemas</li> <li>Multiple Databases</li> </ul>"},{"location":"archive/product/design/specs/#ui-improvements","title":"UI Improvements","text":"<ul> <li>Left Sidebar Improvements</li> <li>Lookup Field Component</li> <li>Clipboard interactions</li> </ul>"},{"location":"archive/product/design/specs/Formulas/","title":"Formulas","text":"<p>Warning</p> <p>This spec is a work in progress and should not be used to inform any decisions.</p>"},{"location":"archive/product/design/specs/Formulas/#context","title":"Context","text":"<p>Formula columns are used to \u2026 in the context of data explorer. This spec will go over the different design requirements \u2026 allowing users to add, edit and interact with formulas etc. </p>"},{"location":"archive/product/design/specs/Formulas/#prototypes-wireframes","title":"Prototypes / Wireframes","text":""},{"location":"archive/product/design/specs/Formulas/#formula-parameters","title":"Formula Parameters","text":""},{"location":"archive/product/design/specs/Formulas/#adding-a-formula","title":"Adding a Formula","text":""},{"location":"archive/product/design/specs/Formulas/#editing-a-formula","title":"Editing a Formula","text":""},{"location":"archive/product/design/specs/Formulas/#scenarios","title":"Scenarios","text":""},{"location":"archive/product/design/specs/Formulas/#adding-a-formula-column","title":"Adding a Formula Column","text":""},{"location":"archive/product/design/specs/Formulas/#user-adds-a-formula","title":"User adds a formula","text":"<p>Formula requires a specific data type column</p> <ul> <li>If table has no columns for that data type<ul> <li>The formula selector menu displays a message to inform users that a specific data type column is required.</li> </ul> </li> </ul>"},{"location":"archive/product/design/specs/Formulas/#user-closes-formula-form-without-completing-all-the-parameters","title":"User closes formula form without completing all the parameters","text":""},{"location":"archive/product/design/specs/Formulas/#interactions","title":"Interactions","text":""},{"location":"archive/product/design/specs/Formulas/#formula-saving-pattern","title":"Formula Saving Pattern","text":""},{"location":"archive/product/design/specs/Formulas/#components","title":"Components","text":""},{"location":"archive/product/design/specs/Formulas/#formula-selector","title":"Formula Selector","text":"<p>The formula selector is a component that lists and allows formula selection. The selector also includes a search input where users can enter the name of a formula to filter the list by matching formulas. The various formulas are categorized by formula type, and their contents are alphabetically sorted.</p>"},{"location":"archive/product/design/specs/add-formula-column/","title":"Formula Columns","text":"<p>Danger</p> <p>This spec is a starting point and has not been reviewed from an engineering or product perspective. It will be updated when we are ready to start implementing this.</p>"},{"location":"archive/product/design/specs/add-formula-column/#context","title":"Context","text":"<p>In addition to data columns, we have formula columns as well. These columns are basically derived from a formula. A formula may or may not use another data column to generate the formula column. The formula can also use parameters of different data types other than columns. </p> <p>The formula columns can only be created with Data explorer. For more details, you can check out this link</p>"},{"location":"archive/product/design/specs/add-formula-column/#scenarios","title":"Scenarios","text":""},{"location":"archive/product/design/specs/add-formula-column/#scenario-1-add-a-formula-column-without-clicking-outside-of-the-inspector","title":"Scenario 1 - Add a formula column without clicking outside of the inspector.","text":"<p>To add a column, the left hand side of the explorer view has an <code>Add Column</code> button. Once that is clicked, there are two options visible. Those are - <code>Add direct column</code> and <code>Add formula column</code>. </p> <p>After selecting <code>Add formula column</code>, an empty placeholder column is visible. The column also has a default name that is <code>formulaColumnX</code>. X indicates serial number of formula column with a default name.</p> <p>The inspector on the right hand side shows a name input for the user to give a relevant name to the column. There is a formula selection dropdown for the user to select from. A detailed description of the selection menu can be found in components section</p> <p>Once the formula is selected, the formula settings will then be visible. If the user inputs valid parameters, they will be able to see results in the formula column. Invalid parameters are described in scenario 2.b below.</p> <p>If the user is satisfied with the result, they can save the query. </p>"},{"location":"archive/product/design/specs/add-formula-column/#scenario-1a-add-a-random-generation-type-formula-column","title":"Scenario 1.a - Add a random generation type formula column","text":"<p>The random generation type formula generates random numbers or UUID. For random number generation, the user just have to provide upper and lower bound with the decimal flag. There is no column input when it comes to random generation type formulas. Hence, the successful generation of the random generation type column is shown below. </p> <p></p>"},{"location":"archive/product/design/specs/add-formula-column/#scenario-1b-add-a-text-type-formula-column","title":"Scenario 1.b - Add a text type formula column","text":"<p>The text type formula works on columns with text data type. There can be different parameters depending on what the formula is. For instance, there are <code>starting index</code> and <code>count</code> here in the example below.</p> <p></p>"},{"location":"archive/product/design/specs/add-formula-column/#scenario-1c-add-a-number-type-formula-column","title":"Scenario 1.c - Add a number type formula column","text":"<p>The number type formula works on columns with number data type. There can be different parameters depending on what the formula is. For instance, there is <code>comparison sign</code> here in the example below.</p> <p></p>"},{"location":"archive/product/design/specs/add-formula-column/#scenario-1d-add-a-date-time-type-formula-column","title":"Scenario 1.d - Add a date &amp; time type formula column","text":"<p>The date/time type formula works on columns with date/time data type. There can be different parameters depending on what the formula is. For instance, there is <code>precision</code> here in the example below.</p> <p></p>"},{"location":"archive/product/design/specs/add-formula-column/#scenario-1e-add-a-cumulative-type-formula-column","title":"Scenario 1.e - Add a cumulative type formula column","text":"<p>The cumulative type formula works on columns with any data type. There can be different parameters depending on what the formula is. It basically shows how data in one column is changing with the help of different mathematical equations.</p> <p></p>"},{"location":"archive/product/design/specs/add-formula-column/#scenario-1f-add-a-boolean-type-formula-column","title":"Scenario 1.f - Add a boolean type formula column","text":"<p>The boolean type formula works on columns with boolean data type. There can be different parameters depending on what the formula is. For instance, there is <code>condition</code> here in the example below.</p> <p></p>"},{"location":"archive/product/design/specs/add-formula-column/#scenario-1g-add-a-regular-expression-type-formula-column","title":"Scenario 1.g - Add a regular expression type formula column","text":"<p>The regular expression type formula works on columns with any data type. There can be different parameters depending on what the formula is. It basically is to determine if there are any patterns in the data of a column. </p> <p></p>"},{"location":"archive/product/design/specs/add-formula-column/#scenario-1h-add-a-list-type-formula-column","title":"Scenario 1.h - Add a list type formula column","text":"<p>The list type formula works on columns with list data type. There can be different parameters depending on what the formula is.</p> <p></p>"},{"location":"archive/product/design/specs/add-formula-column/#scenario-2-the-formula-column-result-is-empty-or-erroneous","title":"Scenario 2 - The formula column result is empty or erroneous","text":""},{"location":"archive/product/design/specs/add-formula-column/#scenarios-2a-the-formula-is-configured-correctly-but-returns-no-values","title":"Scenarios 2.a - The formula is configured correctly but returns no values","text":"<p>Whenever the user adds valid input there is a temporary feedback message below the input which says <code>Valid Input</code>. This is to notify them that there is nothing wrong in the formula configuration if they don\u2019t see desired column values.</p>"},{"location":"archive/product/design/specs/add-formula-column/#scenario-2b","title":"Scenarios 2.b - The formula is configured incorrectly and returns an invalid output","text":"<p>If the formula parameters input are invalid, there is a temporary feedback message below the input which says <code>Invalid Input</code>. This is to notify them that the inputs are wrong and hence they might not see the desired column</p>"},{"location":"archive/product/design/specs/add-formula-column/#scenarios-2c-the-formula-is-configured-correctly-but-a-column-referenced-in-the-parameters-is-missing","title":"Scenarios 2.c - The formula is configured correctly but a column referenced in the parameters is missing","text":"<p>When formula is configured correctly at first but if the column or the table which had that column gets deleted, the column data is retained but there is warning with an hoverable info message.</p>"},{"location":"archive/product/design/specs/add-formula-column/#scenario-2d-the-formula-is-configured-correctly-but-a-column-referenced-in-the-parameters-has-a-new-invalid-data-type","title":"Scenario 2.d -  The formula is configured correctly but a column referenced in the parameters has a new invalid data type","text":"<p>When formula is configured correctly at first but if the column data type is changed to an incompatible one, the column data is retained but there is warning with an hoverable info message.</p>"},{"location":"archive/product/design/specs/add-formula-column/#scenario-3-edit-a-formula-column","title":"Scenario 3 - Edit a formula column","text":"<p>The formula can be edited anytime user wants. So there can be two scenarios on how users goes about changing the formula.</p> <p>Case 1 - The user changes the parameters. So here, user will be only given options for compatible columns. And if they want it to change it to a value, they can even do that. But an invalid value will again show <code>Error</code> in the column. </p> <p>Case 2 - The user changes the selected formula. Once the user selects a different formula parameter values are not retained and they see empty parameters and an empty column again. To see the value they will have to add compatible params again.</p>"},{"location":"archive/product/design/specs/add-formula-column/#scenario-4-user-clicks-outside-the-inspector-before-saving","title":"Scenario 4 - User clicks outside the inspector before saving","text":"<p>The outcome of this scenario is dependent on future Navigation so will be updated then.</p>"},{"location":"archive/product/design/specs/add-formula-column/#scenario-5-user-closes-the-explorer-without-saving-the-query","title":"Scenario 5 - User closes the explorer without saving the query","text":"<p>The outcome of this scenario is dependent on future Navigation so will be updated then.</p>"},{"location":"archive/product/design/specs/add-formula-column/#interactions","title":"Interactions","text":""},{"location":"archive/product/design/specs/add-formula-column/#parameter-inputs","title":"Parameter inputs","text":"<p>The parameters have two kinds of inputs that are values and column names. A parameter can accept both or either. But the parameter that accepts both have a prefix that the user needs to select for distinguishing what type of input they have chosen. The columns list consists of columns with compatible data type only. User wont\u2019t be able to select a column that is not compatible. There is a painless dropdown to do so as seen below.</p> <p></p>"},{"location":"archive/product/design/specs/add-formula-column/#components","title":"Components","text":""},{"location":"archive/product/design/specs/add-formula-column/#add-column-button","title":"Add column button","text":"<p>The user can only add formula column through data explorer. But the user can add two types of column through the data explorer so on clicking the <code>Add column</code> button the user sees a drop down to select from. The dropdown consists of -  1. Add direct column - The column that has direct data. 2. Add formula column -  The column which is generated using a formula.</p> <p></p>"},{"location":"archive/product/design/specs/add-formula-column/#the-formula-selection-menu","title":"The formula selection menu","text":"<p>The formula selection menu is quite long since there are a lot of formula to choose from. To reduce the strain, the dropdown is divided into categories of formulas that are text, number, random generator and so on. There is search option where user can search the category or the formula name to directly use a formula. There is a recent section where the user can see their last three used formulas to quickly jump on that.</p> <p></p>"},{"location":"archive/product/design/specs/add-formula-column/#future-work","title":"Future work","text":"<p>The Data Explorer save and close actions are dependent on other flows that are still being defined. This is likely to be a part of future Navigation updates where there will be a special navigation scenario for abandoning a view when changes are unsaved.</p>"},{"location":"archive/product/design/specs/add-update-delete-records/","title":"Adding, Update and Deleting Records","text":""},{"location":"archive/product/design/specs/add-update-delete-records/#figma-prototype","title":"Figma Prototype","text":""},{"location":"archive/product/design/specs/add-update-delete-records/#context","title":"Context","text":"<p>Adding records will be an essential part of an inventory system as users will have to update their inventory to reflect changes. For example, if users added a new item to their list, we should allow them to update their inventory by adding records to the relevant database table.</p>"},{"location":"archive/product/design/specs/add-update-delete-records/#user-experience","title":"User Experience","text":"<p>The user experience for adding, editing, and deleting records should make table modifications seamless, intuitive, and visual. For example, users should do so without following any specific data entry order and across multiple records at once when adding and editing records. Errors, if present, shouldn\u2019t block the user from performing other actions and should be easily corrected from the UI.</p>"},{"location":"archive/product/design/specs/add-update-delete-records/#scenario-adding-a-record","title":"Scenario: Adding a Record","text":""},{"location":"archive/product/design/specs/add-update-delete-records/#user-opens-a-table","title":"User opens a table","text":"<p>The user starts adding a record by opening the table in which they wish to add the record. They must have write permissions to insert the record.</p> <p>An empty row should be placed at the bottom of every table so that users can easily add rows.</p>"},{"location":"archive/product/design/specs/add-update-delete-records/#review-notes","title":"Review Notes","text":""},{"location":"archive/product/design/specs/add-update-delete-records/#when-the-last-row-is-not-visible","title":"When the last row is not visible","text":"<p>The user can trigger the add row action from the top menu options. The table should then scroll to where the new row is positioned.</p> <p></p>"},{"location":"archive/product/design/specs/add-update-delete-records/#user-selects-any-new-row-cell","title":"user selects any new row cell","text":"<p>Users can select a cell and start editing its contents by double-click or on key-down on the selected cell. The user could also paste clipboard data into a selected cell. </p> <p></p> <ul> <li>The new row is the last row of a table</li> <li>Once they start to edit the new row, the row number is assigned, and an asterisk is used to represent the unsaved state</li> <li>Another new row is added to the bottom once the existing one is assigned a row number</li> </ul>"},{"location":"archive/product/design/specs/add-update-delete-records/#user-enters-data-into-each-field","title":"user enters data into each field","text":"<p>Once a cell is in edit mode, the user can modify its content as needed. The content has to be valid for each specific data type. However, users are allowed to enter any value and change the data type before saving. </p> <p></p> <ul> <li>The user can fill out the columns in any order, as long as they complete all required columns before saving.</li> <li>If multiple rows are added, users can fill out columns on more than one. However, all would have to be error-free for the save action to work</li> <li>Only one column at the time can be filled (multiple select is not possible)</li> </ul>"},{"location":"archive/product/design/specs/add-update-delete-records/#user-enters-an-invalid-value","title":"User enters an invalid value","text":"<p>The user enters invalid data, and as a response, the system shows a visual indicator for the affected table cell. The visual indication will remain until the error is resolved. The user can hover over the affected cell to display an explanation of why it is failing. </p> <p></p> <p>Attempting to save a table with errors will result in a dialog asking the user to fix the errors before continuing to the save step.</p> <p></p>"},{"location":"archive/product/design/specs/add-update-delete-records/#user-saves-the-new-record","title":"user saves the new record","text":"<p>Once the table is free of errors, the user can click the save button to save the record. After this, the user will see the record added to the table. </p>"},{"location":"archive/product/design/specs/add-update-delete-records/#if-the-edited-cell-column-is-affected-by-a-filter-sort-or-group-condition","title":"If the edited cell column is affected by a filter, sort, or group condition.","text":"<p>If the value of the edited cell is affected by a table display property, the row should move to its new position on save and not after edit. </p>"},{"location":"archive/product/design/specs/add-update-delete-records/#scenario-updating-a-record","title":"Scenario: Updating a Record","text":""},{"location":"archive/product/design/specs/add-update-delete-records/#user-selects-a-cell-from-an-existing-record","title":"user selects a cell from an existing record","text":"<p>Users can do table modifications on existing records by enabling edit mode on any cell. </p> <p></p>"},{"location":"archive/product/design/specs/add-update-delete-records/#scenario-deleting-a-record","title":"Scenario: Deleting a Record","text":""},{"location":"archive/product/design/specs/add-update-delete-records/#user-selects-a-row","title":"User selects a row","text":"<p>Users can select rows by a single click on any table cell or by clicking on a row number indicator.</p> <p></p>"},{"location":"archive/product/design/specs/add-update-delete-records/#user-deletes-a-selected-row","title":"User deletes a selected row","text":"<p>Deleting a row or multiple rows can be done from the \u2018Delete\u2019 dropdown menu. </p> <p></p>"},{"location":"archive/product/design/specs/add-update-delete-records/#user-deletes-multiple-rows","title":"user deletes multiple rows","text":"<p>To select multiple rows, users must select them from the number indicators rather than at the table cell level while pressing the shift key or command key for multi-selection.</p> <p></p>"},{"location":"archive/product/design/specs/add-update-delete-records/#interactions","title":"Interactions","text":""},{"location":"archive/product/design/specs/add-update-delete-records/#save-status-indicators","title":"Save Status Indicators","text":"<p>Any changes to a table should trigger the save status to change. This is represented visually at the modified table object level and the table itself. Users can\u2019t save changes individually. And instead, they can be saved in batches. </p> <p></p> <p></p>"},{"location":"archive/product/design/specs/add-update-delete-records/#selecting-rows","title":"Selecting rows","text":"<p>Users can select entire rows if they wish to copy their contents, delete them, or perform other row-level actions. </p> <p></p> <p>However, any selected cell will automatically set the row and columns to which it belongs as selected. The system will target any row or column action level actions to the current selection.</p> <p></p>"},{"location":"archive/product/design/specs/add-update-delete-records/#implementation-notes","title":"Implementation Notes","text":"<ul> <li>The table toolbar component introduced for the design of this feature could also be used to trigger the table properties panel discussed on the previous feature specs</li> </ul>"},{"location":"archive/product/design/specs/add-update-delete-records/#additional-review-notes","title":"Additional Review Notes","text":""},{"location":"archive/product/design/specs/add-update-delete-records/#accessing-new-record-row","title":"Accessing new record row","text":"<p>Access to the new record row control is provided via the table\u2019s toolbar and table navigation controls.</p> <p></p>"},{"location":"archive/product/design/specs/add-update-delete-records/#last-row-visible","title":"Last row visible","text":"<p>When the last row is visible, users can simply click on the new record row and activate it. </p>"},{"location":"archive/product/design/specs/add-update-delete-records/#last-row-not-visible","title":"Last row not visible","text":"<p>When the number of rows exceeds the visible portion of the table, a user can navigate to the bottom of the page by using the page navigation control.</p> <p></p>"},{"location":"archive/product/design/specs/add-update-delete-records/#order-and-filter-independence","title":"Order and Filter Independence","text":"<p>If a row\u2019s position or visibility is affected, a notice will be displayed when the user hovers over the row.</p> <p></p>"},{"location":"archive/product/design/specs/add-update-delete-records/#required-fields","title":"Required Fields","text":"<p>If a record has required fields, the system won\u2019t save the new record until all the necessary fields are filled.</p> <p></p>"},{"location":"archive/product/design/specs/add-update-delete-records/#save-status","title":"Save Status","text":"<p>The saved status is displayed on the table toolbar and changes based on the save status of all modified rows.</p> <p></p>"},{"location":"archive/product/design/specs/add-update-delete-records/#disabled-state-while-syncing-changes","title":"Disabled State while Syncing Changes","text":"<p>While saving is in the process, the system will block the affected rows from editing.</p>"},{"location":"archive/product/design/specs/add-update-delete-records/#contextual-menu","title":"Contextual Menu","text":"<p>Opening a menu on right-click was discussed and will be considered for a future iteration.</p> <p></p>"},{"location":"archive/product/design/specs/add-update-delete-records/#last-row-visible_1","title":"Last row visible","text":"<p>When the last row is visible, users can simply click on the new record row and activate it. </p>"},{"location":"archive/product/design/specs/add-update-delete-records/#last-row-not-visible_1","title":"Last row not visible","text":"<p>When the number of rows exceed the visible portion of the table, a user can navigate to the bottom of the page by using the page navigation control.</p> <p></p>"},{"location":"archive/product/design/specs/add-update-delete-records/#order-and-filter-independence_1","title":"Order and Filter Independence","text":"<p>In the case that a row\u2019s position or visibility is affected, a notice will be displayed when the user hovers over the row.</p> <p></p>"},{"location":"archive/product/design/specs/add-update-delete-records/#required-fields_1","title":"Required Fields","text":"<p>If a record has required fields, the new record won\u2019t be saved until all required fields are filled.</p> <p></p>"},{"location":"archive/product/design/specs/add-update-delete-records/#save-status_1","title":"Save Status","text":"<p>The save status is displayed on the table toolbar and changes based on the save status of all modified rows.</p> <p></p>"},{"location":"archive/product/design/specs/add-update-delete-records/#disabled-state-while-syncing-changes_1","title":"Disabled State while Syncing Changes","text":"<p>While saving is in process the affected rows will be blocked from editing.</p>"},{"location":"archive/product/design/specs/add-update-delete-records/#contextual-menu_1","title":"Contextual Menu","text":"<p>Opening a menu on right-click was discussed and will be considered for a future iteration.</p>"},{"location":"archive/product/design/specs/boolean-data-type/","title":"Boolean Data Type","text":""},{"location":"archive/product/design/specs/boolean-data-type/#context","title":"Context","text":"<p>Boolean data types are used to store TRUE or FALSE values. </p>"},{"location":"archive/product/design/specs/boolean-data-type/#prototype","title":"Prototype","text":"<p>Warning</p> <p>This prototype might be outdated due to global component updates. Please refer to the link under \u2018Setting Options\u2019 for an updated version of the shared components.</p> <p>Boolean Data Type Prototype</p>"},{"location":"archive/product/design/specs/boolean-data-type/#user-experience","title":"User Experience","text":""},{"location":"archive/product/design/specs/boolean-data-type/#scenarios","title":"Scenarios","text":""},{"location":"archive/product/design/specs/boolean-data-type/#user-sets-a-column-to-boolean-data-type","title":"User sets a column to \u2018Boolean\u2019 data type","text":"<p>The user can set the column data type to \u2018Boolean\u2019 by accessing the \u2018Data Type Options\u2019 in the columns header menu. Whether there are existing values or not, the outcomes will vary if they are valid boolean values. If there are valid URL values, the system will convert them to boolean types. There are only two boolean values. They are True and False. However, we might map existing values or integers as equivalents to true and false, for example, \u2018yes and no\u2019 or \u20180 and 1\u2019.</p> <p>If there are no valid boolean values, the system will prevent the change from being made. </p>"},{"location":"archive/product/design/specs/boolean-data-type/#setting-options","title":"Setting Options","text":"<p>The following is an interactive representation of the various options that users can set for this type: Boolean Type Options</p>"},{"location":"archive/product/design/specs/boolean-data-type/#user-enters-a-new-boolean-data-type-value","title":"User enters a new \u2018Boolean\u2019 data type value","text":"<p>Depending on the configuration, the user will enter a \u2018Boolean\u2019 value with two different controls.</p> <ul> <li>Default Dropdown (TRUE, FALSE)</li> <li>Custom Dropdown (TRUE Custom Value, FALSE Custom Value)</li> <li>Checkbox (Checked, Unchecked)</li> </ul>"},{"location":"archive/product/design/specs/boolean-data-type/#user-filters-a-boolean-data-type-column","title":"User filters a \u2018Boolean\u2019 data type column","text":"<p>Users can filter \u2018Boolean\u2019 data type columns by basic equality operators (is, is not) and whether the value is empty. </p>"},{"location":"archive/product/design/specs/boolean-data-type/#user-groups-a-boolean-data-type-column","title":"User groups a \u2018Boolean\u2019 data type column","text":"<p>Users can group \u2018boolean\u2019 data types columns simply by adding them to the group columns list. The function will create a group for each boolean value (TRUE, FALSE).</p>"},{"location":"archive/product/design/specs/boolean-data-type/#additional-changes","title":"Additional Changes","text":""},{"location":"archive/product/design/specs/boolean-data-type/#disable-unique-constraint-for-certain-data-types","title":"Disable Unique Constraint for Certain Data Types","text":"<p>The user won\u2019t be able to disallow duplicate values for a \u2018Boolean\u2019 type column. The setting should appear disabled under the column header menu.</p>"},{"location":"archive/product/design/specs/clipboard-interactions/","title":"Clipboard Interaction specs","text":""},{"location":"archive/product/design/specs/clipboard-interactions/#design-goals","title":"Design goals","text":"<ul> <li>Allow users to copy/paste one (and sometimes multiple) cell values within Mathesar \u2013 and also between Mathesar and another applications.</li> </ul>"},{"location":"archive/product/design/specs/clipboard-interactions/#additional-context","title":"Additional Context","text":"<ul> <li>GitHub Issue</li> <li>Usability Improvements project which contains this work</li> </ul>"},{"location":"archive/product/design/specs/clipboard-interactions/#terminology-and-abbreviations-in-this-document","title":"Terminology and abbreviations in this document","text":"<ul> <li>\u23e9 represents a tab character within strings</li> <li>MIME refers to a MIME type</li> <li>TSV refers to \u201cTab Separated Value\u201d</li> <li>Similar products<ul> <li>Calc means LibreOffice Calc</li> <li>Sheets means Google Sheets</li> <li>Airtable means Airtable</li> <li>GT means Google Tables</li> </ul> </li> </ul>"},{"location":"archive/product/design/specs/clipboard-interactions/#research","title":"Research","text":""},{"location":"archive/product/design/specs/clipboard-interactions/#how-clipboards-work","title":"How clipboards work","text":"<ul> <li>When you copy data into your system clipboard, that data is stored along with an associated MIME type. In the simplest scenario of copying plain text, the text you copy is stored along with the MIME type <code>text/plain</code>.</li> <li>The clipboard can also hold multiple representations of the same data simultaneously with each representation being associated with a different MIME type. This allows applications to do things like write <code>text/html</code> data to the clipboard for rich text while also writing <code>text/plain</code> for a plain text representation of the same data.</li> <li>When you paste, it\u2019s up to the receiving application to read the different MIME types and decide which representation to receive, potentially incorporating some user input into that decision process.</li> <li> <p>Some applications even write other vendor-specific metadata into the clipboard, associating it with non-standard MIME types. For example, when copying cells in Google Sheets, the application writes some JSON data to the clipboard and associates it with the MIME type:</p> <pre><code>application/x-vnd.google-docs-embedded-grid_range_clip+wrapped\n</code></pre> </li> <li> <p>You can inspect your clipboard contents and their MIME types by pasting into this clipboard inspector app.</p> </li> </ul>"},{"location":"archive/product/design/specs/clipboard-interactions/#how-web-clipboard-apis-work","title":"How web clipboard APIs work","text":"<ul> <li> <p>All browsers have a synchronous clipboard API</p> <ul> <li>It\u2019s based on the DOM events <code>copy</code>, <code>paste</code>, and <code>cut</code> which bubble up from the focused element any time the user triggers the corresponding keyboard shortcut.</li> <li>It allows reading/writing data from/to the clipboard with arbitrary MIME types.</li> <li>It\u2019s widely supported.</li> <li>It is constrained by its reliance on user-initiated clipboard events via keyboard shortcuts. So it can\u2019t, for example, respond to copy/paste via a custom context menu.</li> <li>It\u2019s synchronous nature has the unfortunate consequence of locking the main thread while processing the clipboard data.</li> </ul> </li> <li> <p>Most browsers also implement the newer asynchronous clipboard API</p> <ul> <li>It provides imperative, asynchronous methods to read and write clipboard data without responding to user events.</li> <li>It can process large clipboard data without locking the main thread.</li> <li>Copying plain text (i.e. MIME type <code>text/plain</code>) to the clipboard is widely supported and does not require any special permissions.</li> <li>Copying data with any other MIME type unfortunately lacks support in Firefox.</li> <li>Pasting text from the clipboard has even worse support, and also (by design) requires a special browser permission (for security reasons).</li> </ul> </li> </ul>"},{"location":"archive/product/design/specs/clipboard-interactions/#how-other-products-work","title":"How other products work","text":""},{"location":"archive/product/design/specs/clipboard-interactions/#copying","title":"Copying","text":"<ul> <li> <p>MIME types</p> <ul> <li>Calc writes <code>text/plain</code>, <code>text/html</code>, and a few others that we don\u2019t care about</li> <li>Sheets writes <code>text/plain</code>, <code>text/html</code>, and a vendor specific representation in JSON</li> <li>Airtable and GT only write <code>text/plain</code></li> </ul> </li> <li> <p>When generating TSV text from a cell containing a newline or tab (delimiter) character</p> <ul> <li>Calc and GT Corrupt the data, converting the delimiter to space</li> <li>Sheets quotes the cell with double quotes</li> <li>Airtable quotes the cell when it contains a newline but not when it contains a tab. This seems like a bug.</li> </ul> </li> <li> <p>When quoting a cell value that contains a double quote character</p> <ul> <li>Calc, Sheets, and Airtable escape the double quote by preceding it with a double quote</li> </ul> </li> <li> <p>User feedback</p> <ul> <li>Calc puts a dashed blue border around the copied cells</li> <li>Sheets puts a then dashed black border around the cells that moves</li> <li>Airtable and GT show a toast message</li> </ul> </li> <li> <p>Non-rectangular cell grids</p> <ul> <li>Calc does not allow cells to be copied from multiple selections</li> <li>Sheets copies the cells from the most recent selection, leaving other selections un-copied</li> <li>Airtable does not allow multiple selections</li> </ul> </li> </ul>"},{"location":"archive/product/design/specs/clipboard-interactions/#pasting","title":"Pasting","text":"<ul> <li> <p>MIME types</p> <ul> <li>Calc and Sheets read <code>text/html</code> if available, with <code>text/plain</code> as a fallback</li> <li>Airtable and GT only read <code>text/plain</code></li> </ul> </li> <li> <p>When receiving pasted TSV text containing quoted cells</p> <ul> <li>Calc, Sheets, and Airtable remove quotes from cells. This makes it possible to copy-paste cells that contain delimiters but also makes it impossible to copy-paste a cell containing text surrounded with double quotes. Because these products prefer reading <code>text/html</code>, this limitation may not present itself often when copying/pasting between these products.</li> <li>GT had bugs that prevented me from trying this out</li> </ul> </li> <li> <p>User feedback</p> <ul> <li>Calc removes the border around the copied cells</li> <li>Sheets keeps the border around the copied cells</li> <li>Airtable shows a toast message with a progress indicator</li> <li>GT requires a confirmation when pasting more than one cell at a time</li> </ul> </li> <li> <p>When pasting into an FK column</p> <ul> <li>Airtable uses the pasted value to lookup an existing record (using its \u201cPrimary field\u201d) or create a new one if needed. This is very slick.</li> <li>GT works okay if the value is copied from cells within that same column, but it shows a toast error otherwise. They seem to be using some sort of internal clipboard to handle this.</li> </ul> </li> <li> <p>When pasting into a column of a different type</p> <ul> <li>Airtable Spends time to save, but then the value is empty afterwards. Sometimes see error toast \u201cCan\u2019t paste into this field. The destination field is computed.\u201d Overall, weird behavior. Feels buggy.</li> <li>GT shows a toast error</li> </ul> </li> <li> <p>Non-rectangular cell grids</p> <ul> <li>Calc handles each line of source data on its own, pasting over existing cells until the line terminates. Existing cells after the line ends will be left untouched.</li> <li>Sheets paste into a rectangle large enough to contain all cells in the source data. Blank values are used to fill in the missing cells.</li> <li>Airtable pastes all text into one cell.</li> </ul> </li> <li> <p>Other notes</p> <ul> <li> <p>Airtable appears to use some sort of internal clipboard in addition to the system clipboard. I noticed this when experimenting with cells containing tab characters.</p> <p>The (three) cells <code>one</code> <code>two</code> <code>three</code> produce the TSV <code>one\u23e9two\u23e9three</code> when copied, but the (two) cells <code>one\u23e9two</code> <code>three</code> also produce that same TSV text. I can copy-paste the two-cell variant within the same browser tab successfully, but when I try copy-pasting that two-cell across browsers, then the two-cell variant becomes the three-cell variant. This seems to be poorly implemented to me.</p> </li> </ul> </li> </ul>"},{"location":"archive/product/design/specs/clipboard-interactions/#mathesars-clipboard-design","title":"Mathesar\u2019s clipboard design","text":""},{"location":"archive/product/design/specs/clipboard-interactions/#copying-cells-from-mathesar","title":"Copying cells from Mathesar","text":"<ul> <li> <p>Copying cells is triggered by the user\u2019s platform-specific keyboard shortcut. There is no context menu entry to trigger a copy.</p> </li> <li> <p>When the browser\u2019s focus is on a cell element, the <code>copy</code> event copies the content of all the selected cells in the sheet which contains the focused cell.</p> <ul> <li> <p>When a non-cell element has focus, cells cannot be copied, even if they are selected. This behavior is somewhat important, given that we have pages like the Record Page which can contain multiple sheets (and thus distinct cell selections simultaneously).</p> </li> <li> <p>Mathesar do not currently provide a visual indication when the cell has focus, but we have an issue discussing problems with this approach and ways to fix it. Those improvements can be implemented separately from the clipboard interaction implementation.</p> </li> </ul> </li> <li> <p>When copying, Mathesar writes the following data to the clipboard:</p> <ul> <li> <p><code>text/plain</code></p> <p>This is a TSV representation of the cell data, as described in more detail below.</p> </li> <li> <p><code>application/x-vnd.mathesar-sheet-clipboard</code></p> <p>This is a Mathesar-specific representation of the cell data, as described in more detail below.</p> </li> </ul> </li> <li> <p>After copying, a toast message displays the number of cells copied. (Similar to Airtable)</p> <p>Copied 3 cells.</p> </li> <li> <p>After copying, the cell selection border style remains as before (unlike Sheets and Calc which add a dashed border).</p> </li> <li> <p>Some products (e.g. Sheets, Calc) support \u201cmultiple selections\u201d wherein the user can hold <code>Ctrl</code> to formulate a non-rectangular selection of cells. Mathesar does not currently support this feature, but it\u2019s worth considering how the clipboard feature might interact with such a feature. As noted in the \u201cHow other products work\u201d section, no other product that I tested actually allowed the user to copy non-rectangular cell selections. So I think it\u2019s safe to say that if Mathesar implements multiple cell selections in the future, we would want to ensure that the copied cell data is always rectangular. We could enforce this constraint by disallowing the copy action when multiple selections are present (like Calc) or by only copying the most recently made selection (like Sheets).</p> </li> <li> <p>This spec does not implement any \u201ccut\u201d operation.</p> </li> </ul>"},{"location":"archive/product/design/specs/clipboard-interactions/#tsv-data-representation","title":"TSV data representation","text":"<ul> <li> <p>Serialization</p> <ul> <li>If a cell contains one or more tab or newline characters, then the cell value should be enclosed in double quotes</li> <li>When enclosing a cell in double quotes, the double quote character should be escaped by preceding it with a double quote.</li> </ul> </li> <li> <p>Deserialization</p> <ul> <li>This is to be improvised during implementation taking a best effort at reversing the above serialization logic. \ud83d\ude2c</li> </ul> </li> <li> <p>Notes</p> <ul> <li>The serialization logic seems to be pretty straightforward and consistent across Calc and Sheets, so I think it makes sense to stick with it.</li> <li>It seems hard (impossible?) to create a deserializer which accurately reverses that logic for all cases. Sometimes cells are quoted. Sometimes they\u2019re not. It\u2019s chaos! I have also noticed inconsistencies between Calc and Sheets here. For example, Calc deserializes <code>\"\"one\"\"\u23e9two</code> to <code>\"one\"\u23e9two</code> whereas Sheets deserializes it to <code>one\"\"</code> <code>two</code>. Both seem wrong to me, so I\u2019m not sure what logic they\u2019re using in their deserializers.</li> <li>It might be worth looking for a third-party CSV/TSV library to handle the serialization/deserialization.</li> </ul> </li> </ul>"},{"location":"archive/product/design/specs/clipboard-interactions/#mathesar-specific-data-representation","title":"Mathesar-specific data representation","text":"<ul> <li> <p>It\u2019s JSON that looks like this:</p> <pre><code>{\n  \"columns\": [\n    { \"type\": \"timestamp without time zone\", \"fk\": false },\n    { \"type\": \"integer\", \"fk\": true },\n    { \"type\": \"boolean\", \"fk\": false },\n    { \"type\": \"text\", \"fk\": false },\n    { \"type\": \"mathesar_types.email\", \"fk\": false }\n\n  ],\n  \"cells\": [\n    [\n      { \"raw\": \"1893-11-22T15:05:11.0 AD\", \"text\": \"11/22/1893 15:05\" },\n      { \"raw\": 1287, \"text\": \"This is a record summary\" },\n      { \"raw\": false, \"text\": \"No\" },\n      { \"raw\": null },\n      { \"raw\": \"foo@example.org\" }\n    ]\n  ]\n}\n</code></pre> <p>or, in TypeScript:</p> <pre><code>interface ClipboardCells {\n  columns: { type: string, fk: boolean }[];\n  cells: { raw: unknown, text?: string }[][];\n}\n</code></pre> </li> <li> <p>Each cell is stored as an object.</p> <ul> <li>The object always has a <code>raw</code> property which holds the cell value, as transmitted via the API.</li> <li>If the cell is formatted differently from the raw value for display, then the cell object also has a <code>text</code> property holding a string representation of the displayed value.</li> </ul> </li> </ul>"},{"location":"archive/product/design/specs/clipboard-interactions/#pasting-cells-to-mathesar","title":"Pasting cells to Mathesar","text":"<ul> <li> <p>If the clipboard has data with a MIME type matching our Mathesar-specific representation, we use that data. Otherwise, we use the <code>text/plain</code> data.</p> </li> <li> <p>When using plain text paste data, Mathesar displays a modal which allows the user to configure the parsing of the paste data. This feature has some overlap with the UI for Importing data into existing tables GSoC project, so it is not yet fully specified.</p> </li> <li> <p>After pasting, all pasted cells are selected.</p> </li> <li> <p>Non-rectangular data is handled in the same manner as Calc (described above).</p> </li> <li> <p>Pasting across multiple records is handled via a new, yet-to-be designed API. It might look something like this</p> <p><code>POST</code></p> <pre><code>[\n  {\n    \"table\": 1287,\n    \"data\": [\n      { \"1\": 17, \"3\": \"foo\", \"18\": null },\n      { \"1\": 18, \"3\": \"bar\", \"18\": \"baz\" },\n      { \"1\": 19, \"3\": null, \"18\": \"bat\" },\n    ]\n  }\n]\n</code></pre> <p>The API would handles updating existing records as well as creating new records.</p> <p>This API is subject to further discussion and design. It could be that we don\u2019t even need it.</p> </li> <li> <p>If the paste data extends beyond the column limits, Mathesar shows an error and no data is modified</p> <p>Unable to Paste</p> <p>The table does not have enough columns to hold the copied data.</p> </li> <li> <p>If the paste data extends beyond the rows displayed in the table, then new rows are added as needed. This means that it\u2019s possible to paste into the placeholder row at the bottom of the table.</p> <p>The sheet has separate sections for displays \u201csaved records\u201d and \u201cnew records\u201d with \u201cnew records\u201d extending past the pagination page size. This presents a challenge for pasting new records because there could be hundreds of new records and we don\u2019t necessarily want to hold all that data in memory as the user continues to use the application.</p> <p>If, after pasting, the number of new records will be 50 or fewer, then the sheet displays them as new records, as if the user had manually added them.</p> <p>If, after pasting, the number of new records will be more than 50, then the sheet fully refreshes, wiping out any new records that were displayed on the sheet prior to pasting.</p> </li> <li> <p>When the paste data has an empty string for a cell value, <code>null</code> is used if possible, with an empty string as a fallback for non-nullable text columns.</p> </li> <li> <p>When multiple cells are selected during paste:</p> <ul> <li>The paste data is repeated as needed to completely fill the selection. (Same as Calc.)</li> <li>If the paste data extends beyond the selection, then the selection is increased to fit the paste data. (Same as Sheets.)</li> </ul> </li> </ul>"},{"location":"archive/product/design/specs/clipboard-interactions/#pasting-cells-into-columns-of-different-types","title":"Pasting cells into columns of different types","text":"<ol> <li> <p>Column metadata from the source data is matched to columns in the target table. For each pairing, the following logic takes place:</p> <ul> <li>Some pairings of column types cannot be pasted. For example an <code>email</code> column cannot be pasted into a <code>number</code> column. These pairings result in an error.</li> <li>If the target column is a text column and the source column has formatted values, then Mathesar asks the user what to do. Examples of this include copying FK data into a text column, or copying dates into a text column.</li> </ul> </li> <li> <p>If any pairing results in an error, Mathesar aborts the paste and displays a toast error to the user such as:</p> <p>Unable to Paste</p> <p>Email data cannot be pasted into a Number column.</p> </li> <li> <p>If any pairing results in a \u201cask\u201d outcome, then Mathesar prompts the user via a dialog like the following:</p> <p>Paste</p> <p>The data you are pasting can be represented in multiple ways. Paste the raw values to use the text</p> <p><code>Paste Raw Values</code> <code>Paste Formatted Values</code></p> <p>\u201cPaste Formatted Values\u201d is selected by default.</p> <p>When \u201cPaste Formatted Values\u201d is chosen, formatted values will be used for the paste when possible. Otherwise, raw values will be used.</p> </li> </ol>"},{"location":"archive/product/design/specs/clipboard-interactions/#design-imperfections-and-future-considerations","title":"Design imperfections and future considerations","text":"<ul> <li> <p>In my initial \u201ccopy\u201d implementation, I notice that copying a lot of cells takes some time and locks the main thread. This is not great, but it\u2019s because we\u2019re using the sync API. It\u2019s hard to get around this though since the async API isn\u2019t fully implemented in Firefox yet. We could potentially use the async API if it\u2019s available, while falling back to the sync API for Firefox. If we want to do that, I\u2019d rather do it later when/if users ask for improved performance here.</p> </li> <li> <p>It would be nice to add context menu entries for copy/paste, but there are some challenges here.</p> <ul> <li> <p>When copying: If we use the synchronous clipboard API it seems[^1] that we can\u2019t trigger copy events programmatically. Somehow Google Sheets is doing it, but I haven\u2019t dug deeper to figure out how. With the async clipboard API Firefox lacks support for MIME types other than <code>text/plain</code>.</p> </li> <li> <p>When pasting: The synchronous clipboard API doesn\u2019t allow programmatic pasting at all. The async clipboard API doesn\u2019t work allow pasting in Firefox and requires a special permission in other browsers.</p> </li> </ul> <p>We could consider showing context menus in some browsers. We could also consider showing a \u201cHow to Paste\u201d modal on paste which only serves to add discoverability to the clipboard feature. Sheets actually does this when you choose the \u201cPaste\u201d option whin the context menu.</p> <p>Overall, this doesn\u2019t seem worth the additional complexity currently.</p> </li> <li> <p>It would be nice to copy an HTML representation (i.e. <code>text/html</code>) of the cell data too.</p> <ul> <li>This would allow users to copy data from Mathesar and paste into word-processing applications as an HTML table.</li> <li>This behavior would be consistent with Calc and Sheets.</li> <li>It would allow better copy/paste of text containing tabs, newlines, and quotes</li> <li>It would take some extra processing time to generate the data though, and I\u2019d kind of like to avoid that until Firefox has implemented the async clipboard API.</li> <li>We could consider taking this up later.</li> </ul> </li> </ul> <p>[^1]: MDN says</p> <pre><code>&gt; It's possible to construct and dispatch a synthetic copy event, but this will not affect the system clipboard.\n</code></pre>"},{"location":"archive/product/design/specs/column-extraction/","title":"Column Extraction","text":""},{"location":"archive/product/design/specs/column-extraction/#context","title":"Context","text":"<p>In data modeling, it\u2019s usual practice to split data up into related tables. In the context of Mathesar, one way of doing this is by extracting columns from a table into a new table.</p> <p>Data is often split up into related tables for the following reasons:</p> <ul> <li>To use one table per type of object</li> <li>To avoid data duplication</li> </ul> <p>This spec describes the steps a user would take to create a new table from a subset of columns from an existing table. It also describes the steps a user would take to move one or more columns from one table to another linked table.</p>"},{"location":"archive/product/design/specs/column-extraction/#design-goals","title":"Design Goals","text":"<ul> <li>Allow users to split a table into multiple new tables by selecting columns</li> <li>Help users understand the impact of splitting a table</li> <li>Allow users to move columns from a table to another link table</li> </ul>"},{"location":"archive/product/design/specs/column-extraction/#scenario-1-new-linked-table-from-columns","title":"Scenario 1: New Linked Table from Columns","text":""},{"location":"archive/product/design/specs/column-extraction/#selecting-columns-as-a-starting-point","title":"Selecting columns as a starting point","text":"<p>The user will select one or multiple columns to start with the column move process. All columns can be moved, except for primary key columns, unorderable columns like JSON-type columns and referent columns (Columns referenced by other columns).</p> <p>Once selected, the inspector panel will list \u2018New linked table from columns\u2019 as an action. Selecting this option will open the \u2018New linked table from columns\u2019 dialog.</p> <p>When a user selects a column that cannot be moved, the move action will be disabled and a tooltip will be available explaining why the column cannot be moved.</p> <p></p>"},{"location":"archive/product/design/specs/column-extraction/#extract-columns-dialog","title":"Extract Columns Dialog","text":"<p>The dialog will list the columns that will be moved and the table that will be created. The user can change the name of the new table. The dialog will also list the links that will be created between the new table and the original table. The user can change the name of the link column.</p> <p></p>"},{"location":"archive/product/design/specs/column-extraction/#impact-of-the-extract-columns-operation","title":"Impact of the Extract Columns Operation","text":"<p>Since the split operation will affect the original table, the user should be made aware of the operation\u2019s outcome. The dialog should incorporate information regarding the changes that will be done to both the original table and the new table. This includes:</p> <ul> <li>The original table will lose the selected columns</li> <li>The original table will gain a new link column</li> <li>The new linked table will gain the selected columns</li> </ul>"},{"location":"archive/product/design/specs/column-extraction/#link-column-naming-convention","title":"Link Column Naming Convention","text":"<p>The link column\u2019s name will be based on the table name. So if the user enters Author as a table name, then the link column would also be called Author. If the name is already taken, then the link column will be called Author 1, Author 2, etc.</p> <p>The discussion related to the naming convention can be found in the following email thread.</p>"},{"location":"archive/product/design/specs/column-extraction/#allowing-the-user-to-modify-the-original-column-selection","title":"Allowing the user to modify the original column selection","text":"<p>Under the <code>Columns to Extract</code> section, the user can extend the original column selection by selecting additional columns. The user can also remove columns from the selection.</p> <p>Only columns that can be moved will be available for selection. A message inside the dropdown menu will inform users that the columns listed are the only ones that can be moved.</p> <p>\u201cOnly columns that can be moved are listed. Primary key columns, unorderable columns like JSON-type columns and referent columns (columns referenced by other columns) cannot be moved.\u201d</p>"},{"location":"archive/product/design/specs/column-extraction/#finalizing-the-extract-column-operation","title":"Finalizing the Extract Column Operation","text":"<p>Once the user is happy with the changes, they can click on the <code>Extract Columns</code> button. The inspector panel will be toggled and the new link column will be selected in the original table. Under the <code>Columns</code> section, the user will see the new table listed as a link.</p> <p></p> <p>This spec does not include the implementation of \u2018Link Properties\u2019 which should be handled in a separate spec.</p>"},{"location":"archive/product/design/specs/column-extraction/#scenario-2-moving-columns-to-a-linked-table","title":"Scenario 2: Moving Columns to a Linked Table","text":"<p>In some cases, a user may want to move columns from one table to another table. This can be done by selecting the columns and using the \u2018Move to existing linked table\u2019 action in the inspector panel.</p>"},{"location":"archive/product/design/specs/column-extraction/#selecting-a-the-link-column","title":"Selecting a the link column","text":"<p>A table might be linked to through more than one column. The user will be able to select the link column to use for the move operation under the \u2018Link Column\u2019 section. If only one link column exists, it will be selected by default.</p> <p></p>"},{"location":"archive/product/design/specs/column-extraction/#impact-of-the-move-columns-operation","title":"Impact of the Move Columns Operation","text":"<ul> <li>The original table will lose the selected columns</li> <li>The original table will not gain any new link column</li> <li>The linked table will gain the selected columns</li> </ul>"},{"location":"archive/product/design/specs/column-extraction/#finalizing-the-move-column-operation","title":"Finalizing the Move Column Operation","text":"<p>Once the user is happy with the changes, they can click on the <code>Move Columns</code> button. The user will be taken back to the original table and the selected columns will be moved to the linked table.</p>"},{"location":"archive/product/design/specs/column-extraction/#pending-design-problems","title":"Pending Design Problems","text":""},{"location":"archive/product/design/specs/column-extraction/#moving-columns-in-two-directions","title":"Moving columns in two directions","text":"<p>Some edge cases remain to be explored and addressed in regards to moving columns between tables.</p> <p>Given the following scenarios:</p> <ul> <li>Move columns from referrer table(table with foreign key column) to referent table</li> <li>Move columns from referent table to referrer Table</li> </ul> <p>Should we allow moving columns in both directions?</p>"},{"location":"archive/product/design/specs/column-extraction/#moving-column-limitations","title":"Moving Column Limitations","text":"<p>Also, there are a few edge cases in addition to the limitations(some columns are not allowed) we have with moving columns to a new Table.</p>"},{"location":"archive/product/design/specs/column-extraction/#other-edge-cases","title":"Other Edge Cases","text":"<ul> <li>Multiple Tables referencing the Linked Table(Table to which the column is moved) -</li> <li>Given there is a Table(let\u2019s call it an external Table) other than the original Table that happens to reference the Linked Table.</li> <li>And the Linked table has a normalised record.</li> <li>When a column is moved into the Reference Table.</li> <li>The normalised record might be split into multiple records.</li> <li>This leads to the question of which foreign key value the external Table record should point to.</li> </ul> <p>A real-life example</p> <p>Before moving</p> Author Id First name 1 Jason Publication Title Author Last Name 1 Steady Slow 1 Smith 2 Think Fast 1 Stone Award Title Author 1 Nobel 1 <p>Jason won the Nobel prize After moving</p> Author Id First Name Last Name 1 Jason Smith 2 Jason Stone Publication Title Author 1 Steady Slow 1 2 Think Fast 2 Award Title Author 1 Nobel ?"},{"location":"archive/product/design/specs/connections-page/","title":"\u201cDatabase Connections\u201d Page Design Specs","text":"<p>Design Link: Figma Design</p>"},{"location":"archive/product/design/specs/connections-page/#overview","title":"Overview","text":"<ul> <li>The goal is to create a dedicated page titled \u201cDatabase Connections.\u201d This will serve as the primary entry point for managing and setting up connections. Read more about the issue here: Github Issue</li> <li>This page should be accessible from the main navigation menu when clicking on the Mathesar logo.</li> <li>Post-installation, this will be the initial onboarding step for users.</li> </ul>"},{"location":"archive/product/design/specs/connections-page/#navigating-to-the-database-connections-page","title":"Navigating to the \u201cDatabase Connections\u201d Page","text":"<ul> <li>Users with a single database connection will be automatically redirected to the \u201cDatabase Page\u201d for that specific connection upon clicking the Mathesar logo.</li> <li>Users with multiple database connections will be navigated to the \u201cDatabase Connections\u201d page when selecting the Mathesar logo or the \u201cDatabase Connections\u201d menu item, allowing them to choose from their available connections.</li> <li>This redirection behavior avoids unnecessary navigation steps for users with only one connection.</li> </ul>"},{"location":"archive/product/design/specs/connections-page/#list-of-connections","title":"List of Connections","text":"<p>The list of connections is the main content of the page. It should be a table with the following columns:</p> <ul> <li>Connection Name</li> <li>Database Name</li> <li>Host</li> <li>Port</li> <li>Action Buttons (Edit &amp; Delete)</li> </ul> <p>Interactions:</p> <ul> <li>Users should be able to search for a specific connection by its \u2018Connection Name\u2019.</li> <li>Column header interactions: Sorting by any column. Default sort by \u2018Connection Name\u2019.</li> <li>On-hover state for each row.</li> <li>Click on \u2018Connection Name\u2019 to view database and schemas.</li> </ul> <p>Functionality:</p> <ul> <li>The list should support pagination if the number of connections exceeds a predefined limit. The goal should be to have the table fit within the viewport without scrolling so that the header is always visible.</li> </ul> <p>Empty State:</p> <p>When no database connections are present:</p> <ul> <li>Display a message: \u201cNo database connections yet. Seems you haven\u2019t set up any connections. To use Mathesar, you\u2019ll need to connect one.\u201d</li> <li>Provide an \u201cAdd Database Connection\u201d button that opens the \u201cNew Database Connection\u201d modal.</li> </ul>"},{"location":"archive/product/design/specs/connections-page/#adding-new-database-connection","title":"Adding New Database Connection","text":"<p>Modal Form:</p> <ul> <li>The modal should be titled \u201cNew Database Connection\u201d.</li> <li>The modal fields are dependent on the following spec: \u201cNew Database Connection\u201d Form Design Specs.</li> </ul> <p>Interactions:</p> <ul> <li>The modal should be opened by clicking on the \u201cAdd Database Connection\u201d button in the empty state.</li> <li>The modal should be opened by clicking on the \u201cNew Database Connection\u201d button in the Connections List page.</li> </ul>"},{"location":"archive/product/design/specs/connections-page/#editing-database-connection","title":"Editing Database Connection","text":"<p>Modal Form:</p> <ul> <li>The modal should be titled \u201cEdit Database Connection\u201d. Provide an inline form (or modal) similar to the addition form but pre-filled with the existing details.</li> <li>The modal is pre-filled with the existing details except for the \u2018Password\u2019 field.</li> </ul>"},{"location":"archive/product/design/specs/connections-page/#deleting-database-connection","title":"Deleting Database Connection","text":"<p>Before deletion, prompt users with a confirmation dialog.</p> <p>Confirmation Dialog:</p> <ul> <li>The modal should be titled \u201cDelete Database Connection?\u201d.</li> <li>The modal should display the name of the connection to be deleted.</li> <li>The modal includes a checkbox to \u201cAlso delete associated Mathesar schemas\u201d.</li> <li>The modal should provide a warning note explaining that deleting the associated Mathesar schemas will delete all the related data.</li> </ul> <p>Interactions:</p> <ul> <li>The modal should be opened by clicking on the \u201cDelete\u201d button in the Connections List table.</li> </ul>"},{"location":"archive/product/design/specs/connections-page/#database-page-modifications","title":"Database Page Modifications","text":"<p>As part of this design, the current database page must be modified to remove the sidebar database navigation. </p> <p></p>"},{"location":"archive/product/design/specs/create-edit-delete-views/","title":"Create, Edit, Delete Views","text":"<p>Danger</p> <p>This spec is outdated and should not be followed.</p>"},{"location":"archive/product/design/specs/create-edit-delete-views/#context","title":"Context","text":"<p>A view is a database object based on one or more database tables and contains no data of its own. In the context of Mathesar, the creation and editing of these views is an essential part of the user experience, as it allows users to join and simplify tables into one or represent a subset of the data from a table. For the less technical users, views might be a stepping stone towards analyzing and visualizing their data. For that reason, the design aims to make views easy to discover and edit.</p>"},{"location":"archive/product/design/specs/create-edit-delete-views/#prototype","title":"Prototype","text":"<p>Prototype for creating, editing, and deleting views</p>"},{"location":"archive/product/design/specs/create-edit-delete-views/#user-experience","title":"User Experience","text":""},{"location":"archive/product/design/specs/create-edit-delete-views/#scenarios","title":"Scenarios","text":""},{"location":"archive/product/design/specs/create-edit-delete-views/#a-user-creates-a-view-from-scratch","title":"A user creates a view from scratch.","text":"<p>A user can create a view from scratch by clicking on the \u2018Add View\u2019 button. Since views require a table to be selected, a \u2018New View\u2019 dialog will be presented to the user. From here, they can name the view, select a table and one or multiple columns. </p>"},{"location":"archive/product/design/specs/create-edit-delete-views/#a-user-creates-a-view-from-an-open-table","title":"A user creates a view from an open table.","text":"<p>A user might want to create a view to retain applied filters or sorts or add columns from other tables when working on a table. To do so, the user can click on the \u2018Save as View\u2019 button on the table\u2019s toolbar, which will automatically create a view and open it.</p>"},{"location":"archive/product/design/specs/create-edit-delete-views/#views-from-filtered-tables","title":"Views from filtered tables","text":"<p>A user might want to preserve a particular combination of views, sorts, and groupings as a view, in which case they can create a view after applying the filtering, sorting, or grouping parameters or do so from the view and then proceed to save the view.  Prototype for creating a view from the filtered table</p>"},{"location":"archive/product/design/specs/create-edit-delete-views/#a-user-adds-new-columns-to-a-view","title":"A user adds new columns to a view.","text":"<p>Once in the view, a user might want to add additional columns. For this purpose, the same \u2018Add Column\u2019 control used in tables will be available. However, it will display a menu to select columns from available tables in the context of views.  Available tables will be those that have a foreign key relationship with the already selected tables. Otherwise, they will not be listed. </p>"},{"location":"archive/product/design/specs/create-edit-delete-views/#a-user-removes-columns-from-a-view","title":"A user removes columns from a view.","text":"<p>A user can remove columns from a view by selecting the \u2018Delete Column\u2019 option in the column header menu. However, in a view, a column from a table will condition other table relationships. If the user removes the only reference to a table, this might impact the list of different tables from which the user can select columns. </p>"},{"location":"archive/product/design/specs/create-edit-delete-views/#a-user-deletes-a-view","title":"A user deletes a view.","text":"<p>A user can delete a view from the \u2018View Options\u2019 menu in the view toolbar.  As with other database objects within Mathesar, the system should provide a warning if the view deletion affects other views.</p>"},{"location":"archive/product/design/specs/create-edit-delete-views/#a-user-can-see-the-tables-and-columns-that-are-referenced-in-the-view","title":"A user can see the tables and columns that are referenced in the view.","text":"<p>A user might want to navigate to or modify the tables that are referenced in a view. They should be able to do so by following the \u2018Go to Referenced Table\u2019 option in each column\u2019s header menu. </p>"},{"location":"archive/product/design/specs/create-edit-delete-views/#a-user-can-see-the-query-that-generated-a-view","title":"A user can see the query that generated a view.","text":"<p>In views created through complex queries, we might not allow editing. Still, users can see the query that generated them by clicking on the \u2018Open View Query\u2019 in the \u2018View Options\u2019 menu.</p>"},{"location":"archive/product/design/specs/create-edit-delete-views/#review-notes","title":"Review Notes","text":""},{"location":"archive/product/design/specs/create-edit-delete-views/#using-color-to-represent-table-relations","title":"Using Color to Represent Table Relations","text":"<p>The UI for views should incorporate ways to represent the different tables that make a view. Elements like color could be applied as demonstrated in the prototype. A future document will include more details in the global document once all design issues for this milestone are completed.</p>"},{"location":"archive/product/design/specs/data-type-duration/","title":"Duration Data Type Specs","text":""},{"location":"archive/product/design/specs/data-type-duration/#context","title":"Context","text":"<p>Duration data types represent a period of time measured in hours, minutes, and/or seconds.</p>"},{"location":"archive/product/design/specs/data-type-duration/#prototype","title":"Prototype","text":"<p>Warning</p> <p>This prototype might be outdated due to global component updates. Please refer to the link under \u2018Setting Options\u2019 for an updated version of the shared components.</p> <p>Duration Data Type Prototype</p>"},{"location":"archive/product/design/specs/data-type-duration/#user-experience","title":"User Experience","text":""},{"location":"archive/product/design/specs/data-type-duration/#scenarios","title":"Scenarios","text":""},{"location":"archive/product/design/specs/data-type-duration/#user-sets-a-column-to-duration-data-type","title":"User sets a column to \u2018Duration\u2019 data type","text":"<p>The user can set the column data type to \u2018Duration\u2019 by accessing the \u2018Data Type Options\u2019 in the columns header menu. Depending on whether there are existing values or not, and if they are valid duration values, the outcomes will vary: If there are valid duration values, the system will convert them to duration types. For example, \u2018120\u2019 might become \u20182:00\u2019 if interpreted as total minutes. If there are no valid duration values, the system will discard the existing values and default to an empty cell.</p>"},{"location":"archive/product/design/specs/data-type-duration/#setting-options","title":"Setting Options","text":"<p>The following is an interactive representation of the various options that users can set for this type: Duration Type Options</p>"},{"location":"archive/product/design/specs/data-type-duration/#user-enters-a-new-duration-data-type-value","title":"User enters a new \u2018Duration\u2019 data type value","text":"<p>Depending on the duration format configuration, an empty cell will provide a placeholder format indicator such as \u2018h:mm\u2019 when the cell is in an active state. Depending on the format, the user might input a value using the exact format or in the unit values of minutes or seconds. For example, \u2018240\u2019 will be formatted as \u20184:00.\u2019</p>"},{"location":"archive/product/design/specs/data-type-duration/#user-filters-a-duration-data-type-column","title":"User filters a \u2018Duration\u2019 data type column","text":"<p>Users can filter \u2018duration\u2019 data type columns with the same options as \u2018Number\u2019 data type, and it also allows natural language expressions to be used, such as \u2018greater than 2 hours.</p>"},{"location":"archive/product/design/specs/data-type-duration/#user-groups-a-duration-data-type-column","title":"User groups a \u2018Duration\u2019 data type column","text":"<p>Users can group \u2018duration\u2019 data types columns by different duration units such as hours, minutes, or seconds. Users can also apply group by ranges, with the same control used for number types. Group by Ranges Control</p>"},{"location":"archive/product/design/specs/data-type-duration/#review-notes","title":"Review Notes","text":""},{"location":"archive/product/design/specs/data-type-duration/#duration-range-controls","title":"Duration Range Controls","text":"<p>A control to define range duration is introduced as part of this spec. It consists of two select input controls that define both the minimum and maximum time units in which the system will represent duration. So, for example, given a duration of 5400 seconds, where the maximum is hours, and the minimum is minutes, the system will represent the value in the cell as \u20181h 30m\u2019. If the maximum is also set to hours, then 1.5h should show, allowing users to select single unit formats. Both the minimum and maximum fields will allow values depending on the state of the other. So, for example, if a minimum is set to hours, then a maximum value of minutes cannot be allowed.</p>"},{"location":"archive/product/design/specs/data-type-options/","title":"Data Type Options","text":""},{"location":"archive/product/design/specs/data-type-options/#context","title":"Context","text":"<p>Data types are used to define the type of data that a column can hold. Each data type has a set of options that can be configured to define how the data is interpreted and displayed. These set of options are split into two categories:</p> <ul> <li>Database: These options are used to define how the data is stored in the database.</li> <li>Format: Defines how the data is displayed to the user.</li> </ul>"},{"location":"archive/product/design/specs/data-type-options/#problem","title":"Problem","text":"<p>The current implementation uses tabs to switch between the two categories of options. This is not ideal because data type options are used in Table Inspector, where tabs are already used to switch between different sections. We are trying to avoid having a tabbed interface within a tabbed interface.</p>"},{"location":"archive/product/design/specs/data-type-options/#vertical-space-considerations","title":"Vertical Space Considerations","text":"<p>The solution should consider the challenges in displaying the options in a small vertical space, such as the dropdown menu. Scroll bars should be avoided if possible.</p>"},{"location":"archive/product/design/specs/data-type-options/#proposed-solution","title":"Proposed Solution","text":""},{"location":"archive/product/design/specs/data-type-options/#replace-tabs-with-stacked-sections","title":"Replace tabs with stacked sections","text":"<p>Update Database and Format options to be stacked sections inside the Data Type section. The user should be able to access the options without the need of tabs.</p>"},{"location":"archive/product/design/specs/data-type-options/#use-a-dropdown-menu-for-the-data-type-selection-instead-of-the-scrollable-list","title":"Use a dropdown menu for the data type selection instead of the scrollable list","text":"<p>Replace the current scrollable list with a dropdown menu to save vertical space.</p>"},{"location":"archive/product/design/specs/data-type-options/#align-some-of-the-label-and-field-groups-inline","title":"Align some of the label and field groups inline","text":"<p>Inline alignment can be used for groups of fields in order to save vertical space.</p> <p></p>"},{"location":"archive/product/design/specs/data-type-options/#clearly-identify-the-database-level-options","title":"Clearly identify the database-level options","text":"<p>A warning message can be displayed inline when the user tries to change a database-level option. The icon can then be used for other instances where the user needs to be aware of database-level options.</p> <p></p>"},{"location":"archive/product/design/specs/data-type-options/#visibility-of-save-and-cancel-buttons","title":"Visibility of Save and Cancel buttons","text":"<p>In the context of table inspector, the \u2018Save\u2019 and \u2018Cancel\u2019 buttons will be hidden by default. They will be displayed when the user changes any of the options. This is consistent with the current behavior of the \u2018Save\u2019 and \u2018Cancel\u2019 buttons in the table inspector.</p>"},{"location":"archive/product/design/specs/data-type-options/#confirmation-dialog-when-user-tries-to-save","title":"Confirmation dialog when user tries to save","text":"<p>A confirmation dialog would be displayed based on the user\u2019s changes. The warning message in this dialog would be based on the implications of the changes.</p> <ul> <li>Changes to Database type:</li> <li>Confirmation dialog is shown.</li> <li>Message: This change may lead to data loss since it changes the way the database stores data.</li> <li>If a default value is present, an additional message would be displayed: The current default value <code>${Current_Default_Value}</code> will be cleared.</li> <li>Only formatting changes: Confirmation dialog is not shown.</li> </ul>"},{"location":"archive/product/design/specs/data-type-options/#default-value-section","title":"Default Value Section","text":"<p>The default value section will be its own section instead of being part of the Data Type section.</p>"},{"location":"archive/product/design/specs/data-types-text/","title":"Text Data Type","text":""},{"location":"archive/product/design/specs/data-types-text/#context","title":"Context","text":"<p>Text data types allow users to add letters, symbols, or numbers as field values. The text data type is also the default type for new columns within Mathesar. </p>"},{"location":"archive/product/design/specs/data-types-text/#permitted-characters","title":"Permitted Characters","text":"<p>Text data type lets users enter almost any character (letter, symbol, or number).</p>"},{"location":"archive/product/design/specs/data-types-text/#prototype","title":"Prototype","text":"<p>Text Data Type Figma Prototype</p>"},{"location":"archive/product/design/specs/data-types-text/#user-experience","title":"User Experience","text":""},{"location":"archive/product/design/specs/data-types-text/#scenarios","title":"Scenarios","text":""},{"location":"archive/product/design/specs/data-types-text/#user-sets-text-data-type-options","title":"User sets text data type options","text":"<p>Each data type contains options that are specific to the selected type. Users can click on the data type dropdown and access them on the data type menu to access these options.</p>"},{"location":"archive/product/design/specs/data-types-text/#user-changes-the-text-data-type","title":"User changes the text data type","text":"<p>From the data type menu, users can also choose to change the data type. Clicking on change data type will open a menu with the complete list of data types. </p>"},{"location":"archive/product/design/specs/data-types-text/#user-filters-a-text-data-type-column","title":"User filters a text data type column","text":"<p>Users can filter text data type columns based on the alphanumeric values of each field. When a text type column is filtered, the specific options for text will show under the filter parameters. </p>"},{"location":"archive/product/design/specs/data-types-text/#user-sorts-a-text-data-type-column","title":"User sorts a text data type column","text":"<p>Users can sort records based on the values of text data type fields. The available options allow users to sort in alphabetical order in both ascending and descending orders.</p>"},{"location":"archive/product/design/specs/data-types-text/#user-groups-a-text-data-type-column","title":"User groups a text data type column","text":"<p>Users can group records based on the values of text data type fields. The available options allow users to group by first letter or word of field values.</p>"},{"location":"archive/product/design/specs/data-types-text/#review-notes","title":"Review Notes","text":""},{"location":"archive/product/design/specs/data-types-text/#filter-sort-and-group-actions","title":"Filter, Sort and Group Actions","text":"<p>The design for filter, sort and group actions might require some updates to make the status of applied configurations more visible. Originally, these configurations were shown in a consolidated panel, but the solution is not optimal for some use cases. For example, when providing troubleshooting options, we might enable a filter to show affected rows, but the User, might not know how to return to the filter. A proposed solution is to iterate on the design for the filter, sort, and group features to optimize for discoverability and visibility of status.</p>"},{"location":"archive/product/design/specs/data-types-text/#preventing-changes-that-produce-errors","title":"Preventing changes that produce errors","text":"<p>Some changes like column constraints or data type configurations might produce errors if the content in the columns is invalid. Rather than allowing the change and triggering error warnings in all affected records, we want to prevent the change and guide users towards modifying the column content until it\u2019s valid. </p>"},{"location":"archive/product/design/specs/database-switching/","title":"Multiple Database Switching","text":"<p>Danger</p> <p>This spec is outdated and should not be followed.</p>"},{"location":"archive/product/design/specs/database-switching/#context","title":"Context","text":"<p>Users might have multiple databases, and they need to switch between them as necessary, in a seamless manner, without worrying about the current status of open tables or views.</p>"},{"location":"archive/product/design/specs/database-switching/#prototype-link","title":"Prototype Link","text":"<p>Multiple Database Switching</p>"},{"location":"archive/product/design/specs/database-switching/#scenarios","title":"Scenarios","text":""},{"location":"archive/product/design/specs/database-switching/#open-single-schema-vs-multiple-schemas","title":"Open Single Schema vs. Multiple Schemas","text":"<p>Having users create multiple related tables inside a schema, rather than having their related data split into different schemas, is desired for our intended use cases. It also reduces complexity, and it\u2019s easier to manage. For this reason, a navigation component is proposed so that the system can open only one schema at a time.</p>"},{"location":"archive/product/design/specs/database-switching/#errors-preventing-schema-changes-to-be-saved","title":"Errors Preventing Schema Changes to be Saved","text":"<p>If a table within the open schema has unsaved changes, a warning will inform the user and provide the options to discard them and leave or stay and fix them.</p>"},{"location":"archive/product/design/specs/database-switching/#persist-tabs-for-schemas","title":"Persist Tabs for Schemas","text":"<p>The status of tabs should be persistent when reopening a schema.</p> <p></p>"},{"location":"archive/product/design/specs/database-switching/#missing-default-database","title":"Missing Default Database","text":"<p>When opening Mathesar, the default database is the one that was most recently open. If this database no longer exists, then Mathesar should show an error message and direct the user to open a different database or troubleshoot the connection.</p>"},{"location":"archive/product/design/specs/database-switching/#interactions","title":"Interactions","text":""},{"location":"archive/product/design/specs/database-switching/#indicating-tables-with-errors","title":"Indicating Tables with Errors","text":"<p>If a table contains errors, the interface should help identify those by adding a visual indicator to the corresponding tab.</p> <p></p>"},{"location":"archive/product/design/specs/database-switching/#showing-recent-objects","title":"Showing Recent Objects","text":"<p>A list of recent objects is available to help users access their most frequently used objects, such as tables and views.</p> <p></p>"},{"location":"archive/product/design/specs/database-switching/#user-interface","title":"User Interface","text":""},{"location":"archive/product/design/specs/database-switching/#database-navigation-menu","title":"Database Navigation Menu","text":"<p>The database navigation menu provides a context for the various databases and schemas that users can access through Mathesar. From this menu, the user can search through all databases and navigate to schemas.</p> <p></p>"},{"location":"archive/product/design/specs/database-switching/#review-notes","title":"Review Notes","text":""},{"location":"archive/product/design/specs/database-switching/#database-names","title":"Database Names","text":"<p>Mathesar will use the database connection key to identify databases within Mathesar. If we want a human-readable name in the future, we will need a way to capture that preference.</p>"},{"location":"archive/product/design/specs/database-switching/#recent-tables","title":"Recent Tables","text":"<p>Showing a list of the most recently updated tables can help users manage their work progress, and access recently created objects. As part of the implementation of this spec, we will store user-session information locally until we have the structure for user accounts in place.</p>"},{"location":"archive/product/design/specs/database-switching/#loading-of-a-large-number-of-tables","title":"Loading of a Large Number of Tables","text":"<p>Some concerns exist about fully loading a list of tables that exceeds what can be managed without disrupting the users\u2019 experience in terms of performance. However, we don\u2019t think that our current use case will be affected by this. A task has been added to optimize the loading of tables after the MVP is released.</p>"},{"location":"archive/product/design/specs/database-switching/#using-icons-to-identify-databases","title":"Using Icons to Identify Databases","text":"<p>Using visual identifiers to differentiate between databases can help users quickly find and access their databases. As part of implementing this spec, we will add the necessary functionality to display and generate the database icons.</p>"},{"location":"archive/product/design/specs/date-time-data-type/","title":"Date, Time, and DateTime Data Types","text":""},{"location":"archive/product/design/specs/date-time-data-type/#context","title":"Context","text":"<p>Date, Time, and DateTime Data Types represent temporal values. The system can display each temporal value in different formats depending on the data or user needs (e.g., 6 Aug 2021, 06/08/2021).</p> <p>For this purpose, three different data types will be available for storing date and time data:</p>"},{"location":"archive/product/design/specs/date-time-data-type/#date","title":"Date","text":"<p>Used for values with a date part only. Keeps track of days in the format <code>YYYY-MM-DD</code>.</p>"},{"location":"archive/product/design/specs/date-time-data-type/#time","title":"Time","text":"<p>Used for values representing a time of day in hours, minutes, seconds, and optional fractions of seconds in the format <code>hh:mm:ss</code>.</p>"},{"location":"archive/product/design/specs/date-time-data-type/#datetime","title":"DateTime","text":"<p>Used for values that contain both date and time parts in the format <code>YYYY-MM-DD hh:mm:ss</code>.</p>"},{"location":"archive/product/design/specs/date-time-data-type/#prototype","title":"Prototype","text":"<p>Date, Time and DateTime Data Type Options</p>"},{"location":"archive/product/design/specs/date-time-data-type/#user-experience","title":"User Experience","text":"<p>Date, Time, and DateTime Data Types should allow users to set display options to present the data in formats different from how the values are stored.</p>"},{"location":"archive/product/design/specs/date-time-data-type/#scenarios","title":"Scenarios","text":""},{"location":"archive/product/design/specs/date-time-data-type/#scenario-1-the-user-sets-a-column-to-a-date-time-or-datetime-type","title":"Scenario 1: The user sets a column to a Date, Time or DateTime type","text":""},{"location":"archive/product/design/specs/date-time-data-type/#scenario-1a-the-column-is-set-as-to-time-data-type","title":"Scenario 1a: The column is set as to Time data type","text":"<ol> <li>The user opens the column type menu and selects the option listed as \u2018Time\u2019.</li> <li>The database and display options for Time are displayed in the menu.</li> </ol>"},{"location":"archive/product/design/specs/date-time-data-type/#scenario-1b-the-column-is-set-as-date-data-type","title":"Scenario 1b: The column is set as Date data type","text":"<ol> <li>The user opens the column type menu and selects the option listed as \u2018Date\u2019.</li> <li>The database and display options for Date are displayed in the menu.</li> </ol>"},{"location":"archive/product/design/specs/date-time-data-type/#scenario-1c-the-column-is-set-as-datetime-data-type","title":"Scenario 1c: The column is set as DateTime data type","text":"<ol> <li>The user opens the column type menu and selects the option listed as \u2018Date &amp; Time\u2019</li> <li>The database and display options for DateTime are displayed in the menu.</li> </ol>"},{"location":"archive/product/design/specs/date-time-data-type/#scenario-2-if-the-column-is-empty","title":"Scenario 2: If the column is empty","text":"<p>A Date, Time, or DateTime data type is set and the user can now input values with a date or time picker or manually. The system will restrict the allowed values based on the set format.</p>"},{"location":"archive/product/design/specs/date-time-data-type/#scenario-3-if-the-column-contains-values","title":"Scenario 3: If the column contains values","text":"<p>If the system can\u2019t parse the values, the system will not set a Date, Time, or DateTime data type. The user will receive a warning, and if they choose to proceed, the system will empty the column values.</p>"},{"location":"archive/product/design/specs/date-time-data-type/#scenario-4-the-user-enters-a-new-value-for-a-date-time-or-datetime-data-type","title":"Scenario 4: The user enters a new value for a Date, Time, or DateTime data type","text":"<p>When entering values in a column set to a Date, Time, or DateTime data type, the users will be able to do so from a date or time picker for easier input.</p>"},{"location":"archive/product/design/specs/date-time-data-type/#scenario-5-the-user-filters-a-date-time-or-datetime-data-type-column","title":"Scenario 5: The user filters a Date, Time, or DateTime data type column","text":"<p>Values in a \u2018Date and Time\u2019 data type column can be filtered by various parameters such as specific date, a range of dates, dates after or before a certain date, and also by using natural language phrases like \u201cnow,\u201d \u201ctoday,\u201d \u201cnext week,\u201d \u201cnext month.\u201d</p>"},{"location":"archive/product/design/specs/date-time-data-type/#scenario-6-the-user-groups-a-date-time-or-datetime-data-type-column","title":"Scenario 6: The user groups a Date, Time, or DateTime data type column","text":"<p>Values in a Date, Time, or DateTime data type column can be grouped by different date and time units. Depending on the user\u2019s chosen data type, the options might include the date and time-specific units or not.</p>"},{"location":"archive/product/design/specs/eding-view-records/","title":"Editing Records Within a View","text":"<p>Danger</p> <p>This spec is outdated and should not be followed.</p>"},{"location":"archive/product/design/specs/eding-view-records/#context","title":"Context","text":"<p>Users working within views may want to add new records to one or more source tables without dealing with multiple objects, following the spreadsheet-like experience that Mathesar aims to offer. This design problem presents some challenges in avoiding conflicts between objects, especially if there are dependencies. A proposed solution for this is described in this spec, taking into account two potential scenarios for views that can and cannot be updated.</p>"},{"location":"archive/product/design/specs/eding-view-records/#prototype","title":"Prototype","text":"<p>Prototype for Editing Records within a View</p>"},{"location":"archive/product/design/specs/eding-view-records/#user-experience","title":"User Experience","text":""},{"location":"archive/product/design/specs/eding-view-records/#scenario-1-if-the-view-allows-editing-updatable-view","title":"Scenario 1: If the view allows editing (updatable view)","text":""},{"location":"archive/product/design/specs/eding-view-records/#user-adds-a-record","title":"User adds a record","text":"<p>Users will be able to add records directly from views. However, they might need to add multiple records across more than one table, depending on how the view is structured. For that reason, some of the constraints applied to the referenced tables might influence the interactions. </p> <p>For convenience, users can add values to the fields of a new record directly in the table. However, a record form will also be available, allowing users to edit the complete record, as it exists in the referenced table.</p>"},{"location":"archive/product/design/specs/eding-view-records/#the-record-table-allows-empty-values-for-all-fields","title":"The record table allows empty values for all fields","text":"<p>If the table allows for empty values, the user can leave it blank or enter a value. Doing so will not prevent the new record from being saved.</p>"},{"location":"archive/product/design/specs/eding-view-records/#the-record-table-does-not-allow-an-empty-value-for-some-of-the-fields","title":"The record table does not allow an empty value for some of the fields","text":"<p>If the table has fields that aren\u2019t in the view but can\u2019t be empty, the user will have to fill those out. Otherwise, the system cannot save the new record. For such cases, the record form will show and indicate to the user which fields cannot be empty.</p>"},{"location":"archive/product/design/specs/eding-view-records/#user-removes-a-record","title":"User removes a record","text":"<p>A user will be able to remove a record from a view. This action might affect the underlying tables and their relations, for example, if the deleted record is referenced via a foreign key in other tables. Warnings are needed for such cases to inform the user about the potential conflicts that removing records might cause.</p>"},{"location":"archive/product/design/specs/eding-view-records/#the-record-was-linked-as-a-foreign-key","title":"The record was linked as a foreign key","text":"<p>If the deleted record was linked to other tables or views, the user could still delete it, but the system must display a warning with a list of those affected objects.</p>"},{"location":"archive/product/design/specs/eding-view-records/#the-record-was-not-linked-as-a-foreign-key","title":"The record was not linked as a foreign key","text":"<p>If the deleted record was not linked to other tables or views, the user should delete it without warnings.</p>"},{"location":"archive/product/design/specs/eding-view-records/#user-edits-a-record","title":"User edits a record","text":"<p>Users will be able to edit records by changing the values directly from the table. The input control will depend on the data type of the referenced column. </p>"},{"location":"archive/product/design/specs/eding-view-records/#user-edits-the-selected-field-from-the-record","title":"User edits the selected field from the record","text":"<p>A user can edit a single field from the table by selecting it and changing its contents. This action will change the record, but all other fields will be left the same.</p>"},{"location":"archive/product/design/specs/eding-view-records/#user-edits-the-entire-record","title":"User edits the entire record","text":"<p>A user can edit all fields from a record by opening the record form, which can be accessed by clicking on the \u2018Edit Record\u2019 button from the view\u2019s toolbar. Prototype for Edit Record Form</p>"},{"location":"archive/product/design/specs/eding-view-records/#scenario-2-if-the-view-doesnt-allow-edit-non-updatable-view","title":"Scenario 2: If the view doesn\u2019t allow edit (non-updatable view)","text":""},{"location":"archive/product/design/specs/eding-view-records/#user-adds-removes-or-edits-records-that-are-part-of-a-view","title":"User adds, removes, or edits records that are part of a view","text":"<p>If the view doesn\u2019t allow editing, the user will only have access to basic functionality such as filtering, sorting or grouping.</p> <p>Prototype for Non-Updatable View</p>"},{"location":"archive/product/design/specs/eding-view-records/#other-interactions","title":"Other Interactions","text":""},{"location":"archive/product/design/specs/eding-view-records/#user-reorders-columns-in-a-view","title":"User reorders columns in a view","text":"<p>A user might want to change the order in which columns are laid out in a view and can do so by dragging and dropping the columns into place. Note that this will require saving the view. Otherwise, the system will revert the order. The system should display a warning for a user that tries to close a view with unsaved changes.</p> <p>When being dragged, the column will indicate its new placement visually, as represented in the following example: Visual indicator of new column placement</p>"},{"location":"archive/product/design/specs/eding-view-records/#global-updates","title":"Global Updates","text":"<p>Some items from previous reviews for the \u2018Working with Views\u2019 milestone have been included in this prototype and can be accessed in the steps defined for view creation. Prototype for Creating a View</p>"},{"location":"archive/product/design/specs/eding-view-records/#scenarios","title":"Scenarios","text":""},{"location":"archive/product/design/specs/eding-view-records/#user-adds-a-column","title":"User adds a column","text":"<p>The user adds a column to a view by accessing the \u2018New Column\u2019 menu from the view table. The user can choose to select a column from a view or a table from the menu. </p>"},{"location":"archive/product/design/specs/eding-view-records/#user-views-details-for-a-linked-column-in-a-table-foreign-key","title":"User views details for a linked column in a table (foreign key)","text":"<p>The user might want to view column details for a foreign key column in a table. To do so, they can open the column header menu, which will contain the referenced table, the primary key field from that table, the lookup field, and a link to the referenced table.</p>"},{"location":"archive/product/design/specs/eding-view-records/#user-selects-a-lookup-column-for-a-table","title":"User selects a lookup column for a table","text":"<p>The user might want to use another column as a lookup rather than the default assigned by the system. To do so, they can access the \u2018Set Lookup Column\u2019 from the table options menu in the table toolbar. </p>"},{"location":"archive/product/design/specs/eding-view-records/#user-sees-a-list-of-referenced-tables-for-a-view","title":"User sees a list of referenced tables for a view","text":"<p>The user might want to see a list of all tables that are referenced in a particular view. To do so, they can open the view options menu and select the \u2018Relationships\u2019 option.</p>"},{"location":"archive/product/design/specs/email-data-type/","title":"Email Data Type","text":""},{"location":"archive/product/design/specs/email-data-type/#context","title":"Context","text":"<p>Email data types are custom Mathesar data types used to store email addresses. </p>"},{"location":"archive/product/design/specs/email-data-type/#prototype","title":"Prototype","text":"<p>Warning</p> <p>This prototype might be outdated due to global component updates. Please refer to the link under \u2018Setting Options\u2019 for an updated version of the shared components.</p> <p>Email Data Type Prototype</p>"},{"location":"archive/product/design/specs/email-data-type/#user-experience","title":"User Experience","text":""},{"location":"archive/product/design/specs/email-data-type/#scenarios","title":"Scenarios","text":""},{"location":"archive/product/design/specs/email-data-type/#user-sets-a-column-to-email-data-type","title":"User sets a column to \u2018Email\u2019 data type","text":"<p>The user can set the column data type to \u2018Email\u2019 by accessing the \u2018Data Type Options\u2019 in the columns header menu. Depending on whether there are existing values or not, and if they are valid email values, the outcomes will vary: If there are valid email values, the system will convert them to email types. A valid email will have a username and domain name joined by a \u2018@\u2019 symbol. If there are no valid email values, the system will discard the existing values and default to an empty cell.</p>"},{"location":"archive/product/design/specs/email-data-type/#setting-options","title":"Setting Options","text":"<p>The following is an interactive representation of the various options that users can set for this type: Email Type Options</p>"},{"location":"archive/product/design/specs/email-data-type/#user-enters-a-new-email-data-type-value","title":"User enters a new \u2018Email\u2019 data type value","text":"<p>The user might enter a new email value with a valid format. If the value is not a valid email, an error should be displayed, preventing the row from being saved.</p>"},{"location":"archive/product/design/specs/email-data-type/#user-filters-an-email-data-type-column","title":"User filters an \u2018Email\u2019 data type column","text":"<p>Users can filter \u2018email\u2019 data type columns by regular \u2018Text\u2019 type filters (except for length filters which are exclusive to text types) as well as \u2018Email\u2019 specific filters such as domain name.</p>"},{"location":"archive/product/design/specs/email-data-type/#user-groups-an-email-data-type-column","title":"User groups an \u2018Email\u2019 data type column","text":"<p>Users can group \u2018email\u2019 data types columns by first letter or domain.</p>"},{"location":"archive/product/design/specs/email-data-type/#additional-changes","title":"Additional Changes","text":""},{"location":"archive/product/design/specs/email-data-type/#new-record-row-placement","title":"New record row placement","text":"<p>The new record row, originally designed to sit at the bottom of the table, will now be on top. Change is due to confusing placement within groups and compensating for the pagination change impact on the usability of adding new records. </p>"},{"location":"archive/product/design/specs/filter-sort-group/","title":"Filter, Sort, and Group Tables","text":""},{"location":"archive/product/design/specs/filter-sort-group/#figma-prototype","title":"Figma Prototype","text":""},{"location":"archive/product/design/specs/filter-sort-group/#context","title":"Context","text":"<p>In the Inventory Use Case, the user is presented with problems requiring them to make sense of the data and then making decisions, i.e., creating a summarized view of multiple tables. We need to display these data views within Mathesar using the filter, sort, and group functionalities.</p>"},{"location":"archive/product/design/specs/filter-sort-group/#considerations","title":"Considerations","text":""},{"location":"archive/product/design/specs/filter-sort-group/#database-objects","title":"Database objects","text":"<p>Within Mathesar, we opted to show most database objects such as tables and views to the users. This approach ensures that the user can understand the database schema and progress through the various steps of database normalization.</p>"},{"location":"archive/product/design/specs/filter-sort-group/#table-objects","title":"Table objects","text":"<p>Table objects give the user a direct representation of the data in a table format. Depending on the circumstances, users could have varying needs, and some might need few large tables or multiple smaller tables. How often users change the structure of a table will depend on how they are using it. When users have many small tables, they will most likely analyze them from a view.</p>"},{"location":"archive/product/design/specs/filter-sort-group/#tables-and-views","title":"Tables and views","text":"<p>It is likely that when users think of filtering, sorting, or grouping data, they want to be able to perform these operations on multiple tables at the same time. At the time of this writing, view objects are not implemented in Mathesar; however, we have included them in the roadmap. </p> <p>However, views influence how the design of filtering, sorting, or grouping data should be approached. For that reason, keep in mind the following considerations:</p> <ul> <li>Filtering is part of the view creation flow, and as such, should consider the additional operations that are parts of that flow, such as table and column selection and joins.</li> <li>There\u2019s no purpose in persisting filters on tables. Filter creation should lead to new views. </li> <li>For existing views, having a consolidated view of all tables, filters, sorts, and groupings allows users to modify or find the sources easily.</li> <li>If a table join is removed, the filters, sorts, or groups that rely on that table\u2019s columns will produce errors. Correcting these is much easier from a consolidated view.</li> </ul>"},{"location":"archive/product/design/specs/filter-sort-group/#future-consideration-when-introducing-views","title":"Future Consideration When Introducing Views","text":"<p>We\u2019ll need to think about two different types of views. One type is saved to the DB and is no longer associated with the originating table, while others remain associated with the table. The former can easily be written to, and the behavior is similar to \u201cCreate new table from table.\u201d To avoid confusion, we might need to differentiate them by name.</p>"},{"location":"archive/product/design/specs/filter-sort-group/#questions","title":"Questions","text":"<ul> <li>When importing a database, do we ignore view objects?<ul> <li>We should support importing views as they are a crucial aspect of data structure.</li> </ul> </li> </ul>"},{"location":"archive/product/design/specs/filter-sort-group/#user-experience","title":"User Experience","text":""},{"location":"archive/product/design/specs/filter-sort-group/#impact","title":"Impact","text":"<p>Column display properties such as filter, sort order, and grouping all need to be displayed within Mathesar as part of tool category requirements. These features will improve the user\u2019s ability to analyze, visualize and understand the data structure.</p>"},{"location":"archive/product/design/specs/filter-sort-group/#proposed-user-flow","title":"Proposed User Flow","text":"<p>The user opens an existing table within Mathesar.</p> <p></p> <p>The user clicks the header of one of the columns in the table. A menu becomes visible, and they choose to add a filter to this column. </p> <p></p> <p>The default filter value is empty. The filtering condition is set to \u201ccontains\u201d due to the field type.</p> <p></p> <p>A panel like the one below is displayed next to the table. The filter option is added, and the user can modify it or add more filters. </p> <p>The initial iteration of this panel won\u2019t have the tables section. The section is included only for illustrating the potential use of the panel as a consolidated query view.</p> <p></p> <p>The user now adds a value to the filter, and the table refreshes to show the result. No additional step is required from the user to trigger the table refresh. The value is case-insensitive. </p> <p></p>"},{"location":"archive/product/design/specs/filter-sort-group/#refreshing-table-data-on-keypress-event","title":"Refreshing Table Data on KeyPress Event","text":"<p>The table should refresh its content based on criteria entered by the user. The input controls should include a loading state that displays after after each keypress. A delay can be set so that the user can type full words without triggering constant reloads.</p> <p></p> <p>The user adds a sort rule from the same panel, selects a column, and sets the direction. The table again refreshes to show the updated data.</p> <p></p> <p>The user now, from the same panel, adds a group column and determines its direction. The group column is highlighted.</p> <p></p> <p>From here, the user should be able to save this as a view. </p>"},{"location":"archive/product/design/specs/filter-sort-group/#scope-of-initial-iteration","title":"Scope of Initial Iteration","text":"<p>The initial iteration won\u2019t have any reference to views or table selection. </p>"},{"location":"archive/product/design/specs/filter-sort-group/#interactions","title":"Interactions","text":""},{"location":"archive/product/design/specs/filter-sort-group/#table-properties-panel","title":"Table Properties Panel","text":"<p>The table properties panel contains the properties of the active table. It opens automatically whenever a new property is added, for example, when applying a new filter from one of the column headers.  When closed, the panel stays next to the table in a minified state. It can be reopened if necessary by clicking on it. </p>"},{"location":"archive/product/design/specs/filter-sort-group/#states","title":"States","text":""},{"location":"archive/product/design/specs/filter-sort-group/#open","title":"Open","text":""},{"location":"archive/product/design/specs/filter-sort-group/#closed","title":"Closed","text":""},{"location":"archive/product/design/specs/filter-sort-group/#column-selector-controls","title":"Column Selector Controls","text":"<p>Column selector controls are components that apply various properties to columns on a table. They allow users to select a column and set different properties, such as filtering, grouping, and sorting. </p> <p>On their default state, they display an empty state indicating that no column is selected.</p> <p></p>"},{"location":"archive/product/design/specs/filter-sort-group/#implementation-notes","title":"Implementation Notes","text":"<p>Once more options or table properties are available, we can stack icons for displaying different panels like the example below.</p> <p></p>"},{"location":"archive/product/design/specs/filter-sort-group/#setting-a-property","title":"Setting a Property","text":"<p>When filter, sort of group properties are added, a default field is set initially to the first column option on the select list.</p> <p></p> <p>Changing the column can be done by selecting any of the options from the dropdown menu.</p> <p></p> <p></p> <p>Once the column is set, users can also modify the different filter options. The set of options will depend on the data type of the selected option. If the column is changed to another data type, the UI update with different filter options, and the first one on the list will be chosen by default.</p> <p></p> <p>Users can add additional filters by clicking on the \u201cAdd Filter\u201d option.</p> <p></p>"},{"location":"archive/product/design/specs/filter-sort-group/#table-header-controls","title":"Table Header Controls","text":"<p>In the header area of each table, there are column-specific options in each header cell. Users can access the options by clicking on the buttons. The button content will vary depending on the column status. For example, if a filter is applied, the filter icon will become visible.</p> <p></p> <p>Users can access the available options by clicking on the button. </p> <p></p> <p>The button will reflect the current column status.</p> <p></p> <p>Depending on which option is active, the menu items will change to show other options, such as clearing an active filter.  It should be evident to the user that they will clear multiple filters.</p> <p></p>"},{"location":"archive/product/design/specs/filter-sort-group/#user-interface","title":"User Interface","text":""},{"location":"archive/product/design/specs/filter-sort-group/#read-only-table-updates","title":"Read-only Table Updates","text":"<p>Implementing this feature requires specific updates to read-only tables.</p>"},{"location":"archive/product/design/specs/filter-sort-group/#filtered-table","title":"Filtered Table","text":"<p>When a filter is active, the table header should provide a visual way of knowing which columns are being filtered.</p> <p></p>"},{"location":"archive/product/design/specs/filter-sort-group/#sorted-table","title":"Sorted Table","text":"<p>When a table is sorted, the table header provides a visual indicator. </p> <p></p>"},{"location":"archive/product/design/specs/filter-sort-group/#grouped-table","title":"Grouped Table","text":"<p>When a column groups a table, there are grouping elements added to separate the rows. A count of records for each group is available. </p> <p></p>"},{"location":"archive/product/design/specs/filter-sort-group/#implementation-notes_1","title":"Implementation Notes:","text":"<ul> <li>We will create a separate issue to address UI improvements to provide more advanced visual indicators.</li> </ul>"},{"location":"archive/product/design/specs/filter-sort-group/#future-iterations-advanced-filters","title":"Future Iterations: Advanced Filters","text":"<p>Even though the lack of advanced filtering features like filter groups could hinder users\u2019 experience that have more complex needs, we consider that basic filtering covers the requirements outlined by the current use case. Nonetheless, we consider that advanced filtering will be part of the future roadmap.</p>"},{"location":"archive/product/design/specs/foreign-key-constraints/","title":"Usage of Foreign Key Constraints","text":""},{"location":"archive/product/design/specs/foreign-key-constraints/#context","title":"Context","text":"<p>This spec describes the design solution for Usage of Foreign Key constraints.</p>"},{"location":"archive/product/design/specs/foreign-key-constraints/#prototype-link-and-video-walkthrough","title":"Prototype Link and Video Walkthrough","text":""},{"location":"archive/product/design/specs/foreign-key-constraints/#prototype","title":"Prototype","text":"<p>Prototype Link</p>"},{"location":"archive/product/design/specs/foreign-key-constraints/#videos","title":"Videos","text":"<ul> <li>Scenario 1: https://www.loom.com/share/01fb12b24f0e4270822da212622a8844</li> <li>Scenario 2: https://www.loom.com/share/87fce49545c744d1b475693b7d43c2bf</li> <li>Scenario 3: https://www.loom.com/share/e43763b172e449fa9fddff25b311123f</li> <li>Scenario 4: https://www.loom.com/share/6deed11141f34c4ba495c4adb7117982</li> <li>Scenario 5: https://www.loom.com/share/b90ee712055a4a9cb24a499f943c0bbe</li> </ul>"},{"location":"archive/product/design/specs/foreign-key-constraints/#scenarios","title":"Scenarios","text":""},{"location":"archive/product/design/specs/foreign-key-constraints/#scenario-1-user-adds-a-foreign-key-constraint","title":"Scenario 1: User Adds a Foreign Key Constraint","text":"<p>A user wants to link records from another table into their current table. Both tables belong to the same schema. For this purpose, foreign key constraints can change the relationship between one table and another based on the values of columns belonging to the linked tables.</p>"},{"location":"archive/product/design/specs/foreign-key-constraints/#scenario-1a-automatically-adding-foreign-key-constraints-from-the-link-table-dialog","title":"Scenario 1a: Automatically adding foreign key constraints from the \u2018Link Table\u2019 dialog","text":""},{"location":"archive/product/design/specs/foreign-key-constraints/#assumptions-for-1a","title":"Assumptions for 1a","text":"<ul> <li>The user is not familiar with the concept of foreign keys.</li> <li>The user has at least one table with a (non-composite) primary key constraint set.</li> </ul>"},{"location":"archive/product/design/specs/foreign-key-constraints/#steps-for-1a","title":"Steps for 1a","text":"<ul> <li>The user starts the link Table process by clicking on the <code>Link Table</code> button in the table toolbar area.</li> <li>The user reads the instructions presented within the link table component and understands that the tables will be linked by setting up a foreign key constraint. They also understand that manual configuration is available.</li> <li>The user selects the table they wish to link to from the table selector.</li> <li>Only tables that have a primary key constraint will allow selection. Tables without a primary key constraint will still be listed but shown with a warning.</li> <li>A list of questions is displayed once a table is selected. The user can answer \u2018yes\u2019 or \u2018no\u2019 depending on the relationship they want to create.</li> <li>The user answers all the questions listed. The answers will determine the location of the foreign key or whether a new table needs to be created.</li> <li>Answering \u2018yes\u2019 to both questions will set up a mapping table with foreign key columns for both tables, creating a many-to-many relationship.</li> <li>Answering \u2018yes\u2019 to any of the questions and \u2018no\u2019 to the other will set up a foreign key column in the appropriate table, creating a one-to-many relationship. The system will add the column to the table on the \u2018many\u2019 side of the relationship.</li> <li>Answering \u2018no\u2019 to both questions will set a unique constraint on a new column so that each record can only be linked to another unique record from the other table, creating a one-to-one relationship.</li> <li>Once questions are answered, the dialog will display a summary of the system\u2019s changes in a section titled \u2018Under the Hood.\u2019 At the same time, a diagram illustrating the structure of the new relationship is displayed next to the questions.</li> <li>Before creating the link, the user will have the chance to rename the new columns or tables. Invalid column or table names should prevent saving.</li> </ul>"},{"location":"archive/product/design/specs/foreign-key-constraints/#scenario-1b-manually-from-the-table-constraints-settings","title":"Scenario 1b: Manually from the \u2018Table Constraints\u2019 settings","text":""},{"location":"archive/product/design/specs/foreign-key-constraints/#assumptions-for-1b","title":"Assumptions for 1b","text":"<ul> <li>The user is not familiar with the concept of foreign keys.</li> </ul>"},{"location":"archive/product/design/specs/foreign-key-constraints/#steps-for-1b","title":"Steps for 1b","text":"<ul> <li>A user wants to set up a foreign key constraint to single or multiple columns to a currently active table.</li> <li>The user opens the table options by clicking on the table name label in the toolbar area. From the menu, the user selects the option \u2018Table Constraints.\u2019</li> <li>This opens a dialog from which the user can set all supported constraint types.</li> <li>The user sees a layout with two panels. On one side, all the existing constraints are listed. On the other side, a form with the constraints configuration is displayed. The form corresponds to the currently active list item.</li> <li>The list panel contains actions at the bottom of the panel. The user can choose to add or delete an item from the list. The user clicks on \u2018Add\u2019 to create a new constraint.</li> <li> <p>The user is presented with a form. From there, they select the type of constraint to be added. The user selects the \u2018Foreign Key\u2019 constraint option from the list. The user selects single or multiple columns to which they wish to apply the constraint.</p> </li> <li> <p>The user selects a table to be referenced by these columns.</p> </li> <li>The user selects a column in the reference table from which the column will match values. This is set to the \u2018Primary Key\u2019 column in the referenced table by default. When changing this field, the user can select only columns with a <code>UNIQUE</code> or <code>PRIMARY KEY</code> constraint.</li> </ul>"},{"location":"archive/product/design/specs/foreign-key-constraints/#scenario-2-user-deletes-an-existing-foreign-key-constraint","title":"Scenario 2: User Deletes an Existing Foreign Key Constraint","text":""},{"location":"archive/product/design/specs/foreign-key-constraints/#scenario-2a-from-table-constraint-settings","title":"Scenario 2a: From table constraint settings","text":""},{"location":"archive/product/design/specs/foreign-key-constraints/#assumptions-for-2a","title":"Assumptions for 2a","text":"<ul> <li>This scenario assumes that the system will not allow users to update foreign keys. The process to edit a foreign key will be to drop it and replace it.</li> </ul>"},{"location":"archive/product/design/specs/foreign-key-constraints/#steps-for-2a","title":"Steps for 2a","text":"<ul> <li>A user wants to edit an existing foreign key constraint to change the referring column or select another referenced table.</li> <li>The user can view the details for an existing foreign key constraint by clicking on the \u2018Table Constraints\u2019 option in the table menu.</li> <li>From the list of constraints, the user selects the constraint for which they want to see details.</li> <li>The user Deletes the selected constraint.</li> </ul>"},{"location":"archive/product/design/specs/foreign-key-constraints/#scenario-3-user-identifies-a-column-with-a-foreign-key-constraint-applied","title":"Scenario 3: User Identifies a Column With a Foreign Key Constraint Applied","text":""},{"location":"archive/product/design/specs/foreign-key-constraints/#scenario-3a-the-foreign-key-constraint-is-set-to-a-single-column","title":"Scenario 3a: The foreign key constraint is set to a single column","text":""},{"location":"archive/product/design/specs/foreign-key-constraints/#steps-for-3a","title":"Steps for 3a","text":"<ul> <li>The user opens a table containing at least one column with a foreign key constraint applied.</li> <li>The user can identify the columns in two ways:</li> <li>The user looks at the column header and sees a foreign key indicator. The indicator shows a key icon and the referenced table and column names.</li> <li>The cell content is styled as a tag-like element with a colored background. The cell also contains a toggle to open the <code>record selector</code> dropdown.</li> </ul>"},{"location":"archive/product/design/specs/foreign-key-constraints/#scenario-3b-the-foreign-key-constraint-is-set-to-multiple-columns","title":"Scenario 3b: The foreign key constraint is set to multiple columns","text":""},{"location":"archive/product/design/specs/foreign-key-constraints/#steps-for-3b","title":"Steps for 3b","text":"<ul> <li>The user opens a table containing columns with a multi-column foreign key constraint applied.</li> <li>The indicator, in this case, looks similar to the single-column one. However, the user will understand that the foreign key constraints reference the same table.<ul> <li>The user can tell that a referenced table is the same because they share the same color. The system could use other UI elements instead of color. Still, the idea is to create a visual distinction that users can scan easily.</li> </ul> </li> </ul>"},{"location":"archive/product/design/specs/foreign-key-constraints/#scenario-4-user-sees-a-preview-of-the-linked-record-in-a-column-with-a-foreign-key-constraint-applied","title":"Scenario 4: User Sees a Preview of the Linked Record in a Column With a Foreign Key Constraint Applied","text":"<p>In most cases, the values displayed within a foreign key column won\u2019t identify the associated record. A preview of the linked record in columns with a foreign key constraint can help the user identify it.</p> <p>By default, the preview will include columns based on specific criteria, such as constraints applied or data type. However, users can change these by updating the referenced table preferences.</p>"},{"location":"archive/product/design/specs/foreign-key-constraints/#scenario-4a-the-option-for-record-preview-is-enabled","title":"Scenario 4a: The option for record preview is enabled","text":""},{"location":"archive/product/design/specs/foreign-key-constraints/#steps-for-4a","title":"Steps for 4a","text":"<ul> <li>The user opens a table containing columns with a foreign key constraint applied.</li> <li> <p>The column contains the referenced values for each cell. Five fields are displayed.</p> <ul> <li>The displayed fields from the reference table are prioritized applying the following criteria:</li> <li>They have unique values, meaning that either a primary key, foreign key, or unique constraint are applied to the column.</li> <li>They have a text data type.</li> <li>If the user wants to show specific fields, these can be selected in the referenced table options under the \u2018Table Preferences\u2019 option.</li> </ul> </li> <li> <p>The displayed fields are presented as concatenated values. The visual contrast between the field name and its corresponding value increases readability.</p> </li> <li>When clicked, the field displays the record selector component containing a pre-filtered list. A single matching item is displayed.</li> <li>The user can disable the record preview by opening the \u2018Table Link\u2019 preferences from the column header menu and unchecking the \u2018Show Record Preview\u2019 option.</li> </ul>"},{"location":"archive/product/design/specs/foreign-key-constraints/#scenario-4b-the-option-for-record-preview-is-disabled","title":"Scenario 4b: The option for record preview is disabled","text":""},{"location":"archive/product/design/specs/foreign-key-constraints/#steps-for-4b","title":"Steps for 4b","text":"<ul> <li>The user opens a table containing columns with a foreign key constraint applied.</li> <li>The column contains the primary key value for the referenced column only.</li> <li>When clicked, the field displays the record selector component containing a pre-filtered list. A single matching item is displayed.</li> <li>The user can enable the record preview by opening the \u2018Table Link\u2019 preferences from the column header menu and checking the \u2018Show Record Preview\u2019 option.</li> </ul>"},{"location":"archive/product/design/specs/foreign-key-constraints/#scenario-5-user-edits-the-values-of-a-column-with-a-foreign-key-constraint-applied","title":"Scenario 5: User Edits the Values of a Column With a Foreign Key Constraint Applied","text":"<p>Linked records can be changed or deleted according to the user\u2019s preference. Since values are references to records in other tables, users must understand that changes to references don\u2019t affect the original records. However, changes to the values of records in the referenced table do.</p>"},{"location":"archive/product/design/specs/foreign-key-constraints/#scenario-5a-the-field-has-an-existing-value","title":"Scenario 5a: The field has an existing value","text":""},{"location":"archive/product/design/specs/foreign-key-constraints/#steps-for-5a","title":"Steps for 5a","text":"<ul> <li>The user opens a table containing columns with a foreign key constraint applied.</li> <li>The column contains the referenced values for each cell.</li> <li>When clicked, a pre-filtered list is displayed inside the record selector component. The dropdown includes a search input that will show other matching records if modified. Clicking on any of those records will close the dropdown and replace the existing one.</li> <li>Note that in the case of multi-column foreign key constraints, there will be no dropdown displayed, and the user can edit the field like a regular text field.</li> </ul>"},{"location":"archive/product/design/specs/foreign-key-constraints/#scenario-5b-the-field-is-empty","title":"Scenario 5b: The field is empty","text":""},{"location":"archive/product/design/specs/foreign-key-constraints/#steps-for-5b","title":"Steps for 5b","text":"<ul> <li>The user opens a table containing columns with a foreign key constraint applied.</li> <li>The column contains no values.</li> <li>When clicked, a list of records is displayed inside the record selector component. The list shows the first 50 records.</li> <li>An text input field is available within the dropdown to filter the records based on partial or complete value matches. The list narrows down the records as the user types in a value. The system can search only the first five fields. Search across all types is supported.</li> <li>If there\u2019s a single match for the entered value, it should become highlighted, allowing the user to confirm the selection.</li> <li>If there aren\u2019t any matches, a suggestion to change the \u2018Search Columns\u2019 table preference is displayed.</li> </ul>"},{"location":"archive/product/design/specs/foreign-key-constraints/#components","title":"Components","text":""},{"location":"archive/product/design/specs/foreign-key-constraints/#record-selector","title":"Record Selector","text":"<p>The record selector component retrieves records from other tables and adds them as values to cells. The list of records is shown according to the referenced table set in a foreign key constraint column.</p>"},{"location":"archive/product/design/specs/foreign-key-constraints/#table-selector","title":"Table Selector","text":"<p>The table selector allows users to select tables from a schema. This spec doesn\u2019t go into details on how this selector would work. It also doesn\u2019t consider the scenario for selecting both tables and views.</p>"},{"location":"archive/product/design/specs/foreign-key-constraints/#record-preview","title":"Record Preview","text":"<p>The record preview allows users to identify records linked in other tables. It shows the first five field names and values. A specific limit for the value length needs to be defined so that space usage is optimal.</p>"},{"location":"archive/product/design/specs/foreign-key-constraints/#table-constraints","title":"Table Constraints","text":"<p>The table constraints settings list and provide details for all table-level constraints. Its most basic implementation will allow users to know which constraints exist and see the columns they apply. Users will also add or delete constraints but not edit them.</p>"},{"location":"archive/product/design/specs/foreign-key-constraints/#table-preferences","title":"Table Preferences","text":"<p>Table preferences will contain a group of options that users can set up to change specific properties of tables relevant only in the context of Mathesar, meaning they don\u2019t alter any database table properties. An example of this could be setting up a table\u2019s default search columns.</p>"},{"location":"archive/product/design/specs/foreign-key-constraints/#other-considerations","title":"Other Considerations","text":""},{"location":"archive/product/design/specs/foreign-key-constraints/#linked-records-for-multi-column-foreign-key-constraints","title":"Linked Records for Multi-Column Foreign Key Constraints","text":"<ul> <li>The current UI does not consider multi-column foreign key constraints and how those would be retrieved and selected. Record search and selection via the dropdown component will not be supported. Instead, the cells will be limited to input and edit text values. The text values will have to match the primary keys of the referenced records and be unique.</li> </ul>"},{"location":"archive/product/design/specs/foreign-key-constraints/#usage-of-color","title":"Usage of Color","text":"<ul> <li>A suggestion to use color as a means to differentiate table references has been included in this spec. However, implementation details need to be discussed before deciding if the user interface will use color elements to create a visual connection between elements.</li> </ul>"},{"location":"archive/product/design/specs/foreign-key-constraints/#related-discussions","title":"Related Discussions","text":"<ul> <li>Add \u2018Table Link Preferences\u2019 Option to Column Menu</li> <li>Editing values for columns with a foreign key constraint applied</li> <li>Handling duplicate foreign key columns from the \u2018Link Table\u2019 dialog</li> <li>Help users link tables via question-based forms</li> <li>Handling Composite Primary Keys and Junction Tables</li> </ul>"},{"location":"archive/product/design/specs/global-data-type-components/","title":"Global Data Type Components","text":""},{"location":"archive/product/design/specs/global-data-type-components/#context","title":"Context","text":"<p>Data types are data attributes that help to interpret their values and define the operations that the users can do and the values that can be stored. In the context of Mathesar, functionality and options will vary according to selected data types.</p>"},{"location":"archive/product/design/specs/global-data-type-components/#design-consistency-across-all-data-types","title":"Design Consistency Across All Data Types","text":"<p>It is part of Mathesar\u2019s future strategy to offer data modeling recommendations based on data types. This goal will be dependent on the user\u2019s adoption and understanding of data type functionality. For this reason, users must have a consistent experience when manipulating different data types within Mathesar. This document goes over the design elements and components common across data types to ensure cohesive design implementation.</p>"},{"location":"archive/product/design/specs/global-data-type-components/#components","title":"Components","text":""},{"location":"archive/product/design/specs/global-data-type-components/#data-type-options-menu","title":"Data Type Options Menu","text":"<p>The data type options menu contains all of the configurations for a data type. These settings include database and display options. Most options are exclusive to each data type, except for setting a default value.</p>"},{"location":"archive/product/design/specs/global-data-type-components/#prototype","title":"Prototype","text":"<p>Data Type Options Menu Prototype</p> <p>Filter, group and sort prototype</p>"},{"location":"archive/product/design/specs/global-data-type-components/#jan-2022-update-for-date-time-and-datetime-types","title":"Jan 2022 Update for Date, Time and DateTime Types","text":"<p>Date, Time and DateTime Data Type Options</p>"},{"location":"archive/product/design/specs/global-data-type-components/#database-options","title":"Database Options","text":"<p>Database options are those that define how the data is stored in the database. Users cannot always undo changes made to database options once they have applied them. Warnings need to be displayed to users to prevent data from being lost.</p>"},{"location":"archive/product/design/specs/global-data-type-components/#display-options","title":"Display Options","text":"<p>Display options change how the data is presented in the columns and can be changed without affecting the underlying data.</p>"},{"location":"archive/product/design/specs/global-data-type-components/#set-default-value","title":"Set default value","text":"<p>The Set Default Value field in all database options should allow data input using the same specialized input components available for the table interface.</p>"},{"location":"archive/product/design/specs/global-data-type-components/#data-type-filters-groups-and-sorts","title":"Data Type Filters, Groups, and Sorts","text":"<p>Filtering, grouping, and sorting operators and fields will be different according to each data type. Some options, like grouping by range, will only be available for number-based types, such as Number, Money, and Duration.</p>"},{"location":"archive/product/design/specs/global-data-type-components/#range-by-time-unit-selector-for-duration-types","title":"Range by Time Unit Selector for Duration Types","text":"<p>Group by range in duration types will allow users to select a unit measure to create ranges with increments such as \u20185 years,\u201815 minutes\u2019, etc.</p>"},{"location":"archive/product/design/specs/global-data-type-components/#natural-language-date-literals-support-for-datetime-filters","title":"Natural Language (date literals) Support for Date/Time Filters","text":"<p>Filter operators for Date/Time will allow natural language values such as \u2018Today,\u2019 \u2018Yesterday,\u2019 \u2018Last Month.\u2019</p>"},{"location":"archive/product/design/specs/global-data-type-components/#specialized-components","title":"Specialized Components","text":"<p>When a data type is set for a column, additional functionality might be present at the field level to facilitate data input in the correct format.</p>"},{"location":"archive/product/design/specs/global-data-type-components/#date-time-or-datetime-picker","title":"Date, Time or DateTime Picker","text":"<p>For Date, Time or DateTime input, a specialized component will be available so that users can enter dates using a calendar-like interface and unit-specific inputs with increment controls for time.</p>"},{"location":"archive/product/design/specs/global-data-type-components/#boolean-dropdown-and-checkbox","title":"Boolean Dropdown and Checkbox","text":"<p>For boolean values input, a specialized component will be available according to the display options set by the user. In the case of dropdown, clicking on the cell will display a menu with options for TRUE, FALSE, or NULL. Users will be able to copy and paste the values from the dropdown as true or false, but not the custom labels if enabled.</p>"},{"location":"archive/product/design/specs/global-data-type-components/#currency-formatting","title":"Currency Formatting","text":"<p>For currency values input, the formatting will be automatically added after a value has been entered. For example, if the user enters 10000 and the currency locale settings are set to US dollars, the displayed value will be $10,000.00.</p>"},{"location":"archive/product/design/specs/global-data-type-components/#percentage-formatting","title":"Percentage Formatting","text":"<p>For number values input, the percentage formatting will be automatically added after a value has been entered. For example, if the user enters 0.20 and the number format settings are set to a percentage, the displayed value will be 20%.</p>"},{"location":"archive/product/design/specs/global-data-type-components/#long-text-detection-and-cell-size-adjustment","title":"Long Text Detection and cell size adjustment","text":"<p>The cell input control will be automatically resized when active if a value exceeds a specific length for text values input. This adjustment will allow users to view the contents of a cell that has multi-line text. When inactive, the overflowing content should be indicated by adding an ellipsis icon in the cell.</p>"},{"location":"archive/product/design/specs/global-data-type-components/#alignment-for-number-types","title":"Alignment for Number Types","text":"<p>Contents of number type cells (number, duration, money) should be right-aligned for easier reading and data comparison.</p>"},{"location":"archive/product/design/specs/global-data-type-components/#font-variant-for-number-types","title":"Font Variant for Number Types","text":"<p>Number types should be displayed using a font variant that supports tabular figures (numbers are all of the same size), allowing them to be easily aligned.</p>"},{"location":"archive/product/design/specs/global-data-type-components/#decimal-precision-settings-for-money-vs-number","title":"Decimal Precision Settings for Money vs. Number","text":"<p>In number types, decimal precision is a database setting and in money type it is set as a display option.</p>"},{"location":"archive/product/design/specs/import-status/","title":"Import Status","text":""},{"location":"archive/product/design/specs/import-status/#context","title":"Context","text":"<p>The initial design for Add Table from File Import defined all the steps needed to import a file, preview its content, make adjustments and save it as a table within Mathesar. However, certain aspects of the upload process and status lack definition for implementation as reported on the issue #296 on Github. This spec looks to address those gaps in the design.</p>"},{"location":"archive/product/design/specs/import-status/#prototype","title":"Prototype","text":"<p>Import Status Indicator</p>"},{"location":"archive/product/design/specs/import-status/#user-experience","title":"User Experience","text":""},{"location":"archive/product/design/specs/import-status/#user-starts-import-from-file","title":"User Starts Import from File","text":"<p>The user wants to add a table to an existing schema. From the data explorer view, they click on add table and choose the \u2018Import from File\u2019 method.</p>"},{"location":"archive/product/design/specs/import-status/#user-uploads-a-file","title":"User Uploads a File","text":"<p>The first step to creating a table from file import is to upload a valid file. The user selects a locally stored file, and the upload process begins. Once the file is ready to be imported, the user clicks on the \u2018Import\u2019 action.  This action triggers a new state that persists while the file is being processed. Processing might take longer if the file contains many rows, as the resulting import will have gone through the type inference process.</p>"},{"location":"archive/product/design/specs/import-status/#user-navigates-to-another-tab","title":"User Navigates to Another Tab","text":"<p>Given that a file might take a long time to process, a user could navigate away to continue work on another table or view. They might also want to import an additional table. In this case, the user needs the following:</p> <ul> <li>A way to know the status of their imports</li> <li>A way to navigate back to the corresponding import tab</li> <li>A way to respond to errors or cancel an import from anywhere in the app</li> </ul>"},{"location":"archive/product/design/specs/import-status/#user-expands-the-import-status-details","title":"User Expands the Import Status Details","text":"<p>The user at any time can expand the file import component that shows active imports. Once expanded, they should be able to see all the files that are actively being processed. </p>"},{"location":"archive/product/design/specs/import-status/#user-navigates-to-a-tab-where-a-file-is-being-imported","title":"User Navigates to a Tab Where a File Is Being Imported","text":"<p>By clicking on any of the files, the user can navigate back to the tab with the import in progress. From this view, a user might cancel the operation and go back to the previous step. </p>"},{"location":"archive/product/design/specs/import-status/#review-notes","title":"Review Notes","text":""},{"location":"archive/product/design/specs/import-status/#global-notifications","title":"Global Notifications","text":"<p>Global notifications are needed to help users keep track of ongoing operations and navigate back to the particular pages. The location of these notifications should be a permanent one that is always visible to users, especially in scenarios such as moving from one database or schema to another.</p>"},{"location":"archive/product/design/specs/import-status/#notification-states","title":"Notification States","text":"<p>The content and layout of these notifications might change dynamically according to the number or type of operations. In a single operation, the notification might show specific details, such as the file\u2019s name being imported. Once more operations of the same type are added, it might change to offer a total count rather than details.</p> <p>When operations are of a distinct type, the design might reduce the notification to only showing the number of operations, and users will find the actual type information in the dropdown.</p>"},{"location":"archive/product/design/specs/import-status/#scenarios","title":"Scenarios","text":"<p>Component Examples in Figma</p>"},{"location":"archive/product/design/specs/import-status/#if-a-single-job-is-in-progress","title":"If a single job is in progress","text":"<p>A single job in progress, such as importing a file, can be described with details such as job type and file name in the notification widget.</p>"},{"location":"archive/product/design/specs/import-status/#if-multiple-jobs-of-the-same-type-are-in-progress","title":"If multiple jobs of the same type are in progress","text":"<p>Various jobs of the same kind might run concurrently, in which case a total count replaces details such as file names. The user can find the file names under the expanded dropdown.</p>"},{"location":"archive/product/design/specs/import-status/#if-multiple-jobs-of-different-types-are-in-progress","title":"If multiple jobs of different types are in progress","text":"<p>If the jobs in progress are of different types, the job type is replaced by the general term jobs rather than the job-specific verbs.</p>"},{"location":"archive/product/design/specs/import-status/#if-multiple-jobs-are-in-progress-with-some-finished","title":"If multiple jobs are in progress with some finished","text":"<p>If some jobs are finished, but some are still in progress, the status indicator will show the status of those in progress only.</p>"},{"location":"archive/product/design/specs/import-status/#if-all-jobs-are-finished","title":"If all jobs are finished","text":"<p>If all of the jobs are finished, the status indicator will change to indicate that all jobs are finished.</p>"},{"location":"archive/product/design/specs/import-status/#if-any-of-the-jobs-failed","title":"If any of the jobs failed","text":"<p>If any of the jobs running fails, the status indicator will change to indicate an error requiring attention.</p>"},{"location":"archive/product/design/specs/inline-save-edit/","title":"Inline Saving and Editing","text":""},{"location":"archive/product/design/specs/inline-save-edit/#context","title":"Context","text":"<p>Some actions contained in Table Inspector require an explicit save action as they introduce change to the database. Some of these actions are:</p> <ul> <li>Changing Table Name</li> <li>Changing Column Name</li> <li>Changing Column Type</li> </ul> <p>This spec introduces a new pattern to the application that allows users to edit values inline and save them. It is meant for Table Inspector but should be easily extendable to other application parts if required.</p>"},{"location":"archive/product/design/specs/inline-save-edit/#design-goals","title":"Design Goals","text":"<ul> <li>Allow users to edit values inline</li> <li>Allow users to save changes</li> <li>Allow users to cancel changes</li> <li>The user should be able to edit and save values by using the keyboard only</li> </ul>"},{"location":"archive/product/design/specs/inline-save-edit/#not-in-scope","title":"Not in scope","text":"<ul> <li>Allow users to edit multiple values at once</li> </ul>"},{"location":"archive/product/design/specs/inline-save-edit/#scenarios","title":"Scenarios","text":""},{"location":"archive/product/design/specs/inline-save-edit/#user-updates-the-name-of-a-table","title":"User updates the name of a table","text":"<ol> <li>The user clicks on the table name input</li> <li>The user types the new name</li> <li>Save and cancel buttons appear</li> <li>The user saves the change by:<ul> <li>Clicking on the save button</li> <li>Pressing Enter</li> </ul> </li> <li>The user sees the new name in the input</li> <li>The save and cancel buttons disappear</li> </ol> <p>Alternatively, we might use icon buttons instead of text buttons. This design could save space and make the UI less cluttered.</p> <p></p>"},{"location":"archive/product/design/specs/inline-save-edit/#user-discards-the-changes-to-the-name-of-a-table","title":"User discards the changes to the name of a table","text":"<ol> <li>The user clicks on the table name input</li> <li>The user types the new name</li> <li>Save and cancel buttons appear</li> <li>The user discards the change by:<ul> <li>Clicking on the cancel button</li> <li>Pressing Escape</li> </ul> </li> <li>The user sees the old name in the input</li> <li>The save and cancel buttons disappear</li> </ol>"},{"location":"archive/product/design/specs/inline-save-edit/#user-updates-the-data-type-of-a-column","title":"User updates the data type of a column","text":"<ol> <li>The user clicks on the data type select input</li> <li>The user selects the new data type</li> <li>Save and cancel buttons appear</li> <li>The user saves the change by:<ul> <li>Clicking on the save button</li> <li>Pressing Enter</li> </ul> </li> <li>The user sees the new data type in the input</li> <li>The save and cancel buttons disappear</li> </ol>"},{"location":"archive/product/design/specs/inline-save-edit/#additional-considerations","title":"Additional Considerations","text":""},{"location":"archive/product/design/specs/inline-save-edit/#editing-other-values-while-an-active-edit-is-in-progress","title":"Editing other values while an active edit is in progress","text":"<p>To avoid confusion, the user should not be able to edit other values while an active edit is in progress. For example, editing the name of a table while editing the data type of a column.</p> <p>A possible solution is to disable other inputs while editing is in progress.</p> <p>We should also block the user from navigating to other inspector tabs while the edit is in progress.</p>"},{"location":"archive/product/design/specs/inline-save-edit/#making-edit-action-explicit-by-clicking-on-an-edit-button","title":"Making edit action explicit by clicking on an edit button","text":"<p>I have considered making the edit action explicit by clicking an edit button. However, we have a mix of controls that require save and some that don\u2019t (e.g., the table name input). This would make the UI inconsistent and confusing.</p> <p></p>"},{"location":"archive/product/design/specs/listing-views/","title":"Listing Views Spec","text":""},{"location":"archive/product/design/specs/listing-views/#context","title":"Context","text":"<p>Database objects are defined objects in a database that store or reference data. In the context of Mathesar, two of those objects are listed and available to users as <code>Tables</code> and <code>Views</code>. Together, these objects are at the core of Mathesar\u2019s user experience. A component of that experience is retrieving, listing, and identifying these objects and their types in different contexts.</p>"},{"location":"archive/product/design/specs/listing-views/#prototype","title":"Prototype","text":""},{"location":"archive/product/design/specs/listing-views/#link","title":"Link","text":"<p>Prototype</p>"},{"location":"archive/product/design/specs/listing-views/#videos","title":"Videos","text":"<ul> <li>Scenario 1: Video</li> <li>Scenario 2: Video</li> <li>Scenario 3: Video</li> <li>Scenario 4: Video</li> </ul>"},{"location":"archive/product/design/specs/listing-views/#user-experience","title":"User Experience","text":""},{"location":"archive/product/design/specs/listing-views/#listing-of-views-and-searching-by-name","title":"Listing of Views and Searching by Name","text":"<p>With the introduction of <code>Views</code>, the user interface needs to be updated to easily display and identify all database objects and types of an object.</p> <p><code>Views</code>, like <code>Tables</code>, have names that allow users to identify them or search for them. Icons that represent each are also used to differentiate each.</p> <p>Initially, users will only be able to search views by name. However, relying on a name alone might not be sufficient to ensure a good user experience when trying to find views created a long time ago or by other users. We will consider more sophisticated search functionality in the future.</p>"},{"location":"archive/product/design/specs/listing-views/#scenarios","title":"Scenarios","text":""},{"location":"archive/product/design/specs/listing-views/#scenario-1-user-browses-through-a-list-of-all-available-views-in-a-currently-open-schema","title":"Scenario 1: User browses through a list of all available views in a currently open schema","text":""},{"location":"archive/product/design/specs/listing-views/#scenario-1a-from-the-schema-details-view","title":"Scenario 1a: From the schema details view","text":"<ul> <li>User opens a schema and sees the schema details page.</li> <li>User sees a list of views recently opened in Mathesar for the current schema.</li> </ul>"},{"location":"archive/product/design/specs/listing-views/#scenario-1b-from-the-schema-explorer-sidebar","title":"Scenario 1b: From the schema explorer sidebar","text":"<ul> <li>User opens a schema and sees the schema explorer sidebar.</li> <li>User sees a list of all tables and views for the current schema.</li> <li>The list shows both object types by default but can be filtered to only show tables or views using the sidebar tabs at the top of the sidebar.</li> </ul>"},{"location":"archive/product/design/specs/listing-views/#scenario-2-user-encounters-an-error-in-loading-a-list-of-views-for-a-currently-open-schema","title":"Scenario 2: User encounters an error in loading a list of views for a currently open schema","text":""},{"location":"archive/product/design/specs/listing-views/#scenario-2a-from-the-schema-details-view","title":"Scenario 2a: From the schema details view","text":"<ul> <li> <p>User opens a schema and sees the schema details page. The list of objects for the schema fails to load.</p> </li> <li> <p>Under the schema name, an error message is displayed indicating that the loading of objects failed.</p> </li> <li>The error notice contains details about the error and actions, if available, that the user can perform to correct the problem.</li> </ul>"},{"location":"archive/product/design/specs/listing-views/#scenario-2b-from-the-schema-explorer-sidebar","title":"Scenario 2b: From the schema explorer sidebar","text":"<ul> <li> <p>User opens a schema and sees the schema explorer sidebar. The list of objects for the schema fails to load.</p> </li> <li> <p>An error message is displayed indicating to the user that the loading of objects failed.</p> </li> <li>The error notice contains details about the error and actions, if available, that the user can perform to correct the problem.</li> </ul>"},{"location":"archive/product/design/specs/listing-views/#scenario-3-user-encounters-an-error-while-opening-a-view-in-a-currently-open-schema","title":"Scenario 3: User encounters an error while opening a view in a currently open schema","text":""},{"location":"archive/product/design/specs/listing-views/#scenario-3a-from-the-schema-explorer-sidebar","title":"Scenario 3a: From the schema explorer sidebar","text":"<ul> <li>The user opens the schema explorer by navigating to it via the sidebar or by URL pointing to that object.</li> <li>The object fails to load, and the system displays an error notice.</li> </ul>"},{"location":"archive/product/design/specs/listing-views/#scenario-3b-from-an-open-tab","title":"Scenario 3b: From an open tab","text":"<ul> <li>The user navigates to a tab, which represents a previously open view.</li> <li>The object fails to load, and the system displays an error notice.</li> </ul>"},{"location":"archive/product/design/specs/listing-views/#scenario-4-user-searches-a-view-by-name","title":"Scenario 4: User searches a view by name","text":""},{"location":"archive/product/design/specs/listing-views/#scenario-4a-from-the-schema-explorer-views-sidebar","title":"Scenario 4a: From the schema explorer view\u2019s sidebar","text":"<ul> <li>The user opens the schema explorer by navigating to it via the sidebar or by URL pointing to that object.</li> <li>The user enters a search term in the search input box located at the top of the sidebar list.</li> <li>The list is filtered to show objects whose name matches the search term.</li> <li>The list contains metadata associated with the objects like record and column count.</li> <li>If no results are found, the system displays a notice to indicate the lack of results and potential causes.</li> <li>Users can clear the search by clearing the input box content or clicking on the <code>Clear Search</code> link displayed along with the results summary.</li> </ul>"},{"location":"archive/product/design/specs/listing-views/#views","title":"Views","text":""},{"location":"archive/product/design/specs/listing-views/#schema-details-page","title":"Schema Details Page","text":"<p>The schema details page will be shown if a schema is open and there aren\u2019t any tables selected. It will contain the schema\u2019s name, the total number of tables and views, and additional sections that we can use to present the user with relevant information or links. The detail page should also show a list of recently opened views or tables.</p> <p>In the future additional content could be considered for this section, such as:</p> <ul> <li>Activity summary for recent events</li> <li>Getting started options for common actions</li> </ul>"},{"location":"archive/product/design/specs/listing-views/#components","title":"Components","text":""},{"location":"archive/product/design/specs/listing-views/#schema-explorer-sidebar","title":"Schema Explorer Sidebar","text":"<p>The schema explorer sidebar contains the entire list of objects for any schema available in Mathesar. The user can open any object from the sidebar by clicking on its navigation link. The sidebar also includes an input for searching through the listed objects.</p>"},{"location":"archive/product/design/specs/listing-views/#sidebar-tabs","title":"Sidebar Tabs","text":"<p>Sidebar tabs will allow users to filter the sidebar\u2019s contents to show only a particular object type. When set to \u2019 All \u2018, the content will include both tables and views. Setting the tabs to <code>Tables</code> will display only table objects, while <code>Views</code> will display only view objects.</p>"},{"location":"archive/product/design/specs/listing-views/#other-considerations","title":"Other Considerations","text":""},{"location":"archive/product/design/specs/listing-views/#regular-vs-materialized-views","title":"Regular vs. Materialized Views","text":"<p>Regular views need to be differentiated from materialized views as the use cases might differ. However, we don\u2019t want to create a rigid distinction between both as it could confuse users being introduced to the concept of views. For this purpose, an indicator, such as the letter \u2018M\u2019 should be added next to the view icon to show that it is of the type \u2018Materialized\u2019.</p>"},{"location":"archive/product/design/specs/listing-views/#recently-opened","title":"Recently Opened","text":"<p>The method to generate a list of recently opened objects is still under discussion. Ideas like using local storage to provide that information have been considered. The idea is to provide users with a quick way to access their more recently used tables or views or continue their work.</p>"},{"location":"archive/product/design/specs/lookup-field-component/","title":"Lookup Field Component Specs","text":""},{"location":"archive/product/design/specs/lookup-field-component/#context","title":"Context","text":"<p>The lookup field component was specified as part of the design for \u2018Add Table from Import\u2019. Based on discussions held after the design review of the document, we determined the need to provide further detail on how users will use this component and what steps they must follow to complete the following tasks:</p> <ul> <li>Add a table to an existing schema</li> <li>Add a table to a new schema</li> </ul>"},{"location":"archive/product/design/specs/lookup-field-component/#scenario-selecting-a-schema","title":"Scenario: Selecting a Schema","text":"<p>The lookup field component allows the user to choose a value from a list to perform a specific action. A common task within Mathesar will be the creation of database objects such as tables and views. These objects belong to a schema, which is the structure of a database.</p>"},{"location":"archive/product/design/specs/lookup-field-component/#list-values","title":"List Values","text":"<p>The available values, in this case, are all the schemas associated with the users\u2019 Mathesar account, where the user has read access to them. Because write access is required to create a table within the schema, we will not allow users to select schemas for which they have insufficient privileges.</p>"},{"location":"archive/product/design/specs/lookup-field-component/#allowing-multiple-values","title":"Allowing Multiple Values","text":"<p>Our current use case doesn\u2019t contain instances where a lookup field might require multiple value selection. For this iteration, we will focus on the selection of a single value.</p>"},{"location":"archive/product/design/specs/lookup-field-component/#alternative-1","title":"Alternative #1","text":""},{"location":"archive/product/design/specs/lookup-field-component/#selecting-from-existing-values","title":"Selecting from Existing Values","text":"<p>For a schema that already exists, the user will have to click on the desired schema to select it.</p> <p></p> <p>In some cases, users might see an item listed but can\u2019t select it. This state could be due to insufficient privileges or other factors. In that case, the item will be grayed out and non-interactive.</p> <p></p>"},{"location":"archive/product/design/specs/lookup-field-component/#add-a-new-schema-and-select-it","title":"Add a New Schema and Select It","text":"<p>In some cases, a user might want to add the table to a new schema. To avoid leaving this view and restarting the process, the user can add it from the lookup menu.</p> <p></p>"},{"location":"archive/product/design/specs/lookup-field-component/#pros","title":"Pros","text":"<ul> <li>Easier to transform into multi-select in the future as space can be handled better because \u2018Find a schema\u2019 is separated from \u2018Selected Schemas\u2019</li> <li>New schema action is more deliberate and obvious</li> </ul>"},{"location":"archive/product/design/specs/lookup-field-component/#cons","title":"Cons","text":"<ul> <li>Additional step to add a new schema</li> </ul>"},{"location":"archive/product/design/specs/lookup-field-component/#alternative-2","title":"Alternative #2","text":""},{"location":"archive/product/design/specs/lookup-field-component/#selecting-from-existing-values_1","title":"Selecting from Existing Values","text":"<ul> <li>Retrieve all schemas by clicking on the field</li> </ul> <ul> <li>Type to find existing schemas</li> </ul>"},{"location":"archive/product/design/specs/lookup-field-component/#add-a-new-schema-and-select-it_1","title":"Add a New Schema and Select It","text":"<ul> <li>Type to create a new schema if no matches found</li> </ul>"},{"location":"archive/product/design/specs/lookup-field-component/#pros_1","title":"Pros","text":"<ul> <li>Fewer steps overall. User can both refine the list of schemas or create a new one without requiring additional steps</li> </ul>"},{"location":"archive/product/design/specs/lookup-field-component/#cons_1","title":"Cons","text":"<ul> <li>Without a descriptive text, the user might not understand that they can create a new schema</li> </ul>"},{"location":"archive/product/design/specs/lookup-field-component/#review-summary","title":"Review Summary","text":""},{"location":"archive/product/design/specs/lookup-field-component/#choosing-alternative-2","title":"Choosing Alternative #2","text":"<p>Alternative #2 is preferred as it is more ARIA friendly. </p> <p>Clicking the input field to reveal full list of options:</p> <p></p> <p>Typing the name of the schema to retrieve matching options:</p> <p></p>"},{"location":"archive/product/design/specs/lookup-field-component/#discarding-add-schema-functionality-from-the-lookup-field-for-now","title":"Discarding \u2018Add Schema\u2019 functionality from the lookup field for now","text":"<p>Some concerns exist around the need for confirmation steps and system feedback requirements to prevent errors during schema creation. Contemplating these aspects of the user experience in a narrow context is likely to result in a less than optimal design for the use cases we are discussing.</p> <p>Concerns mentioned during the review:</p> <ul> <li>Risk of typos failing to find schema and inadvertently create a new schema</li> </ul> <p>Ideas to improve the experience:</p> <ul> <li>Allowing users to extend current schema names to create new ones </li> </ul>"},{"location":"archive/product/design/specs/lookup-field-component/#simplifying-schema-and-table-creation","title":"Simplifying Schema and Table Creation","text":"<p>Reducing the steps users need to take to create a schema or table should be our optimization focus. Some parts of our experience rely on overlay components (modals) to collect the information necessary for the creation of database objects like tables and schemas. We want to simplify these components to streamline the experience in future designs. For example, we integrate table creation details into tasks that require them, such as importing a new table from a file.</p>"},{"location":"archive/product/design/specs/money-data-type/","title":"Money Data Type Specs","text":""},{"location":"archive/product/design/specs/money-data-type/#context","title":"Context","text":"<p>Money Data Types allow users to manage monetary values, preceded by a currency symbol of their choice.</p>"},{"location":"archive/product/design/specs/money-data-type/#prototype","title":"Prototype","text":"<p>Warning</p> <p>This prototype might be outdated due to global component updates. Please refer to the link under \u2018Setting Options\u2019 for an updated version of the shared components.</p> <p>Figma Prototype for Money Data Type</p>"},{"location":"archive/product/design/specs/money-data-type/#user-experience","title":"User Experience","text":""},{"location":"archive/product/design/specs/money-data-type/#scenarios","title":"Scenarios","text":""},{"location":"archive/product/design/specs/money-data-type/#the-user-sets-the-type-of-a-column-with-existing-values-to-money","title":"The user sets the type of a column with existing values to \u2018Money.\u2019","text":"<p>The user opens the menu for the desired column and selects the \u2018Data Type Options\u2019 menu item. From the list, they can set the type to money. Under advanced options, the user may set the currency and decimal places.</p>"},{"location":"archive/product/design/specs/money-data-type/#setting-options","title":"Setting Options","text":"<p>The following is an interactive representation of the various options that users can set for this type: Money Type Options</p>"},{"location":"archive/product/design/specs/money-data-type/#the-user-filters-a-money-data-type-column","title":"The user filters a \u2018Money\u2019 data type column","text":"<p>The user can choose from multiple filter options to filter monetary values. The options will be the same as those used for numeric types.</p>"},{"location":"archive/product/design/specs/money-data-type/#the-user-groups-a-money-data-type-column","title":"The user groups a \u2018Money\u2019 data type column","text":"<p>The user might also choose to group the data based on the values of the \u2018Money\u2019 data type column.</p>"},{"location":"archive/product/design/specs/money-data-type/#review-notes","title":"Review Notes","text":"<ul> <li>For the MVP we\u2019ll assume the number locale format based on the selected currency. Eventually we can add options so that, for example, US dollars can be displayed with dot separators instead of commas. </li> <li>All locales will be included whenever there\u2019s a locale-related option.</li> </ul>"},{"location":"archive/product/design/specs/money-data-type/#update-23-feb-2022","title":"Update 23 Feb 2022","text":""},{"location":"archive/product/design/specs/money-data-type/#compatibility-with-postgres-money-type","title":"Compatibility with Postgres Money Type","text":"<p>Mathesar will allow users to view columns set to Postgres money type as a money type column. However, it will not allow users to set an existing column to Postgres money data type. To change from Postgres money data type to the custom Mathesar money type, the user would have to set the column to Number or other data type and then choose money again.</p>"},{"location":"archive/product/design/specs/money-data-type/#postgres-money-type-prototype","title":"Postgres Money Type Prototype","text":"<p>Figma Prototype - Postgres Money Type</p>"},{"location":"archive/product/design/specs/money-data-type/#support-for-multi-currency-through-custom-mathesar-money-type","title":"Support for Multi-Currency through custom Mathesar Money Type","text":"<p>Mathesar\u2019s custom money data type will allow users to set any currency and customize various display options. The custom money data type will be the only money type option that can be set in Mathesar. With Postgres money type being available only for existing database columns set to this type.</p>"},{"location":"archive/product/design/specs/money-data-type/#custom-mathesar-money-type-prototype","title":"Custom Mathesar Money Type Prototype","text":"<p>Figma Prototype - Custom Mathesar Money Type</p>"},{"location":"archive/product/design/specs/money-data-type/#scenario-a-user-sets-a-field-to-money-data-type","title":"Scenario: A user sets a field to money data type","text":"<ul> <li>The user sets a column type to <code>Money.</code></li> <li>The user opens the data type menu and goes to the <code>Display</code> section.</li> <li>The user sees the default currency selected and additional options are displayed.</li> <li>Changing any of the default options for a currency will set the currency to custom. For example, changing the symbol for US dollar from <code>$</code> to <code>USD</code>.</li> <li>Changing to any other currency will update the values of the formatting options to those corresponding to the currency.</li> </ul>"},{"location":"archive/product/design/specs/money-data-type/#currency-format-options","title":"Currency Format Options","text":"<ul> <li>Select Currency Symbol: Users can set the symbol that will be displayed along with the number.</li> <li>Symbol Location: Users can select the position for the currency symbol. The options are \u2018Beginning\u2019 or \u2018End\u2019.</li> <li>Decimal Symbol: Options are \u2018.\u2019 or \u2018,\u2019</li> <li>Digit Grouping: Options are \u2018123456789\u2019,\u2018123,456,789\u2019,\u2018123456,789\u2019 or \u201812,34,56,789\u2019</li> <li>Digit Grouping Symbol: Options are \u2018none\u2019,\u2019thin space\u2019,\u2019.\u2019 or \u2018,\u2019</li> </ul>"},{"location":"archive/product/design/specs/multiple-records-spec/","title":"Multiple Records Associated with a Single Record","text":"<p>Danger</p> <p>This spec is outdated and should not be followed.</p>"},{"location":"archive/product/design/specs/multiple-records-spec/#context","title":"Context","text":"<p>When setting up a relational database, users will want to organize their data to avoid duplication and maintain the integrity of their data. Therefore relationships need to be created between tables, for example, to relate \u2018tracks\u2019 to \u2018albums\u2019 or \u2018albums\u2019 to \u2018artists.\u2019 In cases where records are multiple, users will rely on features to help them summarize or quantify those relationships.</p> <p>By introducing many-to-many relationships, users accustomed to the spreadsheet model will have to understand more advanced database concepts like junction tables, primary and foreign keys, etc. This increase in complexity will make user errors more likely, so the design needs to address how the features are introduced and how users learn those concepts. </p>"},{"location":"archive/product/design/specs/multiple-records-spec/#prototype","title":"Prototype","text":"<p>Prototype for Associating Multiple Records</p>"},{"location":"archive/product/design/specs/multiple-records-spec/#user-experience","title":"User Experience","text":""},{"location":"archive/product/design/specs/multiple-records-spec/#scenarios","title":"Scenarios","text":"<p>A user adds a \u2018related table\u2019 column that allows multiple records to be linked. From a table view, a new or existing column can be linked to a table. By default, the column will allow a single record to be linked unless the \u2018Allow Multiple\u2019 option is checked.  When the user checks the \u2018Allow Multiple\u2019 option, a text is displayed explaining the system will create an additional table to map related keys for both tables.</p>"},{"location":"archive/product/design/specs/multiple-records-spec/#a-user-edits-a-multiple-record-field-to-add-or-remove-records","title":"A user edits a multiple record field to add or remove records.","text":"<p>Users can edit a multiple records field to add or remove records from the records lookup menu. Records that are already selected will be marked as such, and the user can click again to deselect. The user can also remove a record reference by clicking on the \u2018X\u2019 icon when the field is active.</p>"},{"location":"archive/product/design/specs/multiple-records-spec/#a-user-learns-about-junction-or-join-tables-and-understands-why-they-must-be-created","title":"A user learns about junction or join tables and understands why they must be created.","text":"<p>When a user sets a field to \u2018Allow Multiple Records,\u2019 the system creates a table to map both sets of keys. This table looks like any other table. However, a naming convention is applied so that users can identify them.</p>"},{"location":"archive/product/design/specs/multiple-records-spec/#a-user-creates-a-view-from-a-table-that-contains-columns-with-multiple-records","title":"A user creates a view from a table that contains columns with multiple records.","text":"<p>When a view is added from a table that contains a column with multiple records, that same column is ported over to the view. The user can then add a column to summarize the records on that field.</p>"},{"location":"archive/product/design/specs/multiple-records-spec/#a-user-adds-a-summary-column-from-a-view","title":"A user adds a summary column from a view.","text":"<p>When rows have fields with multiple associated records, a user might want to summarize any related table\u2019s fields. In that case, they can choose a summary type from the column selection menu. The default setting is \u2018Values,\u2019 which will display a comma-separated list of the values. </p>"},{"location":"archive/product/design/specs/multiple-records-spec/#future-considerations","title":"Future Considerations","text":"<p>In the future, more summary options will be available, including formulas. Users will require further instructions or examples to apply them correctly. Filters will also enable the creation of columns that limit the summarized records based on set criteria. For example, a user might want to create a column only to summarize award-winning releases or tracks with featured artists. There are hints to these elements in this prototype, but they will be specced in a future milestone.</p>"},{"location":"archive/product/design/specs/navigation-consistency-updates/","title":"Navigation Consistency Updates","text":""},{"location":"archive/product/design/specs/navigation-consistency-updates/#overview","title":"Overview","text":"<p>The proposed Navigation Consistency Updates aim to enhance the user experience by providing a coherent navigation system within the Mathesar application.</p> <p>GitHub Issue</p>"},{"location":"archive/product/design/specs/navigation-consistency-updates/#user-experience","title":"User Experience","text":""},{"location":"archive/product/design/specs/navigation-consistency-updates/#default-state-logged-in-user","title":"Default State Logged In User","text":"<ul> <li>Mathesar Logo: Always visible; acts as home button.</li> </ul>"},{"location":"archive/product/design/specs/navigation-consistency-updates/#user-has-multiple-databases-database-connections-list-page","title":"User has multiple databases (database connections list page)","text":"<ul> <li>Database Connections Breadcrumb Button:</li> <li>On click, dropdown lists all database connections.</li> <li>An option to \u201cManage Connections\u201d is also available.</li> </ul>"},{"location":"archive/product/design/specs/navigation-consistency-updates/#user-has-one-database-database-connection-page","title":"User has one database (database connection page)","text":"<ul> <li>Database Name with Icon: Directs to database connection page.</li> <li>Schemas Breadcrumb Button: Opens a list of schemas in the database.</li> </ul>"},{"location":"archive/product/design/specs/navigation-consistency-updates/#from-the-schema-page","title":"From the Schema Page","text":"<ul> <li>Retain elements from the database connection page.</li> <li>Add Schema Name and Icon.</li> <li>Introduce Tables Breadcrumb Button:</li> <li>Lists tables and explorations in the schema when clicked.</li> <li>Add Links to Import Table and Data Explorer pages.</li> </ul>"},{"location":"archive/product/design/specs/navigation-consistency-updates/#from-the-table-page","title":"From the Table Page","text":"<ul> <li>Include Table Name and Icon.</li> <li>Add Records List Button: Opens a dropdown of table records.</li> </ul>"},{"location":"archive/product/design/specs/navigation-consistency-updates/#from-the-record-page","title":"From the Record Page","text":"<ul> <li>Append Record Name and Icon for context after the \u2018record list\u2019 button.</li> </ul>"},{"location":"archive/product/design/specs/navigation-consistency-updates/#from-the-exploration-page","title":"From the Exploration Page","text":"<ul> <li>Add Exploration Name and Icon.</li> <li>Exclude records list button since it is not relevant to exploration.</li> </ul> <p>For unsaved explorations:</p> <p></p> <ul> <li>The label should be Data Explorer with the exploration icon.</li> </ul> <p>For saved explorations:</p> <p></p> <ul> <li>The label should be Exploration Name with the exploration icon.</li> </ul> <p>For saved explorations in edit mode:</p> <p></p> <ul> <li>The label should be Exploration Name with the edit icon.</li> </ul>"},{"location":"archive/product/design/specs/navigation-consistency-updates/#from-the-import-page","title":"From the Import Page","text":"<ul> <li>Display Import Name and Icon after the schema breadcrumb button.</li> </ul>"},{"location":"archive/product/design/specs/navigation-consistency-updates/#from-the-administration-pages","title":"From the Administration Pages","text":"<ul> <li>No dropdown menus will be on the admin pages because they\u2019re at a higher level and don\u2019t need to help with data navigation. This keeps the menu behavior the same everywhere, which is less confusing for users.</li> <li>Icons in this section will adopt the primary color to distinguish it as a separate area.</li> </ul>"},{"location":"archive/product/design/specs/navigation-consistency-updates/#additional-ui-details","title":"Additional UI Details","text":""},{"location":"archive/product/design/specs/navigation-consistency-updates/#navigation-bar-with-scrollable-lists","title":"Navigation Bar with Scrollable Lists","text":"<p>The menu needs to be divided into sections: - Main navigation links (Import and Data Explorer) that remain constant. This area will be fixed. - Lists (Tables and Explorations) which can expand with numerous items. This part will have independent scrolling from the fixed area, ensuring that users don\u2019t lose sight of the main navigation links while scrolling through a long list.</p>"},{"location":"archive/product/design/specs/navigation-consistency-updates/#state-representation","title":"State Representation","text":""},{"location":"archive/product/design/specs/navigation-consistency-updates/#active-breadcrumb-step","title":"Active Breadcrumb Step","text":"<ul> <li>The active breadcrumb step needs to be highlighted to indicate that it is the current page. The text will be bolder and the in white color.</li> </ul>"},{"location":"archive/product/design/specs/navigation-updates/","title":"Navigation Updates","text":""},{"location":"archive/product/design/specs/navigation-updates/#context","title":"Context","text":"<p>Mathesar users must be able to navigate between pages and know where they are at any point while using the system.</p>"},{"location":"archive/product/design/specs/navigation-updates/#design-goals","title":"Design Goals","text":"<ul> <li>Users clearly understand which page they\u2019re on</li> <li>Users easily navigate to other pages</li> <li>Users may anticipate the result of navigation interactions</li> </ul>"},{"location":"archive/product/design/specs/navigation-updates/#hierarchical-structure","title":"Hierarchical Structure","text":"<p>The navigation design will be based on the following hierarchical structure:</p> <ul> <li>Database</li> <li>Schema<ul> <li>Table</li> <li>Record</li> <li>Query</li> </ul> </li> </ul>"},{"location":"archive/product/design/specs/navigation-updates/#phasing-out-tab-navigation","title":"Phasing Out Tab Navigation","text":"<p>Tabs will be phased out as part of the new navigation improvements.</p>"},{"location":"archive/product/design/specs/navigation-updates/#navigational-elements","title":"Navigational Elements","text":""},{"location":"archive/product/design/specs/navigation-updates/#url","title":"URL","text":"<p>The URL should be used to display the navigation structure to users. It should be as simple as possible and built so that a user\u2019s path to the desired page may be easily determined.</p>"},{"location":"archive/product/design/specs/navigation-updates/#top-navigation-bar","title":"Top Navigation Bar","text":"<p>Every page has a top-level global navigation bar. Users may add new items or jump to existing ones from the top navigation bar.</p>"},{"location":"archive/product/design/specs/navigation-updates/#jump-list-and-search","title":"Jump List and Search","text":"<ol> <li> <p>Input Control</p> <p>When the input control (A) is activated, a list of recently used tables or queries is displayed. As soon as the user starts typing, the list narrows down to only include items whose names are similar to the search terms.</p> <p>Any of the results should be accessible using keyboard directional arrows, and pressing enter should take the user to the selected object\u2019s page.</p> </li> <li> <p>Recent Items</p> <p>If we assume that users frequently access the same objects while doing their most routine tasks, then a list (B) of recently opened ones should help them work more quickly.</p> </li> <li> <p>View All Link</p> <p>\u201cView All\u201d (C) is a link to the schema\u2019s homepage that allows users to access the full list of tables or queries.</p> </li> <li> <p>Result Filters</p> <p>In some cases, the user just wants to look for a specific type object. When this is the case, users can use a filter to narrow down the results (D).</p> </li> <li> <p>Matching Results</p> <p>Users will be presented with the results of their search and a highlighted section (E) of text that corresponds to their search term.</p> </li> </ol>"},{"location":"archive/product/design/specs/navigation-updates/#breadcrumb","title":"Breadcrumb","text":"<p>The breadcrumbs are shown on all pages and indicate the current location in the context of the navigation path. For example, the user would see the current record, preceded by the table, schema, and database to which that record belongs while they\u2019re on a specific record page.</p> <p></p> <p>The breadcrumbs are shown on all pages and indicate the current location in the context of the navigation path. For example, the user would see the current record, preceded by the table, schema, and database to which that record belongs while they\u2019re on a specific record page.</p>"},{"location":"archive/product/design/specs/navigation-updates/#table-row-links","title":"Table Row Links","text":"<p>Users may use tables to go to a specific record page. Each row\u2019s primary key cell has a link to the record that the user may access by clicking on it.</p>"},{"location":"archive/product/design/specs/navigation-updates/#record-page","title":"Record Page","text":"<ol> <li> <p>Record Navigation</p> <p></p> <p>When on a record page, you may use the record navigation controls to move between records. Included are options for going through the records sequentially or jumping to a specific record.</p> </li> <li> <p>Linked Fields</p> <p></p> <p>When fields with foreign keys are shown on the record page, the links to the tables they relate to be clickable by the user.</p> </li> </ol>"},{"location":"archive/product/design/specs/navigation-updates/#data-explorer","title":"Data Explorer","text":"<p>Users may access Data Explorer from various locations and as part of the following flows:</p> <ol> <li> <p>Creating a query from scratch</p> <p>From the schema homepage or top navigation, the user will have the option to create a new object. If they create a query, the system will open the \u2018Data Explorer.\u2019 Once the user is satisfied with the created query, they can choose to leave the \u2018Data Explorer\u2019 and should be redirected to the new query. They may then return to the \u2018Data Explorer\u2019 to edit the query, as described in more detail below.</p> </li> <li> <p>Editing a query</p> <p>\u2018Edit Mode\u2019 may be activated from any active query to inspect the settings that generate a query in the \u2018Data Explorer.\u2019</p> </li> <li> <p>Opening a table as a query</p> <p>\u2018Data Explorer\u2019 can open any table in Mathesar. The \u2018Open in Data Explorer\u2019 menu option in the table settings will automatically build a query that contains all of the table columns.</p> <p>\u2018Data Explorer\u2019 should treat any current filters or sorts in the table as steps.</p> </li> <li> <p>Configuring an embedded query from the record page (Table Widget)</p> <p>\u2018Data Explorer\u2019 will open if users customize an embedded query from the record page. The user can return to the record page after the query has been set up.</p> </li> </ol>"},{"location":"archive/product/design/specs/navigation/","title":"Navigation Updates","text":""},{"location":"archive/product/design/specs/navigation/#context","title":"Context","text":"<p>Mathesar users must be able to navigate between pages and know where they are at any point while using the system.</p>"},{"location":"archive/product/design/specs/navigation/#design-goals","title":"Design Goals","text":"<ul> <li>Users clearly understand which page they\u2019re on</li> <li>Users easily navigate to other pages</li> <li>Users may anticipate the result of navigation interactions</li> </ul>"},{"location":"archive/product/design/specs/navigation/#navigation-structure-diagram","title":"Navigation structure diagram","text":"<p>The navigation design will be based on the following structure:</p> 1st Level 2nd Level 3rd Level 4th Level Database Page Schema Page Table Page Record Page Data Explorer Exploration Page Data Import <ul> <li>1st level: Database</li> <li>2nd level: Schema</li> <li>3rd level: Entities</li> <li>4th level: Record</li> </ul> <p>Navigation by Page</p>"},{"location":"archive/product/design/specs/navigation/#phasing-out-tab-navigation","title":"Phasing Out Tab Navigation","text":"<p>Tabs will be phased out as part of the new navigation improvements.</p>"},{"location":"archive/product/design/specs/navigation/#changing-queries-to-explorations","title":"Changing \u2018Queries\u2019 to \u2018Explorations\u2019","text":"<p>We\u2019ve decided to alter the name of \u201cQueries\u201d to \u201cExplorations\u201d based on team input. When used with \u201cData Explorer,\u201d the term \u201cquery\u201d becomes problematic. Also, because Mathesar queries are distinct from database queries, using the name \u201cquery\u201d for them may cause confusion.</p>"},{"location":"archive/product/design/specs/navigation/#navigation-methods","title":"Navigation Methods","text":"<p>Navigation within Mathesar will take place in three different ways:</p> <ul> <li>Through the site header</li> <li>Through links in pages</li> <li>Direct access through page URLs</li> </ul>"},{"location":"archive/product/design/specs/navigation/#navigation-via-site-header","title":"Navigation via site header","text":"<ul> <li>The database page is linked via the logo in the site top (We\u2019ll require CRUD UI for databases when we finally add support for many databases, and we may create some extra UI that stays within the header at that point).</li> <li>Next to the logo is a breadcrumb navigation.</li> <li>The breadcrumb navigation content will display the user\u2019s trail of pages visited as well as toggles to search inside each navigation level using page selectors.</li> <li>Upon reaching the record level, the top navigation will show a search records button, which will open the Record Selector component.</li> <li>The current page will be excluded from the breadcrumb trail.</li> <li>The current page label will be displayed in the toolbar component below the top header component.</li> <li>Each type of page will be identified by an icon (table, schema, record etc.)</li> </ul>"},{"location":"archive/product/design/specs/navigation/#note-on-excluding-the-current-page-from-the-breadcrumb-trail","title":"Note on Excluding the Current Page from the Breadcrumb Trail","text":"<p>We choose not to include the current page in the breadcrumb trail because the user can see it in the subheader area of the page. There aren\u2019t several ways to go to the same page in our link hierarchy, thus it\u2019s more like a <code>hierarchical navigation</code> than just a breadcrumb.</p>"},{"location":"archive/product/design/specs/navigation/#navigation-via-links-within-pages","title":"Navigation via links within pages","text":"<p>Throughout Mathesar, the following links exist within pages which allow for more targeted navigation to other pages (This list is not comprehensive and may include additional link options when further features are implemented).</p> <ul> <li>Database Page</li> <li> <p>Links to Schema Pages in a list of schemas.</p> </li> <li> <p>Schema Page</p> </li> <li>Links to Table Pages in a list of tables.</li> <li> <p>Links to Exploration Pages in a list of queries.</p> </li> <li> <p>Table Page</p> </li> <li>Within the table data:<ul> <li>Links to the Record Page for each row via the row\u2019s primary key cell value. Note: Links within cell values will only be clickable when the cell is selected. This UX should be consistent with the behavior of the \u201cURL\u201d UI Type.</li> <li>Links to Record Pages for related records via the FK cell values</li> </ul> </li> <li> <p>Links to the Table Page for related tables via a section within the Table Inspector.</p> </li> <li> <p>Data Explorer</p> </li> <li> <p>Features the same links as described by the \u201cWithin the table data\u201d bullet point on Table Page above.</p> </li> <li> <p>Record Page</p> </li> <li>Links to other Record Pages via FK fields on directly on the record.</li> <li>Links to other Record Pages via tabular displays of other records linking to this record via the same UI as the Table Page which has links in the PK cells.</li> </ul>"},{"location":"archive/product/design/specs/navigation/#navigation-via-page-url","title":"Navigation via page url","text":"<ul> <li>Home Page:</li> <li>Route: <code>/</code></li> <li> <p>Note: the Home Page route responds with an HTTP 302 redirect to the Database Page for the database configured when installing Mathesar. When we eventually add support multiple databases, we may wish to give this design more thought.</p> </li> <li> <p>Database Page:</p> </li> <li>Route: <code>/{database_name}/</code></li> <li>Favicon: Mathesar logo</li> <li> <p><code>&lt;title&gt;</code>: <code>{database_name} | Mathesar</code></p> </li> <li> <p>Schema Page:</p> </li> <li>Route: <code>/{database_name}/{schema_id}/</code></li> <li>Favicon: Schema</li> <li><code>&lt;title&gt;</code>: <code>{schema_name} | Mathesar</code></li> <li> <p>By default, redirects to \u201cSchema Page - Tables tab\u201d.</p> </li> <li> <p>Schema Page - Tables tab:</p> </li> <li>Route: <code>/{database_name}/{schema_id}/tables/</code></li> <li>Favicon: Schema</li> <li> <p><code>&lt;title&gt;</code>: <code>Tables in {schema_name} | Mathesar</code></p> </li> <li> <p>Schema Page - Explorations tab:</p> </li> <li>Route: <code>/{database_name}/{schema_id}/explorations/</code></li> <li>Favicon: Schema</li> <li> <p><code>&lt;title&gt;</code>: <code>Explorations in {schema_name} | Mathesar</code></p> </li> <li> <p>Data Import: Upload file/Specify data:</p> </li> <li>Route:  <code>/{database_name}/{schema_id}/import/</code></li> <li>Favicon: Mathesar logo</li> <li> <p><code>&lt;title&gt;</code>: <code>Import Data | {schema_name} | Mathesar</code></p> </li> <li> <p>Data Import: Preview table - Confirmation page:</p> </li> <li>Route:  <code>/{database_name}/{schema_id}/import/{table_id}/</code></li> <li>Favicon: Mathesar logo</li> <li> <p><code>&lt;title&gt;</code>: <code>Confirm {table_name} | {schema_name} | Mathesar</code></p> </li> <li> <p>Data Explorer - New Exploration:</p> </li> <li>Route: <code>`/{database_name}/{schema_id}/data-explorer/</code></li> <li>Favicon: Data Explorer</li> <li> <p><code>&lt;title&gt;</code>: <code>Data Explorer | {schema_name} | Mathesar</code></p> </li> <li> <p>Data Explorer - Open Exploration:</p> </li> <li>Route: <code>`/{database_name}/{schema_id}/explorations/{exploration_id}/</code></li> <li>Favicon: Data Explorer</li> <li> <p><code>&lt;title&gt;</code>: <code>{exploration_name} | {schema_name} | Mathesar</code></p> </li> <li> <p>Table Page:</p> </li> <li>Route:  <code>/{database_name}/{schema_id}/tables/{table_id}/</code></li> <li>Favicon: Table</li> <li> <p><code>&lt;title&gt;</code>: <code>{table_name} | {schema_name} | Mathesar</code></p> </li> <li> <p>Record Page:</p> </li> <li>Route: <code>/{database_name}/{schema_id}/tables/{table_id}/{record_id}</code></li> <li>Favicon: Record</li> <li><code>&lt;title&gt;</code>: <code>{record_summary} | {table_name} | {schema_name} | Mathesar</code></li> </ul>"},{"location":"archive/product/design/specs/navigation/#components","title":"Components","text":""},{"location":"archive/product/design/specs/navigation/#page-selector","title":"Page Selector","text":"<p>Pages within a group can be accessed through the top navigation\u2019s page selector component.</p> <ul> <li>Users can click on a expand icon next to each of the breadcrumb level\u2019s items.</li> <li>If the current page is a schema homepage, the user expands the database level item to see a list of all the database schemas.</li> <li>If the user\u2019s current page contains a table, the schema level item will expand to show all tables inside that schema.</li> <li>From the page selector a user can scroll through all the listed items.</li> <li>A search input is provided so that users can match the desired item by name.</li> <li>Highlight will be used to indicate the text portion that was matched.</li> <li>Focus the input on opening, allowing the user to begin typing immediately.</li> <li>Allow keyboard navigation to select an item using Up/Down/Enter keys.</li> </ul> <p>Schema Selector Wireframe</p> <p>Entities Selector Wireframe</p>"},{"location":"archive/product/design/specs/new-db-connection-form/","title":"\u201cNew Database Connection\u201d Form Design Specs","text":""},{"location":"archive/product/design/specs/new-db-connection-form/#overview","title":"Overview","text":"<p>Mathesar stores two kinds of \u201cdatabase connections\u201d</p> <ul> <li> <p>One and only one \u201cinternal database connection string\u201d</p> <p>This is read from environment variables and allows Mathesar to connect to its internal database, either PostgreSQL or SQLite. Mathesar does not allow users to edit these connection details through the UI.</p> </li> <li> <p>Zero or more \u201cuser database connection objects\u201d</p> <p>These are metadata objects which each allow Mathesar connect to a user database. They are stored in Mathesar\u2019s internal database and each contain:</p> <ul> <li>an unique auto-incremented id</li> <li>host name, e.g. <code>localhost</code> or <code>example.com</code></li> <li>port, e.g. <code>5432</code></li> <li>user name</li> <li>password (AES encrypted via Mathesar\u2019s Django secret key)</li> <li>database name</li> <li>a unique connection \u201cnickname\u201d (used for abbreviated display in the UI)</li> </ul> </li> </ul> <p>The \u201cNew Database Connection\u201d form allows the user to</p> <ul> <li>Create a new user database connection object</li> <li>Optionally, create a new database (within Postgres) for the connection</li> <li>Optionally, create a new postgres user for the connection</li> </ul> <p>This form is especially relevant during installation because the person installing Mathesar must complete this form in order to create and connect to the first user database.</p>"},{"location":"archive/product/design/specs/new-db-connection-form/#scope-of-these-specs","title":"Scope of these specs","text":"<p>This spec only concerns itself with the UI within the \u201cNew Database Connection\u201d form. It does not concern itself with the manner in which the user arrives at that form or where they go next. The form might open in a modal, or in a new page, or inline within a page listing connections \u2014 we\u2019re not sure yet.</p> <p>The form to edit existing DB connections is much more straightforward and thus is not covered here.</p>"},{"location":"archive/product/design/specs/new-db-connection-form/#terminology","title":"Terminology","text":"<p>With this spec\u2026</p> <ul> <li> <p>\u201cCredentials\u201d (or one \u201cset of credentials\u201d) refers to a tuple containing the host, port, user, and password.</p> <p>I call attention to this term because it\u2019s important in these specs, but not necessarily widely considered to mean exactly those four things together. (I\u2019m open to suggestions for better terms!)</p> </li> </ul>"},{"location":"archive/product/design/specs/new-db-connection-form/#case-a-the-form-at-its-simplest","title":"(Case A) The form at its simplest","text":"<p>This is the simplest (and hopefully most common) incarnation of this form. As an example, the user should (somehow) arrive at this form after installing Mathesar using the Docker installation method.</p> <p></p> <p>Notes:</p> <ul> <li> <p>The \u201cKnown connection\u201d input contains options for all user database connections, plus the one internal database connection (if using Postgres for the internal database). The list of options should contain distinct host/port/user/database tuples so as to avoid presenting visually indistinguishable options to the user.</p> <p>Implementation notes:</p> <p>Mathesar\u2019s metadata currently stores connections flatly, such that, if two connections use the same host/port/user/password to connect to two different databases, those connection credentials are duplicated across the connection records. Likewise, credentials may occur in duplicate across the environment variables and the internal database. This data model complicates the process of generating a form which contains distinct options for \u201cKnown connection\u201d. This process is to be improvised during implementation, either by improving the data model or by employing de-duplication logic somewhere in the stack. Such de-duplication logic would present some strange edge cases. For example, consider two connections to the with the same host/port/user/database but with different stored passwords. One connection succeeds, while the other fails. For the sake of this form, we need to present only one of these options to the user, but we don\u2019t know which one. If we stick with the data model we have, then we should de-duplicate by preferring the environment variables connection over any user db connections and by preferring user db connections with higher <code>id</code> values.</p> </li> <li> <p>The credentials info is pre-filled according to the following logic:</p> <ul> <li> <p>If Postgres is used for the internal DB, then:</p> <ul> <li>\u201cCredentials source\u201d = \u201cReuse credentials\u2026\u201d</li> <li>\u201cKnown connection\u201d = the credentials for the internal DB, from environment variables</li> </ul> </li> <li> <p>Else, (SQLite is used for the internal DB) then:</p> <ul> <li> <p>If at least one connection exists to a user database, then:</p> <ul> <li>\u201cCredentials source\u201d = \u201cReuse credentials\u2026\u201d</li> <li>\u201cKnown connection\u201d = the credentials from the user database with the highest <code>id</code></li> </ul> </li> <li> <p>Else, (no user database connections exist), then:</p> <p>The \u201cCredentials source\u201d question will be omitted from the form, and the remaining questions will generated as if the user had selected \u201cEnter new connection credentials\u201d (as shown below).</p> </li> </ul> </li> </ul> </li> <li> <p>Within the options for the \u201cKnown connection\u201d input, we display the database name, e.g. \u201cmathesar_django\u201d. This choice was somewhat contentious during spec development, so I\u2019ve documented our decision process here:</p> <p>Arguments in favor of hiding the database name:</p> <ul> <li>The UI is simpler, less cluttered, and potentially less confusing for some users.</li> <li>From the known connection, we\u2019re only copying the username, password, host, and port. Since we don\u2019t copy the database name, it should, in theory, be irrelevant. Even in the case where we need to create a new database, the specific database to which we connect should not matter, so long as we can connect to it.</li> <li>Hiding the database name produces a dropdown with fewer options because the options are deduplicated without consideration of the database name. This may make the dropdown easier to user in some cases.</li> </ul> <p>Arguments in favor of showing the database name:</p> <ul> <li>DBAs are accustomed to seeing connection strings that include database names, so DBAs may be confused when seeing text that looks similar to a connection string but missing the database name.</li> <li>In Case C, the database name actually becomes relevant. In this case we\u2019re not copying anything from the connection \u2014 we\u2019re using the connection, in its entirety, to do something. We need to create a user (and potentially create a database too). It\u2019s possible that an existing PostgreSQL user will have permission to create new users when connecting to one database while not having permission to create new users when connecting to another database. For this reason, there may be cases where the person filling out this form needs to see the database name in order to choose the connection with appropriate permissions.</li> <li>Although the argument above does not apply to Case A, there is an argument for using the same UI in cases A and C in order to reduce complexity of the front end code and reduce implementation time.</li> </ul> <p>Sean wanted to hide the database name and Brent wanted to show it. After debating it at length we, got to a point where neither of us cared too strongly. In the end, Sean decided to show the database name for the sake of implementation simplicity.</p> <p>We can revisit this decision later if needed. It shouldn\u2019t be too difficult to change.</p> </li> <li> <p><code>mathesar</code> is pre-filled as a suggested database name only if no user database connections exist. If at least one connection exists to a user database, then the input is empty.</p> </li> <li> <p>Under the \u201cCreate this database\u2026\u201d checkbox field, the help text includes a postgres user name in quotes. That user name is dynamic so as to match the user name of the chosen connection.</p> </li> <li> <p>The \u201cConnection nickname\u201d field auto-updates as the user enters the database name, but the user can modify the \u201cConnection nickname\u201d value independently of \u201cDatabase name\u201d. (This behavior of auto-generating a nickname is the reason for putting the field last.) </p> </li> </ul>"},{"location":"archive/product/design/specs/new-db-connection-form/#case-b-manually-entering-new-connection-credentials","title":"(Case B) Manually entering new connection credentials","text":"<p>If, on the form depicted above, you change \u201cCredentials source\u201d to \u201cEnter new\u2026\u201d, then the \u201cKnown connection\u201d field will be replaced by the fields shown below:</p> <p></p> <p>Notes:</p> <ul> <li>In case B, we do not support creating the database, so that checkbox field is replaced with a help message informing the user that the database must already exist. The reason for this restriction is that we need a valid connection to an existing database in order to first create one. In theory, we could ask the user to supply such a connection (perhaps by selecting that connection from a dropdown selector as in cases A and C), but Sean and Brent deemed that approach to add too much additional complexity to the form to justify its inclusion. We predict that if someone already has a PostgreSQL user, they are likely to already have a PostgreSQL database too.</li> <li><code>localhost</code> is pre-filled as a default Host name value</li> <li><code>5432</code> is pre-filled as a default Port value</li> </ul>"},{"location":"archive/product/design/specs/new-db-connection-form/#case-c-creating-a-new-postgres-user","title":"(Case C) Creating a new Postgres user","text":"<p>If, on the form depicted above, you change \u201cUser type\u201d to \u201cCreate a new\u2026\u201d, then the \u201cUser name\u201d and Password fields will be replaced by the fields shown below:</p> <p></p> <p>Notes:</p> <ul> <li> <p>As the form above demonstrates, we need an existing set of credentials in order to connect to the PostgreSQL server and \u201cbootstrap\u201d the new user. If no such credentials exist for the host and port as the user entered it above, then the \u201cUser type\u201d field will be omitted from the form and the form will be rendered with the \u201cUse an existing PostgreSQL user\u201d logic.</p> </li> <li> <p>The \u201cCreate user via\u201d input uses sorting and pre-filling logic similar to the \u201cKnown connection\u201d field as described above. Additionally, its options are filtered to only show credentials matching the host name and port that the user entered above.</p> </li> </ul>"},{"location":"archive/product/design/specs/new-db-connection-form/#required-fields","title":"Required fields","text":"<ul> <li>All fields are required. If we want to make some fields optional in the future in order to support pgpass connection parameters, then we\u2019ll consider ways in which to make this optional behavior clear to users at the UX level.</li> </ul>"},{"location":"archive/product/design/specs/new-db-connection-form/#error-behavior","title":"Error behavior","text":"<ul> <li>In general, we would like to err on the side of saving connections, even when connecting to them is not possible. The specific error behavior and flow is to be improvised during development, as dependent on the precise error behavior of the API design.</li> </ul>"},{"location":"archive/product/design/specs/non-mathesar-data-types/","title":"Non-Mathesar Data Types","text":""},{"location":"archive/product/design/specs/non-mathesar-data-types/#context","title":"Context","text":"<p>Non-Mathesar types are database types that don\u2019t have any special functionality within Mathesar. This could be because that functionality is not implemented, yet it\u2019s a standard Postgres type (Other), or because it\u2019s a custom data type and not included in standard Postgres data types (Custom).</p>"},{"location":"archive/product/design/specs/non-mathesar-data-types/#limited-functionality","title":"Limited Functionality","text":"<p>\u2018Non-Mathesar\u2019 data type can be edited or added, but there are no particular data input or display features. </p>"},{"location":"archive/product/design/specs/non-mathesar-data-types/#prototype","title":"Prototype","text":"<p>Non-Mathesar Data Type Prototype</p>"},{"location":"archive/product/design/specs/non-mathesar-data-types/#user-experience","title":"User Experience","text":""},{"location":"archive/product/design/specs/non-mathesar-data-types/#scenarios","title":"Scenarios","text":""},{"location":"archive/product/design/specs/non-mathesar-data-types/#user-sets-a-column-to-non-mathesar-data-type","title":"User sets a column to \u2018Non-Mathesar\u2019 data type","text":"<p>Users cannot set \u2018Non-Mathesar\u2019 data types. Mathesar can only add these by connecting to an existing database.</p>"},{"location":"archive/product/design/specs/non-mathesar-data-types/#user-enters-a-new-non-mathesar-data-type-value","title":"User enters a new \u2018Non-Mathesar\u2019 data type value","text":"<p>Users can edit the existing values of a \u2018Non-Mathesar\u2019 data type column as they would with text string types.</p>"},{"location":"archive/product/design/specs/non-mathesar-data-types/#user-filters-a-non-mathesar-data-type-column","title":"User filters a \u2018Non-Mathesar\u2019 data type column","text":"<p>Users can filter the existing values of a \u2018Non-Mathesar\u2019 data type column as they would with text string types.</p>"},{"location":"archive/product/design/specs/non-mathesar-data-types/#user-groups-a-non-mathesar-data-type-column","title":"User groups a \u2018Non-Mathesar\u2019 data type column","text":"<p>Users can group the existing values of a \u2018Non-Mathesar\u2019 data type column as they would with text string types.</p>"},{"location":"archive/product/design/specs/non-mathesar-data-types/#review-notes","title":"Review Notes","text":""},{"location":"archive/product/design/specs/non-mathesar-data-types/#adjust-size-of-cells-based-on-content-length","title":"Adjust size of cells based on content length","text":"<p>As part of the implementation of data types, we need to consider how the table will display content such as a JSON document or other longer content formats.</p>"},{"location":"archive/product/design/specs/number-data-type/","title":"Number Data Type","text":""},{"location":"archive/product/design/specs/number-data-type/#context","title":"Context","text":"<p>Number data types allow users to add numeric values in different formats. </p>"},{"location":"archive/product/design/specs/number-data-type/#prototype","title":"Prototype","text":"<p>Warning</p> <p>This prototype might be outdated due to global component updates. Please refer to the link under \u2018Setting Options\u2019 for an updated version of the shared components.</p> <p>Number Data Type Figma Prototype</p>"},{"location":"archive/product/design/specs/number-data-type/#user-experience","title":"User Experience","text":""},{"location":"archive/product/design/specs/number-data-type/#scenarios","title":"Scenarios","text":""},{"location":"archive/product/design/specs/number-data-type/#user-sets-number-data-type-options","title":"User sets number data type options","text":"<p>A user can access the data type configuration of a field through the column menu. Depending on which data type is selected, the content of the configuration panel will change.</p>"},{"location":"archive/product/design/specs/number-data-type/#setting-options","title":"Setting Options","text":"<p>The following is an interactive representation of the various options that users can set for this type: Number Type Options</p>"},{"location":"archive/product/design/specs/number-data-type/#user-sets-different-data-type-formats","title":"User sets different data type formats","text":"<p>When setting a number type, a user can pick from different formats, including decimals, floats, integers.</p>"},{"location":"archive/product/design/specs/number-data-type/#user-filters-the-values-of-a-number-data-type-column","title":"User filters the values of a number data type column","text":"<p>A user can filter the values of a number data type column. The filtering options will vary depending on the type selected. </p>"},{"location":"archive/product/design/specs/number-data-type/#user-groups-records-according-to-numeric-values-of-a-column","title":"User groups records according to numeric values of a column","text":"<p>A user can create groups based on the numeric values of a column. The User can choose to group by unique values or automatic ranges. Range options can be set so that groups are created by size or number of groups.</p>"},{"location":"archive/product/design/specs/number-data-type/#user-defines-range-manually","title":"User defines range manually","text":"<p>A user can set a min and max value for a range and the increment size</p>"},{"location":"archive/product/design/specs/number-data-type/#user-defines-ranges-automatically","title":"User defines ranges automatically","text":"<p>A user can set the number of groups or the size for each group. If the parameter for the number of groups is set to 2, the range will be divided into two equal groups. If the group size parameter is set to 5, the values will be divided into ranges with an equal number of unique values. In this case, 5, not all groups will have the same number of equal values, as the total might not be divided into equal parts.</p> <p>Examples of Grouping by Range Options</p>"},{"location":"archive/product/design/specs/number-data-type/#review-notes","title":"Review Notes","text":""},{"location":"archive/product/design/specs/number-data-type/#friendly-and-database-type-display","title":"\u2018Friendly\u2019 and \u2018Database\u2019 type display","text":"<p>We want to make sure users of all levels can understand and use the appropriate data types. Because the distinction between database types is sometimes not evident to beginner levels, we want to map them to more familiar categorizations. The design ensures that information will be available but prioritizes the user-friendly types in terms of visibility.</p>"},{"location":"archive/product/design/specs/number-data-type/#number-type-alignment","title":"Number type alignment","text":"<p>Number types should be aligned to the right for easier reading of numbers with decimals.</p>"},{"location":"archive/product/design/specs/pagination/","title":"Pagination Specs","text":""},{"location":"archive/product/design/specs/pagination/#context","title":"Context","text":"<p>The team identified the need for a pagination component during the review of the design specs for Read-Only Tables. The team decided to add pagination to read-only tables during the May 19th team meeting. The team chose pagination against the original requirement of having infinite scrolling to prevent issues with real-time data causing data duplication.</p>"},{"location":"archive/product/design/specs/pagination/#pagination-component-details","title":"Pagination Component Details","text":"<p>The pagination component contains the controls for navigating across the parts (pages) of records from a table that the UI can\u2019t fully display. It usually sits at the bottom of a table.</p> <p>The pagination component is always visible, even if the table does not reach the number of records required to be split into parts.</p>"},{"location":"archive/product/design/specs/pagination/#controls","title":"Controls","text":"<p>The pagination component controls are:</p> <ul> <li>Records per page selector</li> <li>Link to first and last pages<ul> <li>Helpful when applying filters or sorting criteria (i.e., What is the oldest/newest item?)</li> </ul> </li> <li>Navigation arrows for next and previous pages</li> <li>Page range and total records indicator</li> <li>Logarithmic Page Navigation</li> </ul>"},{"location":"archive/product/design/specs/pagination/#scrolling-area","title":"Scrolling Area","text":"<p>The scrolling settings of the table should allow the pagination component to be fixed at the bottom.</p> <p> In this figure, the two red horizontal lines delineate the scrolling area.</p>"},{"location":"archive/product/design/specs/pagination/#page-size","title":"Page Size","text":"<p>The ideal number of records per page will depend on the desired user experience. For real-time data, the minimum may be several thousand. For most tables, pagination won\u2019t be required as most data will fit on a single page.</p>"},{"location":"archive/product/design/specs/pagination/#questions","title":"Questions","text":"<p>What are reasonable max and minimum page sizes?</p>"},{"location":"archive/product/design/specs/pagination/#ux-considerations","title":"UX Considerations","text":""},{"location":"archive/product/design/specs/pagination/#offset-based-pagination-vs-cursor-based","title":"Offset-Based Pagination vs. Cursor-Based","text":"<p>Based on discussion with the team, the first version of the read-only table will use offset-based pagination. This is the preferred choice as it is already implemented and does not prevent the roadmap from being built and allow other methods to be used later.</p> <p>Some of the following points were discussed and shall be reconsidered later when we have more evidence of limitations imposed by our current pagination method:</p> <ul> <li>Offset-based allows users to jump into any arbitrary page instead of forcing them to scroll through the entire content.</li> <li>Offset-based is unreliable when the list of items frequently changes, causing problems when records are added or deleted.</li> <li>Cursor-based pagination is not affected by the addition or removal of items.</li> <li>Cursor-based pagination requires users to traverse through the entire result set page by page.</li> </ul> <p>Information</p> <p>Please see \u201cPagination options\u201d on GitHub Discussions for more detail.</p>"},{"location":"archive/product/design/specs/read-only-table/","title":"Read Only Table Spec","text":"<p>Information</p> <p>See the related Figma prototype</p>"},{"location":"archive/product/design/specs/read-only-table/#user-experience","title":"User Experience","text":""},{"location":"archive/product/design/specs/read-only-table/#impact","title":"Impact","text":"<p>Read-only tables the first step towards having an interactive table component. Tables, in general, will help Mathesar users to make sense of their database records, as they will be able to inspect them and manipulate them without the need to perform complicated queries.</p> <p>Tables are also used to represent data in other views, such as import of data from files. </p>"},{"location":"archive/product/design/specs/read-only-table/#interactions","title":"Interactions","text":""},{"location":"archive/product/design/specs/read-only-table/#browsing-multiple-tables","title":"Browsing multiple tables","text":"<p>Not covered yet</p>"},{"location":"archive/product/design/specs/read-only-table/#overflowing-content","title":"Overflowing content","text":"<p>When tables exceed the number of rows that can fit in the viewport, the user will have to scroll in order to reveal the hidden content. Scrolling is preferred over other methods of showing partial content, such as pagination. because it\u2019s less disruptive and also because some of the spreadsheet-like interactions only work if the user is able to perform actions on rows that might not be simultaneously visible.</p>"},{"location":"archive/product/design/specs/read-only-table/#user-interface","title":"User Interface","text":""},{"location":"archive/product/design/specs/read-only-table/#components","title":"Components","text":""},{"location":"archive/product/design/specs/read-only-table/#table","title":"Table","text":"<p>The table component uses columns and rows to display data in a grid.</p>"},{"location":"archive/product/design/specs/read-only-table/#read-only-variation","title":"Read-Only Variation","text":"<p>A read-only table only serves to display data but has no other interactions. Users can read or select the data that is displayed in the table rows but they can\u2019t modify or delete data.</p> <p>Other uses:</p> <ul> <li>For data preview during import</li> <li>For a tble with no permission to edit</li> </ul>"},{"location":"archive/product/design/specs/read-only-table/#states","title":"States","text":"<p>Not covered yet</p>"},{"location":"archive/product/design/specs/read-only-table/#behavior","title":"Behavior","text":"<p>Not covered yet</p>"},{"location":"archive/product/design/specs/read-only-table/#tabs","title":"Tabs","text":"<p>The tabs component allows navigation between related groups of content. The tabs can represent table or view content types in their open state.</p> <p>Tabs allow only one instance of a table to be open at the same time. If the user navigates to a table that is already open, the corresponding tab will be activated.</p> <p>To consider:</p> <ul> <li>AWS Athena and how they handle multiple instances of a table.</li> <li>Working on views without saving them so that user can discard them easily.</li> </ul>"},{"location":"archive/product/design/specs/read-only-table/#states_1","title":"States","text":"<p>When the content of a table or view is visible, the corresponding tab will have an active state. Based on the type of content represented by the tab, there will be a different icon displayed next to the content name label.</p>"},{"location":"archive/product/design/specs/read-only-table/#behavior_1","title":"Behavior","text":"<ul> <li>It is possible to have multiple tabs open at the same time, however there can only be one active tab.</li> <li>Tabs should take into account width settings that avoid sub-optimal target sizes that could impact usability. See the example below for \u2018New Tab\u2019. Additionally consider how longer names are truncated.</li> </ul> <ul> <li>A control to close tabs should be available on each tab.  </li> </ul> <p>Notes:</p> <ul> <li>In future iteration maybe tabs can be reordered by drag-and-drop interaction. </li> </ul>"},{"location":"archive/product/design/specs/read-only-table/#sidebar-navigation","title":"Sidebar Navigation","text":"<p>The sidebar navigation component allows navigation between different content groups displayed in the sidebar. Unlike the tabs component, the elements cannot be reordered or closed.</p>"},{"location":"archive/product/design/specs/read-only-table/#states_2","title":"States","text":"<p>The sidebar navigation contains various navigation levels in a text-based hierarchical form which can be expanded or collapsed.</p> <p>The navigation controls to collapse or expand contain arrow icons as indicators of their state. When collapsed, the nested groups are hidden. Expanding shows the subsequent level content group. A level might contain only controls and no content, in that case an additional interaction is required to get to the next level of content.</p> <p>All items, including the group headers, change style on mouse over. The trigger area should expand until it fills the available horizontal space for optimal target area</p> <p>For content that exceeds the available space, labels should be truncated and a tooltip available to view full details.</p> <p></p>"},{"location":"archive/product/design/specs/read-only-table/#behavior_2","title":"Behavior","text":"<p>On launch, and if no content is active, the sidebar navigation is displayed with all the levels collapsed. The main content area is also empty with no tables opened. An empty state is displayed when no tables are open.</p> <p></p> <p>On reload, the navigation level states should persist.</p> <p>What is expanded or collapsed should also persist if a higher level state changes. </p> <p>Questions:</p> <ul> <li>Can a schema contain no tables?</li> <li>What\u2019s the sorting criteria for the sidebar navigation groups?</li> </ul> <p>Future Idea:</p> <ul> <li>Additional list group to show recently updated tables</li> </ul>"},{"location":"archive/product/design/specs/read-only-table/#views","title":"Views","text":""},{"location":"archive/product/design/specs/read-only-table/#data-browser-table-view","title":"Data Browser / Table View","text":"<p>The data browser or table view is where most of Mathesar\u2019s functionality is accessed and used. The sidebar at the left allows users to navigate to tables and views. The right area is where content is displayed, in this case the content of tables and views.</p>"},{"location":"archive/product/design/specs/read-only-table/#panel-based-content-area","title":"Panel-based Content Area","text":"<p>The content area will contain most of the interactive elements that make the core user experience of Mathesar. In some cases, it will require additional functionality to be present as the user works through different tasks. In other cases, the content area may have enhanced functionalities that are not visible to the user while they are working through a task but can be displayed according to certain interactions, such as a record form, or other widgets.  For this reason, we want the main content to support a multi-panel layer, making it easy to mix different widgets within the same area. This will also help to make Mathesar more extensible in the future, as new functionality can be added without breaking the existing layout.</p>"},{"location":"archive/product/design/specs/read-only-table/#sidebar-area","title":"Sidebar Area","text":"<p>The sidebar area will contain the main navigational controls for Mathesar. This area will also contain some account and user information, as well as options for account-related actions, such as logout. Unlike the main content area, the sidebar area doesn\u2019t include any widgets or functionality related to data manipulation.  However, it will be possible to delete, rename, and create schemas and tables from the sidebar, as well as searching the content of these objects.</p>"},{"location":"archive/product/design/specs/record-page/","title":"Record Page Design","text":""},{"location":"archive/product/design/specs/record-page/#design-goals","title":"Design Goals","text":"<p>Allow the user to perform focused operations on one record at a time, as well as other records linking to it.</p>"},{"location":"archive/product/design/specs/record-page/#terminology","title":"Terminology","text":"<p>Within this spec\u2026</p> <ul> <li>\u201cthis record\u201d refers to the record being displayed on the page</li> <li>\u201cthis table\u201d refers to the table containing this record</li> </ul>"},{"location":"archive/product/design/specs/record-page/#parts-of-the-page","title":"Parts of the page","text":"<ul> <li>The page contains the following parts, all of which are described in greater detail below<ul> <li>Title</li> <li>Direct fields</li> <li>Widgets</li> </ul> </li> <li>The layout of these parts within the page (and of the content within each part) is subject to improvisation during implementation. Because continued adjustment of layout design is relatively low-cost, we are currently prioritizing the implementation of basic functionality over the perfection of aesthetics within this feature.</li> </ul>"},{"location":"archive/product/design/specs/record-page/#title","title":"Title","text":"<ul> <li>One line in large font size. It contains:<ul> <li>A \u201crecord\u201d icon. (E.g. something like this)</li> <li>The Record Summary string</li> <li>A dropdown icon that opens a menu to perform the following actions on the record:<ul> <li>Delete</li> <li>Potentially other actions in the future, such as \u201cAdd field\u201d, \u201cDuplicate\u201d, etc.</li> </ul> </li> </ul> </li> </ul>"},{"location":"archive/product/design/specs/record-page/#direct-fields","title":"Direct Fields","text":"<ul> <li>This is a section of the page which comes after the title.</li> <li>It contains a form-like area which has many labeled input fields. One field exists for each column in this table.</li> <li>The fields are presented in the same order that they occur in the Table Page.</li> <li>Field labels display the column name along with the icon used within the column header on the Table Page.</li> <li>Edits to the field values are saved on blur, with a similar UX to editing cell values in a table. There is no save button.</li> <li>Similar to the Table Page, a persistent but subtle status message appears at the top of all the fields which reads \u201cSaving\u201d or \u201cAll changes saved\u201d when appropriate.</li> <li>FK fields display the record summary for the linked record and allow the user to navigate to its Record Page.</li> <li>The layout of fields and their associated labels can be improvised during development (and adjusted during future design iterations).</li> </ul>"},{"location":"archive/product/design/specs/record-page/#widgets","title":"Widgets","text":"<p>One \u201cwidget\u201d allows the user to see (and potentially modify) other data in the same schema from the context of this record.</p> <p>Example: On a Patrons record, we use a widget to see the Checkouts records associated with the patron.</p> <p>Note: The name \u201cwidget\u201d may be a bit awkward, we\u2019re open to replacements. A widget is kind of like a query or a view \u2013 but \u201cquery\u201d and \u201cview\u201d already mean very specific things and a widget may not necessarily be either a Mathesar query or a Postgres view. Also, although these specs describe a limited set of initial functionality, we expect widgets to gradually evolve into a flexible and powerful feature (more details at the end of these specs), so we\u2019ve coined a unique (and somewhat generic) name for it.</p>"},{"location":"archive/product/design/specs/record-page/#basic-widget-specs-for-alpha-release","title":"Basic widget specs for alpha release","text":"<ul> <li> <p>One widget appears on the Record Page for each foreign key which references this table.</p> </li> <li> <p>Each widget has a title like:</p> <p>Related <code>Checkouts</code> Records</p> <p>If this table is referenced by multiple FKs from the same (other) table, or this table is referenced by an FK within this table itself, then the widget title will be:</p> <p>Related <code>Checkouts</code> Records (via <code>Patron Id</code>)</p> </li> <li> <p>Each widget displays the related records in a sheet UI similar to the sheet within the Table Page.</p> <p>Commonalities between the widget and the Table Page:</p> <ul> <li>Cell display, selection, and editing</li> <li>Filtering/sorting/grouping (though any modifications herein will be ephemeral)</li> </ul> <p>Differences between the widget and the Table Page:</p> <ul> <li>Actions which modify the table (e.g. \u201cRename\u201d, \u201cDelete\u201d, \u201cConstraints\u201d, \u201cLink\u201d) are not available within the widget.</li> <li>Actions which modify columns are not available within the widget.</li> <li>The Table Inspector is not available within the widget.</li> <li>The column containing the FK to this table is hidden in the widget. Within this column, any newly-added records will automatically receive a value equal to the PK of this record (ensuring that newly-added records properly linked to this record).</li> <li>In the widget, the filter criteria has a filter automatically applied which filters the records to display only those related to this record. The user cannot remove this filter condition. The user is free to add other filter conditions, but those conditions will not persist after navigating away from this Record Page.</li> </ul> </li> <li> <p>Each widget contains a \u201cView All\u201d link to the right of the title. This link navigates to the Table Page for the widget table pre-filtered to show only the records related to this record. Any ephemeral filter conditions applied to the widget by the user will also be applied within the link to that Table Page.</p> </li> <li> <p>The sheet has pagination controls at the bottom. To prevent nested vertical scrolling, the pagination-page-size is a scant <code>10</code>! The user can increase it within the pagination UI if needed, but their new setting will not persist. The widget will grow taller to accommodate a larger pagination-page-size, but its <code>max-height</code> is <code>0.9vh</code> (or similar) to prevent it from being taller than the viewport. This means that nested vertical scrolling will occur if the user sets a large pagination-page-size or has an uncommonly short viewport.</p> <p>The small pagination-page-size admittedly limits the utility of the widget \u2013 but does so for the sake of improving usability of the Record Page as a whole. If the user wants to see the \u201cfull\u201d results from the widget, they can click the \u201cView All\u201d link (even choosing to open that link in a new browser tab if they like).</p> </li> <li> <p>The order of widgets within the Record Page is not defined and also not configurable.</p> </li> </ul>"},{"location":"archive/product/design/specs/record-page/#longer-term-goals-for-widgets-post-alpha","title":"Longer-term goals for widgets, post-alpha","text":"<p>(This section is subject to further design review and task prioritization, but is presented to justify gaps in functionality of the above specs.)</p> <ul> <li> <p>There are two types of widgets:</p> <ul> <li> <p>Table widgets (which are described above, to be implemented first)</p> </li> <li> <p>Query widgets (which are more complex and will hopefully be implemented later)</p> <p>Some example use-cases for query widgets are:</p> <ul> <li>Show a patron\u2019s currently-checked out books</li> <li>Show all publications of an author, along with the number of items that the library has for that publication.</li> </ul> </li> </ul> </li> <li> <p>The title is stylized differently for the two types of widgets (perhaps via a lock icon or similar) allowing the user to distinguish them.</p> </li> <li> <p>Above all widgets, an \u201cAdd Query\u201d (or maybe \u201cAdd Widget\u201d?) button exists to add a new query widget.</p> <p>The button is a link (can be opened in a new tab) to create a new query within the Data Explorer. The link contains URL parameters which specify the id of this table and the id of this record. The Data Explorer then allow the user to build a query from scratch, but the choice of base table is limited only to tables which contain FKs to this table.</p> <p>While building the query, the Data Explorer displays the Record Summary of the original record (where the user was before building the query). The user can click on that Record Summary to navigate back to that Record Page. The results of the query the user is building are filtered to show only the items related to that record. That filtering operation is not defined within the query the user is building, but rather performed as part of the <code>filter</code> params when fetching the results of the query. The UI which displays the specific Record Summary also allows the user to change the record (using the Record Selector) \u2013 merely for the purpose of previewing their query from the perspective of a different record while building it.</p> <p>We will need to clarify what happens when the user saves the query. Is the query visible within the top level of the schema? Or is it hidden? Perhaps this is configurable.</p> </li> <li> <p>Each query widget provides the following options:</p> <ul> <li>\u201cRename\u201d</li> <li>\u201cEdit\u201d</li> <li>\u201cDelete\u201d</li> </ul> </li> <li> <p>Each table widget provides the following options:</p> <ul> <li>\u201cHide\u201d</li> <li>\u201cEdit a copy of this query\u201d \u2013 This is a link similar to the \u201cAdd Query\u201d button which directs the user to the Data Explorer, but it also passes the id of the foreign key used in the table widget. The Data Explorer then builds a query to match the behavior of the table widget and allows the user to save it as a new query. The table widget will remain unmodified and visible, leaving the user with two very similar widgets. At this point the user can choose to distinguish between the two by either hiding the table widget or renaming the query widget.</li> </ul> </li> <li> <p>Above all widgets, a \u201cShow Hidden Queries\u201d dropdown button exists giving the user the capability to un-hide any table widgets widgets they have hidden.</p> </li> <li> <p>Each widget is collapsible via a triangle icon to the left of its title. The collapsed/expanded state per-widget is persisted via local storage and will apply to all records within this table.</p> </li> <li> <p>The default ordering of widgets is not defined, but users can re-order all the widgets as as they so choose.</p> <p>The mechanism for re-ordering the widgets is subject to further UX experimentation. Drag and drop would seem to be an obvious choice, though the height of each widget (when expanded) would make dragging cumbersome. It may be possible to collapse all widgets when the user initiates a drag, however the user\u2019s cursor might jump around on the page if we do this. Another idea is a drop down menu in which the user can re-order the widgets. This menu could potentially contain UI to show/hide the widgets too!</p> <p>The user can intermingle table widgets with query widgets. New query widgets are displayed on top. New table widgets are displayed on bottom (which allows for a data structure where the table widgets have optional sorting weights).</p> </li> </ul>"},{"location":"archive/product/design/specs/record-selector/","title":"Record selector UX design specs","text":""},{"location":"archive/product/design/specs/record-selector/#design-goals","title":"Design goals","text":"<ul> <li>The Record Selector allows the user to choose one record from a given table.</li> <li>It is used in a variety of contexts throughout Mathesar.</li> <li>If the table does not already contain a matching record, then the record selector makes it easy for the the user to create a new record and select it.</li> </ul>"},{"location":"archive/product/design/specs/record-selector/#launch-contexts","title":"Launch contexts","text":"<p>The Record Selector can be opened via the following workflows.</p> <ul> <li>Cells in FK columns use the Record Selector for data entry.</li> <li>Inputs in the following contexts use the Record Selector for data entry.<ul> <li>Filter condition values, both in table filters and in queries</li> <li>Column default values</li> <li>Search fields for FK columns within the Record Selector itself (recursively)</li> </ul> </li> <li>Icon links alongside tables listed for a schema use the Record Selector to navigate to a specific Record Page.</li> </ul>"},{"location":"archive/product/design/specs/record-selector/#behavior-of-data-entry-components","title":"Behavior of data entry components","text":"<p>Record Selector cells and inputs have a large amount of behavior in common, but they\u2019re not identical.</p> <p>In both cases, the component needs to allow the following actions:</p> <ul> <li>(A) Launch the Record Selector to set (or update) the value.</li> <li>(B) Clear a value already set (making it <code>NULL</code>).</li> <li>(C) Navigate to the Record Page for the selected record using a plain <code>&lt;a&gt;</code> element so that users may copy the link or open it in a new tab. (While this is a strict requirement for cells, it may be okay to forgo navigation from inputs entirely.)</li> </ul> <p>Additionally for cells, the component needs to allow:</p> <ul> <li>(D) Open custom context menu. (Currently the only entry in this menu is \u201cSet to NULL\u201d, but there will likely be more entries in the menu in the future.)</li> </ul>"},{"location":"archive/product/design/specs/record-selector/#mockup-of-cells-and-inputs","title":"Mockup of cells and inputs","text":"<p>Cells and inputs can be empty (<code>NULL</code>) or full. And they can be focused (selected in the case of cells), or unfocused. These characteristics lead to eight distinct states, each of which has a design specified below.</p> <p></p>"},{"location":"archive/product/design/specs/record-selector/#user-interactions","title":"User interactions","text":"<ul> <li> <p>Via keyboard when focused</p> <ul> <li><code>Enter</code> opens the record selector.</li> <li><code>Delete</code> clears any value set.</li> <li>(Currently there is no way to perform the navigation action from the keyboard.)</li> </ul> </li> <li> <p>Via pointer on the non-icon area</p> Interaction Operation Click Focus Double click Launch Record Selector Context menu <ul><li>For cells, opens the custom context menu.</li><li>For inputs, opens the browser context menu.</li></ul> </li> <li> <p>Via pointer on an icon</p> <ul> <li>The \u201copen Record\u201d icon is an <code>&lt;a&gt;</code> element. Single clicks navigate to the Record Page in the current browser tab. Context menu or middle click can be used to open in the Record Page in a new tab \u2013 even within the cell, where thee non-icon area opens a custom context menu.</li> <li>The \u201claunch\u201d and \u201cclear\u201d icons are <code>&lt;button&gt;</code> elements which trigger via a single (or double) click. A context menu event on these buttons will behave as it does in the non-icon area.</li> </ul> </li> </ul>"},{"location":"archive/product/design/specs/record-selector/#cell-context-menu-entries","title":"Cell context menu entries","text":"<p>The custom context menu for cells contains the following entries:</p> <ul> <li>Select a <code>{table_name}</code> Record</li> <li>Open <code>{record_summary}</code></li> </ul>"},{"location":"archive/product/design/specs/record-selector/#design-considerations-and-rationale","title":"Design considerations and rationale","text":"<ul> <li> <p>Navigation via icon instead of text</p> <p>Preliminary designs for this feature had cell which looked more like this:</p> <p></p> <p>The idea was that you\u2019d click on the record summary to navigate to the Record Page. The problem with this design is that users may want to open the Record Page in a new tab, but for other functionality we are providing a custom context menu on cells, making that difficult. Using an icon for navigation allows the user to open the browser\u2019s context menu on the navigation link and then open the link in a new tab or to copy the link to the clipboard. The user can still open the custom context menu via the non-icon area within the cell, allowing them to set the value to <code>NULL</code>, just as they would for any other type of column.</p> </li> <li> <p>Double click mistakes</p> <p>Here\u2019s a problem I\u2019d like to avoid. Consider the following UX design from AirTable</p> <p></p> <p>The <code>x</code> button within the record summary (which clears the value) only displays when the cell is selected. That\u2019s nice aesthetically, but it can lead to the user unintentionally clearing the value by double clicking the cell in the area where the <code>x</code> button will appear after the first click.</p> <p>Our design has a similar problem, but the result will be unintentional navigation instead of unintentional deletion. I think that might be tolerable. But if it\u2019s not, we could add a small delay for displaying the \u201copen record\u201d icon link.</p> </li> </ul>"},{"location":"archive/product/design/specs/record-selector/#behavior-after-launch","title":"Behavior after launch","text":"<p>Here\u2019s a \u201cPublications\u201d record selector, as it looks immediately after opening:</p> <p></p>"},{"location":"archive/product/design/specs/record-selector/#layout","title":"Layout","text":"<ul> <li>It\u2019s a modal.</li> <li>Its height grows as needed, but no more than 10 results ever display, making vertical scrolling unlikely.</li> <li>If vertical scrolling becomes necessary, then only the results scroll (with the headers and search inputs remaining fixed).</li> <li>To account for tables with many columns, the width of the modal should grow as needed until it fills almost the entire viewport width. Even so, horizontal scrolling may be needed in some cases.</li> </ul>"},{"location":"archive/product/design/specs/record-selector/#opening","title":"Opening","text":"<ul> <li>When a FK cell is selected, pressing <code>Enter</code> opens the record selector for it. Note: This behavior is consistent with Google Tables, but different from AirTable. For a cell with existing values, AirTable does not open the record selector on <code>Enter</code>, presumably to prevent the user from accidentally overwriting values. I prefer the consistency of Google\u2019s behavior here.</li> <li>Double-clicking a FK cell opens the record selector for it. (This UX is also more in-line with Google than AirTable.) Note: We could consider adding additional entry points such as an icon click target within blank cell (akin to AirTable), but I think it\u2019s worth exploring those details later.</li> <li>The record selector functions identically regardless of whether its origin cell already contains a selected record. This behavior matches Google Tables, but differs from AirTable because AirTable requires the user to manually clear the cell before opening the record selector.</li> </ul>"},{"location":"archive/product/design/specs/record-selector/#search-inputs","title":"Search inputs","text":"<ul> <li>After opening, the input within the first non-PK column has focus. (And this behavior may actually be a bit more smarter once we have implemented some other features for which I have not yet released specs documents.)</li> <li><code>Tab</code> and <code>Shift+Tab</code> moves focus between the search inputs.</li> </ul>"},{"location":"archive/product/design/specs/record-selector/#the-selected-option","title":"The \u201cselected option\u201d","text":"<ul> <li>The record selector presents records as \u201coptions\u201d, similar to a <code>&lt;select&gt;</code> element.</li> <li>One (and only one) option is selected at all times.</li> <li>The selected option is styled the same as when a row is selected in a sheet.</li> <li>The first row is selected by default.</li> <li><code>Up</code> and <code>Down</code> keys move the selection.</li> <li>If the user modifies the selection and then modifies the query, the selection is reset to the the first row.</li> </ul>"},{"location":"archive/product/design/specs/record-selector/#closing","title":"Closing","text":"<ul> <li>Clicking the close button on the modal closes the record selector without producing a record.</li> <li>Pressing the <code>Esc</code> key closes the record selector without producing a record.</li> <li>Single-clicking on a result closes the record selector, producing the record associated with that result.</li> <li>Pressing <code>Enter</code> closes the record selector, producing the record associated with the currently select option.</li> <li>When a selection is made, the value of the cell is updated to link to the selected record. When no selection is made, the value of the cell is not changed.</li> </ul>"},{"location":"archive/product/design/specs/record-selector/#search-algorithm","title":"Search algorithm","text":"<p>The search uses some fuzzy logic when finding and sorting records. Here\u2019s how it works:</p>"},{"location":"archive/product/design/specs/record-selector/#overview","title":"Overview","text":"<ul> <li>The user enters values into the search inputs exactly as they would enter them into cells within the sheet. For example, a Date type will have a date picker. There will likely be some edge cases here to work out during implementation, especially when dealing with invalid input.</li> <li>Records are matched against all query columns using a points system.</li> <li>For non-string-like columns (e.g. Number, Date, etc), a record get 4 points per column matched. A match is performed via strict equality.</li> <li>For string-like columns, a record gets 4 points for exact matches, 3 points for matches at the start of the string, and 2 points for matches within the string.</li> <li>Results are displayed with records listed first that have the highest total points across all query columns.</li> <li>Without any search criteria, ten records are displayed, ordered by descending primary key (Note that the mockups herein do not accurately reflect this requirement.)</li> </ul>"},{"location":"archive/product/design/specs/record-selector/#example","title":"Example","text":"<ol> <li>Begin with our shared sample data (transformed to the final schema).</li> <li> <p>Add some more data:</p> <pre><code>insert into \"Authors\" (\"First Name\", \"Last Name\") values\n('Brianna', 'Murphy'),\n('Annabelle', 'Smith'),\n('Joanna', 'Stevenson'),\n('Adrian', 'Richardson'),\n('Anna', 'Richardson'),\n('Anna', 'Wilson-Rich'),\n('Joanna', 'Rich'),\n('Hans', 'Ulrich');\n</code></pre> </li> <li> <p>We are looking for an author named \u201cAnna Rich\u201d. Let\u2019s search the \u201cAuthors\u201d table by entering \u201cAnna\u201d into \u201cFirst Name\u201d and \u201cRich\u201d into \u201cLast Name\u201d.</p> </li> <li> <p>This produces the following results (with the <code>points</code> column displayed here for reference).</p> Id First Name Last Name Website points Anna Rich 276 Anna Richardson 7 277 Anna Wilson-Rich 6 278 Joanna Rich 6 137 Barbara Rich 4 80 Anna Humphrey http://annahumphrey.com 4 6 Anne Richards http://richards.biz 3 39 Michael Richards 3 71 James Richard https://richard.com 3 272 Annabelle Smith 3 274 Adrian Richardson 3 </li> <li> <p>We don\u2019t get any exact matches, but the records that match most closely are listed first.</p> </li> <li> <p>The query is run as follows:</p> <pre><code>WITH anon_cte AS (\n    SELECT *,\n        CASE WHEN \"First Name\" ILIKE 'Anna' THEN 4\n            WHEN \"First Name\" ILIKE 'Anna%' THEN 3\n            WHEN \"First Name\" ILIKE '%Anna%' THEN 2\n            ELSE 0\n        END\n        +\n        CASE WHEN \"Last Name\" ILIKE 'Rich' THEN 4\n            WHEN \"Last Name\" ILIKE 'Rich%' THEN 3\n            WHEN \"Last Name\" ILIKE '%Rich%' THEN 2\n            ELSE 0\n        END\n        AS points\n    FROM \"Authors\"\n)\nSELECT * FROM anon_cte\nWHERE points &gt; 0\nORDER BY points DESC\nLIMIT 10;\n</code></pre> <p>The case statements should probably be wrapped into some db-layer function like <code>search_score(text, text) -&gt; int</code>, and overloading that would enable scoring other types.</p> </li> </ol>"},{"location":"archive/product/design/specs/record-selector/#creating-a-new-record","title":"Creating a new record","text":"<ol> <li> <p>When at least one column contains a query, a \u201cghost row\u201d will appear above the result set, allowing the user to select a record that will be created on-the-fly using all of the data from their search. The ghost row is filled in as the user types.</p> <p></p> </li> <li> <p>The user can highlight the ghost row by pressing <code>Up</code> \u2013 and in this state, validation errors will be displayed for cells as needed using the same UX as when adding a new row to a table.</p> <p></p> </li> </ol>"},{"location":"archive/product/design/specs/record-selector/#entering-a-related-record-using-a-nested-record-selector","title":"Entering a related record using a nested record selector","text":"<ol> <li> <p>To create a new Publications record, the user needs to supply an Authors record. They use a \u201cnested\u201d record selector to locate or create one Authors record as follows:</p> <p></p> <p>Note: There are some layout details here that will need to be worked out during implementation, such as horizontal scrolling.</p> </li> <li> <p>The nested record selector opens when its target cell is selected (there\u2019s not need to press <code>Enter</code>), and it closes when a different higher-level cell is selected. There\u2019s no way for it to be closed while its target cell is selected.</p> <p>Note: UX gets a bit weird with tables that only contain FK columns. In the worst case scenario, a table would have only two columns, both of which are FKs. Selecting a record would be impossible because there would be no way to close the nested selectors. In the slightly-better-but-still-bad case, a table contains a PK plus two FKs. Here, you\u2019d need to select the PK cell to hid the nested selectors. These cases are rare enough that I think it\u2019s fine to discount them for now. With some more thought and experimentation, we can detect cases like that adjust the UI behavior a bit to better suit them.</p> </li> <li> <p>After selecting an Authors record, the top-level Publications record selector will become active again, with a value for \u201cAuthor Id\u201d filled in, and with a string representation of that Authors record displayed in its place.</p> </li> </ol>"},{"location":"archive/product/design/specs/record-selector/#unsolved-problems","title":"Unsolved problems","text":""},{"location":"archive/product/design/specs/record-selector/#updating-a-record-before-selecting-it","title":"Updating a record before selecting it","text":"<p>Use case\u2026</p> <ol> <li>I\u2019m entering a new \u201cItems\u201d record.</li> <li>For my item, I\u2019m selecting a \u201cPublications\u201d record.</li> <li>I\u2019ve found the publication using the ISBN, so I\u2019m confident that it\u2019s the correct record. I\u2019d like to select it!</li> <li>But I also notice that the record is missing a \u201cYear\u201d value.</li> <li>I can see the year on the book right in front of me so I\u2019d like to update the data, making it cleaner. But I don\u2019t want to lose my place in the process of adding a new \u201cItems\u201d record. I\u2019d like to update the publication year inline before choosing it.</li> </ol> <p>With a little more UX work, I think it would be possible to incorporate an \u201cupdate\u201d functionality into the record selector.</p>"},{"location":"archive/product/design/specs/record-selector/#locating-a-record-based-on-aggregate-data","title":"Locating a record based on aggregate data","text":"<p>Use case\u2026</p> <ol> <li> <p>I\u2019ve acquired a new copy of Moneyball by Michael Lewis, and I\u2019d like to enter it as an item.</p> </li> <li> <p>Within the item, I begin to locate or create a \u201cPublications\u201d record. My search looks as follows:</p> Id ISBN Title Year Author Id Publisher Id Moneyball 91821 0393324818 Moneyball: The Art of Winning an Unfair Game 2004 <code>Michael Lewis</code> <code>W. W. Norton Company</code> \u2026 \u2026 \u2026 \u2026 \u2026 \u2026 </li> <li> <p>The first result appears to be a match at first, but then I notice that the book I\u2019m holding is the 2011 edition, with ISBN 0393338398. Upon entering those details I see there is no matching record in the database, so I set out to add one by filling in all the fields I can.</p> </li> <li> <p>I need to associate my new Publications record, with an Authors record. Here\u2019s what my Authors search looks like:</p> Id First Name Last Name Website Michael Lewis 8276 Michael Lewis <code>NULL</code> 13901 Michael Lewis <code>NULL</code> \u2026 \u2026 \u2026 \u2026 </li> <li> <p>Hmmm. There are two Michael Lewis records! Which do I chose? Are they duplicates? I real life, there are actually as many as twenty published authors named Michael Lewis! While picking an Authors record, I want to see a list of books associated with each author.</p> <p>This is tricky though. The Michael Lewis I\u2019m after has published a lot of books! How will that list of books be sorted? What text will display for each book? (Because the full title of Moneyball is actually quite long.) Can I filter the list? Can I select an author named Michael Lewis who has published at least one book whose title begins with Moneyball??? Designing a UX which helps answer that sort of question (without lots of clicks and keystrokes) is an interesting challenge!</p> </li> </ol> <p>We could also construct a more common use case if we venture outside our example schema. Consider a CRM-like schema with <code>person</code> records which each have many <code>email_address</code> records. When entering an <code>activity</code> record, I want to select a <code>person</code> that has at least one <code>email_address</code> which contains a field that matches a query. And in this case I also want to add a new person with that email address if I don\u2019t find a matching person. Adding is especially tough because we can\u2019t create the <code>email_address</code> record until we create the <code>peron</code> record, so the \u201cdrill-down-and-back-up-again\u201d UX outlined in the specs above won\u2019t work for the <code>email_address</code>.</p> <p>These scenarios are more tricky to handle and will require more UX thought. But for some schemata handling them well will be pretty important. </p>"},{"location":"archive/product/design/specs/record-summary/","title":"Record Summary","text":""},{"location":"archive/product/design/specs/record-summary/#context","title":"Context","text":"<p>Record summaries are strings that represent a record\u2019s data. They are specified by users and can include variable values from the record\u2019s fields, or include symbols and text characters.</p>"},{"location":"archive/product/design/specs/record-summary/#usage-throughout-the-product","title":"Usage throughout the product","text":"<p>Wherever we want to represent one record, we use the record summary. Here is a non-exhaustive list of some places in the product where record summaries will be used.</p> <ul> <li> <p>In FK cells, to represent the records that are linked via a foreign key.</p> <p></p> </li> <li> <p>In the Record Page, to serve as both a header and a representation of linked records.</p> <p></p> </li> <li> <p>In group header rows, when the table page is grouped by a FK column.</p> </li> <li> <p>In the input within a filter condition that filters on a FK column.</p> </li> <li> <p>In the input when setting a default value for a FK column.</p> </li> </ul>"},{"location":"archive/product/design/specs/record-summary/#rendering-one-record-summary","title":"Rendering one record summary","text":""},{"location":"archive/product/design/specs/record-summary/#template","title":"Template","text":"<ol> <li> <p>The backend provides a record summary template for each table from the <code>tables</code> API. This is a string such as <code>{78}</code> that specifies the ids of the columns to be used to render the record summary.</p> </li> <li> <p>The template can include multiple columns, and other characters too, such as <code>{1}-{2}</code>, which will render two columns separated by a dash.</p> </li> <li> <p>By default, the backend dynamically generate the template such that it includes only the first non-PK column and no other characters.</p> </li> <li> <p>The user may customize the record summary template, in which case the customized template will be stored at the table level (for all users).</p> </li> </ol>"},{"location":"archive/product/design/specs/record-summary/#examples-and-edge-cases","title":"Examples and edge cases","text":"<p>Say We are rendering a summary for a row having the following data (which maps column ids to cell values):</p> <pre><code>{\n    \"101\": 1,\n    \"102\": \"Foo\"\n}\n</code></pre> <ul> <li> <p>If table\u2019s template is <code>{102}</code>, then we render <code>Foo</code></p> </li> <li> <p>If table\u2019s template is <code>{999}</code>, then we render <code>{999}</code> (because there is no column in the table having an id of 999).</p> </li> <li> <p>If table\u2019s template is <code>{101}: {102}</code>, then we render <code>1: Foo</code></p> </li> <li> <p>Let\u2019s pretend that (for some weird reason), we\u2019d like to render <code>{101}: Foo</code> (keeping that <code>{101}</code> text static across all rows). In this case we are actually unable to configure the record summary template to render such a value because the templating system has no escaping mechanism. This is a design limitation made for the sake of simplicity and ease of implementation.</p> </li> </ul>"},{"location":"archive/product/design/specs/record-summary/#transitive-summaries","title":"Transitive summaries","text":"<p>When a foreign key column is used within the record summary template, the text used when rendering the record summary is taken from the rendered record summary for that record.</p>"},{"location":"archive/product/design/specs/record-summary/#customizing-the-record-summary-template","title":"Customizing the record summary template","text":"<p>Here\u2019s an example where a user customizes the Authors template to show the author\u2019s first name and last name separated by a space.</p>"},{"location":"archive/product/design/specs/record-summary/#from-the-authors-table","title":"From the Authors table","text":"<ol> <li> <p>The user navigates to the Authors table page.</p> </li> <li> <p>Within the table inspector, the \u201cTable\u201d pane contains a section titled \u201cRecord Summary\u201d below the \u201cProperties\u201d section and expanded by default. Below is a mockup of hhe UI in that section:</p> <p></p> </li> <li> <p>The \u201cPreview\u201d area shows the record summary for the first record from the table as displayed with the current sorting/filtering/grouping/pagination. If the table shows no rows, then the \u201cPreview\u201d area will be absent.</p> </li> <li> <p>When the Template area contains three inputs: (1) a \u201cCustomization\u201d radio button fieldset, (2) a \u201ccolumn inserter\u201d select element, and (3) a \u201ctemplate value\u201d text input.</p> </li> <li> <p>The \u201ccolumn inserter\u201d and \u201ctemplate value\u201d fields are only displayed when \u201cCustomization\u201d is set to \u201cDefault\u201d.</p> </li> <li> <p>The Cancel/Save buttons are only displayed when the user has modified the form since its last save. The buttons disappear after saving.</p> </li> <li> <p>As the user customizes the \u201ctemplate value\u201d contents, the preview updates immediately, allowing the user to inspect their changes before applying them.</p> </li> <li> <p>The \u201ctemplate value\u201d input is a plain text input, and offers no special syntax highlighting or means of differentiating a valid column token from an invalid one.</p> </li> <li> <p>The \u201ccolumn inserter\u201d is a select element which displays all columns directly in the table as options. Upon selecting a column, the token for that column (e.g. <code>{First Name}</code>) is appended to the existing text within the \u201ctemplate value\u201d input and the \u201ctemplate value\u201d input is programmatically focused, allowing the user to continue typing.</p> </li> <li> <p>To remove a column, the user must edit the \u201ctemplate value\u201d and manually delete all the characters which comprise the column token.</p> </li> <li> <p>When saving, the front end replaces column tokens like <code>{First Name}</code> with their corresponding column ids (e.g. <code>{78}</code>) before submitting the API request to persist the template value. Likewise, when populating the initial value for the \u201ctemplate value\u201d input, the front end performs the reverse replacement, substituting column ids for their respective names.</p> <p>This design introduces an additional limitation with regard to escaping which only applies to the UI \u2013 there is no way to use the UI to configure the template that renders <code>{First Name}: Stephanie {Last Name}: Davis</code> because there is no way to to escape the column name (in addition to the column id as described above).</p> </li> </ol>"},{"location":"archive/product/design/specs/record-summary/#from-the-publications-table","title":"From the Publications table","text":"<ol> <li> <p>The user navigates to the Publications table page.</p> </li> <li> <p>The user selects a cell within the \u201cAuthor\u201d column.</p> </li> <li> <p>Within the table inspector, the \u201cColumn\u201d pane contains a section titled \u201cAuthors Record Summary\u201d which presents all the same UI described above.</p> </li> <li> <p>The values for the preview are taken from the distinct FK cell values within the \u201cAuthor\u201d column.</p> </li> </ol>"},{"location":"archive/product/design/specs/schemas/","title":"Working with Schemas","text":""},{"location":"archive/product/design/specs/schemas/#context","title":"Context","text":"<p>Users within Mathesar will have multiple data tables that they want to organize and manage. Schemas can be a helpful mechanism to segregate their data for different purposes. Users with more experience with databases will want to incorporate these for reasons that might go beyond just organizing their database objects. However, this organizational aspect will be a primary feature of the design solution.</p>"},{"location":"archive/product/design/specs/schemas/#prototype","title":"Prototype","text":"<p>Working with Schemas Figma Prototype</p>"},{"location":"archive/product/design/specs/schemas/#user-experience","title":"User Experience","text":""},{"location":"archive/product/design/specs/schemas/#user-creates-their-first-schema","title":"User creates their first schema","text":"<p>A Mathesar user that has no schemas created will have to specify one to start creating tables. A default schema is created when users choose to begin with a Mathesar managed database.</p>"},{"location":"archive/product/design/specs/schemas/#user-chooses-how-they-want-to-start-adding-tables-to-their-schema","title":"User chooses how they want to start adding tables to their schema","text":"<p>Once the schema is created, the user will have to create tables. If the schema is empty, they will have the option to choose from the list of table creation methods. In the future, this could accommodate multiple tables import, but for now, we\u2019ll assume it\u2019s a single table being created.</p>"},{"location":"archive/product/design/specs/schemas/#user-edits-the-schema-details","title":"User edits the schema details","text":"<p>For various reasons, a user might, at some point, edit the given name of a schema. They might also want to delete the schema altogether but must do so in a context where the system can inform them about the consequences.</p>"},{"location":"archive/product/design/specs/schemas/#user-navigates-back-to-list-of-all-schemas","title":"User navigates back to list of all schemas","text":"<p>When working on a particular schema, a user might navigate back to a list of all schemas.</p>"},{"location":"archive/product/design/specs/schemas/#user-jumps-to-another-schema-from-the-top-navigation","title":"User jumps to another schema from the top navigation","text":"<p>A user can click on the top search bar to reveal a list of their recently opened schemas and databases. Typing the name of any existing schema or database should display a list of all matching items. </p>"},{"location":"archive/product/design/specs/schemas/#user-tries-to-delete-a-non-empty-schema","title":"User tries to delete a non-empty schema","text":"<p>Before a user can delete a schema containing other objects such as tables or views, they must be aware of this information and the content that the system will delete along with the schema. </p>"},{"location":"archive/product/design/specs/schemas/#user-deletes-an-empty-schema","title":"User deletes an empty schema","text":"<p>An empty schema can be deleted by a user with the appropriate permissions and no additional steps. </p>"},{"location":"archive/product/design/specs/schemas/#interactions","title":"Interactions","text":""},{"location":"archive/product/design/specs/schemas/#editing-inline-vs-edit-modal","title":"Editing inline vs. edit modal","text":"<p>There are cases where, for example, we might want to edit details, such as a table name inline (by clicking on the name label) rather than using a separate modal to provide a form with more information. In schemas, we might add additional settings that we want to make accessible to users, such as managing access privileges and permissions, etc. The requirement could also be solved by having a schema details dedicated view that is not contained within a modal.  Additionally, a schema might not allow editing of its name, in which case, inline editing might make it harder to inform the user about these limitations. </p>"},{"location":"archive/product/design/specs/schemas/#preventing-deletion-of-schema","title":"Preventing Deletion of Schema","text":"<p>Deleting a schema could lead to problems when any of its tables had relations with tables from another schema. Users need to be aware of this when they proceed to delete the schema. However, preventing them from doing so might be harder to verify, and the user could find it difficult to break all schema references before proceeding. If we allow deletion, we\u2019ll need to either turn the schema references in other tables to a different type or represent the error once the user opens an affected table.</p>"},{"location":"archive/product/design/specs/schemas/#user-interface","title":"User Interface","text":""},{"location":"archive/product/design/specs/schemas/#top-navigation-bar","title":"Top navigation bar","text":"<p>Included in this spec is an initial draft of what our top navigation bar might look like when implemented. There are still details to resolve, like how we might incorporate searching or jump across different databases and schemas (similar to what Github does). </p>"},{"location":"archive/product/design/specs/schemas/#search-bar-navigation","title":"Search bar navigation","text":"<p>The top search bar allows users to search through high-level objects such as schemas and databases that Mathesar manages.</p>"},{"location":"archive/product/design/specs/schemas/#review-notes","title":"Review Notes","text":""},{"location":"archive/product/design/specs/schemas/#search-and-jump-to-navigation","title":"Search and Jump To Navigation","text":"<p>With the introduction of the top navigation, we identified the opportunity to have a global control for navigation across databases and schemas that do not rely on the sidebar being visible at all times. This change would simplify other aspects of the user experience, allowing users to navigate away from a schema while keeping track of global notifications and other async operations.</p> <p>When activated, the search and jump to navigation should display a list of recently navigated objects (schemas and databases).</p>"},{"location":"archive/product/design/specs/schemas/#public-schemas","title":"Public Schemas","text":"<p>Public schemas within Mathesar will be considered to be a special type. The system will add Contraints to prevent deletion or edits that might disrupt the database functionality.</p> <p>The public schemas will also have a distinct visual icon to identify them.</p>"},{"location":"archive/product/design/specs/schemas/#list-of-databases","title":"List of Databases","text":"<p>Changes introduced on this spec have invalidated the previously proposed solutions for database navigation. We will revisit the issues on this functionality in a later milestone.</p>"},{"location":"archive/product/design/specs/sidebar-improvements/","title":"Sidebar Improvements Spec","text":""},{"location":"archive/product/design/specs/sidebar-improvements/#context","title":"Context","text":"<p>The <code>Left Sidebar</code> component\u2019s main purpose is to give users access to the list of database objects. The sidebar supports the addition of various sections, where additional functionality can be displayed.</p>"},{"location":"archive/product/design/specs/sidebar-improvements/#prototype","title":"Prototype","text":""},{"location":"archive/product/design/specs/sidebar-improvements/#link","title":"Link","text":"<p>Prototype Link</p>"},{"location":"archive/product/design/specs/sidebar-improvements/#videos","title":"Videos","text":"<ul> <li>All Scenarios: Video</li> </ul>"},{"location":"archive/product/design/specs/sidebar-improvements/#user-experience","title":"User Experience","text":"<p>In the <code>Explorer</code> section, the\u2019 Left Sidebar\u2019 should allow for quick navigation objects. Users should be able to retrieve objects and open them quickly. Additionally, it should make the status of objects listed visible.</p>"},{"location":"archive/product/design/specs/sidebar-improvements/#scenario-1-opening-the-sidebar","title":"Scenario 1: Opening the Sidebar","text":""},{"location":"archive/product/design/specs/sidebar-improvements/#scenario-1a-via-opening-a-schema","title":"Scenario 1a: Via opening a schema","text":""},{"location":"archive/product/design/specs/sidebar-improvements/#steps-for-1a","title":"Steps for 1a","text":"<ol> <li>A user opens a schema.</li> <li>The sidebar is open by default with the <code>Explorer</code> section active.</li> </ol>"},{"location":"archive/product/design/specs/sidebar-improvements/#scenario-1b-via-sidebar-navigation-bar","title":"Scenario 1b: Via sidebar navigation bar","text":""},{"location":"archive/product/design/specs/sidebar-improvements/#steps-for-1b","title":"Steps for 1b","text":"<ol> <li>A user is in the schema view.</li> <li>The user clicks on any navigation item from the sidebar navigation bar.</li> <li>The selected sidebar section opens.</li> </ol>"},{"location":"archive/product/design/specs/sidebar-improvements/#scenario-2-closing-the-sidebar","title":"Scenario 2: Closing the Sidebar","text":""},{"location":"archive/product/design/specs/sidebar-improvements/#scenario-2a-via-sidebar-navigation-bar","title":"Scenario 2a: Via sidebar navigation bar","text":""},{"location":"archive/product/design/specs/sidebar-improvements/#steps-for-2a","title":"Steps for 2a","text":"<ol> <li>A user is in the schema view.</li> <li>The user clicks on a currently selected navigation item.</li> <li>The sidebar closes.</li> </ol>"},{"location":"archive/product/design/specs/sidebar-improvements/#scenario-3-navigating-to-another-section","title":"Scenario 3: Navigating to Another Section","text":""},{"location":"archive/product/design/specs/sidebar-improvements/#scenario-3a-via-sidebar-navigation-bar","title":"Scenario 3a: Via sidebar navigation bar","text":""},{"location":"archive/product/design/specs/sidebar-improvements/#steps-for-3a","title":"Steps for 3a","text":"<ol> <li>A user is in the schema view.</li> <li>The user clicks on any navigation item not currently selected.</li> <li>The sidebar closes.</li> </ol>"},{"location":"archive/product/design/specs/sidebar-improvements/#components","title":"Components","text":""},{"location":"archive/product/design/specs/sidebar-improvements/#sidebar-sections","title":"Sidebar Sections","text":"<p>The <code>Left Sidebar</code> component, can support multiple sections. At the time of writing this spec, only the <code>Explorer</code> section is planned to be implemented.</p>"},{"location":"archive/product/design/specs/sidebar-improvements/#explorer-section","title":"Explorer Section","text":"<p>The <code>Explorer</code> section contains the list of database objects for a currently open schema.</p>"},{"location":"archive/product/design/specs/sidebar-improvements/#interactions","title":"Interactions","text":""},{"location":"archive/product/design/specs/sidebar-improvements/#status-of-objects","title":"Status of Objects","text":"<p>Items listed in the <code>Explorer</code> sidebar are styled differently according to their status.</p> <ul> <li>Open/Active</li> <li>Unsaved Changes</li> <li>Error</li> <li>Progress Indicator</li> </ul>"},{"location":"archive/product/design/specs/sidebar-improvements/#potential-improvements","title":"Potential Improvements","text":""},{"location":"archive/product/design/specs/sidebar-improvements/#reveal-in-sidebar","title":"Reveal in Sidebar","text":"<p>We could use the \u2018Reveal in Sidebar\u2019 functionality to locate or scroll to an open item in the sidebar. The option could be located in tabs contextual menu, or when tables are referenced in the table UI.</p>"},{"location":"archive/product/design/specs/sidebar-improvements/#additional-functionality-a-the-list-item-level","title":"Additional functionality a the list item level","text":"<p>Items listed in the <code>Explorer</code> sidebar could offer a contextual menu to perform actions such as renaming, deleting or duplicating, without the need to open the object.</p>"},{"location":"archive/product/design/specs/sidebar-improvements/#handling-of-long-lists","title":"Handling of long lists","text":"<p>Functionality specific to long lists will not be addressed as part of this spec. Handling long lists will most likely require an additional view to display the complete list, including pagination and other navigation updates. For that reason, we will create a separate issue to address this.</p>"},{"location":"archive/product/design/specs/specs-null-values/","title":"NULL Value Specs","text":""},{"location":"archive/product/design/specs/specs-null-values/#context","title":"Context","text":"<p>A <code>NULL</code> value indicates that a value does not exist in a database. It is important to clarify that <code>NULL</code> is not the same as blank or zero. Ideally, we want users to think of <code>NULL</code> values as placeholders for unknown or missing values applicable otherwise.</p>"},{"location":"archive/product/design/specs/specs-null-values/#prototype","title":"Prototype","text":""},{"location":"archive/product/design/specs/specs-null-values/#link","title":"Link","text":"<p>Prototype</p>"},{"location":"archive/product/design/specs/specs-null-values/#videos","title":"Videos","text":"<ul> <li>Scenario 1  Video</li> <li>Scenario 2: Video</li> <li>Scenario 3: Video</li> </ul>"},{"location":"archive/product/design/specs/specs-null-values/#user-experience","title":"User Experience","text":""},{"location":"archive/product/design/specs/specs-null-values/#considerations-for-handling-null-values","title":"Considerations for handling <code>NULL</code> Values","text":"<p>When presented in tables, <code>NULL</code> values should be visually distinct so that the user understands that they are not the same as other string types. The style should attempt to communicate the absence of a value, similar to how placeholders are used in text input fields. As for the process of transforming values to and from <code>NULL</code>, it will be important to have a consistent way of doing this across different data types.</p>"},{"location":"archive/product/design/specs/specs-null-values/#scenarios","title":"Scenarios","text":""},{"location":"archive/product/design/specs/specs-null-values/#scenario-1-user-identifies-a-null-value","title":"Scenario 1: User identifies a <code>NULL</code> Value","text":""},{"location":"archive/product/design/specs/specs-null-values/#scenario-1a-the-user-identifies-a-null-value-in-a-table","title":"Scenario 1a: The user identifies a <code>NULL</code> value in a table","text":""},{"location":"archive/product/design/specs/specs-null-values/#steps-for-1a","title":"Steps for 1a","text":"<ol> <li>The user opens a table that contains <code>NULL</code> values.</li> <li>The user identifies a cell that contains a <code>NULL</code> value.<ul> <li>The cell contains the word <code>NULL</code> in all uppercase letters</li> <li>The cell has a different styling<ul> <li>A lighter background-color</li> <li>A muted text color</li> <li>A different font style (italic)</li> </ul> </li> </ul> </li> </ol>"},{"location":"archive/product/design/specs/specs-null-values/#scenario-1b-the-user-identifies-a-null-value-in-a-record-preview","title":"Scenario 1b: The user identifies a <code>NULL</code> value in a record preview","text":""},{"location":"archive/product/design/specs/specs-null-values/#steps-for-1b","title":"Steps for 1b","text":"<ol> <li>The user edits a value in a column that links to records from another table.</li> <li>The user sees the list of records displayed in the record selection dropdown.</li> <li>The user identifies a record that contains a <code>NULL</code> value.<ul> <li>The field contains the word <code>NULL</code> in all uppercase letters</li> <li>The text has a muted text color</li> <li>The text has a different font style (italic)</li> </ul> </li> </ol>"},{"location":"archive/product/design/specs/specs-null-values/#scenario-1c-the-user-identifies-a-null-value-in-a-boolean-type-column-in-checkbox-display-mode","title":"Scenario 1c: The user identifies a <code>NULL</code> value in a boolean type column in checkbox display mode","text":""},{"location":"archive/product/design/specs/specs-null-values/#steps-for-1c","title":"Steps for 1c","text":"<ol> <li>The user opens a table that contains <code>NULL</code> values.</li> <li>The user identifies a cell that contains an indeterminate state checkbox.</li> <li>The user hovers over the indeterminate checkbox, and a tooltip with the legend <code>NULL</code> is displayed.</li> </ol>"},{"location":"archive/product/design/specs/specs-null-values/#scenario-2-user-edits-a-null-value","title":"Scenario 2: User edits a <code>NULL</code> Value","text":""},{"location":"archive/product/design/specs/specs-null-values/#scenario-2a-replacing-null-with-a-new-value","title":"Scenario 2a: Replacing <code>NULL</code> with a new value","text":""},{"location":"archive/product/design/specs/specs-null-values/#steps-for-2a","title":"Steps for 2a","text":"<ol> <li>The user edits a <code>NULL</code> value in a column.</li> <li>The user enters <code>edit mode</code>.</li> <li>The user enters a new value and leaves <code>edit mode</code> by pressing the <code>enter</code> key or clicking outside the active cell.</li> <li>The new value replaces the <code>NULL</code> value.</li> </ol>"},{"location":"archive/product/design/specs/specs-null-values/#scenario-2b-replacing-null-with-an-empty-string","title":"Scenario 2b: Replacing <code>NULL</code> with an empty string","text":""},{"location":"archive/product/design/specs/specs-null-values/#steps-for-2b","title":"Steps for 2b","text":"<ol> <li>The user edits a <code>NULL</code> value in a column.</li> <li>The user enters <code>edit mode</code>.</li> <li>A text input box is displayed in <code>edit mode</code> with a placeholder set to <code>NULL</code>.</li> <li>The new typed-in value replaces the placeholder text.</li> <li>The user clears the new value by pressing the <code>backspace</code> key until the value is completely cleared.</li> <li>The user leaves <code>edit mode</code>.</li> <li>An empty string replaces the <code>NULL</code> value. The cell appears blank.</li> </ol>"},{"location":"archive/product/design/specs/specs-null-values/#scenario-2c-the-data-type-is-boolean-with-checkbox-display-mode-enabled","title":"Scenario 2c: The data type is boolean with checkbox display mode enabled","text":""},{"location":"archive/product/design/specs/specs-null-values/#steps-for-2c","title":"Steps for 2c","text":"<ol> <li>The user edits a <code>NULL</code> value in a column set to boolean type with the checkbox display mode enabled.<ul> <li>The field contains a checkbox in an indeterminate state, meaning the value is <code>NULL</code>.</li> </ul> </li> <li>The user clicks on the checkbox, going from indeterminate <code>NULL</code> to checked <code>TRUE</code>.</li> <li>The user can click on the checkbox again to mark it as <code>FALSE</code>.</li> <li>To return the value to <code>NULL</code>, the user can select the cell and press the <code>delete</code> key or use the contextual menu and select the <code>Set as NULL</code> option.</li> </ol>"},{"location":"archive/product/design/specs/specs-null-values/#scenario-2d-the-data-type-is-number","title":"Scenario 2d: The data type is number","text":""},{"location":"archive/product/design/specs/specs-null-values/#steps-for-2d","title":"Steps for 2d","text":"<ol> <li>The user edits a <code>NULL</code> value in a column set to <code>number</code> type.</li> <li>The user double-clicks the cell to enter `edit mode.</li> <li>The user leaves <code>edit mode</code> without making any changes.</li> <li>The <code>NULL</code> value remains unchanged.</li> </ol>"},{"location":"archive/product/design/specs/specs-null-values/#scenario-3-user-sets-a-value-to-null","title":"Scenario 3: User sets a value to <code>NULL</code>","text":""},{"location":"archive/product/design/specs/specs-null-values/#scenario-3a-the-column-accepts-null-values","title":"Scenario 3a: The column accepts <code>NULL</code> values","text":""},{"location":"archive/product/design/specs/specs-null-values/#steps-for-3a","title":"Steps for 3a","text":"<ol> <li>The user selects a cell in a column that contains a value.</li> <li>The user clears the content of the selected cell.<ul> <li>By pressing the <code>Shift</code>+<code>Backspace</code> or <code>Shift</code>+<code>Delete</code> keys.</li> <li>By opening the contextual menu and selecting the <code>Set as NULL</code> option.</li> </ul> </li> <li>The selected cell now has a <code>NULL</code> value.</li> </ol>"},{"location":"archive/product/design/specs/specs-null-values/#scenario-3b-the-column-does-not-accept-null-values","title":"Scenario 3b: The column does not accept <code>NULL</code> values","text":""},{"location":"archive/product/design/specs/specs-null-values/#steps-for-3b","title":"Steps for 3b","text":"<ol> <li>The user selects a cell in a column that contains a value.</li> <li>The user attempts to clear the content of the selected cell.<ul> <li>By pressing the <code>Shift</code>+<code>Backspace</code> or <code>Shift</code>+<code>Delete</code> keys.<ul> <li>The system prevents the insertion of a <code>NULL</code> value.</li> <li>An error message indicates that a NOT <code>NULL</code> constraint is applied to the column, and the system cannot insert <code>NULL</code> values.</li> </ul> </li> <li>By opening the contextual menu and selecting the <code>Set as NULL</code> option.<ul> <li>The \u2018Set as <code>NULL</code>\u2019 option is disabled, and the user cannot select it.</li> </ul> </li> </ul> </li> </ol>"},{"location":"archive/product/design/specs/specs-null-values/#interactions","title":"Interactions","text":""},{"location":"archive/product/design/specs/specs-null-values/#select-vs-edit-mode-behaviors","title":"Select vs. Edit Mode Behaviors","text":"<p>In <code>Select Mode</code>, the cell is highlighted and set as the target for actions applying to the cell or elements associated with it, such as its row or column. <code>Select Mode</code> is toggled by clicking on a cell or by navigating to with the direction keys while <code>Select Mode</code> is active.</p> <p>In <code>Edit Mode</code>, a cell provides additional functionality and interactions to users. <code>Edit Mode</code> is toggled by double-clicking on a cell or by typing a text character or pressing backspace while in <code>Select Mode</code>. However, certain data types could have different interactions. Once specific behaviors and components for each data type are introduced, we must further define these interactions to ensure compatibility.</p> <p>We will create an additional issue to refine these interactions.</p>"},{"location":"archive/product/design/specs/specs-null-values/#text-or-numeric-types","title":"Text or Numeric Types","text":"<p>For the implementation of this spec, we should consider the following interactions for the editing of text and numeric types as summarized in the following table:</p> current mode DOM <code>key</code> result select any text character switch to edit mode, place cursor at end, append a character to end of cell contents select <code>Backspace</code> switch to edit mode, place cursor at end, delete the last character select <code>Delete</code> nothing select <code>Shift+Backspace</code> set cell value to NULL select <code>Shift+Delete</code> set cell value to NULL edit <code>Backspace</code> delete a character to the left of cursor edit <code>Delete</code> delete a character to the right of cursor"},{"location":"archive/product/design/specs/specs-null-values/#boolean-type","title":"Boolean Type","text":"<p>In the case of boolean types, consider the following:</p> <ul> <li>Consider that the <code>checkbox</code> is smaller than the cell, so clicking outside the <code>checkbox</code> would select the cell, and pressing <code>delete</code> would make the cell <code>NULL.</code></li> <li>Clicking inside the <code>checkbox</code> would toggle the value of the checkbox, similar to spreadsheets.</li> </ul>"},{"location":"archive/product/design/specs/specs-null-values/#with-dropdown-enabled","title":"With Dropdown Enabled","text":"<p>Some column configurations will display a dropdown when editing the contents of a cell. For example, a column with a single-column foreign key constraint will show a record selector dropdown when in edit mode.</p> <p>In the case of cells with dropdown enabled, consider the following:</p> <ul> <li>If no record is selected, the cell content should be <code>NULL</code>.</li> <li>To set the cell\u2019s content as <code>NULL</code>, the user can press the <code>delete</code> key while the cell is in <code>select mode</code>.</li> <li>To set the cell\u2019s content as <code>NULL</code>, the user can deselect a selected record from the record selector by clicking on a selected item and then closing the dropdown.</li> </ul>"},{"location":"archive/product/design/specs/specs-null-values/#related-discussions","title":"Related Discussions","text":"<ul> <li>UX for NULL Values</li> </ul>"},{"location":"archive/product/design/specs/table-creation-controls/","title":"Table Creation Controls (discard modal update)","text":""},{"location":"archive/product/design/specs/table-creation-controls/#context","title":"Context","text":""},{"location":"archive/product/design/specs/table-creation-controls/#modal-component-removal","title":"Modal component removal","text":"<p>At the time of its creation, the original design for milestone 2. Tables from File Import included a modal component to display the table creation controls as part of the process of adding a new table. However, after team discussion and intending to simplify, we decided to drop the modal component and favor incorporating controls at the page level and in the context of other tasks happening in parallel, such as file import.</p>"},{"location":"archive/product/design/specs/table-creation-controls/#prototype","title":"Prototype","text":"<p>\u2018Table Creation Controls\u2019 Prototype</p>"},{"location":"archive/product/design/specs/table-creation-controls/#scenarios","title":"Scenarios","text":""},{"location":"archive/product/design/specs/table-creation-controls/#user-adds-a-new-table-from-the-sidebar","title":"User adds a new table from the sidebar","text":"<p>The way users add a new table remains unchanged. A new table is added by clicking on the add table button next to the tables list header.</p>"},{"location":"archive/product/design/specs/table-creation-controls/#user-starts-the-add-table-process-and-decided-on-the-table-creation-method","title":"User starts the add table process and decided on the table creation method","text":"<p>After the user starts the add table process, a new tab is displayed containing controls for selecting the table creation method. In the table toolbar area, a field exists to enter the table name. If left unchanged, it will default to a placeholder name, and it won\u2019t prevent the user from taking the following steps.</p>"},{"location":"archive/product/design/specs/table-creation-controls/#table-status","title":"Table status","text":"<p>The system won\u2019t save the table until the empty table is created or the file import succeeds. While unsaved, the table tab and other navigational items representing the table should indicate the unsaved state.</p>"},{"location":"archive/product/design/specs/table-creation-controls/#schema-selection","title":"Schema Selection","text":"<p>Recent changes in the design might influence how schemas are presented within Mathesar. We assume that a single schema is being displayed, thus eliminating the requirement for a schema selector.</p> <p></p>"},{"location":"archive/product/design/specs/table-creation-controls/#user-completes-table-creation","title":"User completes table creation","text":"<p>Once the table creation process is over, the table name input is hidden while the table label remains. Clicking on the table label will show the input again.</p>"},{"location":"archive/product/design/specs/table-creation-controls/#review-notes","title":"Review Notes","text":""},{"location":"archive/product/design/specs/table-creation-controls/#fixed-headers-for-overflowing-content","title":"Fixed Headers for Overflowing Content","text":"<p>Controls that are located in headers must remain accessible to users at all times. When a list of items grows more extensive than the space available, the headers must remain fixed, and the list of items will scroll vertically.</p>"},{"location":"archive/product/design/specs/table-import/","title":"Add Table from Import/URI/Data paste Specs","text":"<p>Danger</p> <p>This spec is a starting point and has been through basic engineering and product reviews. It is not ready for implementation yet. It will have further updates and reviews before we are ready to start implementing this.</p>"},{"location":"archive/product/design/specs/table-import/#context","title":"Context","text":"<p>Adding a new table from a file import allows users to input data into Mathesar without populating tables manually. This feature is also convenient for users who need to import data for testing Mathesar\u2019s functionality.</p>"},{"location":"archive/product/design/specs/table-import/#navigating-to-the-data-import-page","title":"Navigating to the Data Import page","text":"<p>Data import navigation link will be found on the active schema page. Once clicked the user will be taken to select upload method screen.</p>"},{"location":"archive/product/design/specs/table-import/#importing-data-into-a-new-table","title":"Importing data into a new table","text":""},{"location":"archive/product/design/specs/table-import/#uploading-the-data-file","title":"Uploading the Data File","text":"<p>The import screen has a detailed description on what file types are allowed and information about processing and next steps.</p>"},{"location":"archive/product/design/specs/table-import/#download-sample-files","title":"Download sample files","text":"<p>There is a link for user to download sample files for reference of valid files to be uploaded.</p>"},{"location":"archive/product/design/specs/table-import/#selection-of-an-upload-method","title":"Selection of an upload method","text":"<p>There are three radio buttons for selecting an upload method. Each radio button has a small description for the choice. Once the user select an option, the rectangular area on the right side has that respective upload method view.</p>"},{"location":"archive/product/design/specs/table-import/#drag-drop-or-browse","title":"Drag &amp; Drop or Browse","text":"<p>Once the user selects this upload method, the user gets clickable area where the user can drag &amp; drop a local file or click on it for browsing the file locally.</p>"},{"location":"archive/product/design/specs/table-import/#uri","title":"URI","text":"<p>Once the user selects this upload method, the user gets an input text block for URI where they can paste valid URI and click on continue to upload the file.</p>"},{"location":"archive/product/design/specs/table-import/#copy-paste-data","title":"Copy &amp; paste data","text":"<p>Once the user selects this upload method, the user gets a textarea to paste data for the table. Once the data is valid, the user can upload by clicking on the continue button.</p>"},{"location":"archive/product/design/specs/table-import/#processing-uploaded-file","title":"Processing Uploaded File","text":"<p>This is the stage where the uploaded file is processed. The user sees the progress and updates related to the import here. </p>"},{"location":"archive/product/design/specs/table-import/#status-indicators","title":"Status Indicators","text":"<p>On the processing screen there is a progress bar which indicates where the upload and import process is. There will also be small messages below the progress bar to keep user informed about the process/status.</p> <p>The user can also cancel the import by clicking on the cancel button. But the user will have to confirm the cancellation by the modal in the appropriate \u201cAbandon scenario\u201d below.</p>"},{"location":"archive/product/design/specs/table-import/#errors","title":"Errors","text":"<p>If there is any error in the import, the user will see an error message modal with the import screen in background. Cancelling the modal will take users back to import screen.</p>"},{"location":"archive/product/design/specs/table-import/#confirmating-the-uploaded-table","title":"Confirmating the uploaded table","text":""},{"location":"archive/product/design/specs/table-import/#components","title":"Components","text":""},{"location":"archive/product/design/specs/table-import/#table-name","title":"Table name","text":"<p>The user can rename the table on the confirmation stage. </p>"},{"location":"archive/product/design/specs/table-import/#use-first-row-as-header","title":"Use first row as header","text":"<p>This is a check box. If checked, the user can use the first row as the header.</p>"},{"location":"archive/product/design/specs/table-import/#table-summary","title":"Table summary","text":"<p>There is a small table summary above the table. </p>"},{"location":"archive/product/design/specs/table-import/#table","title":"Table","text":"<p>The table\u2019s first row are headers. This row has checkbox which is when checked the column is included in the table. The second row has the data type of the column. </p>"},{"location":"archive/product/design/specs/table-import/#table-height","title":"Table height","text":"<p>Since multiple scrolls on the screen is a bad UX. I propose limiting table\u2019s height to a certain percentage of the screen height. The percentage might be more clearer when we include styling part here. But as far as I think 25-35% of screen height for the table would suffice. </p>"},{"location":"archive/product/design/specs/table-import/#changing-data-type","title":"Changing data type","text":"<p>When the settings beside the data types is clicked, the user is presented with a choice of compatible data types. The compatible data types will be similar to the table view. The data options will not be available at this point. </p>"},{"location":"archive/product/design/specs/table-import/#abandoning-the-import","title":"Abandoning the import","text":"<p>The user can abandon import process at ceratin points in the journey.</p>"},{"location":"archive/product/design/specs/table-import/#abandoning-the-import-at-processing-stage","title":"Abandoning the import at processing stage","text":"<p>If the user abandons the import at the processing stage, the user will be given a warning in form of modal to notify that if they abandon this they will lose the file.</p>"},{"location":"archive/product/design/specs/table-import/#abandoning-the-import-at-confirmation-stage","title":"Abandoning the import at confirmation stage","text":"<p>If the user abandons the import at the confirmation stage, the user will be given a warning in form of modal to notify that if they want to abandon it or not.</p>"},{"location":"archive/product/design/specs/table-import/#uncomfirmed-table-on-the-schema-page","title":"Uncomfirmed table on the schema page","text":"<p>If the table is unconfirmed, there will be a warning icon on the side of table listing which when hovered on will have a confirm warning. When clicked on the table listing the user will be taken to confirmation stage.</p>"},{"location":"archive/product/design/specs/table-import/#usage-of-an-unconfirmed-table","title":"Usage of an unconfirmed table","text":"<p>If the user tries to use an unconfirmed table, there will be a modal for confirming the table where the user can directly confirm the table or go to the confirmation view. They won\u2019t be able to use it without confirming it.</p>"},{"location":"archive/product/design/specs/table-inspector/","title":"Table Inspector","text":""},{"location":"archive/product/design/specs/table-inspector/#legends","title":"Legends","text":"<ul> <li> <p>An important note</p> </li> <li> <p>Not part of Cycle 3</p> </li> </ul>"},{"location":"archive/product/design/specs/table-inspector/#context","title":"Context","text":"<p>Users can access information and setting options for each table component using the table inspector, including columns, rows, and cells.</p> <p>This is not a replacement for the cells\u2019 context menu, it will remain as-is.</p>"},{"location":"archive/product/design/specs/table-inspector/#design-goals","title":"Design Goals","text":"<ul> <li>Provide easy access to table component settings.</li> <li>Make features easier to discover.</li> </ul>"},{"location":"archive/product/design/specs/table-inspector/#enabling-and-disabling-the-table-inspector","title":"Enabling and Disabling the Table Inspector","text":"<p>The table inspector can be enabled or disabled manually or automatically based on event triggers.</p> <p>To manually enable the table inspector:</p> <ul> <li>Directly click on the inspector toggle located in the table toolbar to show the table inspector.</li> </ul> <p>Some events will automatically display the table inspector:</p> <ul> <li>Navigating to a newly created table after completing the data import process.</li> <li>Navigating to a newly created table after completing the column extraction process.</li> </ul> <p>To disable the table inspector:</p> <ul> <li>Directly click on the inspector toggle located in the table toolbar to hide the table inspector.</li> </ul> <p>Persisting the visibility state</p> <ul> <li>The visibility state of the table inspector will not be saved in any persisted storage, whenever the user navigates to a table, it will be opened initially.</li> </ul>"},{"location":"archive/product/design/specs/table-inspector/#positioning","title":"Positioning","text":"<p>When users enable the table inspector, a panel will appear on the right side of the screen, sharing the same container as the table and pushing its contents rather than being stacked on top of it.</p> <p>In some cases, this will cause the table portion of the layout to have a horizontal scroll.</p>"},{"location":"archive/product/design/specs/table-inspector/#inspector-modes","title":"Inspector Modes","text":"<p>At the top of the inspector panel is a row of tabs. Each tab includes table component-specific attributes and actions.</p> <p>The tabs are listed in the following order:</p> <ul> <li>Table (Default)</li> <li>Column</li> <li>Record</li> <li>Cell</li> </ul>"},{"location":"archive/product/design/specs/table-inspector/#using-the-table-inspector","title":"Using the Table Inspector","text":"<p>The table inspector can be in exactly one of the following modes, available as tabs on the UI:</p> <p>The mockups in the following sections has an \u201cEdit Selection\u201d button. This button will not be a part of the Cycle 3.</p> <p>The mockups in the following sections contains a \u201cDelete __\u201d button. This button will not be fixed at the bottom rather will a part of the normal flow inside the \u201cActions\u201d section</p>"},{"location":"archive/product/design/specs/table-inspector/#table-mode","title":"Table Mode","text":"<p>Shown when inspector mode is set to <code>Table</code>.</p> <p>Properties:</p> <ul> <li>Table Name</li> <li>Table Descriptions</li> <li>Record Summary</li> <li>Constraints</li> </ul> <p>Actions:</p> <ul> <li>Remove Duplicates</li> <li>Link Table</li> <li>Explore Data</li> <li>Delete Table</li> </ul> <p></p> <p></p>"},{"location":"archive/product/design/specs/table-inspector/#column-mode","title":"Column Mode","text":"<p>Shown when inspector mode is set to <code>Column</code>.</p> <p>Properties:</p> <ul> <li>Column Name</li> <li>If Column is Link:</li> <li>Link Source</li> <li>Sorting</li> <li>Grouping</li> <li>Allow NULL</li> <li>Allow Duplicates</li> <li>Data Type</li> <li>Database Options</li> <li>Format Options</li> </ul> <p>Actions:</p> <ul> <li>Extract Columns to Table</li> <li>Delete column</li> </ul> <p></p> <p></p>"},{"location":"archive/product/design/specs/table-inspector/#record-mode","title":"Record Mode","text":"<p>Shown when inspector mode is set to <code>Record</code>.</p> <p>Actions:</p> <ul> <li>Delete Record</li> <li>Duplicate Record</li> </ul> <p></p>"},{"location":"archive/product/design/specs/table-inspector/#cell-mode","title":"Cell Mode","text":"<p>Shown when inspector mode is set to <code>Cell</code>.</p> <p></p>"},{"location":"archive/product/design/specs/table-inspector/#user-interactions-inside-a-mode","title":"User interactions inside a mode","text":"<p>The UI inside the modes can be divided into exactly two sections</p> <ul> <li> <p>Properties: All the UI of the interactions in the \u201cProperties\u201d section will be embedded inside the table inspector itself including all \u201cEdit\u201d, \u201cSave\u201d, and \u201cCancel\u201d functionalities.</p> </li> <li> <p>Actions: Interactions inside the \u201cActions\u201d section will start a new flow by opening a modal/drawer which will require more inputs from the user.</p> </li> </ul>"},{"location":"archive/product/design/specs/table-inspector/#edit-mode-and-saving-the-changes","title":"Edit mode and saving the changes","text":"<p>Ideally any fields that do DDL operation should have an \u201cEdit\u201d button, then \u201cSave\u201d and \u201cCancel\u201d button to persist or discard the changes. But for the sake speed in this spec, any operation DDL that currently works without a \u201cSave\u201d button should continue to do so.</p> <p>Inline saving and editing requires the implementation of new UI interactions so that the user can toggle the \u2018Edit\u2019 mode and save or discard the changes. Details on this are provided in the Inline Saving Spec spec.</p> <ul> <li>Any operation that currently has a save button should have a \u201cSave\u201d button and an accompanying \u201cEdit\u201d button.</li> <li>The operations that currently do not support a \u201cSave\u201d button will remain a single-click operation.</li> </ul>"},{"location":"archive/product/design/specs/table-inspector/#actions-for-multiple-components-and-selection-status","title":"Actions for Multiple Components and Selection Status","text":"<p>Some actions can be performed on multiple table components at once.</p> <ul> <li> <p>With respect to Cycle 3, the only multi selection \u201cAction\u201d available will be \u201cColumn Extraction\u201d.</p> </li> <li> <p>The number of table components selected will be reflected in the selection status at the top of the panel.</p> </li> </ul>"},{"location":"archive/product/design/specs/table-inspector/#actions-panel","title":"Actions Panel","text":"<p>The actions panel provides users with ready-to-use actions for quickly manipulating tables, columns, or cells. The available actions are dependent on the active inspector mode.</p> <p>The actions, when clicked, should open a modal dialog with the corresponding action options if applicable. They should not include options directly into the table inspector.</p>"},{"location":"archive/product/design/specs/table-inspector/#future-considerations","title":"Future Considerations","text":"<p>I think the \u2018Actions\u2019 panel could include the data modeling suggestions in the future. It could also include shortcuts to create queries that include the filters set in a table or the group options into a summary.</p> <p></p>"},{"location":"archive/product/design/specs/table-inspector/#selection-modes","title":"Selection Modes","text":"<p>The selection will always be cell-based. Based on the range of selected cells, the inspector will display the corresponding properties for the related table components, like columns and records.</p> <p>This means that selecting a column, triggers the selection of all the cells in the column. The same goes for selecting a record, which triggers the selection of all the cells in the record.</p> <ul> <li>The selected rows and columns are derived from the rows and columns that contain selected cells.</li> <li>Row headers and column headers are styled to visually indicate the selected rows and selected columns.</li> <li>Unselected cells do not receive any special styling, even if they fall within a selected row or selected column.</li> </ul>"},{"location":"archive/product/design/specs/table-inspector/#multi-page-record-selection","title":"Multi-page record selection","text":"<p>Multi-page record selection in the current state is only used for deleting non-contiguous records across multiple pages. This spec discontinues this functionality which will mean that the user has no way to delete records across multiple pages until we do more design work at some point in the future.</p>"},{"location":"archive/product/design/specs/table-inspector/#to-select-all","title":"To Select All","text":"<ul> <li>Clicking on a row header selects all the cells within that row.</li> <li>Clicking on a column header selects all the cells within that column</li> </ul>"},{"location":"archive/product/design/specs/table-inspector/#to-deselect","title":"To Deselect","text":"<p>Deselect all selected items by clicking on a currently selected item, or on an empty space.</p>"},{"location":"archive/product/design/specs/table-inspector/#extending-a-selection","title":"Extending a Selection","text":"<p>We may consider including a \u201cSelection\u201d area in the inspector so that users can change the selection they\u2019re currently working with.</p> <p>This section could contain options such as:</p> <ul> <li>Extend selection</li> <li>Select all</li> <li>Select all columns with the same data type</li> </ul>"},{"location":"archive/product/design/specs/table-inspector/#keyboard-controls-and-touch-devices-considerations","title":"Keyboard Controls and Touch Devices Considerations","text":"<p>Users would be better served if the software could support keyboard controls. We\u2019ll look at how the inspector options are accessed and updated using the keyboard in a separate issue. We\u2019ll also look at how multi-object selection works on touch devices.</p>"},{"location":"archive/product/design/specs/table-inspector/#user-interface-considerations-and-examples","title":"User Interface Considerations and Examples","text":""},{"location":"archive/product/design/specs/table-inspector/#collapsible-sections","title":"Collapsible Sections","text":"<p>To make the table inspector\u2019s user interface more flexible, it should have expandable parts that can be collapsed and scrolled to.</p> <p></p>"},{"location":"archive/product/design/specs/table-inspector/#examples","title":"Examples","text":""},{"location":"archive/product/design/specs/table-inspector/#retool","title":"Retool","text":""},{"location":"archive/product/design/specs/table-inspector/#palantir","title":"Palantir","text":""},{"location":"archive/product/design/specs/table-inspector/#balsamiq","title":"Balsamiq","text":""},{"location":"archive/product/design/specs/table-operations/","title":"Basic Table Operations Spec","text":""},{"location":"archive/product/design/specs/table-operations/#context","title":"Context","text":"<p>Tables are database objects that contain all the data in a database. To manage, update and structure their database, users need to perform basic table operations such as adding new tables, editing their properties, and deleting them if needed. This spec describes the various steps and interfaces a user would have to interact with to perform these tasks.</p>"},{"location":"archive/product/design/specs/table-operations/#prototype","title":"Prototype","text":"<p>Table Operations Figma Prototype</p>"},{"location":"archive/product/design/specs/table-operations/#user-experience","title":"User Experience","text":""},{"location":"archive/product/design/specs/table-operations/#user-adds-a-new-table","title":"User adds a new table","text":"<p>A user can add a new table by clicking on the \u2018Add Table\u2019 button located in the schema navigation sidebar. Clicking on the \u2018Add Table\u2019 button will automatically insert a new table to the top of the list. The newly inserted table will have a placeholder name such as \u2018Unnamed Table\u2019 or \u2018Table 1\u2019 to allow users to refer to the table later if no user-defined name is provided during the table creation process.</p>"},{"location":"archive/product/design/specs/table-operations/#user-edits-a-new-table-name","title":"User edits a new table name","text":"<p>Users can update a table name during the table creation process, even before the table is saved, by replacing the table\u2019s placeholder name in the text input control located at the top of the tab content panel.</p>"},{"location":"archive/product/design/specs/table-operations/#user-edits-an-existing-table-name","title":"User edits an existing table name","text":"<p>If the table has been saved, the user can always access the table name input by clicking on the table name heading on the top of the tab content panel.</p>"},{"location":"archive/product/design/specs/table-operations/#user-adds-an-empty-table","title":"User adds an empty table","text":"<p>During the table creation process, a user might choose to add an empty table. Once they select this option, there are no other steps required, and the user can start modifying the table\u2019s content from scratch. Only a protected mathesar ID field is created, which gets populated once the user saves new data. To enter user-defined data, a user must create a new column field. </p>"},{"location":"archive/product/design/specs/table-operations/#user-adds-a-table-from-imported-data-via-clipboard-content","title":"User adds a table from imported data via clipboard content","text":"<p>A user might choose to create a new table from imported data. In which case, they have multiple options, such as uploading a file, pasting content from the clipboard, or downloading the file from a URL. In the case of clipboard content, the user can paste the contents of a CSV file or copy and paste from spreadsheet apps, such as Google Sheets or Excel. Mathesar will recognize the format and generate a table accordingly.</p>"},{"location":"archive/product/design/specs/table-operations/#user-adds-a-new-table-from-imported-data-via-url","title":"User adds a new table from imported data via URL","text":"<p>A user might also have a link that points to a valid file that they want to import. In this case, the user can point to the file by entering a web address.</p>"},{"location":"archive/product/design/specs/table-operations/#user-deletes-a-table","title":"User deletes a table","text":"<p>The option to delete a table is available in the context menu located in the table\u2019s toolbar at the top of the tab panel. If the table is not empty, the user will have to confirm the deletion. </p>"},{"location":"archive/product/design/specs/table-operations/#interactions","title":"Interactions","text":""},{"location":"archive/product/design/specs/table-operations/#sequential-table-names","title":"Sequential Table Names","text":"<p>A user might add multiple tables without user-defined names, in which case the system can assign a numerical appendix to the placeholder name. </p>"},{"location":"archive/product/design/specs/table-operations/#input-errors","title":"Input Errors","text":"<p>Inputs that contain validation errors should provide users with a clear reason for what is causing the error and how to fix it. These messages should become visible when the user interacts with the field, either hovering or focusing on it.</p>"},{"location":"archive/product/design/specs/table-operations/#bulk-table-operations","title":"Bulk Table Operations","text":"<p>Performing operations on a single table at a time can quickly become an issue if the user has many tables. Bulk operations will be considered in a future iteration.</p>"},{"location":"archive/product/design/specs/table-operations/#review-notes","title":"Review Notes","text":""},{"location":"archive/product/design/specs/table-operations/#placeholder-names","title":"Placeholder Names","text":"<p>Naming tables should be optional at the moment of creation. The user should get a naming suggestion every time they create a new table. Mathesar should have the ability to auto-generate such names with incremental numbers. The decision to do so in the front-end or back-end will be decided later.</p>"},{"location":"archive/product/design/specs/table-operations/#table-options-menu","title":"Table Options Menu","text":"<p>A menu that contains table-related options can be accessed from the top toolbar. This menu should have additional functionality in the future, such as \u2018Duplicate Table,\u2019 which is only included now for reference.</p>"},{"location":"archive/product/design/specs/table-operations/#showing-related-tables-and-views-in-the-delete-dialog","title":"Showing Related Tables and Views in the Delete Dialog","text":"<p>When a user decides to delete a table, they will have to review a list of all related tables and views before confirming their choice.</p>"},{"location":"archive/product/design/specs/ui-styling/","title":"User Interface Style","text":""},{"location":"archive/product/design/specs/ui-styling/#context","title":"Context","text":"<p>Mathesar\u2019s user interface design encompasses its visual elements and interactions\u2019 aesthetic, responsiveness, efficiency, and accessibility. Essentially what the user sees when they interact with the product.</p>"},{"location":"archive/product/design/specs/ui-styling/#general-guidelines","title":"General Guidelines","text":""},{"location":"archive/product/design/specs/ui-styling/#fonts","title":"Fonts","text":"<p>Mathesar\u2019s user interface should incorporate a readable sans-serif font that is optimized for web and mobile interfaces.</p>"},{"location":"archive/product/design/specs/ui-styling/#scale","title":"Scale","text":"<p>The distance between the smallest and largest font size on a typographic scale should be minimal and just enough to create contrast and hierarchy between content. </p>"},{"location":"archive/product/design/specs/ui-styling/#contrast","title":"Contrast","text":"<p>The design should employ contrast to improve the readability of interface elements and increase the visual relevance of some interactive elements.</p>"},{"location":"archive/product/design/specs/ui-styling/#accesibility","title":"Accesibility","text":"<p>The contrast of the design should be based on Web Content Accessibility Guidelines. (WCAG)</p>"},{"location":"archive/product/design/specs/ui-styling/#colors","title":"Colors","text":"<p>The design should support both light and dark modes and apply colors in a way that emphasizes important elements that assist users in:</p> <ul> <li>Identifying type of objects (table, views)</li> <li>Differentiating states of objects (active, default, disabled)</li> <li>Cell, row, and column positioning</li> <li>Status of a task (saving, loading, adding, deleting)</li> </ul>"},{"location":"archive/product/design/specs/ui-styling/#themes","title":"Themes","text":"<p>The design should allow modification of its colors via themes so that users can suit it to their preferences.</p>"},{"location":"archive/product/design/specs/ui-styling/#palette","title":"Palette","text":""},{"location":"archive/product/design/specs/ui-styling/#icons","title":"Icons","text":""},{"location":"archive/product/design/specs/ui-styling/#library-vs-custom","title":"Library vs. Custom","text":""},{"location":"archive/product/design/specs/ui-styling/#interactions","title":"Interactions","text":""},{"location":"archive/product/design/specs/ui-styling/#menus","title":"Menus","text":""},{"location":"archive/product/design/specs/ui-styling/#buttons","title":"Buttons","text":""},{"location":"archive/product/design/specs/ui-styling/#table-actions","title":"Table Actions","text":""},{"location":"archive/product/design/specs/url-data-type/","title":"URL Data Type","text":""},{"location":"archive/product/design/specs/url-data-type/#context","title":"Context","text":"<p>URL data types are custom Mathesar data types used to store URLs.</p>"},{"location":"archive/product/design/specs/url-data-type/#prototype","title":"Prototype","text":"<p>Warning</p> <p>This prototype might be outdated due to global component updates. Please refer to the link under \u2018Setting Options\u2019 for an updated version of the shared components.</p> <p>URL Data Type Prototype</p>"},{"location":"archive/product/design/specs/url-data-type/#user-experience","title":"User Experience","text":""},{"location":"archive/product/design/specs/url-data-type/#scenarios","title":"Scenarios","text":""},{"location":"archive/product/design/specs/url-data-type/#user-sets-a-column-to-url-data-type","title":"User sets a column to \u2018URL\u2019 data type","text":"<p>The user can set the column data type to \u2018URL\u2019 by accessing the \u2018Data Type Options\u2019 in the columns header menu. Depending on whether there are existing values or not, and if they are valid URL values, the outcomes will vary: If there are valid URL values, the system will convert them to URL types. For example, a valid URL could be:</p> <p><code>www.website.com</code> <code>http://www.website.com</code> <code>mailto:name@website.com</code> <code>name@website.com</code> <code>www.website.com/?url=has-querystring</code></p> <p>If there are no valid URL values, the system will discard the existing values and default to an empty cell.</p>"},{"location":"archive/product/design/specs/url-data-type/#setting-options","title":"Setting Options","text":"<p>The following is an interactive representation of the various options that users can set for this type: URL Type Options</p>"},{"location":"archive/product/design/specs/url-data-type/#user-enters-a-new-url-data-type-value","title":"User enters a new \u2018URL\u2019 data type value","text":"<p>The user might enter a new \u2018URL\u2019 value with a valid format. If the value is not a valid URL, an error should be displayed, preventing the row from being saved.</p>"},{"location":"archive/product/design/specs/url-data-type/#user-filters-an-url-data-type-column","title":"User filters an \u2018URL\u2019 data type column","text":"<p>Users can filter \u2018URL\u2019 data type columns by regular \u2018Text\u2019 type filters (except for length filters which are exclusive to text types) as well as \u2018URL\u2019 specific filters such as hostname.</p>"},{"location":"archive/product/design/specs/url-data-type/#user-groups-a-url-data-type-column","title":"User groups a \u2018URL\u2019 data type column","text":"<p>Users can group \u2018URL\u2019 data types columns by first letter, URI scheme, or URI host.</p>"},{"location":"archive/product/design/specs/viewing-views-specs/","title":"Viewing a View","text":"<p>Danger</p> <p>This spec is outdated and should not be followed.</p>"},{"location":"archive/product/design/specs/viewing-views-specs/#context","title":"Context","text":"<p>Views can help users make sense of the data they have in tables and the references between them. However, when coming from the context of spreadsheet-like interfaces, a user might experience some difficulties incorporating views into their process. An optimal design solution would make table associations in the context of views easy to understand and modify if needed. </p>"},{"location":"archive/product/design/specs/viewing-views-specs/#prototype","title":"Prototype","text":"<p>Prototype for Viewing Views</p>"},{"location":"archive/product/design/specs/viewing-views-specs/#user-experience","title":"User Experience","text":""},{"location":"archive/product/design/specs/viewing-views-specs/#scenarios","title":"Scenarios","text":""},{"location":"archive/product/design/specs/viewing-views-specs/#a-user-understands-that-columns-in-a-view-are-referenced","title":"A user understands that columns in a view are referenced","text":"<p>Because views look exactly like tables, users who are new to views might have difficulty understanding why they can\u2019t edit something or why some fields might be missing from the referenced table or present from other tables.</p> <p>Warning</p> <p>Note that at this point, users can only select other columns and add them to the view without performing aggregations or data transformations. The design, as it is currently described, does not contemplate those scenarios.  </p>"},{"location":"archive/product/design/specs/viewing-views-specs/#using-color","title":"Using Color","text":"<p>The icons at the column header label could show the different referenced fields present in a given view by identifying them by colors. These interface elements could help users understand how many tables are referenced and which fields belong to the same table.</p>"},{"location":"archive/product/design/specs/viewing-views-specs/#displaying-reference-in-a-view-columns-menu","title":"Displaying reference in a view column\u2019s menu","text":"<p>The menu for columns in views has slight differences compared to that of tables. For example, it doesn\u2019t allow changing database settings such as data types. Users can, however, view the referenced column details, navigate to the parent table or change the referenced field. </p>"},{"location":"archive/product/design/specs/viewing-views-specs/#viewing-a-list-of-all-referenced-entities","title":"Viewing a list of all referenced entities","text":"<p>A user might want to see a complete list of all referenced entities rather than opening details for every column in a view. In that case, they can click on the \u2018Referenced Entities\u2019 option located in the \u2018View Options\u2019 menu.</p>"},{"location":"archive/product/design/specs/viewing-views-specs/#a-user-filters-sorts-or-groups-data-in-a-view","title":"A user filters, sorts, or groups data in a view","text":"<p>Users can apply filters, sorts, or groups as they\u2019d do in tables when working from a view. The only difference is that users can save the resulting query into the current view or a new one. A table cannot have saved filters. The only way to keep them is to create a view from a filtered table.</p>"},{"location":"archive/product/design/specs/viewing-views-specs/#a-user-views-the-query-that-created-a-view","title":"A user views the query that created a view","text":"<p>Users can access the system\u2019s query to generate a view from the \u2018View Options\u2019 menu in the view toolbar area.</p>"},{"location":"archive/product/design/specs/views-one-to-many-relationships/","title":"One-to-Many Relationships","text":"<p>Danger</p> <p>This spec is outdated and should not be followed.</p>"},{"location":"archive/product/design/specs/views-one-to-many-relationships/#context","title":"Context","text":"<p>Users within Mathesar will want to create relationships between tables for different purposes. For example, they might have an \u2018artist_id\u2019 column in an artist\u2019s table, and they want to relate that with the artist\u2019s releases on another table. For that, each \u2018releases\u2019 table record is linked to an artist on the \u2018artist\u2019 table with the same \u2018artist_id.\u2019</p>"},{"location":"archive/product/design/specs/views-one-to-many-relationships/#primary-and-foreign-keys","title":"Primary and Foreign Keys","text":"<p>Primary and foreign keys are the basis of a relational database. They allow tables to be referenced from other tables. Allowing not only to connect the data from the tables in meaningful ways but also to maintain data integrity. In the context of Mathesar, we attempt to help users incorporate these concepts in their database design while simplifying the experience so that users can create table relations without fully understanding how primary and foreign keys work. Ideally, users will want to relate a table to another, and throughout the process, discover the role that key constraints have in performing these actions. This will happen at first by understanding the purpose for the automatically generated primary key that Mathesar adds to every record and later when referencing this key from another table. Because Mathesar seeks to maintain access and visibility of all the tables in the database, there might be some friction in how users familiarize themselves with the concept of related tables at first. They will have to use views to reference other table\u2019s data to be more compatible with the spreadsheet standard.</p>"},{"location":"archive/product/design/specs/views-one-to-many-relationships/#prototype","title":"Prototype","text":"<p>One-to-Many Relationship Prototype</p>"},{"location":"archive/product/design/specs/views-one-to-many-relationships/#user-experience","title":"User Experience","text":""},{"location":"archive/product/design/specs/views-one-to-many-relationships/#scenarios","title":"Scenarios","text":""},{"location":"archive/product/design/specs/views-one-to-many-relationships/#a-user-changes-a-columns-settings-to-link-to-another-table","title":"A user changes a column\u2019s settings to link to another table","text":"<p>A user can set a column to reference another table\u2019s data by selecting the option \u2018Link to Another Table\u2019 from the column\u2019s header menu. This action should open a modal where the user can choose a referenced table and set additional options.</p>"},{"location":"archive/product/design/specs/views-one-to-many-relationships/#a-user-selects-a-referenced-table-for-the-new-linked-column","title":"A user selects a referenced table for the new linked column","text":"<p>A user can reference any table where a primary key is set as long as they are in the same schema. The table selector displays not only the table name but also the primary key column for reference.</p>"},{"location":"archive/product/design/specs/views-one-to-many-relationships/#a-user-enters-data-into-a-linked-column","title":"A user enters data into a linked column.","text":"<p>Once the linked column has been successfully set up, the user can begin to enter data. The values of the related fields must match exactly any of the values specified in the referenced table\u2019s lookup field.</p>"},{"location":"archive/product/design/specs/views-one-to-many-relationships/#a-user-deletes-a-linked-record-in-the-reference-table","title":"A user deletes a linked record in the reference table.","text":"<p>Records from a referenced table that have been linked in other tables can be deleted as long as the user unchecks the \u2018Allow Orphan Records\u2019 option while setting up the table relation. While there are reasons why a user might choose to do this, the default should remain to restrict the record\u2019s deletion. A warning would display, indicating that the user must first remove the record\u2019s key reference from the other table.</p>"},{"location":"archive/product/design/specs/views-one-to-many-relationships/#a-user-transforms-a-linked-column-into-a-regular-one","title":"A user transforms a linked column into a regular one.","text":"<p>If users decide that they no longer want to reference a table from a column, they can unlink it. This action will not affect the content of the column\u2019s fields; however, the system will remove the foreign key constraints and set the data type to that of the referenced table\u2019s primary key type. Users can unlink a column by clicking on the \u2018Unlink Column\u2019 option in the column\u2019s header menu.</p>"},{"location":"archive/product/design/specs/views-one-to-many-relationships/#a-user-sees-a-list-of-table-constraints","title":"A user sees a list of table constraints","text":"<p>Table constraints need to reflect all applied constraints accurately. For that reason, every time a column is linked to another table, the system will add the foreign key constraint to the list. These constraints will be read-only.</p>"},{"location":"archive/product/design/specs/views-one-to-many-relationships/#a-user-changes-the-default-lookup-field-for-a-table","title":"A user changes the default lookup field for a table","text":"<p>For every table created within Mathesar, a lookup field is assigned by default. The default value will be assigned based on the column\u2019s position, with the first column after the ID column set as default. A user, for any reason, might want to change this, in which case they can select another lookup field by accessing the \u2018Set Lookup Field\u2019 menu item from the \u2018Table Actions\u2019 menu.</p>"},{"location":"archive/product/design/specs/views-one-to-many-relationships/#review-notes","title":"Review Notes","text":""},{"location":"archive/product/design/specs/views-one-to-many-relationships/#context-sensitive-save-indicators","title":"Context-sensitive save indicators","text":"<p>We need to address how save indicators will be displayed for users, as well as a common location to provide context.</p>"},{"location":"archive/product/design/specs/visual-query-builder/","title":"Data Explorer","text":""},{"location":"archive/product/design/specs/visual-query-builder/#context","title":"Context","text":"<p>\u2018Data Explorer,\u2019 Mathesar\u2019s visual query builder, is described in this document. Users can analyze data, link data from other tables, and transform it using this feature.</p>"},{"location":"archive/product/design/specs/visual-query-builder/#mathesar-queries-vs-sql-queries","title":"Mathesar Queries vs. SQL Queries","text":"<p>The queries generated in the \u2018Data Explorer\u2019 will be listed and saved as queries within Mathesar. In contrast to standard database queries, \u201cMathesar queries\u201d are not stored as SQL commands. This Mathesar-specific object was created because otherwise, it would be impossible to reproduce user configurations.</p> <p>Read the Views Product Spec for a more in-depth explanation of this feature.</p>"},{"location":"archive/product/design/specs/visual-query-builder/#accessing-data-explorer","title":"Accessing Data Explorer","text":"<p>\u2018Data Explorer\u2019 will be accessible in several ways because it is an essential step in numerous user flows.</p> <p>There are many ways to access \u2018Data Explorer.\u2019 The navigation updates specification goes into detail about each one.</p> <p>Updates on the Navigation</p>"},{"location":"archive/product/design/specs/visual-query-builder/#scenarios","title":"Scenarios","text":""},{"location":"archive/product/design/specs/visual-query-builder/#selecting-the-base-table","title":"Selecting the Base Table","text":"<p>The base table determines which columns and links are available as input columns. When a user adds columns from linked tables, the base table also determines the automatic joins performed.</p>"},{"location":"archive/product/design/specs/visual-query-builder/#table-links","title":"Table Links","text":"<p>Tables can be linked to the base table using foreign keys that can be located in the base table or in other tables. The columns from all linked tables are shown in the column list and grouped according to the corresponding source\u00a0table.</p> <p>For each foreign key column, a collapsible list is automatically added to the list. Once expanded, a list of all the columns in the source table is displayed.</p>"},{"location":"archive/product/design/specs/visual-query-builder/#join-types","title":"Join Types","text":"<p>Although SQL has additional join options, the system will restrict joins to \u2018LEFT JOIN\u2019 type alone, in order to simplify things for less technical users and make it easier for them to learn the new concepts.</p>"},{"location":"archive/product/design/specs/visual-query-builder/#changing-the-base-table","title":"Changing the base table","text":"<p>The user should set a base table at the start of the query building process. Changing it after the input columns have been selected will result in losing all progress.</p> <p>A warning should be issued to users, so they know the implications of making this change.</p>"},{"location":"archive/product/design/specs/visual-query-builder/#base-table-options","title":"Base Table Options","text":"<p>The system will show all schema tables in the base table selector.</p> <p>To choose a table, the user must first find it in the list and then click on it. They can also use the search box in the table selection menu to locate the table by filtering the list by table name.</p> <p>After making a selection, the name of the base table is displayed in the selector, and previously disabled interface elements in \u2018data explorer\u2019 become interactive.</p> <p>After selecting a base table, the user will be directed to the next stage, column selection.</p> <p>Wireframes</p> <p>Selecting a Base Table</p> <p>Base Table Selected</p>"},{"location":"archive/product/design/specs/visual-query-builder/#the-input-table","title":"The Input Table","text":"<p>The input table is built by selecting columns from the base table or generating new ones using formulas.</p>"},{"location":"archive/product/design/specs/visual-query-builder/#adding-input-columns","title":"Adding Input Columns","text":"<p>To add columns to a query configuration panel, the user must first select the <code>Add Column</code> button in the <code>Columns</code> portion of the query configuration panel. Due to this action, the <code>Column Selector</code> component will be displayed in the inspector panel. The <code>Column Selector</code> will display a list of all available columns and those already in use. In addition, a complete list of all formulas will be available.</p> <p>The columns in <code>Column Selector</code> are listed in a hierarchical structure based on the links that exist in both directions between the base table and other tables. The icons indicate whether the linked records are a single or multiple record collection.</p> <p>Links are presented as nested sections containing the columns from the linked tables. When adding input columns, the user can add them using the list controls or drop the columns directly into the result table.</p>"},{"location":"archive/product/design/specs/visual-query-builder/#column-selection-modes","title":"Column Selection Modes","text":"<p>Depending on the interaction, columns may be selected in a variety of ways:</p> Selection Mode Interaction Single Selection Click a list item Drop Single Column Click and drag list item to drop area Multiple Selection Click + Shift Key to select first and all items in between. For non-contiguous items, Click + Control Key."},{"location":"archive/product/design/specs/visual-query-builder/#naming-convention","title":"Naming Convention","text":"<p>The system will default name columns to indicate their source table and column using the naming convention.</p>"},{"location":"archive/product/design/specs/visual-query-builder/#columns-with-multiple-records","title":"Columns with Multiple Records","text":"<p>Depending on how tables are linked, some columns might contain multiple records associated with a record in the base table. Specific functionality to manage those records should be available to users.</p> Functionality User Goals Filter Show only a subset of the linked records Aggregate Display the multiple records as a combined record Display Formats Change the way each record item is displayed Sort Change the order in which the linked records are displayed Limit Limit the number of linked records"},{"location":"archive/product/design/specs/visual-query-builder/#data-type-changes","title":"Data Type Changes","text":"<p>When columns are added to the input table, their data type may differ from the source. A \u2018Text Type\u2019 column, for example, will change to a \u2018Text List Type\u2019 or \u2018Number Type\u2019 when added as a multiple record column due to automatic aggregation.</p> <p>Wireframes</p> <p>Adding Columns</p> <p>Added Column</p>"},{"location":"archive/product/design/specs/visual-query-builder/#input-column-sources","title":"Input Column Sources","text":"<p>Once the input columns have been added, the user can inspect them by selecting each from the result table or the list of columns in the query configuration panel. The panel will include a section titled \u2018Source\u2019 in the details for each column. The source column, table, and links will all be listed in this panel portion.</p> <p>The source will include <code>Links</code> only for data sourced via tables connected to or from the base table.</p> <p>Wireframes</p> <p>Column Sources</p>"},{"location":"archive/product/design/specs/visual-query-builder/#adding-formulas","title":"Adding Formulas","text":"<p>Formulas are used to generate new columns based on different parameters. To access the formulas list, the user starts the <code>Add Column</code> process and selects the option <code>From Formula</code> at the top of the inspector panel. Selecting a formula will open a form that users can fill out to determine the values of the new column.</p> <p>Depending on the selected formula, different settings will be available. More on formulas and specific details for each will be covered in a separate issue. Columns generated from formulas will display a formula icon indicator in the column header.</p> <p>Wireframes</p> <p>Added Formula</p>"},{"location":"archive/product/design/specs/visual-query-builder/#filtering-input-column-values","title":"Filtering Input Column Values","text":"<p>Columns that link to multiple records can have filters applied to them to retrieve only values that match user-specified criteria. Multiple filters are allowed for each input column.</p> <p>Filter options will be determined by the data type of the input column.</p> <p>Users can add filters by clicking on the <code>Add Filter</code> option from the query configuration panel or directly from the column header menu in the results table.</p> <p>Columns with filters applied will display a filter icon indicator in the column header.</p> <p>Wireframes</p> <p>Added Input Filter</p>"},{"location":"archive/product/design/specs/visual-query-builder/#aggregating-input-column-values","title":"Aggregating Input Column Values","text":"<p>In cases where a link may refer to multiple values, input columns can be aggregated. In such cases, the system will perform automatic aggregation based on the data type of the referenced column. Users can change the type of aggregation at any time.</p> <p>Aggregated columns will have an aggregation icon indicator in the column header.</p> <p>Wireframes</p> <p>Added Input Aggregation</p>"},{"location":"archive/product/design/specs/visual-query-builder/#applying-a-formula-to-an-input-column","title":"Applying a Formula to an Input Column","text":"<p>Direct input columns can also be transformed into formulas. The available formulas will depend on the input column type.</p> <p>The user will select the <code>Apply Formula</code> option in the column header menu to transform the input column into a formula.</p> <p>Wireframes</p> <p>Applying a Formula</p>"},{"location":"archive/product/design/specs/visual-query-builder/#applying-transformations-to-the-result-table","title":"Applying Transformations to the Result Table","text":"<p>The result table refers to the resulting table from all input columns selected and added, including filters and aggregations. Users can transform this output by applying output filters, sorts, and summarizations to the result table.</p>"},{"location":"archive/product/design/specs/visual-query-builder/#filtering-the-output-table","title":"Filtering the Output Table","text":"<p>Users can filter the output table by adding a filter step to any column from the result table. The column selector, in this scenario, will only allow users to select input columns rather than the whole column list from the column selection stage.</p> <p>Wireframes</p> <p>Output Filter</p>"},{"location":"archive/product/design/specs/visual-query-builder/#summarizing-the-result-table","title":"Summarizing the Result Table","text":"<p>The <code>Summarization</code> step lets users generate a summarized version of the result table. When added, the system will group the table values based on a summary column of their choice. The summary can be done using the summary column\u2019s exact values or the data type\u2019s available grouping options.</p> <p>To summarize the table, the user selects the <code>Summarize</code> option from the result transformations menu and adds the step. Once added, the remaining columns are automatically assigned an aggregation function, which users can change at any time. The data type of the output column is used to infer aggregates.</p> <p>Wireframes</p> <p>Output Summarization</p> <p>Summarization Options</p>"},{"location":"archive/product/design/specs/visual-query-builder/#sorting-the-output-table","title":"Sorting the Output Table","text":"<p>Users can sort the output table by applying a sort to any result table columns.</p> <p>To sort the table, the user selects the <code>Sort</code> option from the result transformations menu and adds it to the list. Once added, the user can set a column and a direction for the sort.</p> <p>Wireframes</p> <p>Output Sorting</p>"},{"location":"archive/product/design/specs/visual-query-builder/#adding-a-new-column-to-a-summarized-table","title":"Adding a New Column to a Summarized Table","text":"<p>If the result table has transformations applied, new columns will be added automatically to the summarization steps and an aggregation set by default.</p> <p>Wireframes</p> <p>Adding New Column</p>"},{"location":"archive/product/design/specs/visual-query-builder/#deleting-a-result-transformation-step","title":"Deleting a Result Transformation Step","text":"<p>To delete a result transformation step, the user can click on the <code>Delete</code> button present in each step item. Deleting a step means that the system will undo all transformations made through that step, and the result table will reflect the updated output.</p> <p>When subsequent steps rely on columns resulting from a deleted step, the system will display error warnings for every failed step. The table output will only reflect the output generated by those stages without errors.</p> <p>Wireframes</p> <p>Deleting a Transformation Step</p>"},{"location":"archive/product/design/specs/visual-query-builder/#previewing-the-query-results","title":"Previewing the Query Results","text":"<p>A preview, or query result table, should be visible while the user is in <code>Data Explorer.</code> The result table will change based on the different configurations. For example, if a user applies a filter, the system should refresh the table to show the output with the filter applied.</p>"},{"location":"archive/product/design/specs/visual-query-builder/#saving-the-query-as-a-view","title":"Saving the Query as a View","text":"<p>Under <code>Save Options</code>, the user can name the resulting query and choose to save it. This would save the view as a query the system would run every time the user opens it.</p>"},{"location":"archive/product/design/specs/visual-query-builder/#troubleshooting-and-resolving-errors","title":"Troubleshooting and Resolving Errors","text":""},{"location":"archive/product/design/specs/visual-query-builder/#the-result-table-has-no-rows","title":"The result table has no rows","text":"<p>The result table could be empty if a filter returns no results or if the base table is empty. Since queries will run every time the user opens a view, it is possible that the data has changed or that the filter condition returns no results.</p> <p>Providing a count of rows and columns from the original base table would eliminate confusion around the data source (the table is not empty).</p> <p>Additionally, users should be able to identify which input columns are filtered, see the applied criteria for each filter and remove the filters if needed.</p>"},{"location":"archive/product/design/specs/visual-query-builder/#there-are-duplicate-values","title":"There are duplicate values","text":"<p>If a user adds a column with multiple records without an aggregation, values from other columns will be duplicated. Adding aggregations by default for columns with multiple records would help users discover this functionality.</p> <p>The system can determine the aggregation formula based on the column\u2019s data type.</p>"},{"location":"archive/product/design/specs/visual-query-builder/#an-input-column-used-in-a-formula-has-been-deleted","title":"An input column used in a formula has been deleted","text":"<p>If a user deletes an input column utilized in a formula, that formula column must display the error and prompt the user to resolve it. The user can replace the affected column with another one or delete the formula column.</p>"},{"location":"archive/product/design/specs/visual-query-builder/#other-considerations","title":"Other Considerations","text":""},{"location":"archive/product/design/specs/visual-query-builder/#column-naming-convention","title":"Column Naming Convention","text":"<p>Input column names, when constructed, should have generated names that reference the source of the columns. For example, a column <code>full_name</code> from the <code>Person</code> table, linked by the column <code>actor_id</code> in <code>Movie,</code> would be named <code>movie_actor full_name.</code></p> <p>When column names fit the patterns employed in Mathesar, we might detect unnecessary suffixes like <code>id</code> and strip them out to shorten the names (e.g., <code>sequel title</code> instead of <code>sequel_id title</code>).</p> <p>Additionally, the generated name can include a link hierarchy. For example <code>sequel_prequel_sequel title</code> for a column named <code>title</code> added through Movie\u2019s <code>sequel_id</code>\u2019s <code>prequel_id</code>\u2019s <code>sequel_id</code>.</p> <p>Users can alter the default names at any time and still see the source information under the column details.</p>"},{"location":"archive/product/design/specs/visual-query-builder/#inspector-panel-modes","title":"Inspector Panel Modes","text":"<p>The inspector panel can be displayed in various modes depending on the currently active and selected objects. For example, clicking on a column will change the inspector\u2019s content to show the details for that column.</p> <p>Inspector displays query details and saves options by default.</p>"},{"location":"archive/product/design/specs/visual-query-builder/#column-selection","title":"Column Selection","text":"<p>The column selection mode is activated by clicking on the <code>Add Column</code> option in the column selection step. When active, this inspector mode will list columns:</p> <ul> <li>from the base table</li> <li>from tables with links in the base table</li> <li>from tables with links to the base table</li> </ul> <p>Questions</p> <ul> <li>How will users know where to begin when using Data Explorer?</li> <li>Is it possible to disable aggregation by default?</li> <li>Should we display the primary key id from the base table?</li> <li>How do we handle a view that is out of sync, where objects may be modified outside Mathesar?</li> <li>Where are edit actions performed? What can be modified in a view or data explorer?</li> <li>What if we only showed Mathesar views and kept non-Mathesar views hidden?</li> <li>How are the view and query connected if you save a view associated with the query at that time?</li> <li>When a view query changes, how can we tell?</li> </ul>"},{"location":"archive/product/design/specs/working-with-columns/","title":"Working with Columns","text":"<p>Warning</p> <p>This spec is in the review process, and its contents are subject to change. </p>"},{"location":"archive/product/design/specs/working-with-columns/#context","title":"Context","text":"<p>Working with columns is a central part of a user\u2019s database structuring experience, mainly when tables aren\u2019t imported, instead created within Mathesar. It is then on the user to add them, set the data types and other properties according to their needs. This spec describes the steps and components users would have to interact with to structure a table from scratch and populate it with data.</p>"},{"location":"archive/product/design/specs/working-with-columns/#prototype","title":"Prototype","text":"<p>Working with Columns Figma Prototype</p>"},{"location":"archive/product/design/specs/working-with-columns/#user-experience","title":"User Experience","text":"<p>The user experience for adding columns looks to favor default settings so that a user can structure a table without worrying too much about explicitly defining columns properties at every step. </p>"},{"location":"archive/product/design/specs/working-with-columns/#user-adds-a-new-column","title":"User adds a new column","text":"<p>Users can add new columns by using the add column button next to the last column or by toggling the menu on any column header to insert a new column at the location.</p>"},{"location":"archive/product/design/specs/working-with-columns/#user-deletes-a-column","title":"User deletes a column","text":"<p>Users can delete a column by toggling the column header menu and choosing the option to \u2018Delete Column.\u2019 In case the column deletion affects other tables or views, the user should receive a warning.</p>"},{"location":"archive/product/design/specs/working-with-columns/#user-renames-a-column","title":"User renames a column","text":"<p>Users can change a column name at any time without affecting other tables and views referencing it. The user can click on its name label or choose the \u2018Rename Column\u2019 option from the column\u2019s header menu to rename a column.</p>"},{"location":"archive/product/design/specs/working-with-columns/#user-edits-a-column-type","title":"User edits a column type","text":"<p>Users can choose the column data type by choosing from the data types dropdown menu.</p>"},{"location":"archive/product/design/specs/working-with-columns/#implementation-notes","title":"Implementation Notes","text":"<p>Ideally, users should only change the column data type if it matches their data. Still, when there are inconsistencies, the user will have to resolve them or cancel the data type re-assignment. We will deal with these types of errors when working with specific data types.</p>"},{"location":"archive/product/design/specs/working-with-columns/#user-changes-column-settings-to-disallow-empty-values","title":"User changes column settings to disallow empty values","text":"<p>Users can alter the column settings to allow or disallow empty (null or empty string) values. If changed, and if the column contains empty values, a warning message will appear, and the system will not save the change. The user can then choose to show a filtered view of the table showing the values that the user must change to alter the column constraint.</p>"},{"location":"archive/product/design/specs/working-with-columns/#user-changes-column-settings-to-disallow-duplicate-values","title":"User changes column settings to disallow duplicate values","text":"<p>Users can also change column settings to prevent duplicate entries. If set from the column options, the unique constraint will only affect the values on that specific column.</p>"},{"location":"archive/product/design/specs/working-with-columns/#user-changes-table-unique-constraint-settings","title":"User changes table unique constraint settings","text":"<p>Users can set table-level constraints by accessing the table properties menu found on the table toolbar area. Changing these settings will impact the entire table. </p>"},{"location":"archive/product/design/specs/working-with-columns/#user-sets-the-default-value-for-a-column","title":"User sets the default value for a column","text":"<p>A user might want to set a default value so that every new record contains the appropriate value. In this case, the user can choose from no value, a zero value for numerical types, or a default value. The options will vary depending on the set data type.</p>"},{"location":"archive/product/design/specs/working-with-columns/#review-notes","title":"Review Notes","text":""},{"location":"archive/product/design/specs/working-with-columns/#labeling-of-menus","title":"Labeling of  Menus","text":"<p>Menus that list options for different objects, such as tables, columns, and records, should be easily discovered by users. We have simplified the column-related options to a single menu that users can access in context from the column header. As for table-related actions, we have updated the label to \u2018Table Actions\u2019 for increased clarity. Once all controls and options for the MVP are in place, we will revisit all labels to ensure we are applying the same consistent patterns across the entire app.</p>"},{"location":"archive/product/design/specs/working-with-columns/#null-empty-blank-fields","title":"NULL, Empty, Blank Fields","text":"<p>To simplify the way we handle the filtering of columns based on the content of a field, we have nested the NULL condition under the \u2018Empty\u2019 definition, which also includes empty strings. </p>"},{"location":"archive/product/design/specs/working-with-columns/#providing-options-to-solve-problems-when-presenting-warnings-help-me-fix-this-problem","title":"Providing options to solve problems when presenting warnings (Help me fix this problem)","text":"<p>Whenever possible, we want to guide users towards resolving problems that hinder their goals within Mathesar. We are introducing a pattern for specific warnings to present suggested actions based on the context. For example, in this case, we allow users to navigate to pre-filtered views to solve issues that prevent them from changing column settings.</p>"},{"location":"archive/product/design/specs/working-with-columns/#column-vs-table-constraints","title":"Column vs. Table Constraints","text":"<p>There were some concerns over having both table-level and column-level constraints. We are introducing a help/more info icon next to some options so that users can learn more about them. Once we have the design for the complete set of functionality for the MVP, we can look at the different ways we can educate users within Mathesar.</p>"},{"location":"archive/product/design/specs/working-with-columns/#filters","title":"Filters","text":"<p>Filters, as presented in this document, are no longer consistent with the latest design updates. The panel component has proven to be incompatible with many of our use cases, and we have opted for a dropdown component instead.</p>"},{"location":"archive/product/guides/migrate-from-017-to-020/","title":"How to migrate from 0.1.7 to 0.2.0-testing.1","text":"<p>There are some specific challenges, and the general recommendation is not to migrate, but rather to reinstall and reimport your data.</p> <p>However, it\u2019s possible. Here is an outline of what needs to be done.</p>"},{"location":"archive/product/guides/migrate-from-017-to-020/#gather-info","title":"Gather info","text":"<p>First, get the following:</p> <ul> <li>All Django IDs of relevant user DBs, and notes about who should access them.</li> <li>All Django IDs of relevant Mathesar users, and notes about what DBs they should access.</li> </ul> <p>These IDs are visible in the path to the Database or User respectively. Alternatively, you can see them by logging into the Django Database with <code>psql</code> and looking at the relevant tables: <code>mathesar_connection</code> for the Database IDs, and <code>mathesar_user</code> for the User IDs.</p>"},{"location":"archive/product/guides/migrate-from-017-to-020/#do-the-usual-upgrade","title":"Do the usual upgrade","text":"<p>This would follow the general instructions for either install from scratch or docker.</p>"},{"location":"archive/product/guides/migrate-from-017-to-020/#upgrade-mathesar-schemata-on-all-user-databases","title":"Upgrade Mathesar schemata on all user databases","text":"<p>For this, you need to get to a Django shell by running <pre><code>python manage.py shell\n</code></pre> in the correct context. This could be within the <code>mathesar_service</code> docker container, or in a python virtual environment associated with your Mathesar installation. Then, do the following:</p> <pre><code>from db.install import install_mathesar\nfrom mathesar.models.deprecated import Connection\nfor db_model in Connection.objects.all():\n    install_mathesar(\n        database_name=db_model.db_name,\n        hostname=db_model.host,\n        username=db_model.username,\n        password=db_model.password,\n        port=db_model.port,\n        skip_confirm=True\n    )\n</code></pre>"},{"location":"archive/product/guides/migrate-from-017-to-020/#migrate-connections-assign-to-users","title":"Migrate connections, assign to users","text":"<p>Again, open a Django shell (or keep using the same one as above).</p> <p>Then, do the following:</p> <p><pre><code>from mathesar.rpc.connections import grant_access_to_user\n# Migrate a connection for the user with ID 1 to the new models. This call will:\n# - Create models (if needed) in the new architecture to represent the connection with ID 1, and\n# - Assign that connection to the User with ID 1.\ngrant_access_to_user(connection_id=1, user_id=1)  # EXAMPLE! fill in with desired IDs\n</code></pre> Repeat the call to <code>grant_access_to_user</code> for each User-Connection pair desired.</p>"},{"location":"archive/product/projects/","title":"Projects","text":""},{"location":"archive/product/projects/#overview","title":"Overview","text":""},{"location":"archive/product/projects/#purpose","title":"Purpose","text":"<ul> <li>The Mathesar team\u2019s work is chunked into fixed-length projects to keep it organized.</li> <li>The Mathesar maintainers work in 4-week \u201ccycles\u201d, and each project is designed to fit into that timeline. The community team\u2019s project lengths vary.         - Projects always have an end date. Work without an end date is tracked under ongoing responsibilities.</li> <li>Each project has one and only owner, and various helpers. Helpers are assigned specific responsibilities.</li> </ul>"},{"location":"archive/product/projects/#process","title":"Process","text":"<ul> <li>Anyone willing to do the work can propose a project. Please use the project template.</li> <li>Projects are discussed and approved by the Mathesar maintainers (either in meetings or via email).         - The project manager facilitates these discussions.</li> <li>Project prioritization will be based on our product strategy (currently in development).</li> </ul>"},{"location":"archive/product/projects/#active-projects","title":"Active projects","text":""},{"location":"archive/product/projects/#2023-cycle-2-v014","title":"2023 Cycle 2 (v0.1.4)","text":"Owner Project Status Brent Investigating compatibility with pre-existing databases In Progress Ghislaine Niche Research In Progress Mukesh Installation Improvement 0.1.4 In Progress <p>Sean, Dom, and Rajat are going to be working on ad-hoc tasks and helping with projects as needed. That work is tracked on GitHub in the 0.1.4 milestone on GitHub.</p>"},{"location":"archive/product/projects/#2023-summer-interships-work-programs","title":"2023 summer interships &amp; work programs","text":"Owner Project Status Anshuman Support importing Excel and JSON files project idea In progress Aritra Add more summarization functions project idea In progress Varsha API documentation project idea In progress"},{"location":"archive/product/projects/#future-project-ideas","title":"Future project ideas","text":"<p>Some future project ideas are tracked at https://staging.mathesar.org/mathesar_tables/8/tables/9179/</p> <p>Here are some other project ideas that have been written up, but need to be reviewed before we move forward with them.</p> Owner Project Status Brent RSQLA2: Move DML Operations to SQL Functions Draft Brent RSQLA3: Remove SQLAlchemy from DQL operations Draft Brent RSQLA4: Remove SQLAlchemy from codebase Draft"},{"location":"archive/product/projects/#project-template","title":"Project template","text":"<p>Use this template when creating a new project page, filling in data as needed. You can add or remove attributes if necessary.</p>"},{"location":"archive/product/projects/template/","title":"Project Template","text":"<p>Information</p> <p>This project is ridiculous on purpose. We are not doing this.</p> <p>Status: Draft  Review status: Draft Theme: User growth</p> <p>Options for status: Draft: The owner is still writing up the project. In progress: Work on the project has started.</p> <p>Information</p> <p>Complete: The project is over.</p> <p>Options for review status: Draft: The owner is still writing up the project. In review: The project has been written up, but hasn\u2019t been approved yet.</p> <p>Information</p> <p>Approved: The project has been approved.</p> <p>Information</p> <p>Theme is the broader goal or theme associated with the project. This is optional and can be omitted.</p>"},{"location":"archive/product/projects/template/#team","title":"Team","text":"<p>Project owner: Kriti</p> Role Assignee Reviewer Notes Requirements Kriti Ghislaine, Dom, Rajat Product spec, requirements, GitHub issues Design work Ghislaine Kriti, Dom, Rajat UI and UX Backend work Dom Mukesh Backend specs and code Frontend work Rajat Pavish Frontend specs and code"},{"location":"archive/product/projects/template/#problem","title":"Problem","text":"<p>Users have reported wanting to order pizza through Mathesar\u2019s UI.</p>"},{"location":"archive/product/projects/template/#solution","title":"Solution","text":"<ul> <li>Investigate pizza companies with good APIs.</li> <li>Collect address information from users.</li> <li>Figure out how to store pizza company API keys in config.</li> <li>Check if address can be delivered to using API.</li> <li>Figure out what a default pizza should be (e.g. cheese pizza)</li> <li>If yes, add \u201cOrder Pizza NOW!!!\u201d button to UI.</li> <li>When user presses button, order default pizza.</li> </ul> <p>To simplify implementation, we are not going to allow users to customize their pizza yet.</p>"},{"location":"archive/product/projects/template/#outcome","title":"Outcome","text":"<p>Mathesar\u2019s next release will include the new feature described under \u201csolution\u201d.</p>"},{"location":"archive/product/projects/template/#risks","title":"Risks","text":"<ul> <li>Paying for all these pizzas will cost money.</li> <li>Users could be allergic to pizza ingredients.</li> </ul>"},{"location":"archive/product/projects/template/#links","title":"Links","text":"<p>Information</p> <p>This section collects project related links. It\u2019s expected that there might not be anything here until the project plan is approved, and this section will grow over the project\u2019s timeframe.</p> <ul> <li>Issues: GitHub meta issue</li> <li>Wiki pages:</li> <li>Product spec</li> <li>Backend spec</li> <li>Frontend spec </li> <li>Email discussions:<ul> <li>Project approval discussion</li> </ul> </li> <li>Weekly updates</li> </ul>"},{"location":"archive/product/projects/template/#timeline","title":"Timeline","text":"<p>This project should fit into the 2023-01-01 cycle.</p> <p>Information</p> <p>Please adjust as needed depending on the steps for the project.</p>"},{"location":"archive/product/projects/2023/04/2023-04-usability-improvements/","title":"2023-04 Usability Improvements","text":"<ul> <li>Name: 2023-04 Usability Improvements</li> <li>Status: Cut short to move on to other work</li> </ul>"},{"location":"archive/product/projects/2023/04/2023-04-usability-improvements/#team","title":"Team","text":"<p>Project Owner:  Sean </p> Workers Reviewers UX design Sean Ghislaine, Pavish Front end Sean Pavish Back end Sean Mukesh"},{"location":"archive/product/projects/2023/04/2023-04-usability-improvements/#problem","title":"Problem","text":"<p>This project is a collection of smaller usability-related tickets that seem to present low-hanging fruit for improving UX.</p>"},{"location":"archive/product/projects/2023/04/2023-04-usability-improvements/#solution","title":"Solution","text":""},{"location":"archive/product/projects/2023/04/2023-04-usability-improvements/#work-plan","title":"Work plan","text":"Task Work Days Deadline Status (Project start date) 0 2023-03-29 Clipboard UX design UX design 5 2023-04-07 \u2705 Done: PR, Specs Copy from Mathesar, paste elsewhere Front end 3 2023-04-07 \u2705 Done Drag to select from active cell Front end 2 2023-04-14 \u2705 Done Selection stuck in drag mode Front end 1 2023-04-14 \u2705 Done Filtering via column header Front end 2 2023-04-14 \u2705 Done Persistent column widths Full stack 3 2023-04-21 \u274c To do Resizable sidebars Front end 3 2023-04-26 \u2705 Done Persistent sidebar widths Front end 1 2023-04-26 \u2705 Done TSV serialization improvements Front end 1 2023-05-10 \u2705 Done Paste into cells Full stack 9 2023-05-10 \ud83d\uded1 Blocked by API work <p>TOTAL TIME:  20 days (4 weeks)</p>"},{"location":"archive/product/projects/2023/04/2023-04-usability-improvements/#notes","title":"Notes","text":"<ul> <li>Note that Copy from Mathesar, paste elsewhere is an implementation task that falls within the broader design covered by Clipboard UX design. It\u2019s a relatively narrow subset of the total implementation that the design will eventually specify, but it\u2019s the most straightforward piece to implement and design, so that\u2019s why it\u2019s included in this project. This project does not include any other implementation for the copy-paste functionality. The idea here is to take some baby steps toward better clipboard behavior by doing the research and design work we need in order to better specify all the work that we\u2019ll need to do later.</li> <li>I plan to tackle Clipboard UX design and Copy from Mathesar, paste elsewhere concurrently, at least to start. I need to gain an understanding of the behavior and limitations of clipboards and web clipboard APIs. Working to implement the \u201cpaste elsewhere\u201d feature will help me lay groundwork for the broader clipboard UX questions.</li> <li>I plan to timebox the clipboard design. When this project is completed, there may still be additional clipboard design work left, I\u2019ll organize the remaining work into more detailed tickets.</li> </ul>"},{"location":"archive/product/projects/2023/04/2023-04-usability-improvements/#risks","title":"Risks","text":"<ul> <li>Clipboard UX design contains many unknowns and runs the risk of ballooning in scope.</li> </ul>"},{"location":"archive/product/projects/2023/04/2023-04-usability-improvements/#timeline","title":"Timeline","text":"<p>(See work plan)</p>"},{"location":"archive/product/projects/2023/04/formulas-research/","title":"Formulas Research","text":"<p>Name: Formulas Research Status: Done (see the report)</p>"},{"location":"archive/product/projects/2023/04/formulas-research/#team","title":"Team","text":"Role Assignee Owner Sean"},{"location":"archive/product/projects/2023/04/formulas-research/#problem","title":"Problem","text":"<ul> <li>Our roadmap includes Support for calculated columns in tables</li> <li>Dhruvi produced a preliminary UX design last year to consider how we might add support for formulas within the Data Explorer.</li> <li>We lack a documented understanding of the ways in which our competitors are using formulas.</li> <li>We lack a documented understanding of the Postgres features (and their limitations) that we might utilize to implement formulas.</li> </ul>"},{"location":"archive/product/projects/2023/04/formulas-research/#solution","title":"Solution","text":"<ol> <li>Research competing products and produce a report which provides detail on their usage of formulas.</li> <li>Experiment with Postgres generated columns to identify potential roadblocks we might encounter if we utilize this feature to build calculated columns. Incorporate findings into report.</li> <li>Also research and report on the viability of any other promising approaches discovered during competitive research.</li> </ol>"},{"location":"archive/product/projects/2023/04/formulas-research/#risks","title":"Risks","text":"<p>(None)</p>"},{"location":"archive/product/projects/2023/04/formulas-research/#resources","title":"Resources","text":"<p>(None)</p>"},{"location":"archive/product/projects/2023/04/formulas-research/#timeline","title":"Timeline","text":"<ul> <li>This project should take 1 week.</li> <li>Start date is TBD.</li> </ul>"},{"location":"archive/product/projects/2023/04/funding/","title":"Raise additional funding for Mathesar","text":"<p>Name: Raise additional funding for Mathesar Status: Moved to ongoing responsibilities in July 2023.</p>"},{"location":"archive/product/projects/2023/04/funding/#team","title":"Team","text":"Role Assignee Notes Owner Kriti Contributors Sean, Mukesh Perform any tasks delegated by Kriti - research, writing, review, etc. <p>This project doesn\u2019t have an Approver because Kriti approves most projects.</p>"},{"location":"archive/product/projects/2023/04/funding/#problem","title":"Problem","text":"<p>Mathesar is currently grant funded. Our plan is to be financially self-sustainable through sponsorships and offering Mathesar-related services, but we need additional grant funding to sustain us until that point.</p>"},{"location":"archive/product/projects/2023/04/funding/#solution","title":"Solution","text":"<ul> <li>Determine budget and financial needs for Mathesar from 2023-2025.</li> <li>Investigate and apply to potential grants.</li> <li>Get advice from relevant people to help with strategy, pitch, and grant applications.</li> <li>Follow ups and additional tasks as needed.</li> </ul> <p>This is pretty high-level, since tasks will vary depending on the grant.</p>"},{"location":"archive/product/projects/2023/04/funding/#risks","title":"Risks","text":"<ul> <li>We have a limited runway, so timing is critical.</li> </ul>"},{"location":"archive/product/projects/2023/04/funding/#timeline","title":"Timeline","text":"<p>This project started in mid-March 2023. Since completion depends on third-parties, we don\u2019t have a fixed timeline. This project will be updated when it\u2019s completed.</p>"},{"location":"archive/product/projects/2023/04/gather-user-feedback/","title":"Gathering User Feedback","text":"<p>Status: Not started \u2013 we will be incorporating this work into future projects. Theme: User Engagement and Feedback</p>"},{"location":"archive/product/projects/2023/04/gather-user-feedback/#team","title":"Team","text":"Role Assignee Notes Owner Ghislaine Approver (project plan) Kriti Needs to approve project plan"},{"location":"archive/product/projects/2023/04/gather-user-feedback/#problem","title":"Problem","text":""},{"location":"archive/product/projects/2023/04/gather-user-feedback/#the-need-for-user-feedback","title":"The Need for User Feedback","text":"<p>We need to gather user feedback to understand how to enhance the project and increase its usefulness for both current and potential users. By obtaining insights into desired features and improvements, we can better tailor the project to user needs and expectations.</p>"},{"location":"archive/product/projects/2023/04/gather-user-feedback/#current-state-of-feedback-collection-methods","title":"Current State of Feedback Collection Methods","text":"<p>Currently, our feedback collection process is limited and unstructured. We primarily rely on GitHub issues and sporadic social media interactions during our public launch. This approach does not allow for comprehensive feedback, nor does it enable us to effectively communicate updates and improvements back to our users.</p>"},{"location":"archive/product/projects/2023/04/gather-user-feedback/#solution","title":"Solution","text":"<ul> <li>Define user touchpoints: website visitors and form respondents, repository collaborators, financial backers, installation inquiries, social media engagers.</li> <li>For each touchpoint, identify the best way to gather and encourage feedback. For example, for website visitors, we can add a feedback form or survey.</li> <li>Distribute the survey through identified touchpoints.</li> <li>Publish the survey on the website.</li> <li>Send the survey to mailing lists.</li> <li>Develop a changelog where updates, improvements, and new features are documented and accessible to users.</li> <li>Find the best way to communicate these updates to users.</li> <li>Leverage community events to gather feedback.</li> <li>Set up office hours.</li> <li>Communicate office hours availability through various channels like social media, mailing lists, and the website.</li> <li>Offer incentives to users for providing feedback.</li> <li>Provide swag or public recognition.</li> <li>Thank them in the newsletter or similar channels.</li> <li>Finalize and implement the welcome email.</li> <li>Review and revise Myra\u2019s draft.</li> <li>Set up an automated email system.</li> <li>Create and distribute a newsletter.</li> <li>Decide on a frequency (e.g., monthly, quarterly)</li> <li>Plan content</li> <li>Plan distribution</li> <li>Prioritize shareable features that can provide a public exposure for the project.</li> <li>Shared tables or views, any feature that can expose the project to a wider audience.</li> </ul>"},{"location":"archive/product/projects/2023/04/gather-user-feedback/#outcomes","title":"Outcomes","text":"<p>Improved understanding of user-driven requirements and expectations for the project. This understanding will materialize through:</p> <ul> <li>Direct feedback from users regarding needs and issues.</li> <li>Identification of user pain points and their frequency.</li> <li>Prioritization of features and improvements based on input from users.</li> </ul>"},{"location":"archive/product/projects/2023/04/gather-user-feedback/#resources","title":"Resources","text":"<ul> <li>Issues:</li> <li>Wiki pages:</li> </ul>"},{"location":"archive/product/projects/2023/04/gather-user-feedback/#timeline","title":"Timeline","text":"<p>This project should take 4 weeks.</p> Date Outcome 2023-05-12 User touchpoints feedback channels defined 2023-05-24 Feedback channels implemented on each touchpoint 2023-05-29 Welcome email implemented 2023-06-07 1st Newsletter distributed"},{"location":"archive/product/projects/2023/04/installation-documentation-improvements/","title":"Installation Documentation Improvements","text":"<p>Name: Improve Mathesar Installation documentation Status: In review</p>"},{"location":"archive/product/projects/2023/04/installation-documentation-improvements/#team","title":"Team","text":"Role Assignee Notes Owner Mukesh Approver (project plan) Kriti Needs to approve project plan Approver (project plan) Brent Needs to approve project plan Contributor (requirements) Mukesh Creates GitHub issues Contributor (documentation) Mukesh Creates Documentation Contributor (documentation review first pass) Pavish, Marius (contractor) Reviews documentation and the docker-compose code changes Contributor (documentation review second pass) Kriti Reviews documentation after Pavish and Marius have reviewed it Contributor (Testing) Pavish, Contributors from Upwork(yet to be hired) Test out the instructions from the documentation and make sure they work Contributor (Hiring) Kriti Hire contributors from Upwork to help with testing"},{"location":"archive/product/projects/2023/04/installation-documentation-improvements/#problem","title":"Problem","text":"<ul> <li>Users are trying to use Mathesar with various setups and our installation documentation is lacking information to help them with it</li> <li>Users want to use Mathesar with Kubernetes, Nomad etc. Our docker-compose script won\u2019t be helpful in such cases<ol> <li>The installation script asks for <code>sudo</code> access, so some users are not comfortable with it</li> </ol> </li> <li>The installation script is tightly coupled, preventing them from using it with their own setup. The user cannot use the script to do only certain tasks, for example, they cannot use the script to only create a configuration file and skip other steps. <ol> <li>Configuration files don\u2019t have enough comments, leading to confusion when users try to change it manually.</li> </ol> </li> <li>Only Docker-based installation is listed in our docs. But Users want to install Mathesar without using Docker</li> <li>The docker-compose file is complex</li> </ul>"},{"location":"archive/product/projects/2023/04/installation-documentation-improvements/#solution","title":"Solution","text":"<ul> <li>Add Documentation for setting up Mathesar with the Mathesar Service Docker Image. Fixes Problem[a]</li> <li>Add Documentation for installing Mathesar without using install.sh. Fixes Problem[b] and [c]</li> <li>Documenting our config files so user can manually edit themhttps://github.com/mathesar-foundation/mathesar/issues/2784). Fixes Problem[d]</li> <li>Documenting setting up Mathesar without Docker. Fixes Problem[e]</li> <li>Document upgrade instructions for non-docker-compose environments</li> <li>Document limitations involved with the installation script. Auxiallary fix for Problem[b] and [c]</li> <li>Separate docker-compose file for production. Fixes Problem[f]</li> </ul>"},{"location":"archive/product/projects/2023/04/installation-documentation-improvements/#risks","title":"Risks","text":"<ul> <li>There are unknowns with testing since we\u2019re hiring external people, which might affect the timeline.</li> <li>Issues uncovered during testing might affect the timeline.</li> </ul>"},{"location":"archive/product/projects/2023/04/installation-documentation-improvements/#resources","title":"Resources","text":"<ul> <li>Issues: GitHub meta issue</li> </ul>"},{"location":"archive/product/projects/2023/04/installation-documentation-improvements/#timeline","title":"Timeline","text":"<p>This project should take 3 weeks for the features to be implemented, tested, reviewed and additionally 1 week for final testing, so 4 weeks in total. Testing will start happening in  parallel as soon as a documentation gets completed.</p> Date Outcome 2023-04-11 Work starts, we start PRs which make changes to the code and then move to documentation. 2023-04-13 Review of the PRs starts in parallel 2023-04-17 Instructions(scenarios to test on like Non-root user, OS etc) for the Testing team will be created 2023-04-18 PR ready for all the issues in the meta issue #2789 except Allow users to install Mathesar without Docker (on Debian) 2023-04-18 Feedback + Testing(both done by the testing team) for documentation PRs starts in parallel. This ensures the documentation can be understood by different user segments(technical users, less technical users) and works with various scenarios 2023-04-21 PR for all issues in the meta issue #2789 should be in review state. 2023-04-28 All the PRs in #2789 are merged. #2789 will still be open in order to address any issues found during the Final testing done in the next step. 2023-04-28 Final Testing starts. The documentation would already been tested to a good extent at this point. The final testing ensures there is no change is needed(very minimal if any) 2023-05-05 Final Testing, review, addressing review complete"},{"location":"archive/product/projects/2023/04/public-links-research/","title":"Research: Publicly shareable links","text":"<p>Name: Research: Publicly shareable links Status: Complete Follow up: Shareable links implementation project</p>"},{"location":"archive/product/projects/2023/04/public-links-research/#team","title":"Team","text":"<p>| Role | Assignee | |-|-|-| | Owner | Pavish |</p>"},{"location":"archive/product/projects/2023/04/public-links-research/#problem","title":"Problem","text":"<ul> <li>We have the following features in our roadmap:<ul> <li>Ability to share tables and explorations</li> </ul> </li> <li>Embed tables and explorations in other websites</li> <li>We require a well defined plan at the product level to begin implementation level analysis of the initial version of these features.</li> </ul>"},{"location":"archive/product/projects/2023/04/public-links-research/#solution","title":"Solution","text":"<ul> <li>Research approaches in competing products.</li> <li>Come up with UX flow suggestions.</li> <li>Come up with a preliminary backend and frontend approach to validate feasibility of the features.</li> <li>Adjust scope to the minimal useful initial version of these features. </li> <li>Write up a product spec and go through review, iterations, and approval from the team.</li> <li>Once the product spec is approved, write up a new project for implementating the features.</li> </ul>"},{"location":"archive/product/projects/2023/04/public-links-research/#timeline","title":"Timeline","text":"<p>This project should take 5 days, subject to possible delay due to review feedback and iterations.</p> Date Outcome 2023-06-26 Work begins 2023-06-28 Product spec is sent for review 2023-06-29 Review is completed 2023-06-30 Feedback and iterations are complete. Work begins on implementation project."},{"location":"archive/product/projects/2023/04/release-0-1-2/","title":"Release v0.1.2","text":"<p>Name: Release v0.1.2 Status: In review </p>"},{"location":"archive/product/projects/2023/04/release-0-1-2/#introduction","title":"Introduction","text":"<ul> <li>This project is a collection of items needed for v0.1.2 release.</li> <li>Primary focus of v0.1.2:</li> <li>Installation improvements</li> <li>Ability to switch user databases</li> <li>Fixes and improvements based on user raised issues/bugs</li> <li>The spec for Installation improvements is tracked separately as it is a project of it\u2019s own.</li> <li>The team should prioritize release items assigned to them until the release is complete.</li> </ul>"},{"location":"archive/product/projects/2023/04/release-0-1-2/#team","title":"Team","text":"Role Assignee Notes Owner Pavish Approver - Project plan Kriti Needs to approve project plan Contributor - Design Ghislaine Creates designs for \u2018switching user databases\u2019 Contributors - Design review Sean, Pavish, Kriti (final approval) Reviews UX design Contributor - Frontend Pavish Implements frontend for \u2018switching user databases\u2019 and works on any critical frontend issue that might come up during the release cycle Contributor - Frontend review Sean Reviews frontend code Contributor - Backend Dominykas Ensures \u2018switching user databases\u2019 works as expected and works on any crticial backend issue that might come up during the release cycle Contributor - Backend review Mukesh Reviews backend code Contributor - Hiring testing team Kriti Hires testing team and creates required communication channels Contributor - Managing testing team Pavish Organizes/communicates with team for testing the release Contributors - Testing plan Pavish, Mukesh (for installation testing plan) Comes up with the release testing plan Contributors - Testing Testing team from Upwork Performs testing"},{"location":"archive/product/projects/2023/04/release-0-1-2/#work-plan","title":"Work plan","text":"<ul> <li>Create necessarry issues and clean up milestone v0.1.2.</li> <li>Installation improvements and Implementation of switching user databases will happen in parallel.</li> <li>Any critical issue that comes up during this phase will be taken up in the same release based on effort involved and user impact.</li> <li>If an issue requires a hotfix, it will take the hightest priority and v0.1.2 will be a hotfix release, and this plan will shift to the next release.</li> <li>Hire testing team, prepare testing plan, and manage testing once required features are complete.</li> <li>Handle issues that might come up during testing.</li> <li>The release process will remain same as our previous releases.</li> <li>Here is the release process document for creating a release.</li> <li>The release management ongoing responsibility is not yet documented. It will be updated during the course of this release and will contain more detailed information.</li> </ul> <p>The plan is more high level, since individual tasks will be tracked using GH issues.</p>"},{"location":"archive/product/projects/2023/04/release-0-1-2/#risks","title":"Risks","text":"<ul> <li>There are unknowns with testing since we\u2019re hiring external people, which might affect the timeline.</li> <li>Issues uncovered during testing might affect the timeline.</li> </ul>"},{"location":"archive/product/projects/2023/04/release-0-1-2/#resources","title":"Resources","text":"<ul> <li>Milestone: v0.1.2</li> </ul>"},{"location":"archive/product/projects/2023/04/release-0-1-2/#timeline","title":"Timeline","text":"<ul> <li>Deadline for release will be 2023-05-10.</li> <li>This is around 30 days from the start date, higher than anticipated, but essential for Installation improvements.</li> <li>The release branch will be frozen by 2023-05-28. All PRs merged by then will be part of the release. Fixes for issues raised after that will be made on the release branch.</li> </ul> Date Outcome 2023-04-10 Work starts. 2023-04-18 Design work related to switching user databases is complete. 2023-04-18 Backend work related to switching user databases is complete. 2023-04-25 Frontend work related to switching user databases is complete. 2023-04-28 Work for Installation improvements is merged. See timeline in Installation improvements project. Release branch is created. 2023-05-01 Testing is continued as mentioned in  Installation improvements. Any issue that comes up during testing will be fixed directly on the release branch. 2023-05-05 Fixes for issues raised during testing is complete. 2023-05-08 Release process starts. 2023-05-10 Release date."},{"location":"archive/product/projects/2023/04/t-shirts/","title":"Mathesar T-shirt Project","text":"<p>Status: Complete Theme: Team engagement</p>"},{"location":"archive/product/projects/2023/04/t-shirts/#team","title":"Team","text":"Role Assignee Notes Owner Ghislaine Approver (design) Kriti Needs to approve T-shirt designs Design Ghislaine Creates T-shirt designs Vendor Research Ghislaine Researches vendors Size &amp; Address Collection Ghislaine Collects team member T-shirt sizes and addresses Order &amp; Delivery Kriti Places the order"},{"location":"archive/product/projects/2023/04/t-shirts/#problem","title":"Problem","text":"<p>The Mathesar team wants to create T-shirts for team members and potentially other recipients as a way to enhance team happiness and promote the project.</p>"},{"location":"archive/product/projects/2023/04/t-shirts/#solution","title":"Solution","text":"<ul> <li>Create T-shirt designs and get approval.</li> <li>Research at least three T-shirt vendors and gather approximate costs.</li> <li>Collect T-shirt sizes and current addresses from all team members and other recipients.</li> <li>Choose the best vendor based on quality, cost, and delivery options.</li> <li>Place the T-shirt order, including delivery information, and coordinate delivery to all recipients.</li> </ul>"},{"location":"archive/product/projects/2023/04/t-shirts/#timeline","title":"Timeline","text":"<p>This project should take 5 days.</p> Date Outcome 2023-04-17 Work starts 2023-04-18 T-shirt designs complete and submitted for approval 2023-04-19 T-shirt designs approved 2023-04-20 Vendor research complete and decision made 2023-04-21 T-shirt sizes and addresses collected from team members and other recipients 2023-04-24 T-shirts ordered and shipping coordinated 2023-04-24 T-shirts delivered to recipients"},{"location":"archive/product/projects/2023/04/user-feedback-kickoff/","title":"Establish User Feedback Tracking Process","text":"<p>Name: Establish User Feedback Tracking Process Status: Partially complete / considered closed</p> <ul> <li>Feedback tracking process was established</li> <li>Templates are ready</li> <li>Actual calls and surveys have not been conducted yet; will be moved to a different project.</li> </ul> <p>Theme: User Feedback</p>"},{"location":"archive/product/projects/2023/04/user-feedback-kickoff/#team","title":"Team","text":"Role Assignee Notes Owner Ghislaine Helper Brent Helper Kriti Helper Pavish"},{"location":"archive/product/projects/2023/04/user-feedback-kickoff/#problem","title":"Problem","text":"<p>We need a process to manage and categorize user feedback for easy access and reference, which will help the team improve new and existing features.</p> <p>We must also create templates for various feedback collection methods, identify and engage an initial group of users, and conduct calls and surveys to evaluate their effectiveness and overall impact on our product development.</p>"},{"location":"archive/product/projects/2023/04/user-feedback-kickoff/#solution","title":"Solution","text":""},{"location":"archive/product/projects/2023/04/user-feedback-kickoff/#1-set-up-a-user-feedback-management-tool","title":"1. Set up a User Feedback Management Tool","text":"<p>We will establish a HackMD team called \u201cUser Feedback\u201d to streamline note creation and organization. This will provide a dedicated space for managing user feedback.</p>"},{"location":"archive/product/projects/2023/04/user-feedback-kickoff/#2-develop-feedback-capture-templates","title":"2. Develop Feedback Capture Templates","text":"<p>We will create templates for managing user feedback, calls, surveys, and email invitations, ensuring consistency and quality when gathering user feedback. These templates will be available within the HackMD \u201cUser Feedback\u201d team.</p> <p>This includes:</p> <ul> <li>Feedback Capture Template: A template for capturing user feedback from various channels, such as emails, calls, and surveys.</li> <li>Social Listening Template: A template for capturing user feedback from social listening. Mentions of Mathesar on Github, HackerNews, Twitter, Reddit, and other social media platforms will be captured here.</li> <li>Call Template: A template for conducting calls with users.</li> <li>Discovery Call Template: A template for conducting discovery calls with users.</li> <li>Onboarding Call Template: A template for conducting onboarding calls with users.</li> <li>Satisfaction Call Template: A template for conducting satisfaction calls with users.</li> <li>Feedback Follow-Up Call Template: A template for conducting feedback follow-up calls with users.</li> <li>Survey Template: A template for conducting surveys with users.</li> <li>Discovery Survey Template: A template for conducting discovery surveys with users.</li> <li>Onboarding Survey Template: A template for conducting onboarding surveys with users.</li> <li>Satisfaction Survey Template: A template for conducting satisfaction surveys with users.</li> <li>Feedback Follow-Up Survey Template: A template for conducting feedback follow-up surveys with users.</li> </ul>"},{"location":"archive/product/projects/2023/04/user-feedback-kickoff/#3-develop-email-templates","title":"3. Develop Email Templates","text":"<p>We will create templates for emails to invite users to participate in calls and surveys.</p> <p>This includes:</p> <ul> <li>Invitation Email Template: A template for sending email invitations to users.</li> <li>Survey Email Template: A template for sending survey emails to users.</li> <li>Feedback Follow-Up Email Template: A template for sending feedback follow-up emails to users.</li> </ul>"},{"location":"archive/product/projects/2023/04/user-feedback-kickoff/#4-identify-and-engage-users-for-feedback-collection","title":"4. Identify and Engage Users for Feedback Collection","text":"<p>We will identify an initial group of users, compile a list, and reach out to them using our email templates. We will ask them to participate in calls and surveys.</p>"},{"location":"archive/product/projects/2023/04/user-feedback-kickoff/#5-schedule-and-conduct-calls-and-surveys","title":"5. Schedule and Conduct Calls and Surveys","text":"<p>We will schedule calls with users who are interested in participating and distribute surveys to users who are not available for calls.</p>"},{"location":"archive/product/projects/2023/04/user-feedback-kickoff/#6-analyze-and-categorize-survey-answers-and-calls","title":"6. Analyze and Categorize Survey Answers and Calls","text":"<p>We will determine how to incorporate the notes and answers from surveys into our \u201cUser Feedback\u201d collection, ensuring that feedback is properly categorized and accessible to the team.</p>"},{"location":"archive/product/projects/2023/04/user-feedback-kickoff/#7-evaluate-and-improve-feedback-collection-methods","title":"7. Evaluate and Improve Feedback Collection Methods","text":"<p>We will evaluate the effectiveness of calls and surveys and make improvements to the process. Some questions to consider:</p> <ul> <li>Is the feedback we are collecting useful?</li> <li>Do we need to make changes to the survey or call templates?</li> <li>Are we interacting with the right users?</li> </ul>"},{"location":"archive/product/projects/2023/04/user-feedback-kickoff/#timeline","title":"Timeline","text":"Date Outcome 2023-03-23 HackMD \u201cUser Feedback\u201d team set up 2023-03-27 Feedback capture templates developed 2023-04-04 Template for calls developed 2023-04-05 Template for email invitations developed 2023-04-10 Surveys for users developed 2023-04-11 Users identified and contacted for feedback 2023-04-12 Calls and surveys scheduled 2023-04-25 Calls and surveys conducted 2023-04-26 Survey answers and calls analyzed and categorized 2023-04-27 Feedback collection methods evaluated and improved"},{"location":"archive/product/projects/2023/07/2023-07-backend-fixes/","title":"2023-07 backend fixes","text":"<p>Name: 2023-07 backend fixes Status: In progress  Review status: Approved</p>"},{"location":"archive/product/projects/2023/07/2023-07-backend-fixes/#team","title":"Team","text":"Role Assignee Notes Owner Dom Contributor (backend review) Mukesh Reviews backend code"},{"location":"archive/product/projects/2023/07/2023-07-backend-fixes/#problem","title":"Problem","text":"<p>Time for some fixes!</p> <p>Kriti compiled a list of minor backend issues in order of importance:</p> <ul> <li>Remove the lazydict dependency #2960 (since fixed)</li> <li>Add support for <code>citext</code> column type #2959</li> <li>Does not work on windows #2961 (should be considered part of the removing sqlalchemy theme)</li> <li>Demo users should only see their own database #2983</li> <li>StatementError when using the Record Selector to search by a partially-entered UUID #2724</li> <li>Fix API handling of multi-column UNIQUE and PK columns #2245</li> <li>Incorporate field name into error messages when relevant \u00b7 Issue #1370</li> <li>Keep <code>today</code> as <code>today</code> in column default value \u00b7 Issue #2754</li> </ul> <p>I also created this issue to compliment the one for implementing <code>citext</code>, since the originating bug report reported both of these types being unsupported and that blocking the reporter\u2019s use case: Add support for <code>point</code> column type #3007.</p> <p>Kriti later added two issues to the list, saying they\u2019re high-priority:</p> <ul> <li>Cannot import large csv tables \u00b7 Issue #2995 \u00b7 mathesar-foundation/mathesar (discovered that the bandaid fix is frontend work, and the wholesome fix requires a lot of UX work)</li> <li>Make permissions requirements clear for gunicorn user \u00b7 Issue #3013 \u00b7 mathesar-foundation/mathesar</li> </ul>"},{"location":"archive/product/projects/2023/07/2023-07-backend-fixes/#solution","title":"Solution","text":"<p>Will start with block-prone issues. If or when I am blocked on any of these issues, I will work on the block-proof issues. Once block-prone issues are resolved, I will work on the remaining block-proof issues. If I were to do it the other way around, I\u2019d risk being blocked with nothing to do.</p>"},{"location":"archive/product/projects/2023/07/2023-07-backend-fixes/#block-prone-issues","title":"Block-prone issues","text":"<p>Issues that likely need coordination with others.</p> <p>I expect each of these to take roughly 3 days to complete.</p> <ul> <li>Fix API handling of multi-column UNIQUE and PK columns #2245</li> <li>Incorporate field name into error messages when relevant \u00b7 Issue #1370</li> <li>Keep <code>today</code> as <code>today</code> in column default value \u00b7 Issue #2754</li> <li>Support unknown Postgres types \u00b7 Issue #3024 \u00b7 mathesar-foundation/mathesar</li> </ul>"},{"location":"archive/product/projects/2023/07/2023-07-backend-fixes/#note-on-progress-tracking","title":"Note on progress tracking","text":"<p>This document is not meant to track progress or updates to the plan. See the meta issue for that.</p>"},{"location":"archive/product/projects/2023/07/2023-07-backend-fixes/#block-proof-issues","title":"Block-proof issues","text":"<p>Issues that likely do not need coordination with others.</p> <p>I expect each of these to take roughly 1 day to complete.</p> <ul> <li>Add support for <code>citext</code> column type #2959 (might be superseded by #3024)</li> <li>Add support for <code>point</code> column type #3007 (might be superseded by #3024)</li> <li>Demo users should only see their own database #2983</li> <li>StatementError when using the Record Selector to search by a partially-entered UUID #2724</li> <li>Make permissions requirements clear for gunicorn user \u00b7 Issue #3013 \u00b7 mathesar-foundation/mathesar</li> </ul>"},{"location":"archive/product/projects/2023/07/2023-07-backend-fixes/#time-budgeting-and-progress-estimation","title":"Time budgeting and progress estimation","text":"<p>I included rough estimates of how much time each issue should take. That will be usable as a guide on whether I\u2019m on track.</p> <p>The project budget is 20 days (4 weeks). Current estimate of total time required to submit PRs for above issues is 17 days (4 block-prone issues 3 days each, plus 5 block-proof issues 1 day each). 3 days buffer time.</p>"},{"location":"archive/product/projects/2023/07/2023-07-backend-fixes/#risks","title":"Risks","text":"<ul> <li>Finishing the tasks too early<ul> <li>The prefered risk, since I can then pick up additional work</li> </ul> </li> <li>Not finishing the tasks in time<ul> <li>The worse risk, since not finishing in time will either leave work unfinished or interfere with the break period (and/or next cycle)</li> </ul> </li> </ul>"},{"location":"archive/product/projects/2023/07/2023-07-backend-fixes/#resources","title":"Resources","text":"<ul> <li>GitHub meta issue</li> <li>Weekly update email thread</li> <li>Project approval email thread</li> </ul>"},{"location":"archive/product/projects/2023/07/2023-07-backend-fixes/#timeline","title":"Timeline","text":"<p>This project should take 4 weeks.</p> Date Outcome 2023-07-10 Work starts 2023-07-21 Half-way mark (50% of work should be done) 2023-08-02 Buffer time starts 2023-08-07 Work ends"},{"location":"archive/product/projects/2023/07/2023-07-backend-fixes/#outcome","title":"Outcome","text":"<p>See the last post in the project update email thread.</p>"},{"location":"archive/product/projects/2023/07/2023-07-frontend-fixes/","title":"2023-07 Frontend Fixes","text":"<p>Name: 2023-07 Frontend Fixes Status: Cut short Review status: Approved</p>"},{"location":"archive/product/projects/2023/07/2023-07-frontend-fixes/#team","title":"Team","text":"Role Assignee Owner Sean Frontend code review Pavish Frontend code review Rajat"},{"location":"archive/product/projects/2023/07/2023-07-frontend-fixes/#problem","title":"Problem","text":"<p>Time for some fixes.</p>"},{"location":"archive/product/projects/2023/07/2023-07-frontend-fixes/#solution","title":"Solution","text":"<p>This project focuses on the cell selection functionality. It starts by addressing some long-due refactoring of the cell selection code. The front end team recently discussed the need for this refactor because it has been a particularly buggy area of the front end codebase. Improving it will lay groundwork for fixing other bugs related to the cell selection logic and implementing new features.</p> <ul> <li>Change the data structure to store selections in the selection store</li> <li>Cell selection partially broken after selecting columns when table is filtered to be empty</li> <li>Do not select columns when hovering column headers in a table with no rows</li> <li>Weird cell selection behavior when dragging from cell to header</li> <li>Cell Context menu event should maintain the cell selection when triggered within the selection</li> </ul> <p>Unrelated frontend issues we\u2019d also like to work on during this cycle</p> <ul> <li>Make column type inference optional</li> <li>Copying FK cells should copy the record summary instead of the PK value (because it\u2019s a regression with a quick fix)</li> </ul>"},{"location":"archive/product/projects/2023/07/2023-07-frontend-fixes/#risks","title":"Risks","text":"<p>(none)</p>"},{"location":"archive/product/projects/2023/07/2023-07-frontend-fixes/#outcome","title":"Outcome","text":"<p>This project was not fully completed but was cut short with the remaining tasks rolled into the ad-hoc work for 2023 cycle 2.</p>"},{"location":"archive/product/projects/2023/07/2023-07-frontend-fixes/#resources","title":"Resources","text":"<p>Email threads:</p> <ul> <li>project intro</li> <li>project approval</li> <li>weekly updates</li> </ul>"},{"location":"archive/product/projects/2023/07/2023-07-frontend-fixes/#timeline","title":"Timeline","text":"<p>To fit within the cycle</p>"},{"location":"archive/product/projects/2023/07/2023-07-product-strategy/","title":"2023-07 product strategy","text":"<p>Name: 2023-07 product strategy Status: In progress Review status: Approved</p>"},{"location":"archive/product/projects/2023/07/2023-07-product-strategy/#team","title":"Team","text":"Role Assignee Notes Owner Kriti Primary contributor Ghislaine Ghislaine will be working on research, ideation, facilitating discussions, and strategy Contributors (discussions) Core team The entire team will be involved in discussions to ensure we\u2019re all on the same page about product strategy"},{"location":"archive/product/projects/2023/07/2023-07-product-strategy/#problem","title":"Problem","text":"<p>We need a strategy to help us decide what Mathesar\u2019s product roadmap should be. We should have a clear idea of where we\u2019re headed, what features are important for us to build, and how our product work will help us achieve our goals of user growth and sustainability.</p>"},{"location":"archive/product/projects/2023/07/2023-07-product-strategy/#solution","title":"Solution","text":"<p>We need to understand:</p> <ul> <li>The kinds of problems that Mathesar is best suited to solve.</li> <li>What our users are missing or struggling with and how to improve our product to meet their needs.</li> <li>What kinds of features will expand the use cases that Mathesar can be used for.</li> </ul>"},{"location":"archive/product/projects/2023/07/2023-07-product-strategy/#tasks","title":"Tasks","text":"<p>As part of the project, we\u2019ll be doing some of the following:</p> <ul> <li>Research and categorization of user feedback and problems</li> <li>Ideation (forming hypotheses) and discussion with the team</li> <li>Talking to users or potential users if we can</li> <li>Developing personas ans strategy documents (see \u201cOutcome\u201d below)</li> </ul>"},{"location":"archive/product/projects/2023/07/2023-07-product-strategy/#outcome","title":"Outcome","text":"<p>At the end of this project, we expect to have:</p> <ul> <li>A set of user personas / use cases that we\u2019re targeting.</li> <li>A strategy document that outlines user needs and product priorities.</li> <li>A framework that can help us make feature development decisions quickly.</li> <li>This includes a plan for ongoing user research and how it will be integrated into our roadmap planning.</li> </ul>"},{"location":"archive/product/projects/2023/07/2023-07-product-strategy/#risks","title":"Risks","text":"<p>The timeline is short, and we\u2019ll be prioritizing being decisive. This means we may need to course correct in the future as we get more information.</p>"},{"location":"archive/product/projects/2023/07/2023-07-product-strategy/#resources","title":"Resources","text":"<ul> <li>Project approval thread</li> <li>Project update thread</li> <li>Project internal notes (private to core team)</li> <li>Use case research data (private to core team)</li> </ul>"},{"location":"archive/product/projects/2023/07/2023-07-product-strategy/#timeline","title":"Timeline","text":"<p>This project will fit into the 2023-07-10 cycle.</p>"},{"location":"archive/product/projects/2023/07/2023-07-product-strategy/#results","title":"Results","text":"<p>We did not get everything planned for this project done by the end of the cycle. We do have:</p> <ul> <li>Drafts of the following documents (all private to core team):<ul> <li>Product strategy </li> </ul> </li> <li>List of use cases</li> <li>Persona needs analysis</li> <li>Feedback from strategy discussions</li> <li>User research survey</li> <li>A database to collect user research (private to core team):<ul> <li>User research schema</li> </ul> </li> </ul> <p>Next steps are to finalize the strategy and personas and develop a product roadmap once the niche research project is complete in Cycle 2.</p>"},{"location":"archive/product/projects/2023/07/installation-improvements-0_1_3/","title":"Installation Improvements Project - 0.1.3","text":"<p>Status: In progress Review status: Approved</p>"},{"location":"archive/product/projects/2023/07/installation-improvements-0_1_3/#team","title":"Team","text":"Role Assignee Notes Owner Mukesh Backend Helpers Dominykas Frontend Helpers Rajat Design Helper Ghislaine Design Reviewer Kriti Backend Reviewer Brent Frontend Reviewer Pavish Contributors (future work discussions) Brent, Kriti, Mukesh, Pavish Anyone else interested can join"},{"location":"archive/product/projects/2023/07/installation-improvements-0_1_3/#problem","title":"Problem","text":"<p>The current problems we face in our installation process and documentation are:</p> <ul> <li>We\u2019re targeting too many different use cases for Mathesar in our current documentation, and we need to simplify things.</li> <li>Installing Mathesar involves many steps, which makes the process brittle and introduces failure points that we can avoid.</li> <li>There is too much configuration needed before Mathesar can be started, which makes it difficult to try Mathesar out quickly.</li> <li>Configuration is done through scripts specific to certain installation mathods, and not in the product itself, which makes some installation methods much more difficult and inconsistent.<ul> <li>This also makes the documentation harder to maintain since each installation method has very different steps.</li> </ul> </li> </ul> <p>See also: Diagram of existing steps involved in installation</p> <p>Based on previous discussions, we\u2019d like to prioritize the following \u201cuser personas\u201d:</p> <ul> <li>Someone trying Mathesar out quickly (and can use Docker)</li> <li>Someone installing Mathesar on a PaaS</li> <li>Someone installing server &amp; DB on same remote system</li> <li>Someone installing server &amp; DB on separate remote systems</li> </ul> <p>We haven\u2019t finished talking about the solutions for these personas, but during the conversations we\u2019ve had, we\u2019ve identified some low hanging fruit that can improve our current installation process.</p> <p>This project involves fixing those low hanging fruit and finishing the discussions for prioritizing solutions we want to work on in the future.</p>"},{"location":"archive/product/projects/2023/07/installation-improvements-0_1_3/#outcome","title":"Outcome","text":"<ul> <li>The number of steps involved in installing and starting Mathesar will be reduced<ul> <li>Diagram of installation steps involved after this project is complete</li> </ul> </li> <li>Some steps involved in setting up Mathesar will be moved to the UI so that they will be the same across all the installation methods. It also has the benefit of reducing the steps involved before starting Mathesar instead of having the user fiddle around with some command.</li> <li>We will have a clear technical plan and priority list for what we\u2019ll implement to simplify installation in future cycles.</li> </ul>"},{"location":"archive/product/projects/2023/07/installation-improvements-0_1_3/#solution","title":"Solution","text":"<p>The low hanging fruit we plan to tackle in this cycle:</p> <ul> <li>Move superuser creation to the UI<ul> <li>Problem solved: configuration moved to product instead of outside scripting</li> </ul> </li> <li>Build single Docker image containing both Mathesar and Postgres<ul> <li>Problem solved: simplifies the process of trying Mathesar out quickly, reduces overall configuration</li> </ul> </li> <li>Create Mathesar Debian package<ul> <li>Problem solved: Reduces installation steps (dependencies, static file building, etc.). We\u2019re choosing Debian because it\u2019s the most common server.</li> </ul> </li> <li>Update documentation to provide non-superuser permissions while installing Mathesar<ul> <li>We\u2019re prioritizing this because it\u2019s a user reported issue and has been brought up in launch user feedback.</li> </ul> </li> </ul> <p>Issues we need to resolve through discussions:</p> <ul> <li>Configuration values like the secret key should be generated automatically. Other configuration options like adding a user database credential should be moved to the Mathesar UI. We are currently blocked by discussions for storing configuration values and we will be having meetings in this cycle to figure out a plan which can be implemented in later cycles<ul> <li>Problem solved: Removes configuration steps needed for starting Mathesar</li> </ul> </li> <li>Research and decide on which PaaS to support<ul> <li>Problem solved: Reduces installation steps and benefits someone looking to try Mathesar quickly</li> </ul> </li> <li>Finalize technical plan and priorities for making installation easier for all the targeted personas</li> </ul> <p>Overview diagram showcasing the relation between the problems, solutions and the outcome</p>"},{"location":"archive/product/projects/2023/07/installation-improvements-0_1_3/#stretch-goals","title":"Stretch goals","text":"<p>Most of these solutions will be useful for laying the ground work for future work and won\u2019t necessarily be complete by the end of the cycle (they might not added to the documentation). These are lower impact because they focus more on \u201cmedium\u201d priority personas.</p> <ul> <li>Build helm charts<ul> <li>Limitations: Just the yaml file for the mathesar app. We won\u2019t be adding to the installation documentation or adding it to the helm repo in this cycle</li> <li>Problem solved: Reduces steps for Kubernetes user and also requested by users</li> </ul> </li> <li>Build zipapps<ul> <li>Limitations: Just the script to generate the zipapp. It won\u2019t be added to the installation documentation in this cycle</li> <li>Problem solved: Reduces steps for non-docker and non-debian installs</li> </ul> </li> <li>Support SQLite as an additional datasource for the internal database<ul> <li>Limitations: Only the codebase refactor necessary to support SQLite. Documenting the configuration option will be done in later cycle</li> <li>Problem solved: Makes it easier to start Mathesar for users using a install package without inbuilt Postgres server package</li> </ul> </li> <li>Build static files and upload it to the release page<ul> <li>Problem solved: Makes it easier to install Mathesar for users not using the Debian package or if they want to serve static files from a different server.</li> <li>This is a low priority because most of the installation methods documented make use of pre-built packages which comes with static files packaged with them and are much easier to use</li> </ul> </li> <li>Move documentation on auxiliary services (Caddy, Watchtower) to different docs (will be called as best practice guide)</li> <li>Problem solved: Makes our documentation easier to maintain.</li> <li>This is a low priority as it does not improve experience instead makes the documentation more cleaner and more focused.</li> </ul>"},{"location":"archive/product/projects/2023/07/installation-improvements-0_1_3/#meetings","title":"Meetings","text":"<ul> <li>We will be having meeting every week to discuss further improvements to our Installation process.</li> <li>Kriti and Mukesh will meet every week to plan ahead of the meetings.</li> <li>The meeting topics are not definitive and can change.</li> <li>Some of the topics to discuss<ul> <li>Simplifying installation for Personas not covered by previous meetings</li> <li>PaaS offering to support</li> <li>The location and workflow for storing the configuration details</li> </ul> </li> </ul>"},{"location":"archive/product/projects/2023/07/installation-improvements-0_1_3/#timeline","title":"Timeline","text":"<p>| Date | Outcome | |-|-|-|-|-| | 2023-07-17 | Work for superuser creation page starts | | 2023-07-21| Script for generating Mathesar .deb file starts | | 2023-07-26 | Superuser creation page design specs will be completed| | 2023-07-28| Script for generating Mathesar .deb file is completed | | 2023-08-03 | Superuser creation page frontend work is completed and added to develop| | 2023-08-04| Work for Mathesar + Postgres docker image completed | | 2023-08-04| Few other pull requests for issues related to stretch goals will be merged into develop |</p>"},{"location":"archive/product/projects/2023/07/installation-improvements-0_1_3/#high-level-view-of-implementation-details","title":"High-level view of implementation details","text":"<ul> <li>Superuser creation page<ul> <li>We will be using middleware to check for the non-existence of a superuser and redirect them to the superuser creation page which will be based on Django templates</li> </ul> </li> <li>Debian package will be available as a systemmd service and will be created using dh-virtualenv. The script will build a python virtual environment for mathesar and will link to the system python. The implementation will closely follow Synapse deb file build script</li> <li>Mathesar + Postgres image will use our existing Mathesar docker image as a base and add PostgreSQL to the Mathesar + Postgres docker image</li> <li>Zipapps will be built using shiv</li> <li>SQLite codebase refactor is quite small as Mathesar uses a Postgres related field in only one place (for storing column order)</li> </ul>"},{"location":"archive/product/projects/2023/07/installation-improvements-0_1_3/#github-issue","title":"Github issue","text":"<ul> <li>Meta issue</li> </ul>"},{"location":"archive/product/projects/2023/07/installation-improvements-0_1_3/#resources","title":"Resources","text":"<ul> <li>Project Approval Thread</li> <li>Project Update Thread</li> <li>Meeting notes: Parts I &amp; II</li> <li>Meeting notes: Part III</li> <li>Meeting notes: Part IV</li> <li>Mukesh\u2019s installation research (private)</li> </ul>"},{"location":"archive/product/projects/2023/07/installation-improvements-0_1_3/#references","title":"References","text":""},{"location":"archive/product/projects/2023/07/installation-improvements-0_1_3/#current-steps","title":"Current steps","text":"<p> 1. Pre-requisites before installing Mathesar      Docker Compose(1 step) <pre><code>    - Install Docker\n&lt;/details&gt;\n&lt;details&gt;\n  &lt;summary&gt;Docker Image(3 steps)&lt;/summary&gt;\n\n    - Install Docker\n    - Setup a database\n    - Create a database superuser\n&lt;/details&gt;\n&lt;details&gt;\n  &lt;summary&gt;Building from source(3 steps)&lt;/summary&gt;\n\n    - Install Postgres\n    - Setup mathesar database\n    - Create a database superuser\n&lt;/details&gt;\n</code></pre> <ol> <li> <p>Downloading and set up Mathesar       Docker Compose(2 steps) <pre><code>- Download docker compose script\n- Run docker compose command to download\n</code></pre> <p> Docker Image(0 steps) Building from source(6 steps) <pre><code>- Clone git repo\n- Install python\n- Create virtualenv for python\n- Install python dependencies\n- Install nodejs\n- Build static files\n</code></pre> <li> <p>Configuring Mathesar      Docker Compose(6 steps) <pre><code>    - Generate secret key\n    - Add secret key to env file\n    - Add internal database credentials to env file\n    - Add user database credentials to env file\n    - Create superuser\n    - Run install script(migrations and install database types)\n</code></pre> <p> Mathesar docker Image(6 steps) <pre><code>    - Generate secret key\n    - Add secret key to env file\n    - Add internal database credentials to env file\n    - Add user database credentials to env file\n    - Create superuser\n    - Run install script(migrations and install database types)\n</code></pre> <p> Building from source(7 steps) <pre><code>    - Add internal database credentials to env file\n    - Add user database credentials to env file\n    - Generate secret key\n    - Add secret key to env file\n    - Export environment variables\n    - Create superuser\n    - Run install script(migrations and install database types)\n</code></pre> <li> <p>Starting Mathesar</p> <p> Docker Compose(1 step) <pre><code>    - Run docker command\n</code></pre> <p> Docker Image(1 step) <pre><code>    - Run docker command\n</code></pre> <p> Building from source(2 steps) <pre><code>    - Create gunicorn systemctl script\n    - Run the script\n</code></pre>"},{"location":"archive/product/projects/2023/07/installation-improvements-0_1_3/#expected-steps-after-this-project","title":"Expected steps after this project","text":"<p> 1. Pre-requisites before installing Mathesar      Docker Compose(1 step) <pre><code>    - Install Docker\n&lt;/details&gt;\n&lt;details&gt;\n  &lt;summary&gt;Mathesar docker Image(3 steps)&lt;/summary&gt;\n\n    - Install Docker\n    - Setup a database\n    - Create a database superuser\n&lt;/details&gt;\n&lt;details&gt;\n  &lt;summary&gt;Mathesar + Postgres docker Image(1 step)&lt;/summary&gt;\n\n    - Install Docker\n&lt;/details&gt;\n&lt;details&gt;\n  &lt;summary&gt;Non-Docker install(3 steps)&lt;/summary&gt;\n\n    - Install Postgres\n    - Setup mathesar database\n    - Create a database superuser\n&lt;/details&gt;\n</code></pre> <ol> <li> <p>Downloading and set up Mathesar       Docker Compose(2 steps) <pre><code>- Download docker compose script\n- Run docker compose command to download\n</code></pre> <p> Both Docker Image(0 steps) Non Docker Install Debian(1 step) <pre><code>- Run apt install\n</code></pre> <p> Non-Docker Non-debian(1 step) <pre><code>- Install Python\n- Download zipapps\n</code></pre> <li> <p>Configuring Mathesar      Docker Compose(5 steps) <pre><code>    - Generate secret key\n    - Add secret key to env file\n    - Add internal database credentials to env file\n    - Add user database credentials to env file\n    - Run install script(migrations and install database types)\n</code></pre> <p> Mathesar docker Image(5 steps) <pre><code>    - Generate secret key\n    - Add secret key to env file\n    - Add internal database credentials to env file\n    - Add user database credentials to env file\n    - Run install script(migrations and install database types)\n</code></pre> <p> Mathesar + PG docker Image(5 steps) <pre><code>    - Generate secret key\n    - Add secret key to env file\n    - Run install script(migrations and install database types)\n</code></pre> <p> Non-Docker install (6 steps) <pre><code>    - Add internal database credentials to env file\n    - Add user database credentials to env file\n    - Generate secret key\n    - Add secret key to env file\n    - Export environment variables\n    - Run install script(migrations and install database types)\n</code></pre> <li> <p>Starting Mathesar</p> <p> Docker Compose(1 step) <pre><code>    - Run docker command\n</code></pre> <p> Docker Image(1 step) <pre><code>    - Run docker command\n</code></pre> <p> Non-Docker(1 step) <pre><code>    - Run the Mathesar executable\n</code></pre>"},{"location":"archive/product/projects/2023/07/installation-improvements-0_1_3/#overview-diagram","title":"Overview diagram","text":"<p>This diagram gives a overview of current steps (problems), solutions, steps after this cycle (outcome) along with information on how the solutions affect the current steps and the outcome.</p> <p></p>"},{"location":"archive/product/projects/2023/07/internationalization/","title":"Internationalization Implementation","text":"<ul> <li>Name: Internationaliztion</li> <li>Status: In progress</li> <li>Review status: Approved</li> </ul>"},{"location":"archive/product/projects/2023/07/internationalization/#team","title":"Team","text":"<p>Project Owner: Rajat</p> Workers Reviewers UX design Rajat Ghislaine, Kriti Front end Rajat Sean Back end Rajat Mukesh"},{"location":"archive/product/projects/2023/07/internationalization/#problem","title":"Problem","text":"<p>As per the current architecture of Mathesar, it only works in the English language. It is not enabled to be translated into other languages, which reduces the reach of the product. Users whose native language is not English are not able to use the product.</p>"},{"location":"archive/product/projects/2023/07/internationalization/#solution","title":"Solution","text":"<p>The goal of this project is to enable Frontend and Backend codebase to support translations and create a translation strategy for all of the existing and future strings.</p> <ol> <li>Write the technical spec for enabling Mathesar to support translations in the Frontend and Backend.</li> <li>Get the spec reviewed and approved.</li> <li>Implement the spec.</li> <li>Test the implementation for just one string.</li> <li>Write a doc for developers, outlining the approaches and best practices for making sure the new code written is translatable as per the spec.</li> <li>Implement a linting rule to identify untranslated UI strings.</li> <li>Write a doc outlining the workflow for sending the strings for translation, reviewing, and receiving the translations from a translator(non-technical person).</li> <li>Publish documentation for volunteer translators, making it possible for community members to contribute to translations without very much technical knowledge.</li> </ol>"},{"location":"archive/product/projects/2023/07/internationalization/#scope","title":"Scope","text":"<p>This project does not concern with translating the product into any particular language. It also does not concern either with translating or creating a translation strategy for the content inside the Mathesar repo in the form of Readmes or docs.</p> <p>Frontend: Enable the frontend codebase to support translations. Backend: Enable backend codebase to support translations for the server-side rendered pages and error messages that are shown to the users on UI as it is. Infrastructure: Integration of a third-party translation automation service like Transifex</p>"},{"location":"archive/product/projects/2023/07/internationalization/#timeline","title":"Timeline","text":"<p>This project should take 8 weeks of frontend implementation effort and 1 week of backend implementation effort, excluding the time to finalize the technical approach.</p> End Date Status Get tech spec approved 2023-05-26 Done FE implementation 2023-07-21 In Progress BE &amp; Infra Work 2023-07-21 In Progress Developer documentation 2023-07-28 Guide to get the strings translated 2023-07-28 Contributing guide for volunteer translators 2023-07-28 <p>NOTE: Initial estimates - 4 weeks of FE effort and 1 week of BE effort in parallel.</p>"},{"location":"archive/product/projects/2023/07/internationalization/#resources","title":"Resources","text":"<ul> <li>Project Approval Thread</li> <li>Project Update Thread</li> <li>Tech Specs</li> </ul>"},{"location":"archive/product/projects/2023/07/list-datatype/","title":"List Data Type - Project Draft","text":"<p>Name: Adding support for list data type in Mathesar Status: Draft  Theme: List data type</p>"},{"location":"archive/product/projects/2023/07/list-datatype/#team","title":"Team","text":"Role Assignee Notes Owner Maria Approver (project plan) Kriti Needs to approve project plan Approver (product) Kriti Needs to approve product spec and design Approver (frontend) Pavish, Sean Needs to approve frontend spec Approver (design) Ghislaine Needs to approve design spec Approver (backend) Brent Needs to approve backend spec Contributor (requirements) Brent, Ghislaine Creates product spec, requirements, GitHub issues Contributor (design) Ghislaine Creates designs Contributor (backend) Maria Creates backend specs and implements backend Contributor (frontend) Rajat Creates frontend specs and implements frontend Contributor (backend review) Brent Reviews backend code Contributor (frontend review) Pavish Reviews frontend code"},{"location":"archive/product/projects/2023/07/list-datatype/#problem","title":"Problem","text":"<p>The Mathesar UI allows users to configure the column types for their data, choosing between types like \u201cNumber\u201d, \u201cDate\u201d, \u201cText\u201d, and so on. All data entered into the column is then validated against the rules according to the type. So for example, in a Number column, Mathesar will allow input of <code>2</code> but will reject input of <code>hello</code>.</p> <p>So far, we\u2019ve been assuming that users will only store a single point of data in any given table cell. However, PostgreSQL supports the ability to store an array instead of a single point of data, and we\u2019d like to support that.</p> <p>We already have support for arrays in explorations (and the Data Explorer), but those are read-only. This project is for adding support for lists to tables.</p> <p>Note: The implementation of Lists is not trivial, due to the way in which Arrays are implemented in Postgres. Here, there is not really a concept of dimensions or length, as Postgres does not really care about checking or validating those. Back on the hood, even though a user could set the length of an array when creating a column, this is not actually checked or enforced by the engine. All arrays are n-dimensional, with whatever lenght. The only checking that is done is that, within a record, all the elements of an array must have the same number of dimensions. Otherwise the engine will throw an error.</p> <p>This adds complexity to several of the proposed features of lists. </p> <ul> <li>Aggregations</li> <li>Way of displaying</li> <li>Editing and deleting</li> </ul>"},{"location":"archive/product/projects/2023/07/list-datatype/#solution","title":"Solution","text":""},{"location":"archive/product/projects/2023/07/list-datatype/#creating-a-list-column","title":"Creating a list column","text":""},{"location":"archive/product/projects/2023/07/list-datatype/#from-the-table-page","title":"From the table page","text":"<ul> <li> <p><code>List</code> should be an available data type in addition to all of the others. Therefore, users should be able to visualize it in the dropdown menu of all the available data types. </p> </li> <li> <p>Users should be able to provide a default value, or set it to <code>null</code>, as Mathesar supports this for the other data types as well.</p> </li> </ul>"},{"location":"archive/product/projects/2023/07/list-datatype/#importing-a-file","title":"Importing a file","text":"<ul> <li>When importing data from a CSV file, what should be inferred as list?<ul> <li><code>\"{item1,item2,...}\"</code>: this is what Postgresql infers as an array when importing data from a CSV file (note the double quotes).</li> </ul> </li> <li><code>[item1,item2,...]</code>: this notation is allowed when inserting values in an array column in Postresql.</li> </ul>"},{"location":"archive/product/projects/2023/07/list-datatype/#displaying-data-from-lists","title":"Displaying data from lists","text":"<ul> <li> <p>Items of the \u201clist\u201d type should be shown as pills (as it is currently shown in the data explorer). </p> </li> <li> <p>Lists can be large (e.g. starting from the dozens of items), so they must be truncated.</p> </li> </ul> <p>The previous points are regarding one dimensional lists. For n-dimensional ones, it\u2019s probably a better idea to take another approach, like some JSON renderers. A first approach to this case will be to render the arrays as plain text. </p>"},{"location":"archive/product/projects/2023/07/list-datatype/#editing-and-deleting-records","title":"Editing and deleting records","text":"<ul> <li>Users should be able to create a list; this is, fill an empty cell in a list data type column. A list can be created by separating items with a comma. Example:</li> </ul> <p>From the record page:</p> <p></p> <p>By double clicking a cell from the table page:</p> <p></p> <ul> <li>Users should be able to edit the text of an existing list item. Two possible ways are: <ol> <li>Clicking a single pill, and so the user will edit the text in that pill.</li> </ol> </li> <li> <p>Displaying the content of the list as a text with comma-separated items, and so the user would edit the list as if they are editing a text.</p> </li> <li> <p>Users should be able to delete an item of a list.</p> </li> <li>Also a whole list all at once. This is, setting that field to <code>null</code> for a single record of the table.</li> </ul>"},{"location":"archive/product/projects/2023/07/list-datatype/#error-handling","title":"Error handling","text":"<ul> <li>Errors should be handled and displayed if any of the operations fail.</li> </ul>"},{"location":"archive/product/projects/2023/07/list-datatype/#filters","title":"Filters","text":"<p>We should support the following filters for <code>List</code> cells: 1. is empty 1. is not empty 3. contains <code>&lt;ITEM&gt;</code></p> <p>Regarding the length of the list in a cell: 1. number of items greater than <code>&lt;NUMBER&gt;</code> 2. number of items greater than or equal to <code>&lt;NUMBER&gt;</code> 3. number of items equal to <code>&lt;NUMBER&gt;</code> 7. number of items lesser than <code>&lt;NUMBER&gt;</code> 8. number of items lesser than or equal to <code>&lt;NUMBER&gt;</code></p>"},{"location":"archive/product/projects/2023/07/list-datatype/#grouping","title":"Grouping","text":"<p>We should support the following custom grouping types for List cells: 1. Number of list items</p>"},{"location":"archive/product/projects/2023/07/list-datatype/#risks","title":"Risks","text":"<ul> <li>Mathesar may be connected to PostgreSQL databases that have columns with arrays of non-supported data types (e.g.: geometric like polygons) or multi-dimensional arrays. We have to let the frontend know that those kinds of lists aren\u2019t supported, and display them as text.</li> <li>CSV files can be bad-formatted; we have to show a message to the user indicating this error or parse the uknown format as a text column (if possible).</li> </ul>"},{"location":"archive/product/projects/2023/07/list-datatype/#resources","title":"Resources","text":"<p>Information</p> <p>This section  will grow over the project\u2019s timeframe.</p> <ul> <li>Issues: GitHub meta issue</li> <li>Wiki pages:</li> <li>Project description for GSoC 2023</li> <li>Frontend spec</li> <li>Backend spec (nothing here yet)</li> </ul>"},{"location":"archive/product/projects/2023/07/list-datatype/#timeline","title":"Timeline","text":"<p>This project should take 13 weeks.</p> Date Outcome 2023-05-01 Product specification starts 2023-05-19 Implementation spec complete 2023-05-24 Implementation spec approved 2023-06-22 Design work complete 2023-07-03 Backend work complete 2023-07-05 Frontend work complete 2023-07-20 Documentation complete"},{"location":"archive/product/projects/2023/07/list-datatype/#future-work","title":"Future work","text":"<ul> <li>Have different designs for item\u2019s display appearance, depending on their data type. Consider for example polygons; how should we display them?</li> <li>Convert any column to a list column. E.g user can change the data type <code>money</code> of a column, to <code>list of money</code>. In PostgreSQL, an array can be of any of its built-in data types. </li> <li>Support operations between <code>list</code> columns. E.g.: users can define a new <code>list</code> column as the result of concatenating the items of two other <code>list</code> columns. This can be extended to a functionality similar to inserting formulas in cells of a spreadsheet (like in Excel, Calc).</li> <li>Sort a <code>list</code> column with a custom expression. E.g.: for a numerical list column, sort the column based on the average of the lists.</li> </ul>"},{"location":"archive/product/projects/2023/07/shareable-links-implementation/","title":"Shareable links Implementation","text":"<p>Name: Shareable links implementation Status: Complete Review status: Approved</p>"},{"location":"archive/product/projects/2023/07/shareable-links-implementation/#team","title":"Team","text":"<p>| Role | Assignee | |-|-|-| | Owner | Pavish | | Design review | Ghislaine, Kriti | | Backend code review | Dominykas | | Frontend code review | Sean |</p>"},{"location":"archive/product/projects/2023/07/shareable-links-implementation/#problem","title":"Problem","text":"<p>Implement Shareable links for tables &amp; queries.</p> <ul> <li>Research project.</li> <li>Product spec.</li> </ul>"},{"location":"archive/product/projects/2023/07/shareable-links-implementation/#solution","title":"Solution","text":"<ul> <li>Implement Shareable links feature</li> <li>GH Meta ticket</li> </ul>"},{"location":"archive/product/projects/2023/07/shareable-links-implementation/#timeline","title":"Timeline","text":"<p>This project should be completed within the cycle.</p> Date Outcome 2023-07-10 Work starts 2023-07-12 Coding starts 2023-07-20 Backend work should be completed and merged 2023-07-03 Frontend work should be completed and merged 2023-07-04 Work ends"},{"location":"archive/product/projects/2023/07/sql-ddl-operations/","title":"Move DDL Operations to SQL Functions","text":"<ul> <li>Name: Move DDL operations to SQL functions</li> <li>Status: Complete</li> <li>Review status: Approved</li> <li>Theme: Code quality, maintainability, performance, Removing SQLAlchemy</li> </ul>"},{"location":"archive/product/projects/2023/07/sql-ddl-operations/#team","title":"Team","text":"Role Assignee Notes Owner Brent Approver (project plan) Kriti Needs to approve project plan Approver (backend) Brent Needs to approve back end spec Contributor (requirements) Brent Creates product spec, requirements, GitHub issues Contributor (requirements) Dom Creates product spec, requirements, GitHub issues Contributor Anish Coding and reviewing Contributor Dom Coding and reviewing Contributor Mukesh Coding and reviewing"},{"location":"archive/product/projects/2023/07/sql-ddl-operations/#problem","title":"Problem","text":"<p>Data Definition Language (DDL) operations are those that manipulate the actual data model on the database. Some relevant SQL words are <code>CREATE</code>, <code>ALTER</code>, and <code>DROP</code>. These operations require knowledge of the database to do their work. E.g., a function must know the name of a table to <code>ALTER</code> it. Our current architecture requires reflecting the state of the database into memory in Python, then manipulating that state\u2019s representation in Python, then stamping that representation back down onto the database.</p> <p>Our current setup for this is:</p> <ul> <li>Inefficient (reflection is slow)</li> <li>Complicated (hard to maintain)</li> <li>Prone to bugs (managing state in Python memory is constantly tripping us up)</li> </ul> <p>All of these problems are related to the fact that we\u2019re building the SQL queries to run DDL operations in Python.</p>"},{"location":"archive/product/projects/2023/07/sql-ddl-operations/#solution","title":"Solution","text":""},{"location":"archive/product/projects/2023/07/sql-ddl-operations/#create-ddl-functions-in-database","title":"Create DDL functions in database","text":"<p>Create a function for each desired DDL operation on the database using SQL or PL/pgSQL.</p> <ul> <li>Each such function should be overloaded to have the signature needed for calling from Python with minimal fuss.</li> <li>Each such function should have a main implementation which uses the most reasonable signature for the task at hand.</li> </ul>"},{"location":"archive/product/projects/2023/07/sql-ddl-operations/#replace-python-ddl-functions-with-wrappers-of-db-functions","title":"Replace Python DDL functions with wrappers of DB functions","text":"<p>Replace the current Python functions performing DDL operations with thin wrappers for these functions.</p> <ul> <li>Be mindful of looking out for functions which may be deleted, rather than replaced, once this is done.</li> <li>Map the original Python function signatures to an appropriate function call of the database functions.</li> <li>It\u2019s completely fine to create scaffolding functions at this point to avoid letting changes sprawl.</li> <li>After this phase, no SQLAlchemy imports should be used in any module whose functions are modified in this way, i.e., DDL operation modules.</li> </ul>"},{"location":"archive/product/projects/2023/07/sql-ddl-operations/#refactor-and-clean-up-results","title":"Refactor and clean up results","text":"<p>Refactor to remove SQLAlchemy objects from calls using Python DDL functions:</p> <ul> <li>Remove any SQLAlchemy objects from DDL function signatures (This may require modifying callers slightly)</li> <li>Remove SQLAlchemy from the entire call stack calling a given function, all the way up to the API (within reason).</li> <li>Modify affected function signatures to avoid using <code>schema_name</code>, <code>(schema_name, table_name)</code>, or <code>(schema, table_name, column_name)</code> identifiers. Instead, prefer <code>schema_oid</code>, <code>table_oid</code> or <code>(table_oid, attnum)</code> identifiers (may require modifying callers slightly, or scaffolding).</li> <li>Delete any unneeded functions.</li> </ul>"},{"location":"archive/product/projects/2023/07/sql-ddl-operations/#risks","title":"Risks","text":"<ul> <li>This is a major overhaul of the codebase. There\u2019s always a possibility of unforseen problems</li> <li>This will probably make the codebase less approachable for outsiders.</li> <li>The testing may be trickier (though current prototyping didn\u2019t require much changing of tests at all).</li> </ul>"},{"location":"archive/product/projects/2023/07/sql-ddl-operations/#resources","title":"Resources","text":"<p>Meta-issue tracking this project</p>"},{"location":"archive/product/projects/2023/07/sql-ddl-operations/#timeline","title":"Timeline","text":"<p>Note: Parts of this timeline are delayed due to Brent\u2019s parental leave.</p> Date Outcome 2023-03-20 Work starts 2023-03-24 Implementation spec and prototyping complete 2023-03-31 Implementation spec approved 2023-07-24 All needed DDL SQL Functions written 2023-07-26 All thin python wrappers written 2023-08-02 Refactor and clean up complete"},{"location":"archive/product/projects/2023/08/installation-improvements-0_1_4/","title":"Installation improvements 0 1 4","text":"<p>Status: In Progress Review status: In Review</p>"},{"location":"archive/product/projects/2023/08/installation-improvements-0_1_4/#team","title":"Team","text":"Role Assignee Owner Mukesh Backend Anish Backend Helper Mukesh Infrastructure Work Mukesh Infrastructure Helper Anish Frontend Rajat Design Helper Ghislaine Design Reviewer Pavish Documentation Mukesh Discussion Mukesh Documentation Helper &amp; Reviewer Sean Infrastructure Reviewer Brent Frontend Reviewer Pavish"},{"location":"archive/product/projects/2023/08/installation-improvements-0_1_4/#problem","title":"Problem","text":"<p>Our current installation process is not aligned with the proposed Installation Plan for improving our installation flow. </p>"},{"location":"archive/product/projects/2023/08/installation-improvements-0_1_4/#solution","title":"Solution","text":"<p>We will be focusing on Top Priority Personas in this project. Please read through the Installation Plan and this discussion to get a better idea of the proposed solutions</p> <ul> <li>Add Postgres to our docker image (Carried over from the previous cycle, needs testing before it can be merged)</li> <li>Create a Debian package (Partially complete, carried over from the previous cycle</li> <li>User database configuration moved to the Mathesar UI<ul> <li>Only superuser can add a Database</li> <li>The user database credentials set using the environment variable (in case of PaaS) will be read only. It cannot be modified using the UI </li> </ul> </li> <li>Remove the docker compose installation section and the related scripts</li> <li>Remove Build from the source installation section</li> <li>Add Install on Debian to our documentation</li> </ul>"},{"location":"archive/product/projects/2023/08/installation-improvements-0_1_4/#outcome","title":"Outcome","text":"<ul> <li>Database credentials for user database can be managed using the UI instead of using env variables. This provides better feedback, decouples from Mathesar installation and lets the user configure without restarting the server</li> <li>Simplified installation which lets the user install Mathesar in a few steps. This also makes the installation documentation easier to parse for the user.</li> <li>We won\u2019t be bombarding the user with addon services or unnecessary configuration options</li> </ul>"},{"location":"archive/product/projects/2023/08/installation-improvements-0_1_4/#github-issue","title":"Github issue","text":"<ul> <li>Meta issue</li> </ul>"},{"location":"archive/product/projects/2023/08/installation-improvements-0_1_4/#discussion-work","title":"Discussion work","text":"<ul> <li>Figure out where to host the Debian package on a server until we can get into the Debian official package repo. Possible options<ul> <li>LaunchpadPPA - Familiar to most linux uses. Dependencies are prioritized to use the same launchpad PPA and ubuntu repository, so there could be compatibility issues with Debian. We would need to test it on multiple distro</li> <li>Open Build Service - Supports building for multiple distro (we don\u2019t need this because we are using docker to build our packages).</li> <li>Gitlab\u2019s repository</li> </ul> </li> <li>Figure out as a team how we want to manage our DockerHub repo and tags - Some users want to use our features as soon as they are pushed into develop branch. Maybe we could set up a nightly build for such users</li> <li>Reassess Docker version requirements once we do a single Docker image</li> </ul>"},{"location":"archive/product/projects/2023/08/installation-improvements-0_1_4/#timeline","title":"Timeline","text":"Date Outcome 2023-08-21 Backend and Design work for adding user database credentials using the UI starts 2023-08-21 Infrastructure work starts 2023-08-21 Start sending discussion related emails 2023-08-28 Debian package and Postgres docker image review starts 2023-08-28 Documentation work starts 2023-08-31 Backend and Design work for adding user database credentials using the UI will be completed 2023-09-01 Frontend work for adding user database credentials using the UI starts 2023-09-08 Github Action to build static files and hosting the debian package is complete 2023-09-15 Documentation is up for review 2023-09-15 Frontend work for adding user database credentials is complete 2023-09-15 Buffer of 1 week"},{"location":"archive/product/projects/2023/08/installation-improvements-0_1_4/#resources","title":"Resources","text":"<ul> <li>Previous cycle project</li> <li>Installation Plan</li> <li>Project Feedback and Approval Thread</li> </ul>"},{"location":"archive/product/projects/2023/08/niche-research/","title":"Niche research","text":"<p>Status: Draft Review Status: Draft Theme: Niche Research and Persona Development for Mathesar</p>"},{"location":"archive/product/projects/2023/08/niche-research/#team","title":"Team","text":"<p>Project Owner: Ghislaine</p> Role Assignee Reviewer Notes Technical &amp; Scope Advice Brent, Pavish - Advice on the project scope and provide technical perspectives Niche Research Ghislaine Kriti Understanding potential use cases, pain points, and market gaps User Persona Development Ghislaine Kriti Detailed breakdown of potential users, their behaviors, and needs Data Analysis &amp; Reporting Ghislaine Kriti Synthesizing research findings and preparing the final report"},{"location":"archive/product/projects/2023/08/niche-research/#problem","title":"Problem","text":"<p>In order to understand the features and use cases of Mathesar, it\u2019s essential to comprehend our target audience. We have identified small businesses using PostgreSQL as a potential niche for Mathesar and would like to conduct research to better understand the market and its needs.</p> <p>We believe that small businesses using PostgreSQL are a good fit for Mathesar because:</p> <ul> <li>They already utilize PostgreSQL.</li> <li>They are likely interested in database tools.</li> <li>Compared to solo developers, these small businesses probably have more collaborative tasks and data-sharing requirements surrounding their database.</li> <li>They are likely to collaborate with team members who have a range of technical skills.</li> <li>From a business growth perspective, their user expansion rate is expected to surpass that of individual developers.</li> <li>Small businesses often rely on a suite of tools to run their operations. If Mathesar integrates well with other popular business tools, that can be a big plus.</li> <li>Small businesses, especially those handling sensitive data, will be interested in knowing how Mathesar ensures data security and privacy.</li> <li>Small businesses can be more agile in their operations and might be more open to providing feedback for product improvement.</li> </ul>"},{"location":"archive/product/projects/2023/08/niche-research/#solution","title":"Solution","text":""},{"location":"archive/product/projects/2023/08/niche-research/#niche-research","title":"Niche Research","text":""},{"location":"archive/product/projects/2023/08/niche-research/#market-analysis","title":"Market Analysis","text":"<ul> <li>Existing Tools Assessment: Examine tools currently available for managing PostgreSQL databases, especially those popular among small businesses. Understand their strengths, weaknesses, and unique features.</li> <li>Market Gaps: Based on public feedback and user reviews, identify unmet needs or problems that users face with these tools.</li> </ul>"},{"location":"archive/product/projects/2023/08/niche-research/#small-business-landscape","title":"Small Business Landscape","text":"<ul> <li>Database Needs: Seek to understand the specific database requirements of small businesses.<ul> <li>Are they seeking flexibility, scalability, or some specific functionalities?</li> <li>What is their typical use of data, and how do they envision their database needs evolving?</li> </ul> </li> <li>Transitioning from Simpler Tools: Small businesses may struggle to figure out their exact database needs, especially if they\u2019re transitioning from simpler tools like spreadsheets. Understand the challenges they face in this transition.</li> <li>Balancing Power with Simplicity: There\u2019s a challenge in finding the right equilibrium between ease of use for non-tech users and leveraging the power of a tool like PostgreSQL.</li> <li>Recognizing Database Value: It might take some time for small businesses to appreciate the value of a database tool like Mathesar, especially if they\u2019re unfamiliar with the advantages of databases. Understand how to communicate the value of Mathesar to them.</li> <li>Deployment Preferences:<ul> <li>Self-hosted vs. Cloud-hosted: Understand the trade-offs small businesses are willing to make in terms of cost, control, and convenience.</li> <li>Open Source Perception: Evaluate the importance of open-source solutions in their choice of database management tools. Are they inclined towards open-source because of trust, customization possibilities, or cost factors?</li> </ul> </li> <li>Integration with Existing Systems: Understand how Mathesar would integrate with or replace the existing systems that small businesses might have already set in place.</li> </ul>"},{"location":"archive/product/projects/2023/08/niche-research/#broadening-research-sources","title":"Broadening Research Sources","text":"<ul> <li>The current sources, such as Reddit and Hacker News, might not be representative of the target audience. Explore other platforms where small businesses might be discussing their database needs.</li> <li>Consultancy firms publishing their use cases, especially around databases, could provide valuable insights.</li> <li>Platforms like Upwork, where companies outline their requirements, might also provide practical insights.</li> </ul>"},{"location":"archive/product/projects/2023/08/niche-research/#community-surveys-and-engagement","title":"Community Surveys and Engagement","text":"<ul> <li>Engage with the Mathesar community to understand their needs and pain points.</li> <li>Craft and publish a user survey on Mathesar\u2019s website.</li> <li>Evaluate survey outcomes, taking into account the feedback and insights about users\u2019 experiences and pain points with Mathesar.</li> <li>Identify representative users within the niche of small businesses using PostgreSQL.</li> </ul>"},{"location":"archive/product/projects/2023/08/niche-research/#use-case-capture","title":"Use Case Capture","text":""},{"location":"archive/product/projects/2023/08/niche-research/#source-of-information","title":"Source of Information","text":"<ul> <li>Social Media: Analyze mentions and discussions related to PostgreSQL database management, especially those expressing challenges with existing tools or seeking new solutions.</li> <li>Industry Forums: Look for information in forums specific to industries that can benefit from Mathesar, and note real-world scenarios and challenges posed by users.</li> <li>Online Communities: Track discussions related to Mathesar or database management on platforms like Reddit and Hacker News where users might discuss their database management needs or share their experiences with other tools.</li> </ul>"},{"location":"archive/product/projects/2023/08/niche-research/#classification-of-use-cases","title":"Classification of Use Cases","text":"<ul> <li>Database Beginners: Capture use cases where users are transitioning from spreadsheets to databases or when they are venturing into the database world for the first time.</li> <li>Technical &amp; Non-Technical Mix: Identify scenarios where teams or businesses with a mix of technical and non-technical members are looking for a versatile database tool. Prioritize those cases where Mathesar can bridge the complexity gap.</li> <li>OLAP vs. OLTP: Identify use cases that focus on OLAP (producing reports from maintained data) or OLTP (daily transactional data like sales).</li> </ul>"},{"location":"archive/product/projects/2023/08/niche-research/#persona-development","title":"Persona Development","text":"<ul> <li>Design user personas that represent the target audience.</li> <li>Develop personas based on job roles within small businesses (e.g., a small business owner, a data analyst, an office manager).</li> </ul>"},{"location":"archive/product/projects/2023/08/niche-research/#data-analysis-and-report","title":"Data Analysis and Report","text":"<ul> <li>Aggregate research data and analyze it to identify trends and patterns.</li> <li>Prepare a final report highlighting all findings.</li> </ul>"},{"location":"archive/product/projects/2023/08/niche-research/#outcome","title":"Outcome","text":"<p>The result of this research will be a report that includes:</p>"},{"location":"archive/product/projects/2023/08/niche-research/#reference-use-cases-for-small-businesses-using-postgresql","title":"Reference Use Cases for Small Businesses Using PostgreSQL","text":"<p>The collected use cases will be compiled and analyzed to inform both the definition of personas and product functionality for Mathesar, specifically within the context of small businesses utilizing PostgreSQL.</p>"},{"location":"archive/product/projects/2023/08/niche-research/#key-user-personas-for-mathesar","title":"Key User Personas for Mathesar","text":"<ul> <li>User Profiles:  Descriptions of likely users and their needs within small businesses using PostgreSQL, including a reference to the use cases that exemplify their specific requirements and preferences.</li> <li>How to Reach Users: Ideas on how to get our product in front of these users.</li> </ul>"},{"location":"archive/product/projects/2023/08/niche-research/#product-changes-and-niche-focus","title":"Product Changes and Niche Focus","text":"<ul> <li>Define the Niche: Pin down which part of the small business PostgreSQL market we should focus on.</li> <li>Update the Roadmap: Changes we should make to our plans based on what we learned.</li> <li>Key Features: Pointing out the main features or changes that users in the focused niche might want and the use cases that justify these adaptations.</li> <li>Making it Easier to Use: Ideas on how to improve the product\u2019s user experience for the niche.</li> </ul>"},{"location":"archive/product/projects/2023/08/niche-research/#risks","title":"Risks","text":"<ul> <li>Research might extend beyond anticipated timeframes.</li> <li>Selecting use cases or features might pose challenges that go beyond what this research can cover.</li> </ul>"},{"location":"archive/product/projects/2023/08/niche-research/#links","title":"Links","text":"<ul> <li>Main Project Strategy</li> <li>Use Cases Database</li> <li>Team Discussions on Use Cases</li> <li>User Survey Draft</li> </ul>"},{"location":"archive/product/projects/2023/08/preexisting-postgres/","title":"Investigating compatibility with pre-existing databases","text":"<p>Status: In Progress Review status: Approved Theme: Work with current databases</p>"},{"location":"archive/product/projects/2023/08/preexisting-postgres/#team","title":"Team","text":"<p>Project owner: Brent</p> Role Assignee Reviewer Notes Requirements Brent, Ghislaine, Pavish Kriti Product spec, requirements, GitHub issues Design work Ghislaine Pavish, Brent UI and UX Backend work Brent ??? Backend specs and code Frontend work Pavish, Sean ??? Frontend specs and code"},{"location":"archive/product/projects/2023/08/preexisting-postgres/#problem","title":"Problem","text":"<p>We\u2019ve decided to focus on getting Mathesar working on preexisting live databases as a primary goal for the product. We need to solve some problems to satisfy common use cases. This project should cover research to help us prioritize which features to support in which order, as well as (maybe) some prototyping. Here are a few examples of features which may be used from PostgreSQL in a preexisting database, but which we don\u2019t currently support properly:</p>"},{"location":"archive/product/projects/2023/08/preexisting-postgres/#views","title":"Views","text":"<p>The bare minimum would be to show the views that already exist on a DB in the UI.</p> <ul> <li>Where should they be shown?</li> <li>Can we get away without enabling editing of the view definition, or editing data in the underlying tables at this time?</li> <li>Most difficult work here is UI/UX.</li> <li>This potentially overlaps with data explorer (or at least it will seem to for users). </li> <li>How should we deal with this?</li> <li>We either need a distinct representation from saved explorations or an integrated approach.</li> </ul>"},{"location":"archive/product/projects/2023/08/preexisting-postgres/#permissions","title":"Permissions","text":"<p>Mathesar may not be allowed to run as a super user or highly-privileged user. We need to be able to use Mathesar in those cases without throwing errors everywhere (at a minimum).</p> <ul> <li>Do we need to have more sophisticated permissions handling?</li> <li>We probably need some way to show a user what privileges they have without trial-and-error on their part.</li> </ul>"},{"location":"archive/product/projects/2023/08/preexisting-postgres/#types","title":"Types","text":"<ul> <li>Composite types are not going to go well with SQLAlchemy. It doesn\u2019t support them unless you have a custom class defined in python for each composite type on the DB. We may have to (for now) code up some widget that generates these classes and registers them into the SQLAlchemy constant upon reflection of type info from the DB.</li> <li>Array types are not currently well-supported by Mathesar, but we have a clear path on those.</li> <li>Unknown scalar types should be the easiest case.</li> </ul>"},{"location":"archive/product/projects/2023/08/preexisting-postgres/#generated-columns","title":"Generated columns","text":"<p>These should be pretty low-effort to get working, and we already have some of the needed concepts in the UI. These could simply be treated as uneditable dynamic default columns. That way, we can show the generated values in the UI, and disallow trying to update those values manually (which won\u2019t work for PostgreSQL generated columns). We\u2019re already flagging these columns as a dynamic default in the back end, it\u2019s a matter of whether the front end is then handling that with enough fidelity.</p> <p>We could also trivially show the generating expression (in fact this might already happen if we\u2019re showing dynamic defaults somehow), but I\u2019d consider that a bonus.</p>"},{"location":"archive/product/projects/2023/08/preexisting-postgres/#supporting-different-pkey-setups","title":"Supporting different pkey setups","text":"<p>This may be the thing we need the most work on overall</p> <ul> <li>Currently, we will fail pretty badly if we get a table with a multicolumn primary key, or any non-sequential primary key.</li> <li>We may have to start by making any such table read-only.</li> </ul>"},{"location":"archive/product/projects/2023/08/preexisting-postgres/#supporting-different-fkey-setups","title":"Supporting different fkey setups","text":"<p>We may not act correctly for multicolumn foreign keys, or foreign keys that don\u2019t refer to the primary key of the referent table.</p>"},{"location":"archive/product/projects/2023/08/preexisting-postgres/#constraints","title":"Constraints","text":"<p>We currently break and don\u2019t even return the constraints we do know if we stumble across a constraint type we don\u2019t support. Thus, we at least need to fix that. We also need to verify that the behavior when trying to update a value that would violate some unsupported constraint is reasonable.</p> <ul> <li>How do we determine which database configurations to show in the UI?</li> <li>We should find a balance to avoid overwhelming users if we opt to display all database configurations in the UI.</li> </ul>"},{"location":"archive/product/projects/2023/08/preexisting-postgres/#column-moving-dangerous-in-some-preexisting-dbs","title":"Column moving dangerous in some preexisting DBs","text":"<p>I think we should really try to do the project to fix up the column moving, or remove that feature, and wiring up to a preexisting DB makes this even more relevant. The current functionality lets you screw things up irreversibly, and it won\u2019t be obvious to a user when they\u2019re in danger from our current UI. It also has the potential to silently delink taables under certain multicolumn foreign key conditions which may occur in preexisting DBs.</p>"},{"location":"archive/product/projects/2023/08/preexisting-postgres/#solution","title":"Solution","text":"<p>For this project, we need to </p> <ul> <li>Go through commentary and issues from users to ensure nothing has been forgotten in the problems listed above.</li> <li>Find realistic sample PostgreSQL databases and try connecting Mathesar to see if we\u2019ve forgotten anything else.</li> <li>This thread from the dev mailing list has some suggestions.</li> <li>Work through UX problems associated with connecting to preexisting databases</li> <li>Brainstorm what UX problems may occur</li> <li>Determine which problems could cause data loss or actual breakage of the front end</li> <li>Have product-level discussions to determine what we want to prioritize.</li> <li>Top of the list should be any problems that we believe could cause data loss, or which break the front end experience.</li> <li>Some features may be more useful for target user groups.</li> <li>Some features may have implications for other parts of the product.</li> <li>Write issues and meta-issues based on those discussions describing the work to be done.</li> <li>Issues should be grouped by category above, and should cover design as well as implementation; multiple issues per category will generally be needed.</li> <li>We should have complete, ready-to-implement issues for at least data losing or breaking problems found by the end of the cycle. This may imply doing some of the design work during the cycle so that we can spec and write implementation issues.</li> </ul> <p>It may be that we end up prototyping or even implementing some features during this project, but any implementation work should be done solely to help us understand the UI/UX concerns better so we can more clearly spec out said UX and any related issues. Design should be done insofar as it\u2019s needed to write implementation-related issues.</p>"},{"location":"archive/product/projects/2023/08/preexisting-postgres/#prioritization-of-implementation","title":"Prioritization of implementation","text":"<p>When we get to implementation, we want to prioritize solutions to problems that break Mathesar\u2019s ability to work with existing databases over adding new functionality. E.g., we should make sure that our column moving features don\u2019t cause data loss, no matter what types of foreign and primary key arrangements might exist on the connected database before we add features to let users see views. We want to reflect this in the issues and meta-issues we create.</p>"},{"location":"archive/product/projects/2023/08/preexisting-postgres/#outcome","title":"Outcome","text":"<p>Users should be able to connect Mathesar to a preexisting database</p> <ul> <li>Without any risk of corrupting their data in confusing ways</li> <li>With the ability to see all their data in Mathesar in some fashion</li> <li>With the ability to use the Mathesar interface safely, and without crashing into unhandled errors due to unsupported PostgreSQL features.</li> </ul>"},{"location":"archive/product/projects/2023/08/preexisting-postgres/#risks","title":"Risks","text":"<ul> <li>Prioritization will involve some guesswork at this stage</li> </ul>"},{"location":"archive/product/projects/2023/08/preexisting-postgres/#timeline","title":"Timeline","text":"<p>Within the coming cycle, we should at least get as far as writing up (meta)issues for any problems we discover that will result in either data loss, or breakage of the front end experience while they remain unsolved. As a bonus, we\u2019d like to have issues for other categories of problems, prioritized and triaged. </p>"},{"location":"archive/product/projects/2024/architecture-transition/","title":"Proposed Back End Architecture","text":"<p>The main pieces of the back end code base are described here, and more depth is available in specific pages.</p>"},{"location":"archive/product/projects/2024/architecture-transition/#initial-definitions","title":"Initial Definitions","text":"<p>We need a couple of terms to get started:</p> <ul> <li>web service: the Django service</li> <li>Django DB: the DB (PostgreSQL or sqlite3) where Django keeps model data</li> <li>User DB: a DB owned by a Mathesar user, with their tables on it. This is a DB shown in the Mathesar UI.</li> </ul>"},{"location":"archive/product/projects/2024/architecture-transition/#birds-eye-view","title":"Bird\u2019s Eye View","text":"<p>The main goals of this architectural redesign are to</p> <ul> <li>improve the speed of the back end, and</li> <li>reduce the complexity of the back end.</li> </ul> <p>Secondary goals are to</p> <ul> <li>improve the convenience of the API for the use case of our front end, and</li> <li>make it easier for users and contributors to identify which back end code supports a given front end feature.</li> </ul> <p>We plan to do this by:</p> <ul> <li>Removing Django models representing User DB objects (e.g., tables), replacing them with functions that query and act on those DB objects directly. Insofar as we need to enrich the metadata about User DB objects with Mathesar-managed metadata, we\u2019ll do that after gathering the relevant info from the User DB.</li> <li>Changing our API to use a JSON-RPC (2.0) spec.</li> </ul>"},{"location":"archive/product/projects/2024/architecture-transition/#a-motivating-example-getting-the-table-info-in-a-schema","title":"A Motivating Example: Getting the table info in a schema","text":"<p>To get the table info in a schema using our current architecture,</p> <ol> <li> <p>The front end calls the endpoint <code>GET /api/db/v0/tables/</code> using a query string parameter to filter results from that endpoint based on a schema (identified by a Django-assigned integer id). Internally, then the following happens:</p> </li> <li> <p>The web service builds a query that gets some <code>Table</code> model instances from the Django DB, filtered based on the desired schema, as well as filtered according to applicable access control policies, and runs it. This gets the following info for each table:</p> <ul> <li><code>created_at</code> \u2013 The date of creation of the table model instance (not the actual table)</li> <li><code>updated_at</code> \u2013 The date of last modification of the table model instance (not the actual table)</li> <li><code>import_verified</code> \u2013 Whether the import process was verified by the user for this table</li> <li><code>is_temp</code> \u2013 Whether this table is supposed to be copied into a preexisting table, then deleted</li> <li><code>import_target_id</code> \u2013 A preexisting table which should receive this table\u2019s data</li> <li><code>schema_id</code> \u2013 The Django id of the schema containing the table</li> <li><code>data_files</code> \u2013 A list of any data files imported to the table</li> <li><code>settings</code> \u2013 Some metadata describing how the table is displayed</li> </ul> </li> <li> <p>The web service determines which connection to use with the User DB by querying for which <code>Database</code> model (called connections in the API) the requested schema lives under, and asking that model to give it a connection string.</p> </li> <li> <p>The web service then gathers the following info for each table by querying the User DB. These queries are initiated by <code>@property</code> annotations in the Django models. </p> <ul> <li><code>name</code></li> <li><code>description</code> \u2013 The comment (description) of the table, defined in the User DB.</li> <li><code>has_depenents</code> (many requests for this, actually)</li> <li><code>columns</code> \u2013 These are found by following a foreign key link on the Django DB. Each column model instance then runs a bunch of queries to gather relevant info from the user DB and Django DB.</li> </ul> </li> <li> <p>For each column of each table, the web service then gathers the following info by querying the Django DB (can be batched):</p> <ul> <li><code>display_options</code> \u2013 These describe table-wide metadata about how to show the table in the UI.</li> </ul> </li> <li> <p>For each column of each table, we gather the following info by querying the user DB, again with queries initiated by <code>@property</code> annotations on the Django <code>Column</code> model. For these, we end up making separate requests:</p> <ul> <li><code>name</code> (multiple requests to user DB for each column)</li> <li><code>type</code></li> <li><code>type_options</code> \u2013 e.g., the precision specified for a <code>numeric</code> column</li> </ul> </li> </ol> <p>All of this gets joined together, then sent back as a response from the API. </p> <p>With the new architecture, to get the same info,</p> <ol> <li> <p>The front end calls an RPC endpoint <code>/api/v0/rpc/</code>, calling a function <code>get_schema_table_details</code> with <code>database</code> and <code>schema</code> parameters. The database is identified by a Django id referring to a database model, and the schema is identified by an OID.</p> </li> <li> <p>The web service uses the <code>user</code> and <code>database</code> (the user is picked up from the request object) to acquire a connection string.</p> </li> <li> <p>Using that connection, the web service calls a PL/pgSQL function installed on the User DB called <code>get_schema_table_details</code> to gather </p> <ul> <li><code>name</code></li> <li><code>description</code></li> <li><code>has_dependents</code></li> <li><code>columns</code><ul> <li><code>name</code></li> <li><code>type</code></li> <li><code>type_options</code></li> </ul> </li> <li><code>preview_settings</code> \u2013 describes how we should show each table\u2019s rows when it\u2019s linked to by a foreign key</li> </ul> </li> <li> <p>Using the returned info, the web service filters a <code>TableMetadata</code> model based on the passed <code>database</code> and returned <code>oid</code>s, and gathers</p> <ul> <li><code>import_verified</code></li> <li><code>is_temp</code></li> <li><code>import_target_id</code></li> <li><code>data_files</code></li> <li><code>column_order</code> \u2013 describes the order in which columns should be displayed</li> </ul> </li> <li> <p>Using the same returned info, filter a <code>ColumnMetadata</code> model based on returned <code>oid, attnum</code> pairs to gather (for each column)</p> <ul> <li><code>display_options</code></li> </ul> </li> </ol> <p>We then join all of this together, and return it as a response from the API.</p> <p>The fundamental difference is that in the current version, we use foreign keys between Django models to find tables for the schema, then columns for each table. Then all queries on the User DB are initiated by functions on these model instances. In the new version, we instead run a query on the User DB to gather all relevant table and column info available on that DB, then enrich that data with metadata stored in non-foreign-key-linked metadata models in the Django DB.</p>"},{"location":"archive/product/projects/2024/architecture-transition/#introduction-to-relevant-layers","title":"Introduction to relevant layers","text":"<p>The layers introduced here will be discussed in more detail in other sections.</p>"},{"location":"archive/product/projects/2024/architecture-transition/#user-database","title":"User database","text":"<p>For each API call, there should be an identifiable DB function that performs all User Database operations needed to satisfy that call. For example,</p> <ul> <li>Calling the function <code>get_tables(database, schema)</code> should result in a call to some function <code>get_tables(sch_oid oid)</code> on the <code>database</code>.</li> </ul> <p>To achieve this, we will install the following on the user database(s)</p> <ul> <li>Some custom Mathesar types. These are used to validate passed JSON at the User DB level. For example, we create the type   <pre><code>TYPE __msar.col_def AS (\n  name_ text, -- The name of the column to create, quoted.\n  type_ text, -- The type of the column to create, fully specced with arguments.\n  not_null boolean, -- A boolean to describe whether the column is nullable or not.\n  default_ text, -- Text SQL giving the default value for the column.\n  identity_ boolean, -- A boolean giving whether the column is an identity pkey column.\n  description text -- A text that will become a comment for the column\n)\n</code></pre>   This type describes and validates the column info we need to add that column to a table.</li> <li>A set of functions that provide the bulk of Mathesar\u2019s back end logic and functionality.</li> </ul>"},{"location":"archive/product/projects/2024/architecture-transition/#python-db-library","title":"Python <code>db</code> library","text":"<p>This library should mostly serve to provide thin wrapper functions around the User DB layer functions. These functions should take parameters from requests (never request objects themselves) and engines, and then call underlying DB functions. They should then pass the results up towards the API</p>"},{"location":"archive/product/projects/2024/architecture-transition/#web-service","title":"Web service","text":"<p>This service should provide an JSON-RPC API for use by the front end. When an API function is called, the service should:</p> <ul> <li>Grab an appropriate engine from the by combining the <code>user</code> associated with the request with the <code>database</code>. See the models page for more detail.</li> <li>Call the relevant <code>db</code> library function (should be only one in most cases).</li> <li>Gathers data from the service database via models if needed (this is for metadata that\u2019s inappropriate for storage in the User DB for some reason)</li> <li>Returns it to the API</li> </ul>"},{"location":"archive/product/projects/2024/architecture-transition/#permissions-and-users","title":"Permissions and users","text":"<ul> <li>All permission checks for accessing a User DB object (e.g., table) should happen on the User DB. We should not add another layer of checks for these objects in the web service.</li> <li>Permission checks for accessing and managing info in the Django DB (e.g., Exploration definitions) are handled in the web service.</li> <li>We should, whenever possible, permissions on Django models based on access to the underlying DB object in real time. Details are here.</li> </ul>"},{"location":"archive/product/projects/2024/architecture-transition/#example","title":"Example","text":"<p>A user lists the columns for a table. Because they have access to read the columns of the table (checked on the DB), they can read display options for a table. If they have access to modify a column of a table, they have access to modify the relevant display options. This works as long as there isn\u2019t a dedicated <code>display_options</code> endpoint which could receive requests directly. Even in that case, we could add logic to check permissions on the relevant User DB.</p>"},{"location":"archive/product/projects/2024/architecture-transition/#exceptions","title":"Exceptions","text":"<p>There are some metadata and other models that we\u2019ll be keeping which can receive direct requests. Currently, these are:</p> <ul> <li>Database connection and credential info</li> <li>Shareable links</li> <li>Explorations</li> </ul> <p>Access to these will be managed using the Django permissions framework (i.e., with access policies).</p>"},{"location":"archive/product/projects/2024/architecture-transition/models/","title":"Models","text":"<p>Subject to minor changes.</p> <p>We should be able to handle anything being discussed for beta through simple extensions of this model framework. Also, these models are intended to get us to beta, while providing flexibility to move forward afterwards. There will be a brief discussion of a desired next iteration at the end.</p>"},{"location":"archive/product/projects/2024/architecture-transition/models/#user","title":"User","text":"Column Type Notes id integer pkey password character varying(128) not null last_login timestamp with time zone is_superuser boolean username character varying(150) not null; unique email character varying(254) is_staff boolean is_active boolean date_joined timestamp with time zone full_name character varying(255) short_name character varying(255) password_change_needed boolean"},{"location":"archive/product/projects/2024/architecture-transition/models/#dbserver","title":"DBServer","text":"Column Type Notes id integer pkey created_at timestamp with time zone updated_at timestamp with time zone host character varying not null port integer not null <p><code>(host, port)</code> pair is unique. </p> <p>Theoretically, we could also split the host out, but that seems like premature optimization.</p> <p>We could consider making the <code>host</code> and <code>port</code> nullable when we\u2019re supporting <code>.pgpass</code>.</p>"},{"location":"archive/product/projects/2024/architecture-transition/models/#database","title":"Database","text":"Column Type Notes id integer pkey created_at timestamp with time zone updated_at timestamp with time zone db_name text not null display_name text not null; unique db_server integer not null; references DBServer(id) editable boolean default_db_server_credential integer not null; references DBServerCredential(id) <p><code>(db_server, db_name)</code> is unique. We could consider making <code>db_name</code> nullable when supporting <code>.pgpass</code>. If a Mathesar Admin user doesn\u2019t have an entry in <code>UserDBRoleMap</code> for a given database, they will use the <code>default_credential</code> defined here to connect.</p>"},{"location":"archive/product/projects/2024/architecture-transition/models/#dbservercredential","title":"DBServerCredential","text":"Column Type Notes id integer pkey created_at timestamp with time zone updated_at timestamp with time zone username character varying not null password character varying encrypted; not null db_server integer not null; references DBServer(id) <p>We could consider making <code>username</code> and <code>password</code> nullable when supporting <code>.pgpass</code>.</p>"},{"location":"archive/product/projects/2024/architecture-transition/models/#userdbrolemap","title":"UserDBRoleMap","text":"Column Type Notes id integer pkey created_at timestamp with time zone updated_at timestamp with time zone user integer not null; references User(id) database integer not null; references Database(id) db_server_credential integer references DBServerCredential(id) metadata_role enum (\u2018read only\u2019, \u2018read write\u2019) <p><code>(user, database)</code> pair is unique. The <code>metadata_role</code> isn\u2019t likely to be technically implemented as an <code>enum</code> on the DB for now. We\u2019ll use a Django-managed <code>TextChoices</code> field to save implementation time. See the current <code>DatabaseRole</code> model and its interaction with the <code>Role</code> class for an example. </p>"},{"location":"archive/product/projects/2024/architecture-transition/models/#aside-quick-overview-of-connecting-to-a-db","title":"Aside: Quick overview of connecting to a DB.","text":"<p>The Django permissions infrastructure should handle CRUD operations on <code>Database</code>, <code>DBServerCredential</code>, <code>DBServer</code>, and <code>UserDBRoleMap</code> resources. When adding a <code>Database</code> for the first time, we\u2019ll also add a <code>DBServer</code> if one doesn\u2019t exist, and add or choose a <code>DBServerCredential</code> to be the default based on the credential provided when adding the <code>Database</code> entry. Actually accessing a database wouldn\u2019t require the permissions infrastructure; we\u2019d instead construct a connection string by joining the appropriate <code>database</code> to the other info found by looking up the <code>user, database</code> pair. For example, given a <code>(user, database)</code> pair like <code>(3, 8)</code>, we\u2019d look up the appropriate row in the <code>UserDBRoleMap</code> model to find the <code>db_server_credential</code> (referencing <code>DBServerCredential</code>). We also follow the foreign key to the <code>Database</code> to pick up the <code>db_name</code> and then the foreign key to <code>DBServer</code> to pick up the <code>host</code> and <code>port</code>.</p> <p>We should eventually add functionality to store some details in a <code>.pgpass</code> dotfile (though probably in a custom location). <code>psycopg</code> can inject the password and/or other missing pieces automatically through these means.</p>"},{"location":"archive/product/projects/2024/architecture-transition/models/#exploration","title":"Exploration","text":"Column Type Notes id integer pkey created_at timestamp with time zone updated_at timestamp with time zone database integer references Database(id) base_table_oid integer not null name character varying(128) not null; unique description text initial_columns jsonb not null transformations jsonb display_options jsonb display_names jsonb <ul> <li>The JSONB columns are the same format, except now they refer to DB-layer ids, e.g., OIDs and attnums rather than Django-layer IDs.</li> <li>We should consider changing <code>display_options</code> to refer to instances of <code>ColumnMetadata</code> within the JSONB</li> <li>Permissions on this object will be derived from the <code>UserDBRoleMap.metadata_role</code> via the <code>(database, user)</code> pair.</li> </ul>"},{"location":"archive/product/projects/2024/architecture-transition/models/#columnmetadata","title":"ColumnMetadata","text":"Column Type Notes id integer pkey created_at timestamp with time zone updated_at timestamp with time zone database integer not null; References Database(id) table_oid integer not null attnum integer not null bool_input enum (\u2018dropdown\u2019, \u2018checkbox\u2019) bool_true text default: \u2018True\u2019 bool_false text default: \u2018False\u2019 num_min_frac_digits integer min: 0, max: 20 num_max_frac_digits integer min: 0, max: 20 num_show_as_perc boolean Default: false mon_currency_symbol text Default? mon_currency_location enum (\u2018after-minus\u2019, \u2018end-with-space\u2019) time_format text date_format text duration_min character varying(255) duration_max character varying(255) duration_show_units boolean <ul> <li>The <code>(database, table_oid, attnum)</code> tuple should be unique.</li> <li>Depending on Django\u2019s support for multicolumn <code>CHECK</code> constraints, we should ensure that <code>num_min_frac_digits &lt; num_max_frac_digits</code>. </li> <li>This has a number of fields to replace the current JSON storage of display options, and remove the need for the polymorphic serializer.</li> <li>The only foreign key we reference is the <code>Database(id)</code>, needed to map to a specific database where we find the relevant table and column.</li> <li>We don\u2019t need to reference any <code>schema_oid</code>, since a <code>(table_oid, attnum)</code> pair is unique per DB.</li> <li>Permissions to manipulate instances of this model would be derived from permissions to manipulate the relevant table and column in the underlying database.</li> </ul>"},{"location":"archive/product/projects/2024/architecture-transition/models/#tablemetadata","title":"TableMetadata","text":"Column Type Notes id integer pkey created_at timestamp with time zone updated_at timestamp with time zone database integer not null; references Database(id) table_oid integer not null import_verified boolean is_temp boolean import_target_oid integer column_order jsonb preview_customized boolean preview_template character varying(255) <p>I\u2019ve left the preview template in the Mathesar layer. The hope is that we can find a sufficiently featureful and also sufficiently efficient algorithm for getting the template, thereby avoiding needing to move this down into the user Database. There will be more discussion of this below. Permissions to manipulate this should be derived from permissions on the relevant table in the underlying database.</p>"},{"location":"archive/product/projects/2024/architecture-transition/models/#datafile","title":"DataFile","text":"Column Type Notes id integer pkey created_at timestamp with time zone updated_at timestamp with time zone file character varying(100) not null created_from character varying(128) base_name character varying(100) header boolean delimiter character varying(1) escapechar character varying(1) quotechar character varying(1) user integer type character varying(128) max_level integer sheet_index integer <p>When we have our desired logic for cleaning this up sorted out, we should consider removing this model. It\u2019s currently only used ephemerally, but then the actuaul instance hangs around indefinitely.</p>"},{"location":"archive/product/projects/2024/architecture-transition/models/#sharedexploration","title":"SharedExploration","text":"Column Type Notes id integer pkey created_at timestamp with time zone updated_at timestamp with time zone slug uuid unique enabled boolean exploration integer not null; references Exploration(id) db_server_credential integer references DBServerCredential(id) <p>I\u2019ve chosen to store the <code>db_server_credential</code> id, rather than the creating user, for flexibility. We can derive this from a creating user at the time the Exploration is created, and could (theoretically) update it if the User\u2019s credential for a given DB changes (I wouldn\u2019t recommend this).</p>"},{"location":"archive/product/projects/2024/architecture-transition/models/#sharedtable","title":"SharedTable","text":"Column Type Notes id integer pkey created_at timestamp with time zone updated_at timestamp with time zone slug uuid unique enabled boolean table_oid integer not null db_server_credential integer references DBServerCredential(id)"},{"location":"archive/product/projects/2024/architecture-transition/models/#after-beta-term-vision","title":"After-beta-term vision","text":"<p>For the beta, I\u2019m hoping to avoid some work by keeping things in the Mathesar service models that I\u2019d rather store in the underlying User Databases in a <code>msar_catalog</code> schema. The relevant models are <code>ColumnMetadata</code> and <code>TableMetadata</code>. A big motivation to move this info to the User DB is performance w.r.t. the table previews. Our current algorithm requires lots of back-and-forth between the service layer and the User DB in order to recursively build these preview templates, and to fill them. I also think it\u2019s more natural to keep these metadata models in the User DB, since they\u2019re segregated by User DB, and each instance only refers to objects on that underlying database.</p> <p>I also think in the even longer term that we should think about storing our <code>Exploration</code> info on the underlying database in the form of views (perhaps in a special <code>msar_queries</code> schema). This presents some technical problems, however, that we haven\u2019t yet solved.</p>"},{"location":"archive/product/projects/2024/architecture-transition/models/#what-about-names-vs-oids","title":"What about names vs. OIDs?","text":"<p>I thought about adding another model to store a general map of names to OIDs for use when resolving missing tables, etc. This would be useful if someone drops and recreates a table, or when trying to export your Mathesar Explorations or Display Settings. I didn\u2019t add that at this stage, since:</p> <ul> <li>We\u2019d use the underlying User DB for that map if we move the Metadata models down to the UserDB, and</li> <li>We aren\u2019t prioritizing the features requiring being able to export and reimport your Explorations for beta.</li> </ul>"},{"location":"archive/product/projects/2024/architecture-transition/old_models/","title":"Deprecated Models","text":"<p>This section contains ad-hoc notes on our current models, and intended changes.</p>"},{"location":"archive/product/projects/2024/architecture-transition/old_models/#column","title":"Column","text":"Column Type id integer created_at timestamp with time zone updated_at timestamp with time zone attnum integer display_options jsonb table_id integer <p>The only actual info here is the display options for a given column, stored as a JSON blob. Rename to <code>ColumnMetadata</code>, restructure to validate display options, delete fkey fields. Consider moving to <code>ma_catalog</code> table on user DB.</p> <p>We need to handle updating the table preview template when a new column is added (or rethink the implementation of this functionality)</p> <p>We need to replace functionality to get <code>ui_type</code> from DB type.</p> <p>To replace the dependent-getting functionality, we need to move the dependents module to SQL.</p>"},{"location":"archive/product/projects/2024/architecture-transition/old_models/#constraint","title":"Constraint","text":"Column Type id integer created_at timestamp with time zone updated_at timestamp with time zone oid integer table_id integer <p>Nothing actually stored here. Delete this model. All functionality can be contained in User DB functions.</p>"},{"location":"archive/product/projects/2024/architecture-transition/old_models/#database","title":"Database","text":"Column Type id integer created_at timestamp with time zone updated_at timestamp with time zone name character varying(128) deleted boolean db_name character varying(128) editable boolean host character varying(255) password text port integer username text <p>Stores connection info to allow accessing a DB by creating an SQLAlchemy engine.</p> <p>Referenced by DatabaseRole and Schema models.</p> <p>Replace this with <code>Database</code>, <code>DatabaseServer</code>, <code>DatabaseServerCredential</code>, and <code>UserDatabaseRoleMap</code> models. See the New models for details.</p>"},{"location":"archive/product/projects/2024/architecture-transition/old_models/#databaserole","title":"DatabaseRole","text":"Column Type id integer created_at timestamp with time zone updated_at timestamp with time zone role character varying(10) database_id integer user_id integer <p>This stores a role on a given database for a given user. We will repurpose this, and it will be applied (for now) only to <code>UIQuery</code> instances namespaced under a given database.</p>"},{"location":"archive/product/projects/2024/architecture-transition/old_models/#datafile","title":"DataFile","text":"Column Type id integer created_at timestamp with time zone updated_at timestamp with time zone file character varying(100) created_from character varying(128) base_name character varying(100) header boolean delimiter character varying(1) escapechar character varying(1) quotechar character varying(1) table_imported_to_id integer user_id integer type character varying(128) max_level integer sheet_index integer <p>This stores metadata about files which have been uploaded for import into Mathesar. We should keep this model. <code>table_imported_to_id</code> should be removed (it\u2019s not used anywhere is it?). Also <code>max_level</code> seems like less of a data file attribute and more of an import setting.</p>"},{"location":"archive/product/projects/2024/architecture-transition/old_models/#previewcolumnsettings","title":"PreviewColumnSettings","text":"Column Type id integer created_at timestamp with time zone updated_at timestamp with time zone customized boolean template character varying(255) <p>This stores the template defining what should be shown in a referencing fkey column for this table. This would be much better as a <code>ma_catalog</code> table for efficiency reasons.</p> <p>In that case, a table\u2019s preview settings would be \u201cglobal\u201d, i.e., it would be attached to the table rather than a user, table pair.</p> <p>Referenced by TableSettings.</p>"},{"location":"archive/product/projects/2024/architecture-transition/old_models/#schema","title":"Schema","text":"Column Type id integer created_at timestamp with time zone updated_at timestamp with time zone oid integer database_id integer <p>Nothing stored here. </p> <p>Referenced by SchemaRole and Table models.</p> <p>Delete this model. All permissions handled by the referencing SchemaRole should instead be handled by the underlying user\u2019s permissions on the actual schema in the DB</p>"},{"location":"archive/product/projects/2024/architecture-transition/old_models/#schemarole","title":"SchemaRole","text":"Column Type id integer created_at timestamp with time zone updated_at timestamp with time zone role character varying(10) schema_id integer user_id integer <p>This should be deleted, and the permissions should be instead managed on the underlying DB.</p>"},{"location":"archive/product/projects/2024/architecture-transition/old_models/#sharedquery","title":"SharedQuery","text":"Column Type id integer created_at timestamp with time zone updated_at timestamp with time zone slug uuid enabled boolean query_id integer <p>This model should stay. No changes here. We need to add metadata about a credential for running the actual query.</p>"},{"location":"archive/product/projects/2024/architecture-transition/old_models/#sharedtable","title":"SharedTable","text":"Column Type id integer created_at timestamp with time zone updated_at timestamp with time zone slug uuid enabled boolean table_id integer <p>Only change is that we need to refer directly to a table OID, and handle permissions.</p>"},{"location":"archive/product/projects/2024/architecture-transition/old_models/#table","title":"Table","text":"Column Type id integer created_at timestamp with time zone updated_at timestamp with time zone oid integer import_verified boolean is_temp boolean import_target_id integer schema_id integer <p>Stores info about:</p> <ul> <li>whether the initial data import for the table has been manually verified by a user or not, and</li> <li>whether the table is actually a temporary holder for data intended for a preexisting table.</li> </ul> <p>Referenced by Column, Constraint, DataFile, SharedTable, Table, TableSettings, and UIQuery models</p> <p>We should combine this with the <code>TableSettings</code> model to create a <code>TableMetadata</code> model that just has that info, and drop all fkeys and references.</p>"},{"location":"archive/product/projects/2024/architecture-transition/old_models/#tablesettings","title":"TableSettings","text":"Column Type id integer created_at timestamp with time zone updated_at timestamp with time zone column_order jsonb preview_settings_id integer table_id integer <p>This stores Mathesar-specific metadata about tables. Should be combined with remains of <code>Table</code> model.</p>"},{"location":"archive/product/projects/2024/architecture-transition/old_models/#uiquery","title":"UIQuery","text":"Column Type id integer created_at timestamp with time zone updated_at timestamp with time zone name character varying(128) description text initial_columns jsonb transformations jsonb display_options jsonb display_names jsonb base_table_id integer <p>This stores a definition of a stored query that can be run on command. The main changes are that it should refer directly to DB-layer ids (oids and attnums) rather than Django-layer.</p>"},{"location":"archive/product/projects/2024/architecture-transition/old_models/#user","title":"User","text":"Column Type id integer password character varying(128) last_login timestamp with time zone is_superuser boolean username character varying(150) email character varying(254) is_staff boolean is_active boolean date_joined timestamp with time zone full_name character varying(255) short_name character varying(255) password_change_needed boolean <p>This stores user metadata. I think we should  mostly keep it as is. It will be referenced by the <code>UserDatabaseRoleMap</code> model.</p>"},{"location":"archive/product/projects/2024/architecture-transition/permissions/","title":"Users and Permissions","text":"<p>The big picture is that we will implement access management for DB objects (including databases themselves) by giving admin users of Mathesar the ability to use database-layer permissions management tools (e.g., <code>GRANT</code>). For web service resources (e.g., Django model instances), permissions will be managed in Django.</p>"},{"location":"archive/product/projects/2024/architecture-transition/permissions/#database-model","title":"Database Model","text":"<p>This model will be reduced to store nothing more than metadata about a given database, as well as its name for use when constructing an actual connection to that database.</p>"},{"location":"archive/product/projects/2024/architecture-transition/permissions/#database-server-model","title":"Database Server Model","text":"<p>This model holds the <code>host</code> and <code>port</code> information for a given database.</p>"},{"location":"archive/product/projects/2024/architecture-transition/permissions/#database-server-credential-model","title":"Database Server Credential Model","text":"<p>As described in the models section, This will store the authentication information needed to create an engine, but won\u2019t provide a database (a required part of a connection definition in PostgreSQL). Because the information includes a role (to define the initial connection role), it necessarily defines a set of privileges available on the database with that connection.</p>"},{"location":"archive/product/projects/2024/architecture-transition/permissions/#user-database-role-map-model","title":"User Database Role Map Model","text":"<p>This map uses a <code>user, database</code> pair to look up the needed credentials, then provides a connection to the database using those credentials (if possible).</p>"},{"location":"archive/product/projects/2024/architecture-transition/permissions/#adding-connections-backend-perspective","title":"Adding Connections (backend perspective)","text":"<p>Regardless of UI, the backend should receive a <code>POST</code> request to the new RPC endpoint defining a new connection. We\u2019ll use the same functions set up in PR #3348. The relevant info should be stored in the <code>Database</code>, <code>DatabaseServer</code>, and <code>DatabaseServerCredential</code> models. Also, if the user does not already have an entry defining their role on the given database, we could create such an entry automatically in the <code>UserDBRoleMap</code> model. This is optional, and doesn\u2019t really affect the architecture. Then, to let some other users access that connection, we will provide an RPC function that lets an admin set different users\u2019 credentials for the given database by creating or updating <code>UserDBRoleMap</code> resources. Note that this does not directly modify anything to do with permissions on actual database objects (e.g., schemata or tables).</p>"},{"location":"archive/product/projects/2024/architecture-transition/permissions/#granting-database-object-privileges","title":"Granting database object privileges","text":"<p>The backend will provide RPC functions that let an admin (who has access to a sufficiently-privileged database role via a connection) access database-level permission granting functionality directly. So, to grant access to create tables in a schema to a Mathesar user, the admin uses an RPC function that defines a privilege-granting query (via a PL/pgSQL function) on the database. Note that this request doesn\u2019t actually modify any model instance.</p> <ul> <li>Privileges on DB objects are thus not granted directly to Mathesar users.</li> <li>Privileges on DB objects are granted to DB roles, which may be accessible to some (or all) Mathesar users.</li> <li>Anytime an RPC function requiring DB access runs, it runs using the connection defined via the <code>UserDBRoleMap</code>, with the associated privileges on that database.</li> </ul> <p>UX Question</p> <p>Should the admin think in terms of groups of Mathesar users, or specifically in terms of connections when dealing with DB-level privileges?</p> <p>Potential Confusion</p> <p>In case the admin or DBA want multiple Mathesar users to be able to modify various DB objects, three options are available: - Give all relevant Mathesar users access to connect as the owning DB user. - <code>GRANT</code> the owning DB role (ostensibly a user) to DB users connectable by the relevant Mathesar users. - Have at least one DB superuser available for use with a connection, and give relevant Mathesar users access to that DB superuser.</p>"},{"location":"archive/product/projects/2024/architecture-transition/permissions/#mathesar-object-privileges","title":"Mathesar object privileges","text":"<p>Examples of such objects are Explorations, and table properties like preview columns or display options. Permissions on these will be: - None, - read only, or - read write These permissions will be tracked in the <code>UserDBRoleMap</code> model via the <code>metadata_role</code> attribute. Note that these permissions are only related to CRUD operations on these objects. In the case of Explorations, actually running the exploration is dependent on: - at least the read permission on the object, and - the database-level permissions associated with the connection available to the user.</p>"},{"location":"archive/product/projects/2024/architecture-transition/permissions/#current-plan","title":"Current plan","text":"<p>In the case of Explorations (<code>Exploration</code> model), this will be derived from a policy scoped via the <code>Database</code> associated with the Exploration:</p> <ul> <li>A super user of Mathesar will set the policy for a given <code>User</code> on a given <code>Database</code> instance via the UI.<ul> <li>When a <code>User</code> wants to view/edit/manage an Exploration, the web service will check the <code>user, database</code> pair (where <code>database</code>) is the <code>Database</code> associated with the Exploration to find a relevant policy.</li> <li>Based on the policy, the user can then act on the Exploration.</li> </ul> </li> </ul>"},{"location":"archive/product/projects/2024/architecture-transition/permissions/#alternative-plan","title":"Alternative plan","text":"<p>In the case of Explorations (<code>Exploration</code> model), this will be derived from a policy scoped via the <code>Database</code> associated with the Exploration:</p> <ul> <li>A super user of Mathesar will set the policy for <code>DatabaseServerCredential</code> instances via the UI.<ul> <li>Each credential instance represents a Role on the DB.</li> <li>When a User wants to view/edit/manage an Exploration, the web service will check the <code>user, database</code> pair (where <code>database</code>) is the Database associated with the Exploration to get a <code>DatabaseServerCredential</code> if one exists (otherwise, no permissions are granted)</li> <li>Based on the policy applied to that credential, the user can then act on the Exploration.</li> </ul> </li> </ul> <p>This plan would require a minor change to the models, but isn\u2019t very difficult to implement. The author considers it a UX question which way we go on this.</p>"},{"location":"archive/product/projects/2024/architecture-transition/permissions/#shared-links","title":"Shared links","text":"<p>A shared table or exploration needs access to a <code>Database</code> and <code>DatabaseServerCredential</code> to run (or be viewed). We should bypass any permission checks when actually retrieving data. The shared object model should include an attribute giving the <code>DatabaseServerCredential</code> instance needed to run (or view).</p> <p>Tech/Product concern</p> <p>The safest (and easiest) implementation would be to have specialized view-only users who are <code>GRANT</code>ed <code>SELECT</code> on relevant DB objects when needed. Then, sharable links would only use those users. But, we\u2019ll need to justify this choice in documentation somewhere.</p>"},{"location":"archive/product/projects/2024/architecture-transition/permissions/#note-on-hierarchical-permissions","title":"Note on hierarchical permissions","text":"<p>We can allow an \u201cadmin\u201d DB user by automatically granting the role associated with each Mathesar-managed connection to to a given admin DB user. So, if we have a user <code>mathesaradmin</code>, and a regular user <code>joe</code>, we can run <code>GRANT joe TO mathesaradmin</code> (as a role with sufficient privileges; At least <code>ADMIN</code> is needed on <code>joe</code> to run this). This would let <code>mathesaradmin</code> act as a Manager on anything created by <code>joe</code>.</p> <p>Our <code>Manager</code> concept implies (co-)ownership of all managed sub-objects. I.e., a Database Manager owns all objects in that database (using the description in our docs)</p> <p>Our <code>Editor</code> concept implies <code>SELECT</code>, <code>INSERT</code>, <code>UPDATE</code>, <code>DELETE</code>, <code>TRUNCATE</code>, <code>REFERENCES</code> (sort of; with the way Mathesar currently treats fkeys)</p> <p>Our <code>Viewer</code> concept implies <code>SELECT</code> on objects (obviously)</p> <p>Thus, if we want to recreate our current conceptual framework, it\u2019s possible (and not too difficult).</p>"},{"location":"archive/product/projects/2024/architecture-transition/record-summaries/","title":"Record summaries","text":"<p>As part of the 2024 architecture transition (for Mathesar\u2019s beta), we\u2019re making some changes to the way that record summaries work. This document describes those changes, along with the rationale.</p>"},{"location":"archive/product/projects/2024/architecture-transition/record-summaries/#motivation","title":"Motivation","text":""},{"location":"archive/product/projects/2024/architecture-transition/record-summaries/#short-term-for-beta","title":"Short term (for beta)","text":"<ul> <li> <p>We are seeking to improve performance for beta, and record summaries are currently a major performance drag. Brent sees some low-hanging fruit for improving performance by changing the way record summaries are generated.</p> </li> <li> <p>The process for generating record summaries currently relies on significant work being performed in the service layer. As part of our larger architectural transition, we are seeking to move more logic from the service layer into the DB layer. Keeping record summaries in the service layer blocks us from making other architectural changes. The record summary logic ideally needs to be moved down into the DB layer to facilitate our other architectural goals.</p> </li> </ul>"},{"location":"archive/product/projects/2024/architecture-transition/record-summaries/#long-term-post-beta","title":"Long term (post-beta)","text":"<p>In their current form, record summaries have a number of limitations. Here are some examples of record summaries that we can\u2019t generate:</p> <ul> <li> <p>(A) A record summary for a person, using their nickname when available while falling back to their first name if needed. This requires calling a function like <code>COALESCE</code> within the record summary, which we can\u2019t do.</p> </li> <li> <p>(B) A record summary which formats a date column into string that\u2019s more human-readable than ISO format. This requires calling a formatting function.</p> </li> <li> <p>(C) Imagine an e-commerce database where products have categories organized in a hierarchically category tree modeled by a <code>category</code> table with a self-referential <code>parent</code> FK column. One category has title \u201cComputers\u201d (with <code>parent</code> being null), while a child category has the title \u201cLaptops\u201d (with <code>parent</code> referring to the \u201cComputers\u201d category).  We\u2019d like to summarize the category table such that the laptops record displays as \u201cComputers &gt; Laptops\u201d. Each category should show the full path to itself from the root, joined by a string separator.</p> </li> <li> <p>(D) Sometimes the only meaningful way to summarize a record is by using aggregate data. For example, imagine a movies database where each movie can have multiple names. One movie has the names \u201cAm\u00e9lie\u201d and \u201cLe fabuleux destin d\u2019Am\u00e9lie Poulain\u201d \u2014 but the actual movie record may only have an id, and nothing else meaningful. We\u2019d like to summarize it using aggregate data to produce the string \u201cLe fabuleux destin d\u2019Am\u00e9lie Poulain, aka Am\u00e9lie\u201d.</p> </li> </ul> <p>Currently we allow users to define their own record summaries via a very simplistic templating system which only allows referencing fields directly on the record. Extending this templating system to handle the examples above would require adding tremendous complexity to the templating system.</p> <p>Sean\u2019s idea is to eventually allow users to define their own query which generates record summaries. Perhaps they would author the queries using something like the Data Explorer, or perhaps they would write raw SQL. The query could call functions in order to handle cases like (A) and (B). The query could contain recursive CTEs to handle cases like (C). And the query could contain aggregations to handle cases like (D).</p> <p>The scope of changes we\u2019re currently making to record summaries for Mathesar beta do not allow users to define such queries. However the changes do lay an architectural foundation for eventually moving in that direction. These future considerations do not require any additional work right now. Rather, the future considerations are informing our architectural design by nudging us toward using flexible query-based logic.</p>"},{"location":"archive/product/projects/2024/architecture-transition/record-summaries/#old-record-summaries","title":"Old record summaries","text":"<p>This section reviews the behavior of record summaries as of Mathesar 0.1.7 just to provide context to this document. This behavior is specified in more detail within our old specs document.</p> <p>Without any user configuration, records are summarized by their first non-PK column.</p> <p>Users can customize the behavior by configuring a record summary template like <code>{First Name} {Last Name}</code>. In the front end, this template is converted to string like <code>{817} {819}</code>, with the numbers representing the Django ids of column objects. That converted template is then persisted in metadata associated with a table.</p> <p>Any time a foreign key column is referenced (either explicitly in a template or implicitly via the default template), a \u201ctransitive summary\u201d is produced by using the record summary for the referenced table.</p> <p>As an example, to configure the record summary for the Books table so that books are summarized like \u201cBlink, by Malcom Gladwell\u201d, we first need to configure the record summary template for the Authors table as <code>{First Name} {Last Name}</code> and then configure the record summary template for the Books table as <code>{Title}, by {Author}</code></p>"},{"location":"archive/product/projects/2024/architecture-transition/record-summaries/#new-record-summaries","title":"New record summaries","text":"<p>This section describes how we intend for record summaries to work in Mathesar\u2019s beta release.</p> <p>Without any user configuration, records will be summarized by their first text-like column. This is a slight change. For example, if the PK is text, then we use that. If the PK is numeric and the first non-pk column is a numeric FK column, then we keep looking to see if we can find a text column.</p> <p>Users will still be able to customize the template, but the template DSL will have slightly new syntax. Column references within curly braces will need to be quoted in the same manner as in SQL. So <code>{first_name} {last_name}</code> will work if the columns are <code>first_name</code> and <code>last_name</code>. But if the columns are <code>First Name</code> and <code>Last Name</code>, then the template will need to be <code>{\"First Name\"} {\"Last Name\"}</code>. The same quoting and escaping rules apply as with SQL. Any references which fail to parse correctly are interpreted as string literals to be included in the template verbatim. Users should rarely be interacting with the template DSL manually because Mathesar has (and will continue to have) a button to insert a column into the template.</p> <p>Record summaries will no longer use the transitive templates of other tables referenced via foreign key columns. So from the Books table, putting <code>{\"Author\"}</code> in a template will not show the summarized author (as before). Instead, it will only show the PK value of the author. To show fields in the author\u2019s table, we use dot notation within the curly braces.</p> <p>From the same example above, to configure the record summary for the Books table so that books are summarized like \u201cBlink, by Malcom Gladwell\u201d, we would not need to configure the record summary template for the Authors table. We would configure the record summary template for the Books table as <code>{\"Title\"}, by {\"Author\".\"First Name\"} {\"Author\".\"Last Name\"}</code>.</p> <p>The UX for inserting things like <code>{\"Author\".\"First Name\"}</code> into the template is still TBD, but we expect it to function akin to way we add columns to explorations.</p> <p>From the user\u2019s perspective, the change in the transitive behavior has some advantages and some disadvantages. It\u2019s slightly more flexible \u2014 but also slightly more tedious. Most importantly though: this modification to the transitive behavior helps us achieve our performance goals.</p> <p>The record summary template will still be persisted in metadata associated with a table. But instead of persisting it as a string, it will be persisted as a parsed syntax tree. For the example above, that tree looks like this:</p> <pre><code>[\n  [2],\n  \", by \",\n  [10, 2],\n  \" \",\n  [10, 3]\n]\n</code></pre> <p>That means: first include a reference to the column in the base table having attnum 2; then include a string literal, then include a reference to a column that can be found by joining on the FK at column 10 and finding column with attnum 2 in the joined table\u2026 and so on.</p>"},{"location":"archive/product/projects/2024/architecture-transition/record-summaries/#migration-path","title":"Migration path","text":"<p>When upgrading a pre-beta Mathesar installation to the beta version, and pre-existing record summary templates will be discarded. We will warn users about this in the upgrade instructions, giving them notice that they\u2019ll need to manually re-configure any record summary templates they\u2019ve set up.</p>"},{"location":"archive/product/projects/2024/architecture-transition/rpc-client/","title":"RPC client specs","text":""},{"location":"archive/product/projects/2024/architecture-transition/rpc-client/#types","title":"Types","text":"<p>Client-side types will be manually maintained so as to follow the behavior of the backend.</p> <p>(Sean did a modicum of research into whether we\u2019d be able to auto-generate TypeScript types from the backend code, but this didn\u2019t seem viable.)</p>"},{"location":"archive/product/projects/2024/architecture-transition/rpc-client/#examples-of-how-the-api-would-be-called","title":"Examples of how the API would be called","text":""},{"location":"archive/product/projects/2024/architecture-transition/rpc-client/#non-batched","title":"Non-batched","text":"<pre><code>/** @type {ApiRequest&lt;Spacecraft&gt;&gt;} */\nconst request = api.spacecrafts.get({ id: 42 });\n\n/** @type {CancellablePromise&lt;Spacecraft&gt;} */\nconst promise = request.run();\n\n/** @type {Spacecraft} */\nconst spacecraft = await promise; // Might throw!\n</code></pre>"},{"location":"archive/product/projects/2024/architecture-transition/rpc-client/#batched","title":"Batched","text":"<pre><code>/** @type {[ApiResult&lt;Spacecraft&gt;, ApiResult&lt;Voyage&gt;]} */\nconst [spacecraftResult, voyageResult] = await batchSend(\n  api.spacecrafts.get({ id: 42 }),\n  api.voyages.get({ id: 100 }),\n);\n\n/** @type {Spacecraft} */\nconst spacecraft = spacecraftResult.unwrap(); // Might throw!\n\n/** @type {Voyage} */\nconst voyage = voyageResult.unwrap(); // Might throw!\n</code></pre>"},{"location":"archive/product/projects/2024/architecture-transition/rpc-client/#lower-level-types","title":"Lower-level types","text":"<p>(Some of these would actually be classes, but the type defs written below give you a rough idea of how they would work.)</p>"},{"location":"archive/product/projects/2024/architecture-transition/rpc-client/#apiresult","title":"ApiResult","text":"<pre><code>interface ApiOk&lt;T&gt; {\n  status: 'ok';\n  value: T;\n}\n\ninterface ApiError {\n  status: 'error';\n  code: number;\n  message: string;\n  data?: unknown;\n}\n\ntype ApiResult&lt;T&gt; = ApiOk&lt;T&gt; | ApiError;\n</code></pre>"},{"location":"archive/product/projects/2024/architecture-transition/rpc-client/#apirequest","title":"ApiRequest","text":"<pre><code>class ApiRequest&lt;T&gt; {\n  /**\n   * The simplest, most common way to run an API request.\n   *\n   * @throws `ApiError` when awaited if any errors are encountered.\n   */\n  run(): CancellablePromise&lt;T&gt; {\n    throw Error('Not yet implemented');\n  }\n\n  /**\n   * Provides more fine-grained control instead of `run` by returning\n   * ApiResult which can be type-narrowed manually.\n   *\n   * Will not reject or throw errors.\n   */\n  send(): CancellablePromise&lt;ApiResult&lt;T&gt;&gt; {\n    throw Error('Not yet implemented');\n  }\n}\n</code></pre>"},{"location":"archive/product/projects/2024/architecture-transition/rpc-client/#error-handling","title":"Error handling","text":""},{"location":"archive/product/projects/2024/architecture-transition/rpc-client/#error-handling-with-trycatch","title":"Error handling with try/catch","text":"<pre><code>try {\n  const spacecraft = await api.spacecrafts.get({ id: 42 }).run();\n  toast.success(spacecraft.name);\n} catch (e) {\n  toast.error(getErrorMessage(e));\n}\n</code></pre>"},{"location":"archive/product/projects/2024/architecture-transition/rpc-client/#error-handling-with-match","title":"Error handling with <code>match</code>","text":"<pre><code>match(await api.spacecrafts.get({ id: 42 }).send(), 'status', {\n  ok: ({ value: spacecraft }) =&gt; toast.success(spacecraft.name),\n  error: ({ message }) =&gt; toast.error(message),\n});\n</code></pre> <p>(I already implemented this <code>match</code> function in #3037 here.)</p>"},{"location":"archive/product/projects/2024/architecture-transition/rpc/","title":"RPC transition","text":"<p>This document lays out plans for our 2024 transition from a REST-based API to one based on JSON-RPC.</p> <p>It is maintained by Sean and Brent.</p>"},{"location":"archive/product/projects/2024/architecture-transition/rpc/#timeline","title":"Timeline","text":"<p>We want most (but not all) of our REST endpoints to be fully transitioned to RPC APIs by the beta release. Some REST endpoints will likely remain, especially ones like <code>data_files</code> that will be difficult (or impossible?) to transition to JSON-RPC.</p>"},{"location":"archive/product/projects/2024/architecture-transition/rpc/#json-rpc-spec","title":"JSON-RPC spec","text":"<ul> <li>JSON-RPC is a spec adopted by many libraries.</li> <li>You should probably understand this spec before continuing to read this wiki page. Read the spec if needed.</li> <li>We\u2019ll be using version 2.0 of the spec.</li> <li>JSON-RPC is transport agnostic, but we plan on using it exclusively over HTTP for the forseeable future. A time may come when we use it over other transports such as web sockets, but we\u2019ll re-evaluate any architectural concerns as needed at that point.</li> </ul>"},{"location":"archive/product/projects/2024/architecture-transition/rpc/#libraries","title":"Libraries","text":"<p>On the backend we\u2019ll be using django-modern-rpc.</p> <p>When using this library:</p> <ul> <li>All requests will be performed using HTTP POST.</li> <li>All responses have an HTTP status code of 200, even error responses.</li> </ul>"},{"location":"archive/product/projects/2024/architecture-transition/rpc/#alternatives-considered","title":"Alternatives considered","text":"<ul> <li>json-rpc<ul> <li>This seems to be less actively maintained</li> <li>It doesn\u2019t integrate as well with Django auth.</li> </ul> </li> </ul>"},{"location":"archive/product/projects/2024/architecture-transition/rpc/#api-standards","title":"API Standards","text":"<p>These standards are preliminary and subject to change. We\u2019ll need to better document them as they become more solidified with our rollout.</p>"},{"location":"archive/product/projects/2024/architecture-transition/rpc/#use-named-parameters","title":"Use named parameters","text":"<p>The JSON-RPC spec supports both named parameters and positional parameters.</p> <p>We are enforcing a standard of always using named parameters and never using positional parameters.</p>"},{"location":"archive/product/projects/2024/architecture-transition/rpc/#method-namespacing","title":"Method namespacing","text":"<ul> <li>Noun first, verb second. (This makes the methods easy to sort.)</li> <li>The most common method naming pattern is <code>noun.verb</code>, but method names can use arbitrarily deep namespace. It\u2019s okay to have a method at the top-level or several levels deep.</li> </ul>"},{"location":"archive/product/projects/2024/architecture-transition/rpc/#standard-verbs","title":"Standard verbs","text":"<p>To ensure that our method names use consistent terminology, use the following verbs within method names:</p> \u2705 Use \u274c Don\u2019t use list get all, select get get one, fetch, return add create, insert, make, new patch partial update, edit, alter replace full update, put, set delete remove, drop"},{"location":"archive/product/projects/2024/architecture-transition/rpc/#docstrings","title":"Docstrings","text":"<ul> <li>All API functions must have docstrings.</li> <li>Within the docstrings the syntax should be Google style.</li> </ul>"},{"location":"archive/product/projects/2024/architecture-transition/rpc/#id-values","title":"Id values","text":"<p>For the JSON-RPC <code>id</code> parameter, we generate values which are unique only within the scope of a single HTTP request.</p>"},{"location":"archive/product/projects/2024/architecture-transition/rpc/#when-to-batch","title":"When to batch","text":"<p>The move to JSON-RPC opens up the possibility for the front end to consolidate multiple requests into batches. We need to be cautious of this though. While parallel HTTP requests do incur overhead that can be reduced through batching, we need to be mindful that batching is essentially equivalent to <code>Promise.all()</code>. Sometimes batching requests might be possible but not preferable. For example if we can update state in one place of the UI with a fast request while concurrently updating separate UI state from a slow request, then we should issue parallel requests. The front end will need to take this behavior into account and make a case-by-case determinations on when it is appropriate to batch.</p>"},{"location":"archive/product/projects/2024/architecture-transition/rpc/#functions","title":"Endpoints \ud83e\udc46 functions","text":"<p>The table below is a comprehensive list of all REST API endpoints used by the front end as of Mathesar 0.1.6. Sean performed an audit of the codebase to extract this list.</p> Endpoint HTTP Method Function <code>/api/db/v0/connections/{connectionId}/</code> DELETE <code>connections.delete</code> <code>/api/db/v0/connections/{connectionId}/</code> PATCH <code>connections.patch</code> <code>/api/db/v0/connections/</code> GET <code>connections.list</code> <code>/api/db/v0/data_files/{id}</code> GET (keep) <code>/api/db/v0/data_files/{id}</code> PATCH (keep) <code>/api/db/v0/data_files/</code> POST (keep) <code>/api/db/v0/links/</code> POST <code>data_modeling.add_link</code> <code>/api/db/v0/queries/{queryId}/</code> DELETE <code>explorations.delete</code> <code>/api/db/v0/queries/{queryId}/</code> GET <code>explorations.get</code> <code>/api/db/v0/queries/{queryId}/</code> PUT <code>explorations.replace</code> <code>/api/db/v0/queries/{queryId}/results/</code> GET <code>explorations.run_saved</code> <code>/api/db/v0/queries/</code> GET <code>explorations.list</code> <code>/api/db/v0/queries/</code> POST <code>explorations.add</code> <code>/api/db/v0/queries/run/</code> POST <code>explorations.run</code> <code>/api/db/v0/schemas/{schemaId}/</code> DELETE <code>schemas.delete</code> <code>/api/db/v0/schemas/{schemaId}/</code> PATCH <code>schemas.patch</code> <code>/api/db/v0/schemas/</code> GET <code>schemas.list</code> <code>/api/db/v0/schemas/</code> POST <code>schemas.add</code> <code>/api/db/v0/tables/{tableId}/</code> DELETE <code>tables.delete</code> <code>/api/db/v0/tables/{tableId}/</code> GET <code>tables.get</code> <code>/api/db/v0/tables/{tableId}/</code> PATCH <code>tables.patch</code>, <code>tables.metadata.patch</code> <code>/api/db/v0/tables/{tableId}/columns/{columnId}</code> DELETE <code>columns.delete</code> <code>/api/db/v0/tables/{tableId}/columns/{columnId}</code> PATCH <code>columns.patch</code>, <code>columns.metadata.patch</code> <code>/api/db/v0/tables/{tableId}/columns/</code> GET <code>columns.list</code>, <code>columns.metadata.list</code> <code>/api/db/v0/tables/{tableId}/columns/</code> POST <code>columns.add</code> <code>/api/db/v0/tables/{tableId}/constraints/{id}</code> DELETE <code>constraints.delete</code> <code>/api/db/v0/tables/{tableId}/constraints/</code> GET <code>constraints.list</code> <code>/api/db/v0/tables/{tableId}/constraints/</code> POST <code>constraints.add</code> <code>/api/db/v0/tables/{tableId}/joinable_tables/</code> GET <code>tables.list_joinable</code> <code>/api/db/v0/tables/{tableId}/move_columns/</code> POST <code>data_modeling.move_columns</code> <code>/api/db/v0/tables/{tableId}/previews/</code> POST <code>tables.get_import_preview</code> <code>/api/db/v0/tables/{tableId}/records/{recordPk}/</code> GET <code>records.get</code> <code>/api/db/v0/tables/{tableId}/records/{recordPk}/</code> PATCH <code>records.patch</code> <code>/api/db/v0/tables/{tableId}/records/</code> GET <code>records.list</code> <code>/api/db/v0/tables/{tableId}/records/</code> POST <code>records.add</code> <code>/api/db/v0/tables/{tableId}/settings/{settingsId}/</code> PATCH <code>tables.metadata.patch</code> <code>/api/db/v0/tables/{tableId}/split_table/</code> POST <code>data_modeling.split_table</code> <code>/api/db/v0/tables/{tableId}/type_suggestions/</code> GET <code>data_modeling.suggest_types</code> <code>/api/db/v0/tables/</code> GET <code>tables.list</code>, <code>tables.metadata.list</code> <code>/api/db/v0/tables/</code> POST <code>tables.add</code> <code>/api/ui/v0/connections/{databaseId}/types/</code> GET (remove) <code>/api/ui/v0/connections/create_from_known_connection/</code> POST <code>connections.add_from_known_connection</code> <code>/api/ui/v0/connections/create_from_scratch/</code> POST <code>connections.add_from_scratch</code> <code>/api/ui/v0/connections/create_with_new_user/</code> POST (remove) <code>/api/ui/v0/database_roles/{roleId}/</code> DELETE (remove) <code>/api/ui/v0/database_roles/</code> POST (remove) <code>/api/ui/v0/queries/{queryId}/shares/{shareId}/</code> PATCH <code>shared_explorations.patch</code> <code>/api/ui/v0/queries/{queryId}/shares/{shareId}/regenerate/</code> POST <code>shared_explorations.regenerate</code> <code>/api/ui/v0/queries/{queryId}/shares/</code> GET <code>shared_explorations.list</code> <code>/api/ui/v0/queries/{queryId}/shares/</code> POST <code>shared_explorations.add</code> <code>/api/ui/v0/reflect/</code> POST (remove) <code>/api/ui/v0/schema_roles/{roleId}/</code> DELETE (remove) <code>/api/ui/v0/schema_roles/</code> POST (remove) <code>/api/ui/v0/tables/{tableId}/records/delete/</code> DELETE <code>records.delete</code> <code>/api/ui/v0/tables/{tableId}/shares/{shareId}/</code> PATCH <code>shared_tables.patch</code> <code>/api/ui/v0/tables/{tableId}/shares/{shareId}/regenerate/</code> POST <code>shared_tables.regenerate</code> <code>/api/ui/v0/tables/{tableId}/shares/</code> GET <code>shared_tables.list</code> <code>/api/ui/v0/tables/{tableId}/shares/</code> POST <code>shared_tables.add</code> <code>/api/ui/v0/users/{userId}/</code> DELETE <code>users.delete</code> <code>/api/ui/v0/users/{userId}/</code> GET <code>users.get</code> <code>/api/ui/v0/users/{userId}/</code> PATCH <code>users.patch</code> <code>/api/ui/v0/users/{userId}/password_reset/</code> POST <code>users.password.revoke</code> <code>/api/ui/v0/users/</code> GET <code>users.list</code> <code>/api/ui/v0/users/</code> POST <code>users.add</code> <code>/api/ui/v0/users/password_change/</code> POST <code>users.password.replace_own</code> <p>Functions sorted by name (duplicated for ease of reading):</p> <pre><code>columns.add\ncolumns.delete\ncolumns.list\ncolumns.metadata.list\ncolumns.metadata.patch\ncolumns.patch\nconnections.add_from_known_connection\nconnections.add_from_scratch\nconnections.delete\nconnections.list\nconnections.patch\nconstraints.add\nconstraints.delete\nconstraints.list\ndata_modeling.add_link\ndata_modeling.move_columns\ndata_modeling.split_table\ndata_modeling.suggest_types\nexplorations.add\nexplorations.delete\nexplorations.get\nexplorations.list\nexplorations.replace\nexplorations.run_saved\nexplorations.run\nrecords.add\nrecords.delete\nrecords.get\nrecords.list\nrecords.patch\nschemas.add\nschemas.delete\nschemas.list\nschemas.patch\nshared_explorations.add\nshared_explorations.list\nshared_explorations.patch\nshared_explorations.regenerate\nshared_tables.add\nshared_tables.list\nshared_tables.patch\nshared_tables.regenerate\ntables.add\ntables.delete\ntables.get_import_preview\ntables.get\ntables.list_joinable\ntables.list\ntables.metadata.list\ntables.metadata.patch\ntables.patch\ntypes.list\nusers.add\nusers.delete\nusers.get\nusers.list\nusers.password.replace_own\nusers.password.revoke\nusers.patch\n</code></pre>"},{"location":"archive/product/projects/2024/architecture-transition/rpc/#plans-for-the-transition-process","title":"Plans for the transition process","text":"<ol> <li>Answer most of the open questions.</li> <li> <p>Agree on roughly 50% of the function names. This will allow us to establish (and agree on) patterns that we can follow as we move forwards.</p> </li> <li> <p>Transition groups of related endpoints together by following these steps for the entire group:</p> <ol> <li>Merge a backend PR which adds the DB functions (if needed) and adds the json-rpc methods.</li> <li>Merge a front end PR which switches our usage from REST to JSON-RPC for the group of endpoints.</li> <li>Merge a backend cleanup PR which removes the REST endpoints.</li> </ol> </li> <li> <p>For the first group, we\u2019ll transition the following endpoints:</p> <ul> <li><code>/api/ui/v0/connections/create_from_known_connection/</code></li> <li><code>/api/ui/v0/connections/create_from_scratch/</code></li> <li><code>/api/ui/v0/connections/create_with_new_user/</code></li> </ul> <p>This will be a proving ground to validate our transition across the entire stack. We\u2019ll make sure we fully complete this group of endpoints before moving on.</p> </li> <li> <p>After that validation, we\u2019ll continue by transitioning groups of endpoints in parallel. The backend will be free to run wild with merging PRs that add json-rpc methods.</p> <p>To track our progress on a per-endpoint basis, we\u2019ll likely end up adding more notes to this wiki page or a GitHub ticket.</p> </li> </ol>"},{"location":"archive/product/projects/2024/architecture-transition/rpc/#roles","title":"Roles","text":"Role Person Backend changes Brent Frontend changes Sean"},{"location":"archive/product/projects/2025/table-query-integration/","title":"Table Query Integration","text":"<p>\u201cTable Query Integration\u201d is project to build a new user-facing abstraction that would combine the best of the table page and data explorer into a single, powerful tool.</p> <p>This wiki page is the top-level place to organize information about the project.</p>"},{"location":"archive/product/projects/2025/table-query-integration/#high-level-product-specs","title":"High-level product specs","text":""},{"location":"archive/product/projects/2025/table-query-integration/#adopted","title":"Adopted","text":"<p>(none yet)</p>"},{"location":"archive/product/projects/2025/table-query-integration/#proposed","title":"Proposed","text":"<ul> <li>Product spec<ul> <li>Sean\u2019s \u201cWorksheets\u201d proposal: PR / rendered</li> <li>Brent\u2019s \u201cData Palettes\u201d proposal: rendered</li> </ul> </li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/#specific-implementation-specs","title":"Specific implementation specs","text":"<p>These specs are listed in the order in which we plan to implement them.</p> <ol> <li>Exploration Display Improvements</li> <li>Exploration DML</li> </ol>"},{"location":"archive/product/projects/2025/table-query-integration/#meetings-and-video-presentations","title":"Meetings and video presentations","text":""},{"location":"archive/product/projects/2025/table-query-integration/#2025-02-03-seanbrent","title":"2025-02-03 Sean/Brent","text":"<ul> <li>Recording (1h 44m)</li> <li>We discussed some of Brent\u2019s concerns with Sean\u2019s Worksheets product spec proposal:<ul> <li>Composition Instead of the query types being polymorphic, Brent wants query transformations to be polymorphic. To enter raw SQL, you\u2019d enter it into a transformation. This way transformations could be saved independently and composed without any display. Brent doesn\u2019t want worksheet composition. He wants transformation composition.</li> <li>DML Brent would like to offer DML in worksheets, but with some additional guardrails put in place to help users avoid confusing situations. We looked at an example of editing an author name shown in a table of books. He also wants to allow DML that updates more than one cell in PostgreSQL. His vision for this is not entirely fleshed out yet. We need to spend more time exploring and discussing this.</li> <li>Row Grouping Brent has some concerns about the proposed row grouping functionality. At one point he said it \u201creduces the utility of row grouping\u201d. We didn\u2019t fully chase this topic down though.</li> </ul> </li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/#2025-02-05-seanpavish","title":"2025-02-05 Sean/Pavish","text":"<ul> <li>Recording (1h 14m)</li> <li>We mostly discussed questions that Pavish had about Sean\u2019s proposed Worksheets product spec in order to clarify Pavish\u2019s understanding of how Worksheets would work.</li> <li>Clarification seemed to resolve many of Pavish\u2019s concerns.</li> <li>Where to worksheets get \u201csaved\u201d was a question we spent some time on, with Sean being open to different approaches. Pavish didn\u2019t seem 100% convinced that saving a worksheet within a schema would be the best approach because (for example), the worksheet could reference DB objects outside the schema which could be confusing for the user. Perhaps some or all worksheets could or should be stored at the database level? We didn\u2019t fully chase down this thread to reach a point of clarity and agreement.</li> <li>DML: Sean gave Pavish a review of some of the user-facing problems that Brent had previously pointed out. We also discussed implementation details for DML. Pavish didn\u2019t raise any significant concerns or strong opinions here.</li> <li>\u201cNested\u201d data (for lack of a better term) we discussed a new UI idea from Pavish to place aggregated data inside or underneath certain cells. Pavish\u2019s vision for this feature is still not 100% clear to Sean, but Sean expressed interest an enthusiasm for it. It\u2019s not something in the current draft of the spec, and Pavish seemed okay with that for the time being.</li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/#2025-02-06-seanbrent","title":"2025-02-06 Sean/Brent","text":"<ul> <li>Recording (1h 30m)</li> <li>We discussed the differences between composition, and query-building in Sean\u2019s Worksheets vision and Brent\u2019s Data Palettes vision, with an emphasis on clarifying Brent\u2019s vision for Sean.</li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/#2025-03-07-seanbrent","title":"2025-03-07 Sean/Brent","text":"<ul> <li>recording (1h 36m)</li> <li> <p>Short term vs long term goals:</p> <ul> <li>Brent expressed concerns that Sean has been focusing too much on long term goals at the expense of short term goals.</li> <li>Sean expressed a strong intent to prioritize short term goals too. He conceded that his proposed Worksheets product spec did not articulate his desire to build incrementally. Sean wants the whole team to be aligned on the long term goals before building.</li> <li>Brent wanted to know exactly how much clarity do we need on the long term goals before we can start building.<ul> <li>Sean didn\u2019t have a simple answer.</li> <li>But in talking it through, Brent and Sean seemed reasonably well aligned on this topic of \u201chow much clarity do we need\u201d. We should figure out roughly where we\u2019re going, and then identify strategies for building incrementally as soon as possible.</li> </ul> </li> </ul> </li> <li> <p>Long term \u2014 Worksheets vs Data Palettes:</p> <ul> <li>At the start of the call, Sean and Brent did not feel aligned on a long-term product vision for the user to define queries.</li> <li> <p>Joins:</p> <ul> <li> <p>Interestingly, Sean and Brent were able to identify (and hone in on) the concept of joins as a sticking point, mutually, in their concerns with one another\u2019s designs.</p> </li> <li> <p>Sean expressed concern that joins in Data Palettes would be too hard to use.</p> <p>Specifically he worried that they would require a conceptual understanding of joins which business users would be unlikely to have. He briefly mentioned difficulties that he had when learning joins, and said he\u2019s seen others struggle with these concepts too. Brent found this interesting and suggested circling back to it in another call. But Brent and Sean didn\u2019t explore any means to solve this problem within Data Palettes.</p> </li> <li> <p>Brent expressed concern that joins in Worksheets would not offer enough power.</p> <p>Specifically he worried that the Basic Query would be incapable of joining a worksheet with a table or other worksheet. This join-related concern seemed to be the crux of his larger concern about worksheets being ill-suited for composition. Sean found Brent\u2019s join-related concern thrilling since he had also been pondering it, and he readily offered two potential solutions:</p> <ol> <li>The most elegant (but hardest) approach would be to use static analysis of SQL queries to identify join paths along existing foreign keys. He offered an example. This made sense to Brent.</li> <li>As a quicker solution, we could allow users to manually codify join paths between worksheets and tables, persisting those join paths in Mathesar metadata. It would be the responsibility of more technical users to specify the join paths. Then less-technical users would automatically gain access to them. This also made sense to Brent.</li> </ol> <p>Brent seemed rather appeased by Sean\u2019s potential solutions.</p> </li> </ul> </li> <li> <p>Brent expressed a desire to focus on Worksheets moving forward.</p> <p>His attempts at polishing out the problems with Data Palettes has required a lot of UI/UX thought, and he would like to think less about user interfaces moving forward.</p> <p>Instead, he would like to focus on identifying specific problems with Worksheets and working with Sean to find solutions to those problems.</p> </li> <li> <p>Overall, this conversation brought Sean and Brent significantly closer to alignment on the long term goals!</p> </li> </ul> </li> <li> <p>Short term goals \u2014 editing exploration cells:</p> <ul> <li>Conveniently, Sean and Brent agreed that the nearest-term goal should be: allowing users to edit cells within explorations.</li> <li>How to trace data provenance<ul> <li>Sean suggested building a SQL static analysis tool into which we could feed the SQL generated by the data explorer.<ul> <li>Brent didn\u2019t want to spend time on static analysis, at least not yet. He worried this would introduce too much delay in our deliverables. Sean understood this concern.</li> </ul> </li> <li>Brent suggested that we instead rely on the query structure within the data explorer.<ul> <li>Sean expressed concern that we\u2019d be throwing away that work later.</li> <li>Brent agreed we\u2019d throw it away, but said it would only constitute about a week\u2019s worth of work.</li> <li>Sean was satisfied with the throw-away work being small enough.</li> <li>Both agreed.</li> </ul> </li> </ul> </li> <li>How to hand off the right info to the front end<ul> <li>Sean suggested the following:<ul> <li>The <code>exploration.run</code> API would return some \u201canalysis\u201d data along with the result set.</li> <li>For every column in the result set, the analysis would specify its origin table/column as well as which other column in the result set would provide the row-reference values. Sean walked through some examples.</li> </ul> </li> <li>Brent liked Sean\u2019s approach</li> </ul> </li> <li>Both agreed we should aim to complete this editing flow for the 0.2.3 release.</li> </ul> </li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/#2025-03-17-seanbrent","title":"2025-03-17 Sean/Brent","text":"<ul> <li>Recording (56m) (Worksheets talk begins at \u224812:50)</li> <li>Sean and Brent have different opinions on how best to implement the \u201ctransport structure\u201d for Worksheets.</li> <li>They have scheduled a follow-up meeting for next week where Brent will present specific problems to Sean.</li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/#2025-03-24-seanbrent","title":"2025-03-24 Sean/Brent","text":"<ul> <li>recording (1h 59m)</li> <li>This call focused on Brent\u2019s critique of Sean\u2019s Worksheets vision, with an emphasis on Sean\u2019s previously-state opinions of relying on SQL as the \u201ctransport structure\u201d (terminology still in flux).</li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/#2025-03-27-seanbrentzack","title":"2025-03-27 Sean/Brent/Zack","text":"<ul> <li>recording</li> <li>Sean presented a detailed critique of Data Pallettes. His pre-call notes are available here.</li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/#2025-04-02-seanzack","title":"2025-04-02 Sean/Zack","text":"<ul> <li>Recording 1h 9m</li> <li>Sync up on latest state of the plans</li> <li>Discuss how to reconcile disagreements between Sean/Brent</li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/#2025-04-03-seanzack","title":"2025-04-03 Sean/Zack","text":"<ul> <li>Recording 1h 18m</li> <li>Deep dive into Sean\u2019s vision for Basic Query</li> <li>Also talked about DML in explorations</li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/#2025-04-04-sean-video-presentation","title":"2025-04-04 Sean video presentation","text":"<p>Sean presents a high-level vision for DML in explorations</p> <p>57m</p> <p>https://drive.google.com/file/d/1_iegEHHQaXiavVe_APng1y3W-h_iFm1h/view?usp=drive_link</p>"},{"location":"archive/product/projects/2025/table-query-integration/#2025-04-07-seanpavish","title":"2025-04-07 Sean/Pavish","text":"<ul> <li>Recording</li> <li>Focused on plans for DML in explorations</li> <li>Also got Pavish up to speed on the disagreements that Sean and Brent have been having over the longer-term visions for query-building.</li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/#2025-04-10-sean-video-presentation","title":"2025-04-10 Sean video presentation","text":"<p>Sean presents a vision for a \u201cPipeline Query\u201d that could bridge the gap between \u201cWorksheets\u201d and \u201cData Palettes\u201d.</p> <p>34m</p> <p>https://drive.google.com/file/d/1hkL_WB3mHNYiLSVI3aqwplOUqRKbe7Cs/view?usp=drive_link</p>"},{"location":"archive/product/projects/2025/table-query-integration/#2025-04-10-seanghislaine","title":"2025-04-10 Sean/Ghislaine","text":"<ul> <li>Recording</li> <li>Discussed plans for DML in explorations</li> <li>Ghislaine almost entirely on board with Sean\u2019s plans for UX<ul> <li>She wants to explore one potential change: using a split screen to multi-record cell contents in a panel below the table instead of inside a dropdown </li> </ul> </li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/#2025-04-14-seanbrent","title":"2025-04-14 Sean/Brent","text":"<ul> <li>Recording</li> <li>Reached several point of agreement on implementation of DML in explorations</li> <li>Brent seems more on board with Sean\u2019s longer-term vision for query-building</li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/#2025-04-28-seanbrent","title":"2025-04-28 Sean/Brent","text":"<ul> <li>Recording</li> <li>Discussed Sean\u2019s proposed specs for DML in explorations</li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/#2025-04-29-seanbrent","title":"2025-04-29 Sean/Brent","text":"<ul> <li>Recording 2h 6m</li> <li>Discussed Brent\u2019s user-focused concerns with putting record summaries into the data explorer</li> <li>Discussed Brent\u2019s vision for Mathesar without any record summaries at all</li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/#2025-04-30-seanbrent","title":"2025-04-30 Sean/Brent","text":"<ul> <li>Recording (1h)</li> <li>Brent expresses his concerns with record summaries in the data explorer</li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/#2025-05-01-seananish","title":"2025-05-01 Sean/Anish","text":"<ul> <li>Recording (58m)</li> <li>Anish asks Sean questions about Table Query Integration, Worksheets, Basic Query, AI queries, Pipeline Query, etc.</li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/#2025-05-01-seanghislaine","title":"2025-05-01 Sean/Ghislaine","text":"<ul> <li>Recording </li> <li>Sean asks Ghislaine clarifying questions about her split screen proposal</li> <li>Sean and Ghislaine talk about the disagreement that Brent and Sean are currently working through regarding record summaries in the data explorer. Ghislaine seems to be more in Brent\u2019s camp. Follow-up meeting scheduled in 1 day to continue hashing this out.</li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/#2025-05-02-seanghislaine","title":"2025-05-02 Sean/Ghislaine","text":"<ul> <li>Recording (~1hr)</li> <li>Discussed whether record summaries should be included in the Data Explorer</li> <li>Ghislaine wants record summaries</li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/#2025-05-06-seanzack","title":"2025-05-06 Sean/Zack","text":"<ul> <li>Recording (1h 24m)</li> <li>Discussed next steps for resolving Sean/Brent disagreement over record summaries</li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/#2025-05-07-seanpavish","title":"2025-05-07 Sean/Pavish","text":"<ul> <li>Recording (32m)</li> <li>Discussed<ul> <li>How to store display options within explorations</li> <li>Some of Sean\u2019s questions with data explorer code</li> </ul> </li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/#2025-05-07-seanbrentzack","title":"2025-05-07 Sean/Brent/Zack","text":"<ul> <li>Recording (58m)</li> <li>Resolved Sean/Brent disagreement over record summaries</li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/#2025-05-13-seanbrentzack","title":"2025-05-13 Sean/Brent/Zack","text":"<ul> <li>Recording (1h 2m)</li> <li>Discussed Sean\u2019s proposal for the first steps of exploration DML</li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/#2025-05-21-seanbrentzack","title":"2025-05-21 Sean/Brent/Zack","text":"<ul> <li>Recording (1h 26m)</li> <li>Discussed various considerations around DML in explorations</li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/#2025-05-22-seanbrent","title":"2025-05-22 Sean/Brent","text":"<ul> <li>Recording (1h 31m)</li> <li>Agreed on a path forward for DML on base table cells</li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/#threads","title":"Threads","text":"<ul> <li> <p>2024-01-28 Email: A \u201cWorksheets for Everything\u201d vision - Sean introduces the concept of worksheets as a hypothetical future project</p> </li> <li> <p>2024-01-31 Email: Worksheets Product Spec - Sean introduces a PR proposing a formal product spec. He invites people to read it but requests withholding detailed critique until the team has decided to pursue the project.</p> </li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/specs/exploration-display-improvements/","title":"Exploration Display Improvements","text":"<p>The goal of this spec is to prepare the data explorer for DML capabilities by first making some changes to the way it displays data. These changes are necessary to support DML in terms of UX. We\u2019ll make them first so that we can ship them independently of DML if possible (for faster release).</p> <p>The requirements within this this spec follow a general pattern of trying to make the data explorer behave more the table page.</p>"},{"location":"archive/product/projects/2025/table-query-integration/specs/exploration-display-improvements/#front-end-changes","title":"Front end changes","text":""},{"location":"archive/product/projects/2025/table-query-integration/specs/exploration-display-improvements/#render-all-cells-as-read-only","title":"Render all cells as read-only","text":"<p>On the table page, when a cell is read-only, it gets a gray background.</p> <p>Since all data explorer cells are currently read-only, they should appear the same way read-only table page cells appear.</p>"},{"location":"archive/product/projects/2025/table-query-integration/specs/exploration-display-improvements/#add-record-page-hyperlinks-to-pk-cells","title":"Add record page hyperlinks to PK cells","text":"<p>On the table page, PK cells currently get a hyperlink to a record page.</p> <p>We should do the same in the data explorer.</p> <p>Note that an exploration might contain multiple PK cells (for different tables).</p>"},{"location":"archive/product/projects/2025/table-query-integration/specs/exploration-display-improvements/#add-a-context-menu-on-all-data-cells","title":"Add a context menu on all data cells","text":"<p>Every data cell should have a context menu containing the following options:</p> <ul> <li>Set to null (will always be disabled, until DML is possible)</li> <li>Open linked record page (when in FK column)</li> </ul> <p>There should not be a context menu on row header cells or column header cells (for now).</p> <p>Rationale:</p> <ul> <li>The purpose for this change is to allow the user to navigate to the record page for linked records, potentially in another tab. This opens up a workflow for DML on linked records.</li> <li>Even though most cells will only have a \u201cSet to null\u201d option (which does nothing), we should still add the context menu to all data cells so in order to try (perhaps in vain) to help users discover the \u201cOpen linked record page\u201d option on FK cells.</li> <li>Note that we\u2019d like to iron this flow out later by providing the option to open/edit a linked record in a modal, but it\u2019s not strictly necessary right now. And when we make that improvement later on, we can make it such that it applies to all FK cells (in the table page and data explorer).</li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/specs/exploration-display-improvements/#establish-a-means-to-persist-column-display-options-inside-explorations","title":"Establish a means to persist column display options inside explorations","text":"<p>Several other requirements described within this spec involve storing column display options inside an exploration. Since explorations do not currently have any persistent display options, storing them will require a new data structure.</p>"},{"location":"archive/product/projects/2025/table-query-integration/specs/exploration-display-improvements/#considerations","title":"Considerations","text":"<ul> <li> <p>In the table page, column display options are associated with column attnums. But we can\u2019t do that in explorations because one table column can occur multiple times, and some result column won\u2019t correspond to particular table column at all.</p> </li> <li> <p>In the data explorer, columns can be renamed, removed, and (eventually) rearranged. Ideally we\u2019d like a mechanism to persist column display options which is resilient against such changes to the query definition.</p> </li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/specs/exploration-display-improvements/#how-column-display-options-will-be-stored","title":"How column display options will be stored","text":"<ul> <li> <p>We\u2019ll store display options within the <code>display_options</code> JSON field that already exists on the <code>Explorations</code> model. (We\u2019ve not used that field thus far, but it appears to be exposed to the API already, so no backend changes would be necessary here.)</p> </li> <li> <p>Display options will reference result columns using multiple attributes.</p> </li> <li> <p>Here is an example <code>display_options</code> JSON value which would store display options for two result columns:</p> <p> Example display_options value: <pre><code>{\n  \"2\": { // \ud83d\udc48 result column index (zero-based)\n    \"result_column\": {\n      \"name\": \"date_of_birth\", // \ud83d\udc48 result column name\n      \"index\": 2,\n      \"type\": {\n        \"name\": \"timestamp with time zone\"\n      }\n    },\n    \"display_options\": {\n      \"date_format\": \"us\",\n      \"time_format\": \"12hr\"\n    }\n  },\n  \"5\": {\n    \"result_column\": {\n      \"name\": \"emails\",\n      \"index\": 5,\n      \"type\": {\n        \"name\": \"_array\",\n        \"item_type\": {\n          \"name\": \"bigint\"\n        }\n      }\n    },\n    \"display_options\": {\n      \"width\": 250\n    }\n  }\n}\n</code></pre> <li> <p>The front end will have a reconciliation process which runs every time the query runs.</p> </li> <li> <p>The reconciliation process will look at each display options entry and do its best to find a matching entry in the list of result columns. The presence of multiple column attributes will help the reconciliation algorithm maintain resilience against various small mutations to the result set such as renamed and re-arranged columns.</p> </li> <li> <p>The reconciliation process will produce a corrected <code>display_options</code> mapping in the event that something has changed within the query or the DB.</p> </li> <li> <p>If the corrected display options differ from the stored display options, the front end will update its stored display options. If the exploration is unsaved, those updated display options will continue to persist only in the browser memory. But if the exploration is saved in the internal database, then the front end will silently update the saved exploration in the internal database. The user won\u2019t see any unsaved changes or notice that the saved exploration has been updated.</p> </li>"},{"location":"archive/product/projects/2025/table-query-integration/specs/exploration-display-improvements/#persist-column-widths","title":"Persist column widths","text":"<p>Save column widths inside the exploration.</p> <p>Rationale:</p> <ul> <li>Of course this is helpful for users, but it\u2019s not strictly necessary as a path to DML in explorations. This feature is specified as a requirement because I think it will actually also help us to test out our column display option persistence mechanism because it\u2019s the only display option that should be possible for all column types. Plus, it\u2019s possible to change column width even not sidebars are visible. It serves as a nice stress test for technical and UX concerns regarding column display options.</li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/specs/exploration-display-improvements/#offer-type-specific-column-display-options","title":"Offer type-specific column display options","text":"<p>The \u201cColumn\u201d tab of the exploration inspector should have a \u201cFormatting\u201d section just like the table page. Those formatting settings should get stored as column display options.</p>"},{"location":"archive/product/projects/2025/table-query-integration/specs/exploration-display-improvements/#change-delete-column-button","title":"Change \u201cDelete Column\u201d button","text":"<p>As we add more data-modification capabilities to the data explorer, the \u201cDelete Column\u201d button might become confusing. We should change its label to:</p> <p>Remove Column From Query</p>"},{"location":"archive/product/projects/2025/table-query-integration/specs/exploration-display-improvements/#remove-undoredo-functionality","title":"Remove Undo/Redo functionality","text":"<p>Yes, this reduces functionality. But I think it\u2019s worth it.</p> <p>I think that where users would really like to have undo is for DML changes. I don\u2019t think undo is particularly useful for changes to the exploration definition, but once we have DML capabilities the \u201cundo\u201d button could be a source of confusion. I really want to avoid a situation where users think they can undo DML changes but actually they can\u2019t.</p> <p>Without undo, we\u2019d still need to keep track of the current exploration definition separately from the last-saved exploration definition. Those two versions would be the only relevant states to maintain.</p>"},{"location":"archive/product/projects/2025/table-query-integration/specs/exploration-display-improvements/#make-query-panel-collapsible","title":"Make \u201cQuery\u201d panel collapsible","text":"<p>Currently the right \u201cInspector\u201d panel is collapsible via an \u201cInspector\u201d button in the top toolbar.</p> <p>We should make the left \u201cQuery\u201d panel collapsible too, via a \u201cQuery\u201d button in the top toolbar.</p> <ul> <li>The state of the panel visibility would persist only in browser memory. (It would not be saved to local storage or to the exploration definition.)</li> <li>When the exploration page is loaded, the initial panel visibility would be determined as follows:<ul> <li>If the page is loading a saved exploration, then the panel would be hidden.</li> <li>Otherwise (i.e. for a new exploration), then panel would be visible.</li> </ul> </li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/specs/exploration-display-improvements/#use-a-dynamic-active-state-for-the-inspector-button","title":"Use a dynamic active state for the \u201cInspector\u201d button","text":"<p>Currently the table page changes the appearance of the \u201cInspector\u201d button based on the visibility of the table inspector. We should do the same in the data explorer, and do it for the new \u201cQuery\u201d button as well.</p>"},{"location":"archive/product/projects/2025/table-query-integration/specs/exploration-display-improvements/#move-base-table-ui-into-left-sidebar","title":"Move base table UI into left sidebar","text":"<p>The base table selection UI is currently in the top toolbar. It should be moved into the left (Query) sidebar as shown in the mockups below. This includes the \u201cStart Over\u201d button too.</p> <p>When a user is starting a new exploration from scratch, we\u2019ll need to improvise where to put the base table UI.</p>"},{"location":"archive/product/projects/2025/table-query-integration/specs/exploration-display-improvements/#improve-inspector-section-headings","title":"Improve inspector section headings","text":"<ul> <li>Make the section headings in the inspector look the same way the do in the table page.</li> <li>Store the section heading visibility state in localStorage the same way we do for the table page.</li> </ul> <p>Since the \u201cColumn\u201d tab will be getting more sections, these changes will make it easier for users to navigate the sections.</p>"},{"location":"archive/product/projects/2025/table-query-integration/specs/exploration-display-improvements/#merge-routes","title":"Merge routes","text":"<p>Currently, we have two separate routes for \u201cviewing\u201d and \u201cediting\u201d an exploration. These should get merged into one page \u2014 the \u201cExploration Page\u201d.</p> <p>The current exploration \u201cediting\u201d page will become the new \u201cexploration page\u201d, but it will be available at the route currently used for the \u201cviewing\u201d page. This means users will not see \u201cedit\u201d within the URL or within the top nav bar.</p> <p>Rationale:</p> <ul> <li>This consolidation simplifies the experience for users</li> <li>It also simplifies the design and code considerations for developers, which is important because we\u2019ll be iterating a lot on the data explorer to eventually bring it into feature parity with the table page.</li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/specs/exploration-display-improvements/#change-the-ux-for-saving-changes-to-the-exploration-definition","title":"Change the UX for saving changes to the exploration definition","text":"<p>Currently:</p> <ul> <li>The data explorer shows a yellow \u201cUnsaved Changes\u201d indicator when viewing a saved exploration that has been modified.</li> <li>It also shows a green \u201cAll Changes Saved\u201d indicator after saving an exploration.</li> </ul> <p>When DML becomes possible in explorations, this UX might become confusing to users</p> <p>Going forward, the \u201csave status\u201d should be collapsed into the \u201cSave\u201d button.</p> <p>The \u201cSave\u201d button should behave as follows:</p> <ul> <li>It should not have a dropdown menu anymore. (The \u201cMerge routes\u201d requirement means we don\u2019t need it.)</li> <li>It should have a more normal background color (not red).</li> <li>It should have a save icon (i.e. floppy disk).</li> <li> <p>When there are unsaved changes:</p> <ul> <li>The button should have a red dot to indicate unsaved changes. The dot can be applied to the button or to the label. We can improvise this during implementation to see what looks best.</li> <li> <p>The button should have a tooltip:</p> <p>This exploration definition has unsaved changes</p> </li> </ul> </li> <li> <p>While saving</p> <ul> <li>the button should be disabled</li> <li>The icon should become a loading spinner</li> </ul> </li> <li> <p>When saved:</p> <ul> <li>The button should be disabled</li> <li>the button should not have a red dot or tooltip</li> </ul> </li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/specs/exploration-display-improvements/#mockups","title":"Mockups","text":""},{"location":"archive/product/projects/2025/table-query-integration/specs/exploration-display-improvements/#top-toolbar","title":"Top toolbar","text":"<p>This shows the state of the toolbar for a saved exploration that has unsaved changes.</p> <ul> <li> <p>Current</p> <p></p> </li> <li> <p>Proposed</p> <p></p> </li> </ul> <p>Changes:</p> <ul> <li>Base table is removed</li> <li>\u201cUnsaved changes\u201d is collapsed into a red dot</li> <li>Undo/redo is removed</li> <li>Inspector button has a dynamic active state</li> <li>Save button no longer has a dropdown menu</li> <li>Query toggle button is added</li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/specs/exploration-display-improvements/#query-sidebar","title":"Query sidebar","text":"Current Proposed <p>Changes:</p> <ul> <li>The Base table and \u201cStart over\u201d button are added here</li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/specs/exploration-display-improvements/#backend-changes","title":"Backend changes","text":""},{"location":"archive/product/projects/2025/table-query-integration/specs/exploration-display-improvements/#explorationsrun","title":"<code>explorations.run</code>","text":""},{"location":"archive/product/projects/2025/table-query-integration/specs/exploration-display-improvements/#return-value","title":"Return value","text":"<ul> <li>Within <code>column_metadata</code> we need the following new properties added to each column metadata blob:<ul> <li><code>primary_key</code><ul> <li>When the underlying table column has a single-column primary key constraint, the value here should be <code>true</code>.</li> <li>This is to support the \u201crecord page hyperlink\u201d feature.</li> </ul> </li> </ul> </li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/specs/exploration-display-improvements/#explorationsrun_saved","title":"<code>explorations.run_saved</code>","text":"<p>Remove this API method.</p> <ul> <li>We only use this on the exploration \u201cviewing\u201d page, which we\u2019re removing.</li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/specs/data-explorer-dml/","title":"Exploration DML","text":"<p>This spec describes features necessary for the user to INSERT, UPDATE, and DELETE records from within the Data Explorer.</p> <p>The work is further broken out into more specific specs documents to handle specific scenarios. The work is to be completed in the following order:</p> <ol> <li>Updating base table cells</li> <li>Updating \u201cmany-to-one\u201d cells (TODO)</li> <li>Updating \u201cone-to-many\u201d cells (TODO)</li> <li>Updating \u201cmany-to-many\u201d cells (TODO)</li> <li>Inserting and deleting base table records (TODO)</li> </ol>"},{"location":"archive/product/projects/2025/table-query-integration/specs/data-explorer-dml/inserting-and-deleting-base-table-records/","title":"Inserting and deleting base table records","text":""},{"location":"archive/product/projects/2025/table-query-integration/specs/data-explorer-dml/updating-base-table-cells/","title":"Updating Base Table Cells","text":""},{"location":"archive/product/projects/2025/table-query-integration/specs/data-explorer-dml/updating-base-table-cells/#ux","title":"UX","text":"<p>The UX for updating base table cells should mirror the current table page UX as closely as possible.</p> <p>If a user creates an exploration which shows all the columns in a base table, the experience of updating cells should ideally be indistinguishable from the corresponding table page. And this should hold true regardless of data type or constraints.</p> <p>For the purpose of this spec, only the columns in the base table will allow DML. Any columns outside the base table will not allow DML for now. (DML on related data is handled in subsequent specs.)</p>"},{"location":"archive/product/projects/2025/table-query-integration/specs/data-explorer-dml/updating-base-table-cells/#record-identification","title":"Record identification","text":"<p>Let\u2019s start with an example in our movie_rentals data set\u2026</p> <p>Say I build an exploration of movies, adding only the movie title \u2014 just one column! Should I be able to update cells in that column? The answer is: it depends! Let\u2019s walk through some more detailed scenarios within this example:</p> <ul> <li> <p>If I choose the movie \u201c12 Rounds\u201d and change its title to \u201cTwelve Rounds\u201d, Mathesar will run SQL like this:</p> <pre><code>UPDATE movies SET title = 'Twelve Rounds' WHERE title = '12 Rounds';\n</code></pre> <p>That will work because our data set happens to have only one movie titled \u201c12 Rounds\u201d. Mathesar will check to make sure only one record is updated before committing the transaction.</p> </li> <li> <p>But our data set has multiple movies titled \u201c12 Angry Men\u201d. What happens if I find one of those cells and try changing it to \u201cTwelve Angry Men\u201d? Again Mathesar will run the same sort of SQL, but this it will roll back the transaction because multiple records would have been updated. Mathesar will show an error like this to the user:</p> <p>Unable to uniquely identify a record to update.</p> <p>Consider adding the <code>movies</code> \u23f5 <code>id</code> column to your query in order to uniquely identify <code>movies</code> records.</p> </li> <li> <p>Basically: Mathesar will use all the available (relevant) columns it has from the result set when making updates. And if more than one row is found, Mathesar will roll back, showing an error.</p> </li> <li> <p>In the future, there are many potential improvements we could make to this record identification process. For example:</p> <ul> <li>We could provide more information in the error, showing which records were found.</li> <li>We could provide a means to update some or all of the found records in the case where multiple were found.</li> <li>We could provide a button to automatically add the PK column.</li> <li>We could provide a means to utilize \u201chidden\u201d columns for the record identification process.</li> <li>We could automatically add such hidden columns in some cases.</li> </ul> <p>But for now, we will be building the minimum viable record identification process. We can improve it incrementally after giving some attention to other DML issues first.</p> </li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/specs/data-explorer-dml/updating-base-table-cells/#apis","title":"APIs","text":""},{"location":"archive/product/projects/2025/table-query-integration/specs/data-explorer-dml/updating-base-table-cells/#recordsupdate","title":"<code>records.update</code>","text":"<p>This will be a new API that allows clients to update records based on a query.</p> <p>Its parameters are as follows:</p> <pre><code>/** Same as the `exploration_def` param within `explorations.run` */\ninterface AnonymousExploration {\n  database_id: number;\n  schema_oid: number;\n  base_table_oid: number;\n  initial_columns: InitialColumn[];\n  transformations?: QueryInstanceTransformation[];\n  display_names?: Record&lt;string, string&gt; | null;\n}\n\ninterface UpdateParams {\n  /** This type will later become a discriminated union of other query types */\n  query: {\n    type: 'exploration';\n    definition: AnonymousExploration;\n  };\n\n  /** All cell values in the row, as an array */\n  row: unknown[];\n\n  /** Keys are column indexes, values are new values */\n  new_values: Record&lt;string, unknown&gt;;\n}\n\ninterface UpdateReturn {\n  updated: number;\n}\n\nexport const records = {\n  update: rpcMethodTypeContainer&lt;UpdateParams, UpdateReturn&gt;,\n};\n</code></pre>"},{"location":"archive/product/projects/2025/table-query-integration/specs/data-explorer-dml/updating-base-table-cells/#behavior-and-return-value","title":"Behavior and return value","text":"<p>In the DB layer, Mathesar starts a transaction and tries to perform the update \u2014 checking to see how many records were updated.</p> <ul> <li> <p>If a PostgreSQL error is encountered, the transaction is aborted, and the API returns an error response with the content of the PostgreSQL error.</p> </li> <li> <p>If zero records were updated (i.e. no records matched), then the API returns a success response with the following value:</p> <pre><code>{\n  \"updated\": 0\n}\n</code></pre> </li> <li> <p>If one record was updated, then the API returns a success response with the following value:</p> <pre><code>{\n  \"updated\": 1\n}\n</code></pre> </li> <li> <p>If multiple records were updated, then Mathesar rolls back the transaction! It returns an error response which looks just like the response from <code>records.list</code> with the filtering conditions applied, a <code>limit</code> of 100, and an <code>offset</code> of 0.</p> </li> </ul>"},{"location":"archive/product/projects/2025/table-query-integration/specs/data-explorer-dml/updating-many-to-many-cells/","title":"Updating many-to-many cells","text":""},{"location":"archive/product/projects/2025/table-query-integration/specs/data-explorer-dml/updating-many-to-one-cells/","title":"Updating many-to-one cells","text":""},{"location":"archive/product/projects/2025/table-query-integration/specs/data-explorer-dml/updating-one-to-many-cells/","title":"Updating one-to-many cells","text":""},{"location":"archive/product/projects/future/avoiding-regressions/","title":"Avoiding regressions","text":"<p>Status: Draft  Review status: Draft Theme: code quality, user experience, developer experience</p>"},{"location":"archive/product/projects/future/avoiding-regressions/#team","title":"Team","text":"<p>Project owner: ???</p> Role Assignee Reviewer Notes Requirements Kriti Ghislaine, Dom, Rajat Product spec, requirements, GitHub issues Design work Ghislaine Kriti, Dom, Rajat UI and UX Backend work Dom Mukesh Backend specs and code Frontend work Rajat Pavish Frontend specs and code"},{"location":"archive/product/projects/future/avoiding-regressions/#problem","title":"Problem","text":"<p>We noticed a number of regressions through manual testing for the release of 0.1.3. We need a more robust solution.</p>"},{"location":"archive/product/projects/future/avoiding-regressions/#solution","title":"Solution","text":"<p>This is still under discussion. See the developer group conversation.</p>"},{"location":"archive/product/projects/future/avoiding-regressions/#outcome","title":"Outcome","text":"<p>We need to determine: - If we want to tackle this now. - How we want to tackle it (see the thread for discussion) - Tackle it (if first two bullet points are handled)</p>"},{"location":"archive/product/projects/future/avoiding-regressions/#risks","title":"Risks","text":"<p>TODO</p>"},{"location":"archive/product/projects/future/avoiding-regressions/#links","title":"Links","text":"<p>Information</p> <p>This section collects project related links. It\u2019s expected that there might not be anything here until the project plan is approved, and this section will grow over the project\u2019s timeframe.</p> <ul> <li> <p>the developer group conversation.</p> </li> <li> <p>Issues: GitHub meta issue</p> </li> <li>Wiki pages:</li> <li>Product spec</li> <li>Backend spec</li> <li>Frontend spec </li> <li>Email discussions:<ul> <li>Project approval discussion</li> </ul> </li> <li>Weekly updates</li> </ul>"},{"location":"archive/product/projects/future/avoiding-regressions/#timeline","title":"Timeline","text":"<p>TODO</p>"},{"location":"archive/product/projects/future/column-moving/","title":"Column Moving Improvements","text":"<p>Status: Draft  Review status: Draft Theme: Data modeling features</p>"},{"location":"archive/product/projects/future/column-moving/#team","title":"Team","text":"<p>Project owner: Brent</p> Role Assignee Reviewer Notes Requirements Brent Ghislaine, Kriti Product spec, requirements, GitHub issues Design work Ghislaine Kriti, Brent UI and UX Backend work Brent, Anish Mukesh Backend specs and code Frontend work ??? ??? Frontend specs and code"},{"location":"archive/product/projects/future/column-moving/#problem","title":"Problem","text":"<p>It came to my attention during RSQLA1 that our column extraction and moving feature isn\u2019t complete, and the current state is sort of dangerous. In fact, I\u2019m concerned the current state is so bad that attempts to use this feature could well lead to justified ragequits from Mathesar entirely. I\u2019ve written some problems up in roughly descending order of priority (IMO).</p> <p>The column moving operation has the potential for data loss, or at least for jumbling up the link in certain edge cases, e.g., if the foreign key was created outside of Mathesar and is on a text column rather than integer.</p> <p>The column moving operation is one-way only. Currently, you can only move columns along a foreign key link from the referrer table to the referenced table. E.g., from a remainder table to an extracted table. This asymmetry is not portrayed to the user, and they could easily tinker themselves into an irreversible situation. </p> <p>Merging tables is not available from the UI. This means you can\u2019t un-extract your columns.</p> <p>If you extract a foreign key column, you\u2019ll lose the foreign key link. Start with:</p> <p>Roster</p> id Student Name Student Email Subject Grade Teacher 1 Alice alice@yahoo.com Math 73 2 2 Alice alice@yahoo.com Music 87 1 3 Alice alice@yahoo.com Reading 93 1 4 Bob bob@lycos.com Math 58 2 5 Bob bob@lycos.com Music 94 3 6 Bob bob@lycos.com History 83 1 <p>Teachers | id | Name      | Email          | |\u2014:|-----------|----------------| |  1 | Ms. Smith | asmith@abc.edu | |  2 | Mr. Jones | bjones@abc.edu | |  3 | Mrs. Li   | eli@abc.edu    |</p> <p>Suppose The Teacher column references the Teachers table ID, and I want to extract the Subject and Teacher columns from the Roster table to create a new table. Currently, this breaks the foreign key link between the Teacher column and the Teachers table.</p> <p>If you extract or move some portion of the columns involved in a multi-column constraint (e.g., a unique constraint), the constraint is silently dropped with no warning or error. See the issue.</p> <p>It\u2019s not possible to extract a non-orderable set of columns, or rather when doing so you end up jumbling up the foreign key links. See the issue.</p> <p>If you try to extract a column referenced by a foreign key column, we currently throw an error, and fail. See the issue. </p> <p>If you extract columns from the middle of a table, the new foreign key column is still the last column of the table. See the issue.</p>"},{"location":"archive/product/projects/future/column-moving/#solution","title":"Solution","text":"<p>We need to start this with a product-level discussion to determine what we want to accomplish with the feature from end to end, and if there\u2019s any subset that we can put out that will at least avoid irreversible column moving operations, and avoid any data loss.</p> <p>Depending on that discussion, or those discussions, we should then modify the column extraction and moving logic accordingly. This will involve lots of back end work, some design work, and a bit of front end work.</p>"},{"location":"archive/product/projects/future/column-moving/#outcome","title":"Outcome","text":"<p>Users will no longer be in danger of corrupting their data or making irreversible data modeling mistakes when using this feature.</p>"},{"location":"archive/product/projects/future/column-moving/#risks","title":"Risks","text":"<ul> <li>Column extraction and moving is really technical, and it will be difficult to portray to users in an easy-to-understand way, especially when considering things like multicolumn keys and preexisting foreign keys.</li> </ul>"},{"location":"archive/product/projects/future/column-moving/#links","title":"Links","text":""},{"location":"archive/product/projects/future/column-moving/#timeline","title":"Timeline","text":"<p>I think we\u2019d need one cycle to work through the product considerations and plan an attack, and another cycle to implement.</p>"},{"location":"archive/product/projects/future/forms-research/","title":"Forms Research","text":"<p>Name: Forms Research Status: In progress  Theme: Product research</p>"},{"location":"archive/product/projects/future/forms-research/#team","title":"Team","text":"<p>Information</p> <p>We probably don\u2019t need to be this detailed for everything; this is just to show the range of options.</p> Role Assignee Notes Owner Dom Collaborator Ghislaine Approver Kriti Needs to approve project plan"},{"location":"archive/product/projects/future/forms-research/#problem","title":"Problem","text":"<p>We want to know if there\u2019s a form-like feature-set we could implement without too much effort that would actually be useful to our probable userbase.</p>"},{"location":"archive/product/projects/future/forms-research/#solution","title":"Solution","text":"<p>It is not obvious that copying competing solutions would be a useful strategy, so we\u2019re largely looking at survey/interview research as the source of insight. Intersects with the \u201cGathering User Feedback\u201d project.</p> <ul> <li>Build the qualifying survey</li> <li>Perform the qualifying survey</li> <li>Analyze the qualifying survey</li> <li>Perform qualitative interviews with those that qualified in the survey<ul> <li>Use the jobs-to-be-done framework</li> </ul> </li> <li>Analyze the qualitative interviews<ul> <li>Doesn\u2019t involve writing a product spec</li> </ul> </li> </ul>"},{"location":"archive/product/projects/future/forms-research/#risks","title":"Risks","text":"<ul> <li>Project might take too long<ul> <li>Reasons why this might happen<ul> <li>This kind of research is new to me, learning is involved</li> </ul> </li> <li>It is easy to get carried away with research</li> </ul> </li> <li>Setting deadlines might help</li> </ul>"},{"location":"archive/product/projects/future/forms-research/#resources","title":"Resources","text":"<p>Information</p> <p>This section collects project related resources. It\u2019s expected that there might not be anything here until the project plan is approved, and this section will grow over the project\u2019s timeframe.</p>"},{"location":"archive/product/projects/future/forms-research/#timeline","title":"Timeline","text":"<p>This project should take 5 weeks.</p> <p>Information</p> <p>Please adjust as needed depending on the steps for the project.</p> Date Outcome 2023-06-02 Qualifying survey built 2023-06-?? Qualifying survey begins 2023-06-?? Qualifying survey ends 2023-06-?? Qualifying survey analyzed 2023-06-?? Qualitative interviews begin 2023-06-?? Qualitative interviews end 2023-06-?? Qualitative interviews analyzed"},{"location":"archive/product/projects/future/rsqla-performance-edition/","title":"Remove SQL Alchemy \u2013 Performance edition","text":"<p>Status: Draft  Review status: Draft Theme: DX, Performance, Pre-existing PG</p>"},{"location":"archive/product/projects/future/rsqla-performance-edition/#team","title":"Team","text":"<p>Project owner: Brent</p> Role Assignee Reviewer Notes Requirements Brent Dom, Pavish, Kriti Product spec, requirements, GitHub issues Backend work Brent, Anish Anish, Brent Backend specs and code"},{"location":"archive/product/projects/future/rsqla-performance-edition/#problem","title":"Problem","text":"<ul> <li>Mathesar\u2019s performance is bad when there are a large number of database objects, under any conditions.</li> <li>Mathesar\u2019s performance is bad to the point of unusability when there\u2019s any network latency between the web service and the user\u2019s database(s).</li> </ul>"},{"location":"archive/product/projects/future/rsqla-performance-edition/#example","title":"Example","text":"<p>To exemplify the performance problem, I set up a test DB with:</p> <ul> <li>an empty <code>public</code> Schema,</li> <li>3 schemata,</li> <li>5 tables per schema,</li> <li>8 columns per table, and</li> <li>10 rows per table.</li> </ul> <p>I added 50ms of latency to calls between the web service and the DB, in order to simulate a non-colocated setup (50ms is pretty quick, actually; From me to our internal.mathesar.org DB is more like 200ms). I then performed the following user flow:</p> <ol> <li>Login</li> <li>Click a random schema.</li> <li>Click a random table in that schema.</li> <li>Add a <code>TEXT</code> column to that table.</li> <li>Navigate back to the schema page (i.e., where the tables are listed)</li> <li>Add a table from import (patrons_sim.csv, no type inference).</li> </ol> <p>Below is a screenshot showing the recorded times for all requests to http://localhost:8000.</p> <p></p> <p>More tables, or columns per table makes the situation worse. Here\u2019s the same experiment, with the single change of having 10 tables per schema, with 15 columns per table:</p> <p></p>"},{"location":"archive/product/projects/future/rsqla-performance-edition/#solution","title":"Solution","text":"<p>We should tackle the slowest endpoints above (and maybe the column inference endpoint), removing all SQLAlchemy reflection calls from the code paths.</p>"},{"location":"archive/product/projects/future/rsqla-performance-edition/#outcome","title":"Outcome","text":"<p>The endpoints we fix should run noticeably faster (I expect by a factor of 100x)</p>"},{"location":"archive/product/projects/future/rsqla-performance-edition/#risks","title":"Risks","text":"<p>We need to rearchitect how these calls work for this to be feasible.</p>"},{"location":"archive/product/projects/future/rsqla-performance-edition/#links","title":"Links","text":"<p>TODO</p> <ul> <li>Issues: GitHub meta issue</li> <li>Wiki pages:</li> <li>Product spec</li> <li>Backend spec</li> <li>Frontend spec </li> <li>Email discussions:<ul> <li>Project approval discussion</li> </ul> </li> <li>Weekly updates</li> </ul>"},{"location":"archive/product/projects/future/rsqla-performance-edition/#timeline","title":"Timeline","text":"<p>This project should fit into the 2023-01-01 cycle.</p> <p>Information</p> <p>Please adjust as needed depending on the steps for the project.</p>"},{"location":"archive/product/projects/future/sql-alchemy-remove/","title":"Remove SQLAlchemy from codebase","text":"<ul> <li>Name: Remove SQLAlchemy from codebase</li> <li>Status: Draft</li> <li>Theme: Code quality, maintainability, performance, Removing SQLAlchemy</li> </ul>"},{"location":"archive/product/projects/future/sql-alchemy-remove/#team","title":"Team","text":"Role Assignee Notes Owner Brent Approver (project plan) Kriti Needs to approve project plan Approver (backend) Brent Needs to approve back end spec Contributor (requirements) Brent Creates product spec, requirements, GitHub issues Contributor (requirements) Dom Creates product spec, requirements, GitHub issues Contributor Anish Coding and reviewing Contributor Dom Coding and reviewing Contributor Mukesh Coding and reviewing"},{"location":"archive/product/projects/future/sql-alchemy-remove/#problem","title":"Problem","text":"<p>SQLAlchemy is a fantastic piece of software, but it\u2019s becoming less suitable to our needs as the project evolves. In particular, we\u2019ve found it to be weak and inefficient for our use case which doesn\u2019t assume a stable underlying data model at any point. This means we have to constantly reflect the database state in order to perform operations on it, and maintaining this reflection of the database has become more and more burdensome. </p> <p>Our use of SQLAlchemy in this project is slowing down development, and indeed slowing down the performance of the app in a massive way.</p>"},{"location":"archive/product/projects/future/sql-alchemy-remove/#solution","title":"Solution","text":"<p>We\u2019ll remove SQLAlchemy from our codebase. Note that at the point we undertake this project, it should already be gone from all DDL, DML, and DQL operations. What remains should be only Data Definition Description Language (D3L) operations. D3L operations are those that amount to DQL operations on metadata. That is, they query for metadata about database objects. An example is \u201clist the tables in <code>my_database</code>\u201d. Another is \u201cList the columns in <code>mytable</code> and their types\u201d. Hopefully, most of these functions will already have been removed during previous phases, but there are some which actually pack API calls (e.g., to list the schemas in a database).</p>"},{"location":"archive/product/projects/future/sql-alchemy-remove/#create-d3l-functions-in-database","title":"Create D3L functions in database","text":"<p>Many of these will already have been created during previous phases. This should just amount to batting cleanup. But, I expect some will still need to be created.</p> <ul> <li>Each such function should be overloaded to have the signature needed for calling from Python with minimal fuss, as well as the target signature.</li> <li>Each such function should have a main implementation which uses the most reasonable signature for the task at hand.</li> </ul>"},{"location":"archive/product/projects/future/sql-alchemy-remove/#replace-python-d3l-functions-with-wrappers-of-db-functions","title":"Replace Python D3L functions with wrappers of DB functions.","text":"<p>Do not replace or create functions that are no longer needed. Some common sense will be required here.</p> <ul> <li>Map the original Python function signatures to an appropriate function call of the database functions.</li> <li>It\u2019s completely fine to create scaffolding functions at this point to avoid letting changes sprawl.</li> <li>After this phase, no SQLAlchemy imports should be used in any module whose functions are modified in this way, i.e., D3L operation modules.</li> </ul> <p>Note that this section may take more lateral thinking than for the DDL, DML, or DQL phases. The implementers will have to be careful to remove rather than create complexity.</p>"},{"location":"archive/product/projects/future/sql-alchemy-remove/#refactor-and-clean-up-results","title":"Refactor and clean up results","text":"<p>Refactor to remove SQLAlchemy from the codebase wherever it remains, and delete any unneeded functions (e.g., scaffolding).</p> <p>After this part, the following should be true:</p> <ul> <li>No SQLAlchemy anywhere</li> <li>No getting a table name in Python unless returning it via the API to the front end.</li> <li>No getting a schema name in Python unless returning it via the API to the front end.</li> <li>No getting the schema of a table in Python unless directly needed for information going to the API.</li> </ul> <p>Generally, at this point, the identifiers should be OIDs and attnums, and the only reason to know any other metadata about a database object should be to return it to the API.</p>"},{"location":"archive/product/projects/future/sql-alchemy-remove/#risks","title":"Risks","text":"<ul> <li>This is a major overhaul of the codebase. There\u2019s always a possibility of unforseen problems</li> <li>This part of the larger project is a where we put the final bow on things. It should be carefully reviewed for style and maintainability.</li> </ul>"},{"location":"archive/product/projects/future/sql-alchemy-remove/#resources","title":"Resources","text":"<p>TODO</p>"},{"location":"archive/product/projects/future/sql-alchemy-remove/#timeline","title":"Timeline","text":"<p>Note: Parts of this timeline are delayed, since they\u2019re blocked by the removal of DDL, DML, DQL, and Brent\u2019s parental leave.</p> Date Outcome 2023-03-20 Prototyping work starts 2023-05-12 Implementation spec and prototyping complete 2023-06-26 Implementation spec approved 2023-06-09 All needed D3L SQL Functions written 2023-06-16 All thin python wrappers written 2023-06-23 Refactor and clean up complete"},{"location":"archive/product/projects/future/sql-dml-operations/","title":"Move DML Operations to SQL Functions","text":"<ul> <li>Name: Move DML Operations to SQL Functions</li> <li>Status: Draft</li> <li>Theme: Code quality, maintainability, performance, Removing SQLAlchemy</li> </ul>"},{"location":"archive/product/projects/future/sql-dml-operations/#team","title":"Team","text":"Role Assignee Notes Owner Brent Approver (project plan) Kriti Needs to approve project plan Approver (backend) Brent Needs to approve back end spec Contributor (requirements) Brent Creates product spec, requirements, GitHub issues Contributor (requirements) Dom Creates product spec, requirements, GitHub issues Contributor Anish Coding and reviewing Contributor Dom Coding and reviewing Contributor Mukesh Coding and reviewing"},{"location":"archive/product/projects/future/sql-dml-operations/#problem","title":"Problem","text":"<p>Data Manipulation Language (DML) operations are those that manipulate the data stored in a database. Some relevant SQL words are <code>UPDATE</code>, <code>INSERT</code>, and <code>DELETE</code>. These operations require knowledge of the database to do their work. E.g., a function must know the name of a table to <code>INSERT</code> into it. Our current architecture requires reflecting the state of the database into memory in Python and using that state to build <code>INSERT</code> queries and the like.</p> <p>Our current setup for this is:</p> <ul> <li>Inefficient (reflection is slow)</li> <li>Complicated (hard to maintain)</li> <li>Prone to bugs (managing state in Python memory is constantly tripping us up)</li> </ul> <p>All of these problems are related to the fact that we\u2019re building the SQL queries to run DML operations in Python.</p>"},{"location":"archive/product/projects/future/sql-dml-operations/#solution","title":"Solution","text":""},{"location":"archive/product/projects/future/sql-dml-operations/#create-dml-functions-in-database","title":"Create DML functions in database","text":"<p>Create a function for each desired DML operation on the databse using SQL or PL/pgSQL.</p> <ul> <li>Each such function should be overloaded to have the signature needed for calling from Python with minimal fuss, as well as the target signature.</li> <li>Each such function should have a main implementation which uses the most reasonable signature for the task at hand.</li> </ul>"},{"location":"archive/product/projects/future/sql-dml-operations/#replace-python-dml-functions-with-wrappers-of-db-functions","title":"Replace Python DML functions with wrappers of DB functions","text":"<p>Replace the current Python functions performing DML operations with thin wrappers for these functions.</p> <ul> <li>Be mindful of looking out for functions which may be deleted, rather than replaced, once this is done.</li> <li>Map the original Python function signatures to an appropriate function call of the database functions.</li> <li>It\u2019s completely fine to create scaffolding functions at this point to avoid letting changes sprawl.</li> <li>After this phase, no SQLAlchemy imports should be used in any module whose functions are modified in this way, i.e., DML operation modules.</li> </ul>"},{"location":"archive/product/projects/future/sql-dml-operations/#refactor-and-clean-up-results","title":"Refactor and clean up results","text":"<p>Refactor to remove SQLAlchemy objects from calls using Python DML functions:</p> <ul> <li>Remove any SQLAlchemy objects from DML function signatures (This may require modifying callers slightly)</li> <li>Remove SQLAlchemy from the entire call stack calling a given function, all the way up to the API (within reason).</li> <li>Modify affected function signatures to avoid using <code>schema_name</code>, <code>(schema_name, table_name)</code>, or <code>(schema, table_name, column_name)</code> identifiers. Instead, prefer <code>schema_oid</code>, <code>table_oid</code> or <code>(table_oid, attnum)</code> identifiers (may require modifying callers slightly, or scaffolding).</li> <li>Delete any unneeded functions.</li> </ul>"},{"location":"archive/product/projects/future/sql-dml-operations/#risks","title":"Risks","text":"<ul> <li>This is a major overhaul of the codebase. There\u2019s always a possibility of unforseen problems</li> <li>This will probably make the codebase less approachable for outsiders.</li> <li>The testing may be trickier (though current prototyping didn\u2019t require much changing of tests at all).</li> </ul>"},{"location":"archive/product/projects/future/sql-dml-operations/#resources","title":"Resources","text":"<p>TODO</p>"},{"location":"archive/product/projects/future/sql-dml-operations/#timeline","title":"Timeline","text":"<p>Note: Parts of this timeline are delayed, since they\u2019re blocked by the removal of DDL, and Brent\u2019s parental leave.</p> Date Outcome 2023-03-20 Prototyping work starts 2023-04-28 Implementation spec and prototyping complete 2023-05-05 Implementation spec approved 2023-05-12 All needed DML SQL Functions written 2023-05-19 All thin python wrappers written 2023-05-26 Refactor and clean up complete"},{"location":"archive/product/projects/future/sql-dql-operations/","title":"Remove SQLAlchemy from DQL operations","text":"<ul> <li>Name: Remove SQLAlchemy from DQL operations</li> <li>Status: Draft</li> <li>Theme: Code quality, maintainability, performance, Removing SQLAlchemy</li> </ul>"},{"location":"archive/product/projects/future/sql-dql-operations/#team","title":"Team","text":"Role Assignee Notes Owner Brent Approver (project plan) Kriti Needs to approve project plan Approver (backend) Brent Needs to approve back end spec Contributor (requirements) Brent Creates product spec, requirements, GitHub issues Contributor (requirements) Dom Creates product spec, requirements, GitHub issues Contributor Anish Coding and reviewing Contributor Dom Coding and reviewing Contributor Mukesh Coding and reviewing"},{"location":"archive/product/projects/future/sql-dql-operations/#problem","title":"Problem","text":"<p>Data Query Language (DQL) operations are those that query the data stored in a database. The relevant SQL word is <code>SELECT</code>. These operations require knowledge of the database to work. E.g., a function needs a table\u2019s name to <code>SELECT</code> from it. Currently, we write most <code>SELECT</code> statements in Python using SQLAlchemy, necessitating the reflection of the database state into memory in Python and using that state to build queries.</p> <p>Our current setup for this is:</p> <ul> <li>Inefficient (reflection is slow)</li> <li>Complicated (hard to maintain)</li> <li>Prone to bugs (managing state in Python memory is constantly tripping us up)</li> </ul> <p>All of these problems are related to the fact that we\u2019re building the SQL queries to run DQL operations in Python.</p>"},{"location":"archive/product/projects/future/sql-dql-operations/#solution","title":"Solution","text":""},{"location":"archive/product/projects/future/sql-dql-operations/#set-up-oid-labeled-views-in-database","title":"Set up OID labeled views in database","text":"<p>Create a framework that sets up a view for each table in the database with an algorithmically derived name and column names. The view should have a name that can be determined if you have the underlying tables\u2019s OID. The columns of the view should have names determined by the attnums of the corresponding columns in the underlying table. This is already prototyped in the file <code>db/sql/2_msar_views.sql</code>.</p>"},{"location":"archive/product/projects/future/sql-dql-operations/#create-dql-functions-in-database","title":"Create DQL functions in database","text":"<p>Create a function for each desired DQL operation on the databse using SQL or PL/pgSQL.</p> <ul> <li>Each such function should be overloaded to have the signature needed for calling from Python with minimal fuss, as well as the target signature.</li> <li>Each such function should have a main implementation which uses the most reasonable signature for the task at hand.</li> <li>This should rely heavily on the OID labeled views.</li> </ul>"},{"location":"archive/product/projects/future/sql-dql-operations/#replace-python-dql-functions-with-wrappers-of-db-functions-and-custom-query-building","title":"Replace Python DQL functions with wrappers of DB functions, and custom query building.","text":"<p>Replace the current Python functions performing DQL operations with thin wrappers for these functions. Use an as-yet unknown query builder to compose complete queries when (if) needed.</p> <ul> <li>Be mindful of looking out for functions which may be deleted, rather than replaced, once this is done.</li> <li>Map the original Python function signatures to an appropriate function call of the database functions.</li> <li>Again, these should rely heavily on the OID labeled views.</li> <li>It\u2019s completely fine to create scaffolding functions at this point to avoid letting changes sprawl.</li> <li>After this phase, no SQLAlchemy imports should be used in any module whose functions are modified in this way, i.e., DQL operation modules.</li> </ul> <p>Note that this section may take more lateral thinking than for the DDL and DML phases. The reason is that we\u2019re composing more ad-hoc DQL operations using the data explorer, and so some care needs to be used.</p>"},{"location":"archive/product/projects/future/sql-dql-operations/#refactor-and-clean-up-results","title":"Refactor and clean up results","text":"<p>Refactor to remove SQLAlchemy objects from calls using Python DQL functions:</p> <ul> <li>Remove any SQLAlchemy objects from DQL function signatures (This may require modifying callers slightly)</li> <li>Remove SQLAlchemy from the entire call stack calling a given function, all the way up to the API (within reason).</li> <li>Modify affected function signatures to avoid using <code>schema_name</code>, <code>(schema_name, table_name)</code>, or <code>(schema, table_name, column_name)</code> identifiers. Instead, prefer <code>schema_oid</code>, <code>table_oid</code> or <code>(table_oid, attnum)</code> identifiers (may require modifying callers slightly, or scaffolding).</li> <li>Delete any unneeded functions.</li> </ul>"},{"location":"archive/product/projects/future/sql-dql-operations/#risks","title":"Risks","text":"<ul> <li>This is a major overhaul of the codebase. There\u2019s always a possibility of unforseen problems</li> <li>This will probably make the codebase less approachable for outsiders.</li> <li>The testing may be trickier (though current prototyping didn\u2019t require much changing of tests at all).</li> <li>The composition of operations involved with the data explorer will need to be carefully handled.</li> </ul>"},{"location":"archive/product/projects/future/sql-dql-operations/#resources","title":"Resources","text":"<p>TODO</p>"},{"location":"archive/product/projects/future/sql-dql-operations/#timeline","title":"Timeline","text":"<p>Note: Parts of this timeline are delayed, since they\u2019re blocked by the removal of DDL, DML, and Brent\u2019s parental leave.</p> Date Outcome 2023-03-20 Prototyping work starts 2023-05-05 Implementation spec and prototyping complete 2023-05-12 Implementation spec approved 2023-05-26 All needed DQL SQL Functions written 2023-06-02 All thin python wrappers written 2023-06-09 Refactor and clean up complete"},{"location":"archive/product/research/formulas/","title":"Formulas research","text":"<p>This is a report which details some research that Sean did in 2023-06 to vet the feasibility of implementing Mathesar formulas using PostgreSQL generated columns.</p>"},{"location":"archive/product/research/formulas/#postgres-generated-columns","title":"Postgres generated columns","text":""},{"location":"archive/product/research/formulas/#docs","title":"Docs","text":"<ul> <li>https://www.postgresql.org/docs/current/ddl-generated-columns.html</li> </ul>"},{"location":"archive/product/research/formulas/#vis-a-vis-mathesar","title":"Vis \u00e0 vis Mathesar","text":"<ul> <li> <p>To build Mathesar formulas, we could leverage Postgres generated columns, but I\u2019m not sure we should.</p> </li> <li> <p>From our perspective: a proper implementation seems challenging but still surmountable. The hardest parts would appear to be:</p> <ul> <li>Providing graceful support for updating formula definitions while also preserving oid-attnum references to the column (e.g. in data explorer and other metadata). (See \u201cUpdating a formula\u201d below.)</li> <li>Security concerns:<ul> <li>It\u2019s not like we can just escape user input for this like we normally would. How do we guard against SQL injection? It seems like we\u2019d need a library which can parse the user input as a Postgres SQL expression to validate it. I imagine most libraries will be tailored towards parsing queries (not expressions), so we might need to employ a hack like using a query parser to parse and validate <code>f\"SELECT {expr};\"</code></li> <li> <p>Do any valid expressions exist which might pose additional security concerns? For example, is it possible for a user to enter an expression which takes too much time to compute? That could be a denial-of-service concern for a Mathesar SaaS provider. One such expression might be a RegEx comparison. Postgres says:</p> <p>While most regular-expression searches can be executed very quickly, regular expressions can be contrived that take arbitrary amounts of time and memory to process. Be wary of accepting regular-expression search patterns from hostile sources. If you must do so, it is advisable to impose a statement timeout.</p> </li> </ul> </li> </ul> </li> <li> <p>From a user\u2019s perspective:</p> <ul> <li> <p>The lack of composition seems like it might be a deal-breaker, especially given that our competitors support it. I don\u2019t see any ways around it.</p> <p>As a potential next step, it might be interesting to explore the possibility of using triggers instead of generated columns. I can imagine it being a whole lot more work, but maybe giving us the capability of supporting composition.</p> </li> <li> <p>Our competitors support relative time in formulas. This would also be a strike against Mathesar if we use generated columns for formulas. I can imagine a future version of the Data Explorer that would allow users to perform such computations though, so it might not be a deal-breaker from a product design standpoint.</p> </li> <li> <p>Frequent formula definition updates could lead the user to bump into the 1600 column limit described below. My guess is that this would be quite rare though.</p> </li> </ul> </li> <li> <p>We might consider some small changes to Mathesar that would allow it to play well with generated columns defined outside Mathesar:</p> <ul> <li>The API should tell the front end when a column is generated, ideally showing the formula definition too.</li> <li>The front end should disallow editing within generated columns, in a manner similar to pk columns</li> <li>When a user updates a table cell, the front end should update the entire row with the API PATCH response. (Currently it only updates the cell edited.)</li> </ul> </li> </ul>"},{"location":"archive/product/research/formulas/#behavior","title":"Behavior","text":"<ul> <li> <p>\u2705 Defining a formula</p> <ul> <li> <p>Works. Example:</p> <pre><code>drop table if exists formulas;\ncreate table formulas (\n  id serial primary key,\n  a integer,\n  b integer,\n  c integer generated always as (a + b) stored\n);\ninsert into formulas (a, b) values \n(1, 7),\n(5, 11);\nselect * from formulas;\n</code></pre> </li> <li> <p>Generated columns must be materialized. From their docs</p> <p>PostgreSQL currently implements only stored generated columns</p> </li> </ul> </li> <li> <p>\u274c Relative time in formulas</p> <ul> <li> <p>This is not possible</p> <pre><code>drop table if exists formulas;\ncreate table formulas (\n  id serial primary key,\n  a integer,\n  b integer generated always as (a + now()::date) stored\n);\n</code></pre> <p>ERROR: generation expression is not immutable</p> </li> </ul> </li> <li> <p>\u2696\ufe0f Inspecting a formula</p> <ul> <li> <p>Formulas can be inspected, although we have no way of recovering the formula definition exactly as the user entered it.</p> </li> <li> <p>This query will show the formula in the <code>expr</code> column:</p> <pre><code>select\n  tbl.oid as table_oid,\n  col.attnum as column_attnum,\n  tbl.relname as table_name,\n  col.attname as column_name,\n  def.adbin as expr_raw,\n  pg_get_expr(def.adbin, tbl.oid) as expr,\n  pg_get_expr(def.adbin, tbl.oid, true) as expr_pretty\nfrom pg_catalog.pg_attribute col\njoin pg_catalog.pg_class tbl on\n  tbl.oid = col.attrelid\njoin pg_catalog.pg_attrdef def on\n  def.adrelid = col.attrelid and\n  def. adnum = col.attnum\nwhere\n  col.attgenerated = 's';\n</code></pre> </li> <li> <p>A formula entered as <code>a + b</code> will display as <code>a + b</code>. Good.</p> </li> <li> <p>Columns are quoted with double quotes only when needed. That\u2019s nice.</p> </li> <li> <p>A formula entered as</p> <p><code>CoAlEsCe(a + 0   + /* HI */ b * (1+(1-1)), char_length('BAR'))</code></p> <p>\u2026will display as\u2026</p> <p><code>COALESCE(((a + 0) + (b * (1 + (1 - 1)))), char_length('BAR'::text))</code></p> </li> <li> <p>The <code>expr_raw</code> column in the above table gives us a window into what\u2019s happening here. Postgres stores an AST of the formula, and then renders that AST to a string via <code>pg_get_expr</code>.</p> </li> </ul> </li> <li> <p>\u274c Updating a formula</p> <ul> <li> <p>This is not supported.</p> </li> <li> <p>The closest thing would be dropping and adding a new column like so:</p> <pre><code>start transaction;\nalter table formulas drop column c;\nalter table formulas add column c integer generated always as (a - b) stored;\ncommit;\n</code></pre> </li> <li> <p>The drop/add approach is fine for queries which reference the column by name (e.g SQL outside Mathesar), but it would break anything referencing the column by oid-attnum (e.g. Explorations). We could conceivably seek to repair those dangling references if the formula is updated via drop/add through Mathesar though.</p> </li> <li> <p>Postgres says that tables can have no more than 1600 columns ever, including columns that have been dropped. Additionally, some column types contribute more heavily to the count, further reducing this limit. I\u2019m not sure if this limit is a practical concern for our users though.</p> </li> </ul> </li> <li> <p>\u2705 Renaming a referenced column</p> <ul> <li> <p>This works fine</p> <pre><code>alter table formulas rename column a to foo;\n</code></pre> </li> <li> <p>Inspecting the formula shows the column\u2019s new name afterwards.</p> </li> </ul> </li> <li> <p>\u2696\ufe0f Deleting a referenced column</p> <ul> <li> <p>It\u2019s possible to delete a referenced column, but the resulting behavior may catch users off guard</p> <pre><code>alter table formulas drop column a;\n</code></pre> </li> <li> <p>The generated column is silently dropped too!</p> </li> <li>I couldn\u2019t find a way to define a generated column that protect it against being dropped with this cascade-like behavior.</li> <li>This behavior could be a problem for users. Say a user spend a bunch of time crafting a formula and then decides to swap out one column for another in the formula by deleting the old column first. Ooops!</li> <li>In theory, we could guard against this at the application layer by making it clear that the column has \u201cdependents\u201d and warning the user that dependent generated columns will be automatically dropped too. But pg doesn\u2019t seem to offer a clear way to identify them. A quick and dirty way would be to search the stringified AST for occurrences of strings like <code>:varattno 3</code> (for column with attnum 3). It seems like that might do the trick. Performance wise, we would only need to search the generated columns within one table, so the fact that <code>pg_attrdef.adbin</code> is not indexed doesn\u2019t worry me.</li> </ul> </li> <li> <p>\u2696\ufe0f Type safety</p> <ul> <li> <p>Postgres does a good jod at disallowing formulas to be defined in ways that would lead to type problems.</p> </li> <li> <p>You can\u2019t change a column\u2019s type once it is referenced in a generated column.</p> <pre><code>alter table formulas alter column a type text;\n</code></pre> <p>ERROR: cannot alter type of a column used by a generated column Detail: Column \u201ca\u201d is used by generated column \u201cc\u201d.</p> <p>From a data integrity perspective, this is good. From a UX perspective, we may need to consider what additional features we\u2019d need to build to allow users to change things more easily.</p> </li> </ul> </li> <li> <p>\u274c Composition</p> <ul> <li> <p>Generated columns cannot reference other generated columns</p> <pre><code>drop table if exists formulas;\ncreate table formulas (\n  id serial primary key,\n  a integer,\n  b integer,\n  c integer generated always as (a + b) stored,\n  d integer generated always as (c * 2) stored\n);\ninsert into formulas (a, b) values \n(1, 7),\n(5, 11);\n</code></pre> <p>ERROR: cannot use generated column \u201cc\u201d in column generation expression</p> </li> <li> <p>It\u2019s interesting to note that SQLite does not have this limitation:</p> <p>The expression of a generated column can refer to any of the other declared columns in the table, including other generated columns, as long as the expression does not directly or indirectly refer back to itself. </p> </li> </ul> </li> </ul>"},{"location":"archive/product/research/formulas/#competing-products","title":"Competing products","text":""},{"location":"archive/product/research/formulas/#nocodb","title":"NocoDB","text":"<ul> <li> <p>Docs: https://docs.nocodb.com/setup-and-usages/formulas/</p> </li> <li> <p>Implementation</p> <ul> <li> <p>Formula columns are virtual, not stored. That is, they are computed on the fly when the table results are displayed.</p> </li> <li> <p>Formulas are implemented at the application layer, not the database layer. This means the formula definition is stored in application-specific metadata, and the formula column is not visible within the underlying database. If I update a referenced value outside NocoDB, then the result of the formula that NocoDB displays will update, but only due to the virtual nature of the formula. The source data is read/write accessible outside NocoDB, but not the computed data.</p> </li> <li> <p>NocoDB has its own special formula syntax and functions.</p> </li> </ul> </li> <li> <p>Syntax: <code>a + b</code> or <code>{a} + {b}</code></p> </li> <li> <p>Editing: Single line. No syntax highlighting. Squiggly underlines for syntax error in some cases.</p> </li> <li> <p>Functions generally try to mimic spreadsheets</p> </li> <li> <p>Updating the formula definition</p> <p>Works, but my syntax is not preserved exactly as I entered it.</p> </li> <li> <p>Relative time in formulas</p> <p>Works</p> </li> <li> <p>Rename a referenced column</p> <p>Some bugs here. The formula re-calculates successfully, but still displays the definition in terms of the old column name. Attempting to edit the formula definition results in an error if the rename is not manually propagated into the formula definition.</p> </li> <li> <p>Delete referenced column</p> <p>Formula returns <code>ERR</code></p> </li> <li> <p>Update source data outside application</p> <p>Works because formula columns are virtual, not stored.</p> </li> <li> <p>Define formula in terms of a column whose name includes a formula token</p> <p>Impossible or too hard to figure out.</p> <p>I made a column named <code>d}</code> and tried to base a formula on it. I couldn\u2019t figure out how to do it.</p> </li> <li> <p>Composition</p> <p>Works</p> </li> <li> <p>Circular references</p> <p>Prevented validation during formula definition</p> </li> <li> <p>Type problems</p> <p>I end up with vague errors such as \u201cInvalid formula\u201d during formula definition.</p> </li> <li> <p>Sorting on formula columns</p> <p>Works</p> </li> <li> <p>UX notes</p> <ul> <li> <p>Hovering the column header shows the formula definition</p> <p></p> </li> <li> <p>I kept wanted to double-click the cell to edit the formula. Instead, I need to click the column header, then select \u201cedit\u201d from the menu</p> </li> </ul> </li> </ul>"},{"location":"archive/product/research/formulas/#baserow","title":"Baserow","text":"<ul> <li> <p>Docs: https://baserow.io/docs/tutorials%2Funderstanding-baserow-formulas</p> </li> <li> <p>For much of what is relevant to Mathesar, Baserow behaves in a very similar manner to NocoDB. Their technical approach and limitations are basically the same.</p> </li> <li> <p>Their formula syntax is a bit different though.</p> </li> <li> <p>Their formula editor has better UX, and overall the experience has fewer bugs.</p> </li> <li> <p>Unlike NocoDB (and Mathesar), Baserow does not support working with pre-existing databases. You import your data into Baserow, and work with it there. Given that product design, it makes sense why they\u2019ve implemented formulas in the application layer (at least, it makes more sense than NocoDB).</p> </li> </ul>"},{"location":"archive/product/research/formulas/#others","title":"Others","text":"<ul> <li>APITable - I played with this a bit, only from the UI (not looking at the DB layer). Their approach is similar to NocoDB.</li> <li>Retool database - I looked at this because they seem to be adhering to Postgres idioms more so than our other competitors. Unfortunately they do not support formulas.</li> <li>undb - They do not support formulas.</li> </ul>"},{"location":"archive/product/research/worksheets-brainstorm/","title":"2024 Worksheets Brainstorm","text":"<p>Scope:</p> <ul> <li>This document lays out challenges and potential solutions to worksheets from a technical perspective.</li> <li>This document does not concern itself with any UX issues.</li> </ul> <p>Status:</p> <ul> <li>This document is in early draft state. No decisions have been made yet!</li> </ul>"},{"location":"archive/product/research/worksheets-brainstorm/#book-list-example","title":"Book List Example","text":"<p>We use the following example in a number of places throughout the document:</p> <ul> <li> <p>Query:</p> <p>This is the SQL that is generated by the query section of the worksheet. Exactly how we got this SQL doesn\u2019t really matter here. It could have come from a UI-based query builder or could have been typed out manually by the user.</p> <pre><code>with\n  genres as (\n    select book_id, array_agg(genres.id) as genres\n    from books_genres\n    join genres on books_genres.genre_id = genres.id\n    group by book_id\n  ),\n  copies as (\n    select book_id, count(*) as copies\n    from items\n    group by book_id\n  )\nselect\n  books.id as book_id,\n  books.title,\n  books.author_id as author,\n  authors.url as author_url,\n  genres.genres,\n  coalesce(copies.copies, 0) as copies\nfrom books\nleft join authors on authors.id = book.author_id\nleft join genres on books.id = genres.book_id\nleft join copies on books.id = copies.book_id;\n</code></pre> <p> Side note <p>In Querydown this would be:</p> <pre><code>#books\n$ id -&gt; book_id\n$ title\n$ author_id -&gt; author\n$ #genres.id%list -&gt; genres\n$ #items -&gt; copies\n</code></pre> <p>With a the worksheets having a modular approach to queries and displays, my hope is that a Mathesar extension could eventually provide a Querydown-based query editor. This would be a really fast way to build powerful worksheets!</p> <li> <p>Raw query results:</p> <p>This is the raw data returned by Postgres.</p> book_id title author author_url genres copies <code>921</code> <code>'Foo'</code> <code>5</code> <code>NULL</code> <code>{101,102}</code> <code>10</code> <code>32</code> <code>'Bar'</code> <code>6</code> <code>'http://example.com'</code> <code>{}</code> <code>0</code> <code>1007</code> <code>'Apple'</code> <code>6</code> <code>'http://example.com'</code> <code>{103}</code> <code>2</code> </li> <li> <p>Sheet display:</p> <p>Here\u2019s (roughly) how the sheet would appear to the user.</p> book_id title author author_url genres copies 921 Foo <code>Alice Davis</code> <code>NULL</code> <code>Adventure</code> <code>Fantasy</code> 10 32 Bar <code>Bob Scott</code> http://example.com 0 1007 Apple <code>Bob Scott</code> http://example.com <code>Non-fiction</code> 2 </li>"},{"location":"archive/product/research/worksheets-brainstorm/#oids-vs-names","title":"OIDs vs names","text":"<p>\ud83e\udd14 Challenges:</p> <ul> <li>Do worksheets reference PostgreSQL tables and columns using names or OIDs?</li> <li>If we use OIDs, how do we allow the user to edit the SQL using names?</li> </ul> <p>TODO</p>"},{"location":"archive/product/research/worksheets-brainstorm/#query-safeguards","title":"Query safeguards","text":"<p>\ud83e\udd14 Challenges:</p> <ul> <li>Do we want to prevent users from manually executing DML and DDL in their queries?<ul> <li>If so, how?</li> <li>Are temporary tables okay?</li> </ul> </li> </ul> <p>TODO</p>"},{"location":"archive/product/research/worksheets-brainstorm/#record-summaries","title":"Record summaries","text":"<p>\ud83e\udd14 Challenges:</p> <ul> <li>Where is the record summary template stored?</li> <li>How does the worksheet fetch the record summary data? (We need to handle direct FK columns as well as array aggregates.)</li> </ul>"},{"location":"archive/product/research/worksheets-brainstorm/#display-settings","title":"Display settings","text":"<ul> <li> <p>Two types of columns can be configured to display record summaries:</p> <ul> <li>Scalar FKs: columns with source data having a single-column FK.</li> <li>Aggregate PKs: array aggregates of single-column PK values.</li> </ul> </li> <li> <p>The record summary can be turned off in the display settings too. When it\u2019s off, the raw PK values will display.</p> </li> <li> <p>By default: record summaries are enabled wherever possible.</p> <p>In the Book List Example, this is how we get record summaries for <code>author</code> and <code>genres</code> by default, without getting record summaries for <code>id</code>.</p> </li> <li> <p>Limitations: Record summaries cannot be configured for</p> <ul> <li>Multi-column FKs (because they point to more than one PK column).</li> <li>FK columns that point to non-PK columns.</li> </ul> </li> </ul>"},{"location":"archive/product/research/worksheets-brainstorm/#record-summary-templates","title":"Record summary templates","text":"<ul> <li> <p>The record summary template is stored in the worksheet\u2019s display settings, and is associated with a column in the worksheet.</p> <p>\u24d8 Note:</p> <p>Before worksheets, Mathesar associated record summaries with each table so that all FKs which referenced the same table would automatically use the same record summary. With worksheets, it is not (yet?) possible to configure a default per-table record summary template to always be used for references to that table. This behavior simplifies some things, but also has the following consequences:</p> <ul> <li>In some cases, there might be some more tedium associated with creating new worksheets because you can\u2019t easily reuse a record summary template that you created elsewhere.</li> <li>The Record Page can\u2019t show a record summary for the record.</li> </ul> <p>I think these are acceptable tradeoffs though. The benefit of the worksheet approach is that different worksheets can have different record summary templates to refer to the same table.</p> </li> <li> <p>Each record summary template has one and only one \u201csource table\u201d \u2014 the table which contains the PK column on which the record summary is operating.</p> </li> <li> <p>The sheet can display record summaries even when no template is explicitly configured by the user. In this case it will be smart enough to auto-generate a template that works well in most cases.</p> <ul> <li>The auto-generated template is not persisted \u2014 it is computed on the fly. This allows us to update the smart logic used to auto-generate these templates.</li> <li> <p>The smart logic works as follows:</p> <p>TODO</p> </li> </ul> </li> <li> <p>In the Book List Example:</p> <ul> <li> <p>By default the \u201cauthor\u201d column shows a record summary and uses smart logic to formulate the following template on the fly:</p> <pre><code>{first_name}\n</code></pre> <p>(The source table for this record summary is <code>authors</code>, so column references pertain to columns in that table.)</p> <p>The worksheet is then customized to store this improved template, which is persisted within the worksheet:</p> <pre><code>{first_name} {last_name}\n</code></pre> </li> <li> <p>The \u201cgenres\u201d column also shows record summaries by default. With no template being explicitly configured, the sheet is smart enough to use the following template:</p> <pre><code>{genre.name}\n</code></pre> <p>The source table for this record summary is <code>books_genres</code> which does not have a <code>name</code> column. But the template is able to use dot notation to refer to a field in the directly related <code>genres</code> table.</p> </li> </ul> </li> <li> <p>The precise syntax of the record summary template still needs a bit more specification with regard to quoting and escaping.</p> </li> </ul>"},{"location":"archive/product/research/worksheets-brainstorm/#fetching-record-summary-data","title":"Fetching record summary data","text":"<p>Here\u2019s how we fetch the record summary data for the Book List Example.</p> <ol> <li> <p>When the search query runs, the service layer stores the results in a temporary table.</p> </li> <li> <p>Before closing the transaction, the service layer issues additional queries using this temporary table. For the sake of this example, we\u2019ll call this temporary table <code>results</code>.</p> </li> <li> <p>The additional queries look like this:</p> <ul> <li> <p>This query fetches the data necessary to render all record summaries within the \u201cauthors\u201d column.</p> <pre><code>select\n  authors.id,\n  authors.first_name,\n  authors.last_name\nfrom results\njoin authors on authors.id = results.author\ngroup by authors.id\n</code></pre> <p>The <code>first_name</code> and <code>last_name</code> columns are included because they are present in the record summary template.</p> </li> <li> <p>This query fetches the data necessary to render all the record summaries within the \u201cgenres\u201d column</p> <pre><code>with ids as (select distinct unnest(genres) as ids from results)\nselect\n  books_genres.id,\n  genres.name\nfrom ids\njoin books_genres on books_genres.id = ids.id\nleft join genres on genres.id = books_genres.genre_id\n</code></pre> <p>The <code>genres.name</code> column is included because it\u2019s present in the record summary template, and we left-join the <code>genres</code> table into the query to access that data.</p> </li> </ul> </li> </ol>"},{"location":"archive/product/research/worksheets-brainstorm/#dml","title":"DML","text":"<p>\ud83e\udd14 Challenges:</p> <ul> <li>How do we do DML from within a worksheet?</li> </ul>"},{"location":"archive/product/research/worksheets-brainstorm/#metadata","title":"Metadata","text":"<ul> <li> <p>Most of the time, Mathesar is able to use static analysis of SQL to determine metadata about the columns in a query\u2019s result set. This metadata gives us a clear picture of where the columns came from and what their types are. For some queries, Mathesar won\u2019t be smart enough to trace the origin of every column.</p> </li> <li> <p>In the Book List Example, we\u2019d get this metadata:</p> <pre><code>{\n  \"book_id\": {\n    \"classification\": \"pk_cell\",\n    \"table\": \"books\",\n    \"column\": \"id\"\n  },\n  \"title\": {\n    \"classification\": \"data_cell\",\n    \"table\": \"books\",\n    \"column\": \"title\",\n    \"pk_lookup_reference\": [ \"book_id\" ]\n  },\n  \"author\": {\n    \"classification\": \"data_cell\",\n    \"table\": \"books\",\n    \"column\": \"author_id\",\n    \"pk_lookup_reference\": [ \"book_id\" ]\n  },\n  \"author_url\": {\n    \"classification\": \"data_cell\",\n    \"table\": \"author\",\n    \"column\": \"url\",\n    \"pk_lookup_reference\": [ \"author\" ]\n  },\n  \"genres\": {\n    \"classification\": \"pk_array\",\n    \"table\": \"books_genres\",\n    \"conditions\": [\n      {\n        \"column\": \"book_id\",\n        \"equals\": {\n          \"query_column\": \"book_id\"\n        }\n      }\n    ]\n  },\n  \"copies\": {\n    \"classification\": \"aggregate_count\",\n    \"table\": \"items\",\n    \"conditions\": [\n      {\n        \"column\": \"book_id\",\n        \"equals\": {\n          \"query_column\": \"book_id\"\n        }\n      }\n    ]\n  }\n}\n</code></pre> </li> <li> <p>The column metadata gives the worksheet enough information to formulate <code>INSERT</code>, <code>UPDATE</code>, and <code>DELETE</code> queries in most cases.</p> </li> <li> <p>The primary key column(s) from the origin table must be present in the result set for the worksheet to be able to perform cell updates.</p> </li> </ul>"},{"location":"archive/product/research/worksheets-brainstorm/#update-examples","title":"Update examples","text":"<p>In the Book List Example, we want to make some changes to the first row\u2026</p> <ul> <li> <p>In the title column, we can change \u201cFoo\u201d to \u201cFOO\u201d. This is an <code>UPDATE</code> query on the <code>authors</code> table.</p> </li> <li> <p>In the author and author_url, we can make the same kinds of edits.</p> </li> <li> <p>In the genres column, we can remove \u201cFantasy\u201d. This is a <code>DELETE</code> query on the <code>books_genres</code> table.</p> </li> <li> <p>In the genres column, we can add \u201cSci-fi\u201d. This is a <code>INSERT</code> query on the <code>books_genres</code> table. It uses the <code>genres</code> PK value from the \u201cSci-fi\u201d genre the user selected via the record selector.</p> </li> <li> <p>In the genres column, we can change \u201cNon-fiction\u201d to \u201cNonfiction\u201d. This is an <code>UPDATE</code> query on the <code>genres</code> table.</p> <p>There\u2019s still a lot of UX to figure out here. Here\u2019s one UX idea:</p> <ul> <li>The user will be given the option to edit any fields referenced within the record summary. In this case the record summary only references one field. But theoretically it could reference multiple. And the record summary could also include static text in the template too. When the user edits, they don\u2019t edit the text exactly as it\u2019s shown in the record summary \u2014 they edit the text from a specific field, one field at a time. So then the worksheet gets a new value for <code>genres.name</code>. The worksheet submits a request to update <code>genres.name</code>. The worksheet doesn\u2019t know the <code>genres</code> PK value, but it does know the <code>books_genres</code> PK value and that should be enough to tell the backend to update a specific <code>genres</code> record, changing the <code>name</code> value.</li> </ul> </li> <li> <p>From the copies column, we might later implement some UI for editing too! Ideas:</p> <ul> <li>Hyperlink to a new worksheet (to be opened in a separate tab) which shows all those counted items (with the right filters applied).</li> <li>Do something similar in a modal</li> </ul> <p>These approaches would allow users to quickly add/delete records that would in turn affect the total count.</p> </li> </ul>"},{"location":"archive/product/research/worksheets-brainstorm/#reactivity","title":"Reactivity","text":"<p>\ud83e\udd14 Challenges:</p> <ul> <li>How do dependent cells refresh when DML changes are made?</li> </ul>"},{"location":"archive/product/research/worksheets-brainstorm/#short-term-solution","title":"Short term solution","text":"<ul> <li>Worksheets must be refreshed manually in order to refresh dependent cells.</li> </ul>"},{"location":"archive/product/research/worksheets-brainstorm/#long-term-solution","title":"Long term solution","text":"<ul> <li>We use the column metadata to build a primitive reactivity graph that allows the front end to update dependent UI without full refresh in most cases.</li> </ul>"},{"location":"archive/product/research/worksheets-brainstorm/#pagination","title":"Pagination","text":"<p>\ud83e\udd14 Challenges:</p> <ul> <li>How does pagination work if the SQL query defines its own LIMIT/OFFSET?</li> <li>How do we apply LIMIT/OFFSET to user-written queries?</li> <li>How do we communicate that LIMIT will be automatically applied to user-written queries?</li> <li>How do we show the total number of records in the sheet?</li> </ul>"},{"location":"archive/product/research/worksheets-brainstorm/#display-centric-pagination","title":"Display-centric pagination","text":"<ul> <li> <p>Control over pagination is delegated to the display portion of the worksheet \u2014 not the query portion. Each display type must implement its own pagination controls as it sees fit.</p> </li> <li> <p>User-written SQL queries are not permitted to contain LIMIT or OFFSET clauses. If either of these clauses is present at the top level of the query, Mathesar will display an error.</p> </li> <li> <p>The worksheet combines the SQL from the query section with the appropriate LIMIT and OFFSET as specified from the pagination controls.</p> </li> <li> <p>We don\u2019t worry about communicating this auto-applied LIMIT/OFFSET to users up front. If they try to add their own, LIMIT and OFFSET clauses, then they\u2019ll see an appropriate error message and learn how it works at that point.</p> </li> </ul>"},{"location":"archive/product/research/worksheets-brainstorm/#record-totals","title":"Record totals","text":"<ul> <li>A supplemental query is run by pipelining the user-written worksheet query into <code>count(*)</code>. That count data is passed to the front end in the same API response as the query results.</li> </ul>"},{"location":"archive/product/research/worksheets-brainstorm/#outline-view","title":"Outline view","text":"<p>\ud83e\udd14 Challenges:</p> <ul> <li>How do we show the total number of items in an outline group without necessarily having all the items present in the result set (due to pagination)?</li> </ul>"},{"location":"archive/product/research/worksheets-brainstorm/#example","title":"Example","text":"<ul> <li> <p>Query</p> <pre><code>select\n  books.id as book_id,\n  books.title,\n  books.author_id\nfrom books;\n</code></pre> </li> <li> <p>Sheet display</p> author Alice Davis (1) book_id title author 1 921 Foo <code>Alice Davis</code> author Bob Scott (2) book_id title author 2 32 Bar <code>Bob Scott</code> 3 1007 Apple <code>Bob Scott</code> </li> </ul>"},{"location":"archive/product/research/worksheets-brainstorm/#nested-pagination","title":"Nested pagination","text":"<ul> <li>Each outline group has its own pagination control.</li> <li> <p>The service layer issues one query per outline group with its own limit and offset.</p> <ul> <li> <p>These queries can still be batched at the API layer. This way if the user refreshes the worksheet, only one API request is needed to reload all outline groups.</p> </li> <li> <p>These queries could potentially even be batched to make one TCP request to the Postgres server as well. Since they\u2019ll all have the same columns, they could be combined with <code>UNION ALL</code> and then separated out afterwards.</p> </li> </ul> </li> <li> <p>All outline groups are collapsed by default. Some UI exists to collapse and expand all groups together.</p> </li> <li> <p>When the worksheet first loads, only the group headers are fetched and shown. To fetch all those group headers and counts, the worksheet query, as-written, is transformed so as to produce the outline group data. First any specified limit and offset are removed. Then the query is pipelined via CTE to give the group header data.</p> <p>In the example above, the raw outline group data is fetched via:</p> <pre><code>with q as (              -- \u256e\n  select                 -- \u2502\n    books.id as book_id, -- \u2502\n    books.title,         -- \u251c\u2500\u2500 Worksheet query here,\n    books.author_id      -- \u2502   without LIMIT/OFFSET\n  from books             -- \u2502\n)                        -- \u256f\nselect\n  author_id,\n  count(*) as num\nfrom q\ngroup by author_id;\n</code></pre> </li> <li> <p>For super large data sets, the groups themselves are also paginated \u2014 hence the \u201cnested\u201d pagination. There are multiple levels of pagination.</p> </li> <li> <p>Per-group pagination controls are placed in the group header with a condensed UI.</p> </li> <li> <p>Sheet-wide pagination of outline group headers is placed in the lower status bar and indicates that it operates on outline groups instead of data rows.</p> </li> </ul>"},{"location":"archive/product/research/worksheets-brainstorm/#default-worksheets","title":"Default worksheets","text":"<p>\ud83e\udd14 Challenges:</p> <ul> <li>How do we allow default worksheets to be set for tables without messing things up? For example, we want to avoid a default which has hidden columns.</li> </ul>"},{"location":"archive/product/research/worksheets-brainstorm/#behavior","title":"Behavior","text":"<ul> <li> <p>A table\u2019s \u201cStandard Worksheet\u201d is the worksheet that Mathesar auto-generates for that table. It cannot be modified by the user.</p> </li> <li> <p>A table\u2019s \u201cDefault Worksheet\u201d is the worksheet that opens when a user clicks to browse data in a table. It can be modified</p> </li> <li> <p>A worksheet is eligible to be set as the default only if it has the following deviations from the standard worksheet:</p> <ul> <li>Per-column display options, including column width</li> <li>Column re-ordering</li> </ul> <p>No other modifications are permitted to be done on the default worksheet. The rationale for this rule is that we want the default worksheet to provide an accurate picture of the table\u2019s underlying structure within PostgreSQL.</p> </li> <li> <p>Functionality is also available to revert a default worksheet to the standard worksheet.</p> </li> </ul>"},{"location":"archive/product/research/worksheets-brainstorm/#column-control","title":"Column control","text":"<p>\ud83e\udd14 Challenges:</p> <ul> <li>Should column reordering modify query or modify sheet display options?</li> <li>How are new columns added (or not added) to existing worksheets after being added to a table?</li> <li>Can a PK column be added to the query (to support DML) but hidden from the sheet (to simplify the view)?</li> <li>For more complex queries, is there a way we can auto-generate column aliases in order to have sensible defaults?</li> </ul> <p>TODO</p>"},{"location":"archive/product/specs/dynamic-defaults-proto/","title":"Dynamic Defaults Proto-Spec","text":""},{"location":"archive/product/specs/dynamic-defaults-proto/#problem","title":"Problem","text":"<p>We are considering implementing Dynamic Defaults as it increases the usability of adding new records.</p> <p>For the purposes of the demo we need the following defaults</p> <ul> <li>Current date and time<ul> <li><code>NOW()</code></li> </ul> </li> <li>Current date and time + a specific duration (e.g. 14 days)<ul> <li><code>NOW() + '2 weeks'::INTERVAL</code></li> </ul> </li> </ul> <p>The dynamic default options will depend on the field\u2019s data type.</p> <p>We should consider implementing dynamic defaults using the same formulas that we plan to implement in the future</p>"},{"location":"archive/product/specs/dynamic-defaults-proto/#proposed-user-flow","title":"Proposed User Flow","text":"<ul> <li>User selects a column</li> <li>The inspector panel displays the properties for that column</li> <li>User toggles the \u201cDefault Value\u201d option</li> <li>The user selects from a list of preset options</li> </ul> <p>Formulas to use from our Formulas</p> <ul> <li>Current date and time: \u201cCurrent date &amp; time\u201d formula</li> <li>Current date and time + duration: \u201cAdd Duration to Date\u201d formula</li> <li>A specific date and time: static default (not dynamic)<ul> <li>show date time picker</li> </ul> </li> </ul>"},{"location":"archive/product/specs/example-schema/","title":"Example Schema","text":"<p>This schema is a reference to be used as an example in specs or other sections of the wiki. These tables are meant to simulate what data looks like in real databases.</p>"},{"location":"archive/product/specs/example-schema/#list-of-tables","title":"List of Tables","text":""},{"location":"archive/product/specs/example-schema/#relationship-map","title":"Relationship Map","text":"<p>This is a map of the relationships described in the diagram above. </p>"},{"location":"archive/product/specs/forms/","title":"Forms","text":"<p>This spec describes the \u201cForms\u201d feature. </p> <p>\u201cForms\u201d lets non-technical users visually design and share data-entry forms publicly. Users select a base table, pick columns (including foreign-key, and reverse-foreign-key links), arrange and configure fields, and publish a public link. End users can then submit the form which store records in the database, with nested creation of related records.</p>"},{"location":"archive/product/specs/forms/#2025-05-05-updates-after-review-calls-with-team","title":"2025-05-05: Updates after review calls with team","text":"<p>Pavish: The following content contains updates over the initial iteration based on review comments and calls with Ghislaine, Zack, Brent, and Sean.</p> <p>We have enough agreement on the spec to proceed with UX design.</p>"},{"location":"archive/product/specs/forms/#record-summary-template-record-selector","title":"Record summary template &amp; Record selector","text":"<ul> <li>We will allow the admin choose searchable columns, not limited by the columns in the record_summary_template.</li> <li>The following structure <code>lookup</code> will now replace <code>form.elements[].record_summary_template</code>: <pre><code>{\n  \"lookup\": {\n    \"columns\": [\n      {\n        \"path\": [[2, 3], [3, 10], [10, 15]],\n        \"label\": \"Name\"\n      },\n      {\n        \"path\": [[2, 4]],\n        \"label\": \"Email\"\n      },\n      {\n        \"path\": [[2, 21], [21, 98]],\n        \"label\": \"Location\"\n      }\n    ],\n    \"summary_template\": [0, \"-\", 2]\n  },\n  // ...,\n}\n</code></pre></li> <li><code>lookup.columns</code> would contain all the columns the user can filter through.</li> <li><code>lookup.summary_template</code> works similarly to the record summary template, however, the column-elements correspond to indexes from <code>lookup.columns</code>.<ul> <li>This way the columns used in the summary_template would always be a subset of columns defined in the lookup.</li> </ul> </li> <li><code>lookup.columns[].path</code> is a <code>jp_path</code>.<ul> <li>Sean expressed his opinion that the <code>record_summary_template</code> currently uses a much simpler path that follows FK links, instead of the <code>jp_path</code> which requires defining each join.<ul> <li>This would make the work move faster since we already have the implementation for it.</li> </ul> </li> <li>Brent specified concern that having the <code>jp_path</code> is more robust.</li> <li>Pavish is fine with either approach.<ul> <li>We consider this an implementation detail and let Brent take a call on this during backend implementation work.</li> </ul> </li> </ul> </li> </ul>"},{"location":"archive/product/specs/forms/#ux-for-record-selector","title":"UX for Record selector","text":"<ul> <li>The UX changes would be in the dropdown displayed to the user while they click on a foriegn_key field.</li> <li>The rows will contain the record summary, along with the values of each column that is part of <code>lookup.columns</code>.<ul> <li>Each row would contain the values displayed below the record summary in a \u201ccolumn: value\u201d kind of manner.</li> </ul> </li> <li>The label displayed in the search bar &amp; the rows would be from <code>lookup.columns[].label</code>.</li> <li>Sorting would be in the ascending order for each column in <code>lookup.columns</code>.</li> <li>Searching would be <code>starts_with</code> for text columns and <code>equals</code> for non-text columns. The combination between column-values would be <code>AND</code>.</li> </ul>"},{"location":"archive/product/specs/forms/#unauthenticated-rpc-actions","title":"Unauthenticated RPC actions","text":"<ul> <li><code>forms.get</code> as mentioned in the initial iteration would be renamed to <code>forms.show</code>, which would not contain sensitive values like <code>owner_oid</code>.</li> <li>We should have a separate <code>forms.get</code> which would be the private form definition that is fetched by Mathesar users.</li> <li>The new UX would require a <code>forms.list_linked_records</code>, which will return the records &amp; summaries for the list displayed to the user in the dropdown.</li> </ul>"},{"location":"archive/product/specs/forms/#django-db-modal","title":"Django DB modal","text":"<ul> <li>Brent wants to spend some time thinking if <code>form.elements</code> should be a table instead of <code>jsonb</code>.</li> <li>Pavish is fine with either, but prefers the <code>jsonb</code> since the actual performance consideration would be in creating the queries, not in parsing the json/reading from table.</li> <li>This would not affect the API request/response structure.</li> <li>This is an implementation detail and Brent would take a call during backend implementation work.</li> </ul>"},{"location":"archive/product/specs/forms/#2025-04-29-initial-iteration","title":"2025-04-29: Initial iteration","text":""},{"location":"archive/product/specs/forms/#terminology","title":"Terminology","text":"<ul> <li>Reverse foreign key: Denotes foreign key columns in other tables that link to base table records.</li> <li>Mathesar user: Refers to users using Mathesar to create a form.</li> <li>End user: Refers to people filling the form.</li> </ul>"},{"location":"archive/product/specs/forms/#requirements","title":"Requirements","text":""},{"location":"archive/product/specs/forms/#user-stories","title":"User stories","text":"<ul> <li> <p>Form Builder (Mathesar admin)</p> <ul> <li>I want to share a form to end users via a public link to collect data required for my business needs.</li> <li>I want to select a base table &amp; related tables, and choose which columns appear on my form so I can tailor data-entry to business needs.</li> <li>I want to ensure that all fields related to my business needs are part of the same form. This may involve multiple different tables related via FKs and reverse-FKs.</li> <li>I want end users to be able to search through existing records with summaries, when they\u2019re filling in a foriegn key field.</li> <li>I want to allow end users to be able to create new related records inline, if needed.</li> <li>I want to configure labels, descriptions, placeholders, and validation rules for each field to guide end users.</li> <li>I want to reorder fields via drag-and-drop and insert dividers or instructional text to structure my form visually.</li> <li>I want the main record and any related/nested records to all be created in one shot, when the end user submits the form.</li> </ul> </li> <li> <p>Form Submitter (End User) </p> <ul> <li>I want a clear, labelled form that only shows fields relevant to my task.</li> <li>I want descriptive messages to guide me fill the form.</li> <li>I want clear indications when the form is successfully submitted.</li> <li>I want useful help messages when form submission fails due to an error.</li> <li>I want to know when I\u2019m filling the form incorrectly while I\u2019m filling it, not only while submitting.</li> </ul> </li> </ul>"},{"location":"archive/product/specs/forms/#a-simplified-scenario","title":"A simplified scenario","text":"<ul> <li>Mathesar admin wants to create a form for end-users to fill in their favourite movies, including the director, producer, casting information, and genres.</li> <li>Mathesar admin has the following schema:     </li> <li>Things to note:<ul> <li>This is not a real-life example and is used only for representing the following cases:<ul> <li>Normal fields (Scalar columns in the <code>Movies</code> table).</li> <li>Foriegn key fields referencing a table with multiple columns (<code>producer_id</code> -&gt; <code>Producers</code>).</li> <li>Foriegn key fields referencing a table with a single column (<code>director_id</code> -&gt; <code>Directors</code>).</li> <li>Reverse-foreign-key fields referencing a table with multiple columns (<code>Movie_Actor_mapping</code>).</li> <li>Reverse-foreign-key fields referencing a table with a single column (excluding the fk to the base table) (<code>Movie_Genre_mapping</code>), i.e. a mapping table.</li> </ul> </li> <li>The wireframes below are representational, taking into consideration the implementation feasibility. They are not final.</li> </ul> </li> <li>Form displayed to the end user:<ul> <li></li> <li>The <code>id</code> columns are not displayed i.e. any column that has a dynamic default is hidden.<ul> <li>The admin can still choose to display these columns in the form as readonly fields.</li> </ul> </li> <li>The foreign key field <code>movie.director_id</code> is displayed as a dropdown which selects records from <code>Directors</code>.</li> <li>The foreign key field <code>movie.producer_id</code> is displayed as a dropdown which selects records from <code>Producers</code>.</li> <li>End users can add entries in <code>Movie_Actor_mapping</code>, which is labelled as \u201cCast Members\u201d in the form.<ul> <li>The admin can modify any label &amp; add descriptions.</li> </ul> </li> <li>The \u201cGenres\u201d label has an input that adds entries to <code>Movie_Genre_mapping</code>.<ul> <li>Since that table is a mapping table with a single column, only the field for fk <code>Movie_Genre_mapping</code> -&gt; <code>genre_id</code> is shown.</li> <li>It opens a dropdown showing entries from <code>Genres</code>.</li> </ul> </li> </ul> </li> <li>Filling in a foriegn key field:<ul> <li></li> <li></li> <li></li> <li>Admin can configure whether or not they want to allow end users to add new records.<ul> <li>If they allow the \u2018+ Add New\u2019 option is shown in the dropdowns.</li> <li>Admins can configure the text shown.</li> </ul> </li> <li>This is a record selector shown in a dropdown. Only the summaries are shown in the list.</li> <li>There will be a small Pagination section when the entires are more than 20.</li> <li>The search area contains the columns that are part of the record summary.</li> <li>These columns could be from any related joinable table, as configured by the record summary.</li> <li>The admin cannot choose searchable columns if they are not part of the record summary configuration. The Record summary configuration is the only source here.</li> <li>The admin can customize the labels for these columns.</li> </ul> </li> <li>Adding new records in related tables via fk fields:<ul> <li></li> <li>End users can choose to add new records for Producers, Directors, and Genres.</li> <li>Notice that the \u201cDirector\u201d field shows the field \u201cPerson\u201d for the column <code>person_id</code> which is an a FK for <code>People</code>.</li> <li>The user could still add a nested entry for the <code>People</code> table using the \u201cPerson\u201d dropdown.<ul> <li></li> </ul> </li> <li>\u201cGenres\u201d, however shows fields from the <code>Genre</code> table directly, since <code>Movie_Genre_mapping</code> is a mapping table with just a reverse-fk.<ul> <li>It adds entries to both <code>Genre</code> and <code>Movie_Genre_mapping</code>.</li> </ul> </li> </ul> </li> </ul>"},{"location":"archive/product/specs/forms/#scope","title":"Scope","text":""},{"location":"archive/product/specs/forms/#initial-release-of-forms","title":"Initial release of \u201cForms\u201d:","text":"<ol> <li>Select form fields from base table.</li> <li>Select form fields from related tables - both fk links and reverse-fk-links.</li> <li>Publicly sharing a form for end-users to fill.</li> <li>Customizable styling and success/failure messages.</li> <li>Preview forms while creating/editing.</li> <li>Basic Permissions.<ul> <li>Each form is owned by a role.</li> </ul> </li> <li>Redirection after submission.<ul> <li>Allow redirection to a custom endpoint after successful form submission. This would happen after showing the success message, with a timer.</li> </ul> </li> <li>Basic form-level validations.<ul> <li>Marking fields as \u201crequired\u201d on the form to disallow empty fields, while the underlying columns allow NULL &amp; empty strings.</li> </ul> </li> </ol>"},{"location":"archive/product/specs/forms/#to-consider-in-future-releases","title":"To consider in future releases:","text":"<ol> <li>Granular permissions management for forms.</li> <li>Restrictions on filling forms.<ul> <li>Login required,</li> <li>Password,</li> <li>Captchas, etc.,</li> </ul> </li> <li>Email notifications after a form is submitted.</li> <li>Creating an \u2018exploration\u2019 from a \u2018form\u2019 to view de-normalized data filled via forms.</li> <li>Perform DDL operations while building form.<ul> <li>Being able to create a new table directly in the form view.</li> <li>Being able to create new columns directly in the form view.</li> </ul> </li> <li>Advanced form-level validations.</li> <li>Multi-language support for end-users filling the form.</li> <li>Customizable logos, banners, and accent color.</li> <li>Conditional logic to display form fields based on sibling field values</li> </ol>"},{"location":"archive/product/specs/forms/#implementation-notes","title":"Implementation notes","text":""},{"location":"archive/product/specs/forms/#form-structure","title":"Form structure","text":""},{"location":"archive/product/specs/forms/#type-definitions","title":"Type definitions:","text":"<pre><code>interface Form {\n  id: number;\n  base_table_oid: number;\n    schema_oid: number; // Readonly - based on base_table_oid\n  name: string;\n  description: string;\n  slug: string;\n  published: boolean;\n  owning_role_oid: number; // The owner of the form\n  // owning_role_oid should be a member of submission_role_oid.\n  // Default value of submission_role_oid is the same as owning_role_oid.\n  submission_role_oid: number;\n  submission_ui: {\n    label: string;\n    message: string;\n    on_submit: SubmissionAction;\n  };\n  elements: FormElement[];\n  created_at: string; // timestamp\n  updated_at: string; // timestamp\n}\n\n// Discriminated union of form elements\ntype FormElement =\n  | TextElement\n  | DividerElement\n  | ScalarColumnElement\n  | ForeignKeyElementWithCreate\n  | ForeignKeyElementWithoutCreate\n  | ReverseForeignKeyElement;\n\ninterface BaseElement {\n  id: string; // An uuid\n  kind: string;\n  styling?: { // Representational, will change during implementation\n    size?: \"header\" | \"subheader\" | \"normal\" | string;\n  }\n}\n\ninterface TextElement extends BaseElement {\n  kind: \"text\";\n  text: string;\n}\n\ninterface DividerElement extends BaseElement {\n  kind: \"divider\";\n}\n\ninterface ColumnElement extends BaseElement {\n  label: string;\n  description: string;\n  placeholder: string;\n  validation: ValidationRules;\n  readonly: boolean;\n}\n\ninterface ScalarColumnElement extends ColumnElement {\n  kind: \"scalar_column\";\n  column_oid: number;\n}\n\ninterface ForeignKeyElement extends ColumnElement {\n  kind: \"foreign_key\";\n  column_oid: number;\n  target_table_oid: number;\n  record_summary_template: RecordSummaryTemplate;\n}\n\n// When allow_create === true, nested_elements is required\ninterface ForeignKeyElementWithCreate extends ForeignKeyElement {\n  allow_create: true;\n  nested_elements: FormElement[];\n}\n\n// When allow_create === false, nested_elements is not allowed\ninterface ForeignKeyElementWithoutCreate extends ForeignKeyElement {\n  allow_create: false;\n}\n\ninterface ReverseForeignKeyElement extends ColumnElement {\n  kind: \"reverse_foreign_key\";\n  linked_table_oid: number;\n  nested_elements: FormElement[]; // Always required\n}\n\ninterface ValidationRules {\n  required: boolean;\n}\n</code></pre>"},{"location":"archive/product/specs/forms/#sample","title":"Sample:","text":"<pre><code>{\n  \"id\": 1, // Form id\n  \"base_table_oid\": 42,\n    \"schema_oid\": 1,\n  \"name\": \"Movie addition form\", // Unique per schema\n  \"description\": \"string\",\n  \"slug\": \"custom-link\", // Used to compose /public/&lt;slug&gt;, unique, default: random uuid\n  \"published\": true, // Toggles public link\n  \"owning_role_oid\": 11020,\n  \"submission_role_oid\": 11023,\n  \"submission_ui\": {\n    \"label\": \"Send\",\n    \"message\": \"thank you!\", // Message to show after submission\n    \"on_submit\": {\n      \"redirect\": 'http://some-random-url',\n      //... set of actions to do\n    }\n  },\n  \"elements\": [\n    {\n      \"id\": \"text_01\",\n      \"kind\": \"text\",\n      \"text\": \"Add a New Movie\",\n      \"styling\": { // Custom stlying options - used only by the frontend\n        \"size\": \"header\"\n      },\n    },\n    {\n      \"id\": \"div_01\",\n      \"kind\": \"divider\"\n    },\n    {\n      \"id\": \"fld_01\",\n      \"kind\": \"scalar_column\",\n      \"column_oid\": 7,\n      \"label\": \"Name\",\n      \"description\": \"\",\n      \"placeholder\": \"some movie name\", // Placeholder for input\n      \"validation\": { // Additional validation on the form apart from DB validation\n        \"required\": true\n      },\n      \"readonly\": false, // Can only be true for columns that have default values\n      \"styling\": {},\n    },\n    {\n      \"id\": \"fld_02\",\n      \"kind\": \"foreign_key\",\n      \"column_oid\": 9,\n      \"target_table_oid\": 57,\n      \"record_summary_template\": [], // User can configure custom record summary for each form\n      // For foreign key rows\n      \"allow_create\": true, // \u201c+\u00a0Add new\u201d button\n      // Only one row can be created newly for foreign_key field kind\n      \"nested_elements\": [ // Present if allow_create is true\n        // ...\n      ],\n      \"label\": \"Director\",\n      \"description\": \"\",\n      \"placeholder\": \"\",\n      \"validation\": { \"required\": true },\n      \"readonly\": false,\n      \"styling\": {},\n    },\n    {\n      \"id\": \"fld_03\",\n      \"kind\": \"reverse_foreign_key\",\n      \"linked_table_oid\": 58,\n      // Always allow creating records for reverse_foreign_key field types\n      // Multiple rows can be created newly for reverse_foreign_key field\n      \"nested_elements\": [\n        {\n          \"id\": \"fld_03_01\",\n          \"kind\": \"scalar_column\",\n          \"column_oid\": 3,\n          \"label\": \"Character\"\n        },\n        // ...\n      ],\n      \"label\": \"Cast Members\",\n      \"description\": \"\",\n      \"validation\": {\n        \"required\": false, // Form can be submitted with `0` rows.\n      },\n      \"styling\": {},\n    }\n  ],\n  \"created_at\": \"2015-10-03T00:00:00.0 AD\",\n  \"updated_at\": \"2015-10-03T00:00:00.0 AD\",\n}\n</code></pre>"},{"location":"archive/product/specs/forms/#json-while-submitting-the-form","title":"JSON while submitting the form:","text":"<pre><code>{\n  \"fld_01\": \"value_01\",\n  \"fld_02\": \"value_02\",\n  \"fld_03\": \"value_03\",\n  \"fld_03_01\": \"value_03_01\",\n  //...\n}\n</code></pre>"},{"location":"archive/product/specs/forms/#django-db-schema","title":"Django DB schema","text":"<ul> <li>A single table named: <code>Forms</code>.     <pre><code>id integer [primary key]\nbase_table_oid oid\nname varchar\ndescription text\nowning_role_oid oid\nsubmission_role_oid oid\nelements jsonb\npublished true\nslug string\nsubmission_ui jsonb\ncreated_at timestamp\nupdated_at timestamp\n</code></pre></li> <li><code>elements</code> are stored as a jsonb array.<ul> <li>Open to consideration: Using tables for <code>elements</code> instead of jsonb.</li> </ul> </li> <li><code>slug</code> is unique.</li> <li><code>name</code> is unique per schema.<ul> <li>It is debatable whether we want schema_oid to be part of the table or validation to be at service layer.</li> </ul> </li> </ul>"},{"location":"archive/product/specs/forms/#db-permissions","title":"DB Permissions","text":"<ul> <li>A form is associated with the role of the Mathesar user that created the form i.e. <code>owning_role_oid</code> is set to the oid of the role used by the user that creates the form.</li> <li>The user can change the role used when the form is submitted by setting the <code>submission_role_oid</code>.</li> <li>By default <code>submission_role_oid</code> is the same as <code>owning_role_oid</code>.</li> <li>The <code>owning_role_oid</code> SHOULD BE A MEMBER OF <code>submission_role_oid</code>. Other roles cannot be set as submission roles.<ul> <li>This restriction is consitent with how PostgreSQL functions.</li> </ul> </li> <li>If <code>owning_role_oid</code> is a superuser, any role can be set for <code>submission_role_oid</code>.</li> <li>A owning role can change the ownership of the form to another role.</li> <li>Important security consideration:<ul> <li>We do not want users creating a form on tables they don\u2019t have INSERT privileges on, then sharing it publicly with an evelated role they don\u2019t have access to, inorder to fill the tables.</li> </ul> </li> <li>Only the user with a role owning a form should be able to edit the form.</li> <li>All other users can view the form and use the public links.</li> </ul>"},{"location":"archive/product/specs/forms/#public-urls-rpc-methods","title":"Public urls &amp; RPC methods","text":"<ul> <li>An unauthenticated route at <code>&lt;mathesar_url&gt;/forms/&lt;form_slug&gt;</code>.</li> <li><code>forms.get</code>:<ul> <li>Required: <code>form_slug</code> or <code>form_id</code>.</li> <li>Returns the form structure object associated with the slug.</li> <li>Returns the table structure, column definitions, constraint defintions of all the tables mentioned in the form &amp; it\u2019s elements (recursively):<ul> <li><code>base_table_oid</code>.</li> <li><code>elements[].target_table_oid</code>.</li> <li><code>elements[].linked_table_oid</code>.</li> </ul> </li> <li>Returns the column definitions of columns part of the record_summary_template within form elements (recursively).</li> </ul> </li> <li><code>forms.submit</code>.<ul> <li>Required: <code>form_id</code>.</li> <li>Required: values for the form as a json.</li> </ul> </li> <li><code>forms.list_record_summaries</code>:<ul> <li>Required: <code>form_id</code>.</li> <li>Required: <code>element_id</code>.<ul> <li><code>target_table_oid oid</code> is identified based on the element id.</li> </ul> </li> <li>Accepts filter defintion.<ul> <li>The filter columns should be a part of <code>record_summary_template</code> associated with <code>element_id</code>.</li> </ul> </li> <li>Returns list of record summaries of fk tables.</li> <li>(This might change significantly based on the final UX)</li> </ul> </li> </ul>"},{"location":"archive/product/specs/forms/#searching-through-record-summaries","title":"Searching through record summaries","text":"<ul> <li>A record summary template looks like this: <code>[[4, 2], \"-\", [1]]</code>.</li> <li>Each array represents a path to a column, and this definition is used to make joins for the record summary. The text elements are static.</li> <li>Each path in a record summary would now have a new field \u2018alias\u2019, which is then used as both the label to display to the user and the key in filtering a list of summaries in the record summary dropdown. (Refer the sample ux above).</li> <li>Eg., <code>[{ path:[4, 2], alias: 'Name' }, \"-\", { path: [1], alias: 'Id' }]</code>.</li> <li>(This might change significantly based on the final UX).</li> <li>(Open to consideration: Use a table view with lookup column as we do right now in the table page).</li> </ul>"},{"location":"archive/product/specs/forms/#creating-the-records","title":"Creating the records","text":"<ul> <li>When the form is submitted, all related records should be created in a single transaction.</li> <li>Order of precedence:<ul> <li>Insert records in tables referenced via foreign keys.<ul> <li>If nested elements are present, treat the related table as the base_table &amp; insert records recursively.</li> </ul> </li> <li>Insert records in base table.</li> <li>Insert records in tables with link to base table.<ul> <li>If nested elements are present, treat the linked table as the base_table &amp; insert records recursively.</li> </ul> </li> </ul> </li> <li>Example sql:   <pre><code>BEGIN;\n\nWITH producer_cte AS (\n  INSERT INTO Producers (name, country)\n  VALUES ('New Producer', 'India')\n  RETURNING id\n),\n\nbase_cte AS (\n  INSERT INTO Movies (name, year, producer_id)\n  VALUES ('Some Movie', 2025, (SELECT id FROM producer_cte))\n  RETURNING id\n)\n\nINSERT INTO Movie_Genre_mapping (movie_id, genre_id)\nSELECT id, genre_id FROM base_cte,\n(\n  VALUES\n    (1),\n    (2)\n) AS child_values(genre_id);\n\nCOMMIT;\n</code></pre></li> </ul>"},{"location":"archive/product/specs/permissions-revamp/","title":"Permissions - Revamp","text":"<p>This spec describes the revamped product considerations for managing Permissions within Mathesar. This is targetted towards the Beta release.</p>"},{"location":"archive/product/specs/permissions-revamp/#goals","title":"Goals","text":"<ol> <li>Improve our permissions architecture and user flows to utilize PostgreSQL\u2019s permission system for DB objects.<ol> <li>Our current permission handling is custom written and managed entirely within the Mathesar service layer.</li> <li>Several users have expressed interest towards using PostgreSQL roles, a few even mentioned that it\u2019s a blocker for them to start using Mathesar.</li> <li>Building our permission layer on top of PostgreSQL\u2019s permission system is future-proof and robust.</li> </ol> </li> <li>We should maintain feature parity with the flows we currently have.</li> </ol>"},{"location":"archive/product/specs/permissions-revamp/#terminologies","title":"Terminologies","text":"<ul> <li>User refers to Mathesar user.</li> <li>Admin refers to Mathesar admin.</li> <li>Role refers to PostgreSQL role/user.</li> <li>Group refers to any PostgreSQL role that is inherited by another role.</li> </ul>"},{"location":"archive/product/specs/permissions-revamp/#adding-a-database","title":"Adding a database","text":"<ul> <li>Only Mathesar admins can add new databases.</li> <li>When adding a database:<ul> <li>Mathesar admin will provide:<ul> <li>database server host</li> <li>database server port</li> <li>database name</li> <li>a db login role username</li> <li>a db login role password</li> </ul> </li> </ul> </li> </ul>"},{"location":"archive/product/specs/permissions-revamp/#granting-mathesar-users-collaboration-access-to-a-database","title":"Granting Mathesar users collaboration access to a database","text":"<ul> <li>Only Mathesar admins can grant Mathesar users collaboration access to databases.</li> <li>Inorder to do add a Mathesar user as a collaborator to a database:<ul> <li>Mathesar admins would have to specify a Login DB role for the Mathesar user to connect to the database.</li> <li>The Login DB roles will be automatically reflected. The admin can choose one of them.<ul> <li>(Refer Role management section for more details).</li> </ul> </li> </ul> </li> <li>Admins can change their own login role.</li> <li>Only admins can change the login roles of other Mathesar users.</li> <li>Only admins can remove Mathesar users from a database.</li> <li>Initially, only the admin who connected to the database will have access to it.<ul> <li>They will automatically be assigned the login role that was used to connect to the database.</li> </ul> </li> <li>Any Mathesar admin can add themselves as a collaborator to any database configured in Mathesar.</li> </ul>"},{"location":"archive/product/specs/permissions-revamp/#role-management","title":"Role management","text":"<ul> <li>Mathesar will reflect all roles in a database server.</li> <li>Inorder to configure a Login DB role in Mathesar:<ul> <li>For a pre-existing login role,<ul> <li>the admin would have to enter the password for the Login DB role and configure it in Mathesar.</li> </ul> </li> <li>To create a new login role,<ul> <li>the role used by the admin will need to have CREATEROLE privilege.</li> <li>the admin would have to specify a username and a password.</li> <li>this role will automatically get a CONNECT and CREATE privilege on the database.</li> </ul> </li> </ul> </li> <li>Admins can remove the configured login roles.<ul> <li>This will simply remove the stored password in the internal database.</li> <li>The role will still be displayed but Mathesar cannot connect using the role since it would not have the password.</li> </ul> </li> <li>Admins can drop login roles configured in Mathesar.<ul> <li>If the admin\u2019s role has CREATEROLE privilege and ADMIN OPTION over a role (Refer PG docs), the admin will have an UI option to drop the role in the underlying DB.</li> <li>Before deleting a role, the objects owned by the role need to be transferred to another role/group.</li> </ul> </li> </ul>"},{"location":"archive/product/specs/permissions-revamp/#group-roles","title":"Group roles","text":"<ul> <li>Any Mathesar user having a role that has CREATEROLE privilege can create new non-login roles (i.e. a group roles) via the Mathesar UI. (Refer PG docs).</li> <li>The user\u2019s role that created a group role will be able to grant membership to it for other users\u2019 roles.<ul> <li>This role would have ADMIN OPTION on the group role. We\u2019ll refer to it as admin access on the UI.</li> </ul> </li> <li>When granting membership, the user that created the group can choose if other roles should have admin access or normal membership on the group role.</li> <li>If a role has admin access over a group, the users with that role can:<ul> <li>grant/revoke memberships for other roles</li> <li>delete the group<ul> <li>Before deleting a group, the objects owned by the group need to be transferred to another role/group.</li> </ul> </li> <li>rename the group</li> </ul> </li> <li>Normal members will only be able to use the group role for sharing ownerships. They will not be able to manipulate the group itself.</li> <li>For pre-existing roles on the database:<ul> <li>Admin access can be determined for existing group roles on the database by checking if the user\u2019s role has ADMIN OPTION on it (Refer PG docs).</li> <li>Membership can be determined by checking if the user\u2019s role has SET ROLE, or INHERIT privileges.</li> </ul> </li> </ul>"},{"location":"archive/product/specs/permissions-revamp/#ownership-of-db-objects","title":"Ownership of DB objects","text":"<ul> <li>When creating a new DB object, the user will have an option to choose the owner. They will not be able to create new roles here. They can set the owner to:<ul> <li>their own login role (this is the default selection)</li> <li>one of the group roles they are a member of</li> </ul> </li> <li>The owner of an object can transfer the ownership to any login or group role configured in Mathesar.</li> </ul>"},{"location":"archive/product/specs/permissions-revamp/#ownership-of-container-objects","title":"Ownership of container objects","text":"<ul> <li>Owning a container object such as a schema does not guarantee owning objects within it. We will make this behaviour clear to the user using appropriate documenation in the UI and our docs. </li> <li>We will support recursive reassignment of ownership of contained objects for which the user\u2019s role has ownership of. This will be an optional checkbox.<ul> <li>For eg., while transfering ownership,<ul> <li>for schemas, we will display a list of tables within it whose ownership belong to the user\u2019s role (or any of their group roles).</li> <li>the user can choose to transfer ownership for the schema along with this subset of tables within it.</li> </ul> </li> </ul> </li> </ul>"},{"location":"archive/product/specs/permissions-revamp/#providing-access-to-db-objects","title":"Providing access to DB objects","text":"<ul> <li>The owner can provide access to DB objects to other roles in the following ways. We will present a dropdown in the case of schemas &amp; tables.<ul> <li>Database<ul> <li>Connect to database (CONNECT)</li> <li>Create schemas in database (CREATE)</li> <li>No access</li> </ul> </li> <li>Schema<ul> <li>Use schema (USAGE)</li> <li>Create tables within schema (USAGE &amp; CREATE)</li> <li>No access</li> </ul> </li> <li>Table<ul> <li>View table (SELECT)</li> <li>Edit table rows (SELECT, INSERT, UPDATE, DELETE)</li> <li>Custom (the user can select granular privileges)</li> <li>No access</li> </ul> </li> </ul> </li> <li>We will not allow any user other than the owner to manage permissions, for the beta release.<ul> <li>This includes users who have WITH GRANT over some of the privileges.</li> </ul> </li> </ul>"},{"location":"archive/product/specs/permissions-revamp/#explorations-table-metadata","title":"Explorations &amp; Table Metadata","text":"<p>All Mathesar users will have full control over explorations &amp; table metadata in the databases they have access to.</p>"},{"location":"archive/product/specs/publicly-shareable-links/","title":"Publicly shareable links","text":"<p>This spec describes the working principle of the initial versions of Publicly shareable links and ability to embed tables &amp; explorations in other sites.</p>"},{"location":"archive/product/specs/publicly-shareable-links/#goals","title":"Goals","text":"<ul> <li>Users should be able to publicly share tables &amp; explorations as url links.</li> <li>Users should be able to embed tables and explorations in other sites.</li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#what-this-feature-is-and-what-its-not","title":"What this feature is, and what its not","text":"<ul> <li>This feature is related to publishing an existing table or exploration (and in the future, forms &amp; queries) via public urls, which can be accessed by anybody with the link.</li> <li>This feature is not related to access control between users in a Mathesar instance.</li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#scope-for-the-initial-version","title":"Scope for the initial version","text":"<ul> <li>The links will be generated only for tables and explorations.</li> <li>The links would display a read-only version of tables and explorations, i.e. only \u2018viewer\u2019 access.</li> <li>The links will not contain applied filters, groups, and sorting. If users want them, they can create explorations with the filters applied and then share them.</li> <li>The menu bar with options to filter, group, sort will be present.</li> <li>Inspector will not be visible in shared tables &amp; explorations.</li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#assumptions","title":"Assumptions","text":"<ul> <li>Only users with manager access would want to share tables &amp; explorations publicly.</li> <li>Embedding is assumed to take less work as the idea is only to provide code for an iframe with the public link. It may be removed from the initial verison as part of scope reduction if the work takes longer than anticipated.</li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#terminologies","title":"Terminologies","text":"<ul> <li>The names and terminologies used here are for the purposes of the spec only. It will differ during implementation.</li> <li>For implementation, we intend to name the feature \u2018Shares\u2019.</li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#suggested-ux-flow","title":"Suggested UX flow","text":""},{"location":"archive/product/specs/publicly-shareable-links/#user-creating-the-link","title":"User creating the link","text":""},{"location":"archive/product/specs/publicly-shareable-links/#sharing-a-tableexploration","title":"Sharing a table/exploration:","text":"<ul> <li>User opens table/query.</li> <li>Notices a button saying \u2018Share\u2019 in the table menu bar.</li> <li>This button is also present in the inspector.</li> <li>Upon clicking, the \u2018Sharing control modal\u2019 opens. Read further down for it\u2019s UX.</li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#when-a-tableexploration-is-already-shared","title":"When a table/exploration is already shared:","text":"<ul> <li>User opens table/exploration.</li> <li>The button saying \u2018Share\u2019 in the menu bar &amp; inspector have a different indication.<ul> <li>This could be a different background or an icon.</li> </ul> </li> <li>This indication would denote that the table/exploration is already publicly shared.</li> <li>Upon clicking, the \u2018Sharing control modal\u2019 opens. Read further down for it\u2019s UX.</li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#sharing-control-modal","title":"Sharing control modal:","text":"<ul> <li>Modal shows information on whether the table is already shared or not.</li> <li>If shared, it shows the public link.<ul> <li>Users can copy the link.</li> <li>Users can clear it.</li> <li>Users can regenerate the link.</li> <li>Users can see code to embed the table/exploration.</li> <li>Users can click on a hyperlink which opens the public link in a separate tab, so that they can preview it.</li> </ul> </li> <li>If not shared, users can generate a new link.</li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#user-viewing-shared-link","title":"User viewing shared link","text":"<ul> <li>When users access the public url, they view the table/exploration in a dedicated page for it.</li> <li>This page will not contain breadcrumbs and profile controls.</li> <li>This page will contain the app header and the name of the table/exploration.</li> <li>It will contain a readonly view of the table/exploration, similar to how a \u2018viewer\u2019 would view it.</li> <li>It will not contain the table/exploration inspector for the initial version.</li> <li>Tables will contain the menu bar with options to filter, sort, and group.</li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#accessibility","title":"Accessibility","text":"<ul> <li>For the initial version, we will not support smaller screens.</li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#high-level-backend-implementation-approach","title":"High-level Backend implementation approach","text":"<p>Refer relevant discussions in mail thread.</p>"},{"location":"archive/product/specs/publicly-shareable-links/#endpoints-db-schema","title":"Endpoints &amp; DB schema:","text":"<p>Refer to Appendix #1 for approaches &amp; discussions on selection of Django model structure. Refer to Appendix #2 for approaches &amp; discussions on selection of API endpoint structure.</p> <ul> <li>Django models<ul> <li>One abstract model containing common fields</li> </ul> </li> <li>Each entity will have a model inheriting from the abstract model</li> <li>DB schema     </li> <li>API endpoints:<ul> <li>The <code>shares</code> endpoints will be placed within each entity. For tables, it would be:</li> <li>CREATE: <code>POST /tables/&lt;table_id&gt;/shares/</code></li> <li>LIST: <code>GET /tables/&lt;table_id&gt;/shares/</code></li> <li>PARTIAL UPDATE: <code>PATCH /tables/&lt;table_id&gt;/shares/&lt;link_id&gt;/</code></li> <li>REGENERATE SLUG: <code>POST /tables/&lt;table_id&gt;/shares/&lt;link_id&gt;/regenerate/</code></li> </ul> </li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#authentication-and-authorization-for-existing-entity-api-endpoints","title":"Authentication and Authorization for existing entity API endpoints:","text":"<ul> <li>Bypassing authentication for APIs needed by frontend:</li> <li>For publicly shared content, we should be able to bypass login for the GET requests required to display the table/query in the UI. This includes GET endpoints in tables, queries, columns, records etc.,</li> <li>The frontend will set an additional request header <code>public_link_slug</code> when attempting to access entity endpoints (eg., /tables, /queries etc.,) via a publicly shared url. The value of this request header will be the same as the slug of the public link.<ul> <li>Eg., <code>public_link_slug</code>: <code>f2eea1b0-591f-4414-89ae-87d1688bf1d6</code> </li> </ul> </li> <li>This can be done by adding custom permission classes to these specific endpoints, which override the default <code>rest_framework.permissions.IsAuthenticated</code> class, and changes the condition to:<ul> <li>If isAuthenticated, provide access.</li> <li>If not authenticated, Check if the request contains the <code>public_link_slug</code> header. If no, reject request.</li> <li>If <code>public_link_slug</code> header is present, Check if the relevant links table contains the slug. If no, reject request.<ul> <li>If the relevant table contains the slug, identify the entity the slug relates to. Check if the requested object (column, record, table etc.,) is either the same entity or a sub-entity of it. Eg., If a column is requested and the slug is linked to a table, check if the column is part of the table. If no, reject request.</li> <li>If yes, allow request.</li> </ul> </li> </ul> </li> <li>Bypassing authorization for APIs needed by frontend:</li> <li>The custom auth mentioned above would only be applied to GET methods of selected endpoints for actions like list, retrieve. Essentially, everything a viewer would have access to.</li> <li>Since the user is autonomous, we do not have to specify a custom <code>scope_queryset</code> since the access to the requested resource is public.</li> <li>If the user is already logged in, we do not have to do any of this and let the existing logic take over.</li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#high-level-frontend-implementation-approach","title":"High-level Frontend implementation approach","text":"<ul> <li>Sending an additional request header:</li> <li>A request header <code>public_link_slug</code> will be sent will all API requests when the current parent route is <code>/public/</code>. The value of this header would be the same as the slug.</li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#appendix","title":"Appendix","text":""},{"location":"archive/product/specs/publicly-shareable-links/#1-approaches-discussions-on-django-model-and-db-schema","title":"1. Approaches &amp; discussions on Django model and DB schema","text":""},{"location":"archive/product/specs/publicly-shareable-links/#requirements","title":"Requirements:","text":"<ul> <li>(1) When a table, query, or in future forms, charts etc., get deleted, the corresponding links should get deleted.</li> <li>(2) A link should contain metadata which is common to all kinds of links. Eg., password, access_levels etc.,</li> <li>(3) We might require entity specific metadata for links. For eg., Option to \u2018Download as csv\u2019 could be a table specific link metadata, or \u2018Download image\u2019 could be a chart specific link metadata.</li> <li>(4) We might require multiple links for the same entity. A table could have one link with access level as viewer, and another password protected one for access level editor.</li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#conditions","title":"Conditions:","text":"<ul> <li>(5) Links are not top level entities i.e. We cannot have a \u2018public_links\u2019 database table and have mapping tables to individual entites. This is due to (1).<ul> <li>When a table is deleted, there should not be an orphan link which we have to clean up with triggers.</li> </ul> </li> <li>(6) It\u2019s best not to rely on triggers and utilize FKs.</li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#things-to-consider-while-choosing-approach","title":"Things to consider while choosing approach:","text":"<ul> <li>DB schema</li> <li>API request/response structure</li> <li>Complexity of backend implementation</li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#approaches-that-are-not-feasible","title":"Approaches that are not feasible:","text":"<ul> <li>The \u201centity_type and entity_id polymorphic joins\u201d approach.<ul> <li>Does not satisfy (6)</li> </ul> </li> <li>The \u201creverse-belongs to\u201d approach where a table (or any entity) contains the link as part of it\u2019s model. <ul> <li>Requires dedicated mapping tables to implement (4)</li> <li>Duplications needed for (2)</li> </ul> </li> <li>The \u201cpolymorphic django model libraries\u201d approaches (Django polymorphic, Django model-utils Inheritance Manager, Django concrete inheritance).<ul> <li>Does not satisfy (1) and (5)</li> </ul> </li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#approaches-considered","title":"Approaches considered:","text":"<p>Both the following approaches satisfy all points above.</p>"},{"location":"archive/product/specs/publicly-shareable-links/#sparse-table-exclusive-belongs-to-approach","title":"\u2018Sparse table exclusive belongs-to\u2019 approach.","text":"<ul> <li>DB schema:     </li> <li>DB schema when we implement (4):     </li> <li>Requires a check condition on the table to ensure that there\u2019s exactly 1 of the entities for each link.</li> <li>Pros:<ul> <li>API requests and responses would be under a single endpoint <code>/public_links/</code>.</li> <li>Public links can be generated as <code>/public/&lt;url_slug&gt;</code>, without having to specify the type of entity in the url.</li> </ul> </li> <li>Cons:<ul> <li>Simple for the initial version, but complexity increases when we have entity specific metadata.</li> <li>A multi-column FK would be needed in the metadata tables to ensure that the entity ids are not null.</li> <li>Queries would be fast but would require making joins to multiple metadata tables.</li> <li>Django models would get complicated.</li> <li>POST and GET API requests to <code>/public_links</code> would have to include entity specify metadata:<ul> <li>Additional code would be required to update the metadata tables.</li> <li>Custom serializers might be required to parse the requests.</li> </ul> </li> <li>We could attempt to simplify this portion using the Django polymorphic libraries, but it introduces the complexity of adding and utilizing another library.</li> </ul> </li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#one-dedicated-table-per-entity-approach","title":"\u2018One dedicated table per entity\u2019 approach","text":"<ul> <li>DB schema     </li> <li>Pros:<ul> <li>Models are simple.</li> <li>Can be implemented using abstract models, and Django simplifies all implementation logic. </li> <li>API requests &amp; responses don\u2019t require custom handling.</li> <li>Queries would be fast.</li> <li>Each entity\u2019s custom metadata would be part of it\u2019s own table.</li> </ul> </li> <li>Cons:<ul> <li>Multiple tables with similar duplicated columns would be required for a feature which is essentially common to all the entities.</li> <li>API requests &amp; responses require multiple endpoints, one for each entity.</li> <li>Tables would be under <code>/public_links/tables/</code></li> <li>Queries would be under <code>/public_links/queries</code>.</li> <li>Public links would need to contain the type of entity.</li> <li>Tables would be shared with link <code>/public/tables/&lt;url_slug&gt;</code>.</li> <li>Queries: <code>/public/queries/&lt;url_slug&gt;</code>.</li> </ul> </li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#recommendation","title":"Recommendation","text":"<ul> <li>Implementation and maintenance wise, the \u2018One dedicated table per entity\u2019 is the simplest, and considering that we might definitely have entity specific metadata, I\u2019m recommending it.</li> <li>I don\u2019t see an issue with having the entity in the url (eg., <code>/public/queries/&lt;url_slug&gt;</code>).</li> <li>Anything we might want to do with links would require us to do it in all the tables, but Django simplifies that for us, so I don\u2019t see complexity there.</li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#result","title":"Result","text":"<ul> <li>It was discussed and concluded via mail that we\u2019ll go ahead with the \u2018One dedicated table per entity\u2019 approach.</li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#2-approaches-on-api-endpoints","title":"2. Approaches on API endpoints","text":""},{"location":"archive/product/specs/publicly-shareable-links/#option-1","title":"Option 1:","text":"<p>CREATE: <code>POST /shares/table-link/</code>. Table id will be part of request body. LIST: <code>GET /shares/table-link/</code> LIST &amp; FILTER BY ENTITY: <code>GET /shares/table-link/?table=&lt;table_id&gt;</code> LIST &amp; FILTER BY SLUG: <code>GET /shares/table-link/?slug=&lt;slug&gt;</code> PARTIAL UPDATE: <code>PATCH /shares/table-link/&lt;link_id&gt;/</code>. Table id should not be allowed to be updated. REGENERATE SLUG: <code>POST /shares/table-link/&lt;link_id&gt;/regenerate/</code></p> <p>Pros:</p> <ul> <li>Shared url need not contain entity id: <code>http://localhost:8000/shared/tables/&lt;slug&gt;/</code></li> <li>Code related to shared links can be within a single place</li> <li>Generic viewsets and serializers can be written reducing possible duplication</li> </ul> <p>Cons:</p> <ul> <li>Entity id needs to specified as part of request body.<ul> <li>Additional logic would be required to disallow update of entity id.</li> <li>Additional logic required to filter by entity id.</li> </ul> </li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#option-2","title":"Option 2","text":"<p>Endpoints for shares would be placed within each entity. For table, it would be:</p> <p>CREATE: <code>POST /tables/&lt;table_id&gt;/shares/</code> LIST: <code>GET /tables/&lt;table_id&gt;/shares/</code> LIST &amp; FILTER BY ENTITY: <code>GET /tables/&lt;table_id&gt;/shares/</code> (This is the same as list) LIST &amp; FILTER BY SLUG: <code>GET /tables/&lt;table_id&gt;/shares/?slug=&lt;slug&gt;</code> (Not required by frontend, since shared url already has <code>table_id</code>) PARTIAL UPDATE: <code>PATCH /tables/&lt;table_id&gt;/shares/&lt;link_id&gt;/</code> REGENERATE SLUG: <code>POST /tables/&lt;table_id&gt;/shares/&lt;link_id&gt;/regenerate/</code></p> <p>Pros:</p> <ul> <li>Placed within hierarchy of respective entities</li> <li>Entity id is a path param:<ul> <li>Entity need not be specified in the request body additionally</li> <li>No additional filtering needed by entity</li> <li>Update requests should not modify entity, and since entity is part of url path, no additional logic is needed for it</li> </ul> </li> <li>Option to filter by slug is not required</li> </ul> <p>Cons:</p> <ul> <li>Shared url needs to contain entity id: <code>http://localhost:8000/shared/tables/&lt;table_id&gt;/?token={$slug}</code></li> <li>Some code duplication might be needed</li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#result_1","title":"Result:","text":"<ul> <li>Pavish and Kriti discussed via private chat and decided to go with Option 2.</li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#3-scheduled-for-later-iterations","title":"3. Scheduled for later iterations","text":"<ul> <li>Shared views with persisted filters, grouping etc.,</li> <li>Option to restrict link access by password</li> <li>Sharing record page &amp; forms</li> <li>Option to share as editor</li> <li>Option to show table/exploration inspector</li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#4-competitive-research","title":"4. Competitive research","text":""},{"location":"archive/product/specs/publicly-shareable-links/#airtable","title":"Airtable","text":"<ul> <li>Option to generate link &amp; embedding view is present in menu bar.</li> <li>Shared views are read-only.</li> <li>Option to share entire bases.</li> <li>Links:</li> <li>Once link is generated, there are options to clear it, generate new link.</li> <li>Options to restrict/allow users to copy data from view. Options to restrict/show all fields, including ones created in future.</li> <li>Option to restict by password or by email domain (needs higher plan).</li> <li>Embed:</li> <li>Provides code to embed iframe.</li> <li>Shows desktop and mobile preview.</li> <li>Option to show/hide controls bar.</li> <li>Filters, groups, and sorting added to a table is applied to the shared output view.</li> <li>This is possible because this configuration is always persisted.</li> <li>Option to share form for cases where adding data is required.</li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#nocodb","title":"NocoDB","text":"<ul> <li>Link is automatically generated for all tables.</li> <li>Option to restrict access via a password.</li> <li>Option to restrict/allow download.</li> <li>Filters, hidden columns, sorting etc., are automatically applied to shared link.</li> <li>This is possible because this configuration is always persisted.</li> <li>Shared content is read-only.</li> </ul>"},{"location":"archive/product/specs/publicly-shareable-links/#google-sheets","title":"Google sheets","text":"<ul> <li>Option to share content as viewer, commenter, and editor.</li> <li>Option to publish a public url which does not require users to login to view the content.</li> </ul>"},{"location":"archive/product/specs/undo-quick-save-functionality/","title":"Quick Save Functionality","text":""},{"location":"archive/product/specs/undo-quick-save-functionality/#objective","title":"Objective","text":"<p>Implement a quick save functionality to protect users from unintended actions and allow them to recover their work to a specific point in time.</p>"},{"location":"archive/product/specs/undo-quick-save-functionality/#functionality-scope","title":"Functionality Scope","text":"<p>The functionality scope for the quick save button covers saving changes for tables and explorations. This includes creating, deleting, renaming, and updating columns, records, properties, filters, sorting, and groupings in tables, as well as adding columns, changing transformation steps, and updating column and exploration properties in explorations.</p>"},{"location":"archive/product/specs/undo-quick-save-functionality/#features","title":"Features","text":""},{"location":"archive/product/specs/undo-quick-save-functionality/#quick-save-functionality_1","title":"Quick Save Functionality","text":"<ul> <li>Users can create a save point to store the current state of their work.</li> <li>Save points should be timestamped.</li> <li>Users can recover their work from a save point, reverting to the saved state.</li> </ul>"},{"location":"archive/product/specs/undo-quick-save-functionality/#visibility-and-user-experience","title":"Visibility and User Experience","text":"<ul> <li>The quick save status should be visible to users, possibly by displaying a timestamp or a notification.</li> <li>The system should provide clear feedback to users when they save their work.</li> </ul>"},{"location":"archive/product/specs/undo-quick-save-functionality/#user-interface-design","title":"User Interface Design","text":"<p>To accommodate the new quick save functionality, the user interface should be updated to ensure that the new feature is easily accessible and communicated to the user.</p> <p>This includes:</p> <ul> <li>Controls for the quick save functionality</li> <li>Notifications for the quick save functionality</li> <li>Error handling for the quick save functionality</li> </ul>"},{"location":"archive/product/specs/undo-quick-save-functionality/#quick-save-button","title":"Quick Save Button","text":"<ul> <li>A dedicated button should be added to initiate a quick save. This button should be placed in an easily accessible location, such as the toolbar or menu, within both table and exploration views.</li> </ul>"},{"location":"archive/product/specs/users-permissions/","title":"Users &amp; Permissions","text":"<p>This spec describes how the initial version of users &amp; permissions will work in Mathesar.</p>"},{"location":"archive/product/specs/users-permissions/#feature-goals","title":"Feature Goals","text":"<ul> <li>Facilitate user collaboration by giving multiple users access to the data in Mathesar</li> <li>Allow Mathesar administrators to follow the security best practice of the principle of least privilege </li> <li>Allow Mathesar administrators to set up user accounts, view or change current users and their privileges, and delete users.</li> <li>Allow users to customize their Mathesar experience, including:<ul> <li>Display settings such as table inspector show/hide, etc.</li> <li>Private Explorations.</li> </ul> </li> </ul>"},{"location":"archive/product/specs/users-permissions/#bonus-goals","title":"Bonus Goals","text":"<p>We may not get to implementing these in 2022.</p> <ul> <li>Allow users to be represented in Mathesar data and workflows through a User data type</li> <li>Allow restricting access to subsets of tables, schemas, or explorations based on user attributes</li> </ul>"},{"location":"archive/product/specs/users-permissions/#library-use-case","title":"Library Use Case","text":"<p>To make these goals more concrete, here\u2019s how these features could be used in the library use case we\u2019ve been working on for Cycles 2 and 3.</p> <ul> <li>Enable the IT administrator to set up Mathesar, invite new users, set up new schemas, etc.</li> <li>Enable the library manager to administer the Library management schema, including changing the structure of tables.</li> <li>Enable the library staff to input data and add/remove/modify explorations, but not change the underlying structure of data.</li> <li>If our bonus goals are met:<ul> <li>Enable the library patrons to view select explorations (e.g. books available for checkout)</li> <li>Allow library staff to associate library patrons with their Mathesar accounts in the Patrons table</li> <li>Allow library patrons to log in and see only their own checkouts with the associated due dates.</li> </ul> </li> </ul>"},{"location":"archive/product/specs/users-permissions/#scope-assumptions","title":"Scope &amp; Assumptions","text":"<p>This is meant to be a very basic framework for users &amp; permissions that we can implement in 2022 in Cycles 4 and 5. </p> <p>We\u2019re making the following assumptions for this spec to reduce implementation complexity. These should not be treated as permanent assumptions for the product.</p>"},{"location":"archive/product/specs/users-permissions/#users-will-be-mathesar-specific","title":"Users will be Mathesar-specific.","text":"<p>This means:</p> <ul> <li>Users created using the Mathesar UI will not be able to log in to the PostgreSQL DB using the same credentials. </li> <li>Existing Postgres DB users will not be able to log in to Mathesar using their credentials.</li> </ul> <p>Although it would be ideal to reflect Postgres users in Mathesar and vice-versa, this involves either figuring out how to store people\u2019s DB credentials securely or have them log in every time they open the application. Neither seems ideal.</p>"},{"location":"archive/product/specs/users-permissions/#user-passwords-cannot-be-reset-via-email","title":"User passwords cannot be reset via email","text":"<p>To do this, we\u2019ll need to implement email infrastructure into Mathesar.  While we need to figure this out at some point, I don\u2019t think it\u2019s worth doing it now just so that users can reset passwords.</p> <p>Users should be able to reset their passwords from the UI. Administrators can reset anyone\u2019s password. We should follow security best practices so that the admin does not ever see the user\u2019s permanent password.</p>"},{"location":"archive/product/specs/users-permissions/#privileges-will-be-mathesar-specific","title":"Privileges will be Mathesar-specific","text":"<p>Although it would be ideal to support the full range of Postgres privileges (e.g. users can give <code>TRUNCATE</code> privileges on a table to someone else), this will involve a lot of implementation and design work to get right. It\u2019s probably not useful for the vast majority of use cases.</p> <p>Instead, we will have more \u201cuser friendly\u201d privileges that combine permissions for both Postgres and Mathesar-specific objects.</p>"},{"location":"archive/product/specs/users-permissions/#only-local-username-and-passwords-are-supported","title":"Only local username and passwords are supported","text":"<p>We won\u2019t support social log in or SSO protocols at this time. As with the rest of this list, we may want to do so in the future.</p>"},{"location":"archive/product/specs/users-permissions/#sub-features-needed","title":"Sub-Features Needed","text":"<p>This is a list of features needed for the product in order to complete the \u201cUsers &amp; Permissions\u201d feature.</p>"},{"location":"archive/product/specs/users-permissions/#mathesar-installation","title":"Mathesar installation","text":"<p>When Mathesar is first installed, we\u2019ll create a default \u201cAdministrator\u201d user. This user cannot be deleted, although the username and password can be changed if needed.</p>"},{"location":"archive/product/specs/users-permissions/#user-management-page","title":"User management page","text":"<p>Mathesar administrators should be able to navigate to a user management page and take the following actions:</p> <ul> <li>Add a user</li> <li>Delete a user</li> <li>Edit user details</li> <li>Reset the user\u2019s password</li> <li>See the user\u2019s permissions</li> <li>Add / remove user permissions</li> </ul> <p>Wireframes are for illlustrative purposes, they are not meant to reflect final design. </p>"},{"location":"archive/product/specs/users-permissions/#log-in-and-log-out","title":"Log in and Log out","text":"<p>Users should be able to log in and log out of Mathesar using their username and password. </p>"},{"location":"archive/product/specs/users-permissions/#user-profile-page","title":"User Profile Page","text":"<p>Individual users should be able to edit their own information. This is also going to be where they edit their settings for using Mathesar, once we have some.</p>"},{"location":"archive/product/specs/users-permissions/#schema-sharing","title":"Schema sharing","text":"<p>There should be a way for users to share individual schemas with others.</p>"},{"location":"archive/product/specs/users-permissions/#table-page-changes","title":"Table Page changes","text":"<p>We need different UI for tables based on whether the user is a Viewer, Editor, or Manager.</p>"},{"location":"archive/product/specs/users-permissions/#schema-page-changes","title":"Schema Page changes","text":"<p>We need different UI for this page based on whether the user is a Viewer, Editor, or Manager.</p>"},{"location":"archive/product/specs/users-permissions/#database-page-changes","title":"Database Page changes","text":"<p>We need different UI for this page based on whether the user is a Viewer, Editor, or Manager.</p>"},{"location":"archive/product/specs/users-permissions/#exploration-page-changes","title":"Exploration Page changes","text":"<p>We need different UI for this page based on whether the user is a Viewer, Editor, or Manager.</p>"},{"location":"archive/product/specs/users-permissions/#navigation-changes","title":"Navigation changes","text":"<p>We need different navigation options based on the objects the user has permissions for.</p>"},{"location":"archive/product/specs/users-permissions/#user-data-to-save","title":"User data to save","text":"<p>We should have a place to save the following kinds of data per user:</p> <ul> <li>Table inspector show/hide settings</li> <li>Last access time per-table</li> <li>Last access time per-exploration</li> <li>Last access time per-schema</li> <li>Favorite tables</li> <li>Favorite schemas</li> <li>Favorite explorations</li> </ul> <p>The frontend should save this stuff and respect table inspector show/hide settings. This will not be exposed to the user via any UI, it\u2019s just saved automatically.</p> <p>Last access / favorite will be used on the schema and database homepages, but those designs are out of scope for this spec.</p>"},{"location":"archive/product/specs/users-permissions/#api-permissions","title":"API permissions","text":"<p>We also need to implement permissions on the API that match user permissions. </p>"},{"location":"archive/product/specs/users-permissions/#bonus-goals-table-exploration-sharing","title":"Bonus Goals: Table &amp; Exploration sharing","text":"<p>There should be a way for users to share individual tables and explorations with others. </p>"},{"location":"archive/product/specs/users-permissions/#bonus-goals-user-data-type-row-level-permissions","title":"Bonus goals: User data type &amp; row level permissions","text":"<p>Here\u2019s some ideation on this feature. Further details will be specified if we have time to implement them. </p>"},{"location":"archive/product/specs/users-permissions/#implementation-details","title":"Implementation Details","text":"<p>High-level notes on how we should implement these features.</p>"},{"location":"archive/product/specs/users-permissions/#users-in-the-service-layer","title":"Users in the service layer","text":"<p>Users should be Django <code>User</code> objects with the following attributes:</p> <ul> <li>Username (required)</li> <li>Password (required)</li> <li>Full name (required)</li> <li>Short name (optional)</li> <li>Email (optional)</li> </ul>"},{"location":"archive/product/specs/users-permissions/#users-in-the-database-layer","title":"Users in the database layer","text":"<p>From a security PoV, it would be ideal if we could create a Postgres role for every user and use that role to access the DB when the user is logged in. That way, we can\u2019t even see or use objects the user doesn\u2019t have access to.</p> <p>We will not do this for the initial version of this feature, but this remains our long term plan.</p>"},{"location":"archive/product/specs/users-permissions/#permissions-basic","title":"Permissions: Basic","text":"<p>We will have the following layers of permissions. The implementer needs to figure out how to map these to Postgres privileges.</p>"},{"location":"archive/product/specs/users-permissions/#user","title":"User","text":"<p>All users can:</p> <ul> <li>Edit their own user\u2019s attributes, including reset their own password</li> <li>Create private explorations based on data they have access to.</li> </ul>"},{"location":"archive/product/specs/users-permissions/#administrator","title":"Administrator","text":"<p>A superuser. They have every permission related to the Mathesar installation listed below.</p> <p>For now, only the default admin user can have this permission. New users cannot be created with this permission. </p>"},{"location":"archive/product/specs/users-permissions/#database-permissions","title":"Database permissions","text":"<p>These permissions apply to a single database. | Permission | Database Manager | Database Editor | Database Viewer | |\u2014|\u2014|\u2014|\u2014| | Add new Mathesar users | x | - | - | | Add and remove schemas | x | - | - | | Permissions on all contained schemas | Manager, Editor, Viewer | Editor, Viewer | Viewer |</p>"},{"location":"archive/product/specs/users-permissions/#schema-permissions","title":"Schema permissions","text":"<p>These permissions apply to a single schema. | Permission | Schema Manager | Schema Editor | Schema Viewer | |\u2014|\u2014|\u2014|\u2014| | Share schema with other users | x | - | - | | Add and remove tables | x | - | - | | Add and remove shared explorations | x | x | - | | Permissions on all contained tables and explorations  | Manager, Editor, Viewer  | Editor, Viewer | Viewer |</p>"},{"location":"archive/product/specs/users-permissions/#public-schema","title":"Public schema","text":"<p>All users should have Manager access to the <code>public</code> schema by default (to align with Postgres conventions). We should make that clear in the design when we implement these features.</p>"},{"location":"archive/product/specs/users-permissions/#permissions-bonus","title":"Permissions: Bonus","text":"<p>These permissions are planned to be implemented at some point, but are not required for the initial version of this feature.</p>"},{"location":"archive/product/specs/users-permissions/#table-permissions","title":"Table permissions","text":"<p>These permissions apply to a single table. | Permission | Table Manager | Table Editor | Table Viewer | |\u2014|\u2014|\u2014|\u2014| | Share table with other users | x | - | - | | Modify structure of table (DDL operations) | x | - | - | | Modify widgets on record page | x | - | - | | Edit data within table | x | x | - | | Edit data within record page | x | x | - | | View table | x | x | x | | View record page | x | x | x | | Apply filter/sort/group to tables (not saved) | x | x | x | | Apply filter/sort/group to record page widgets (not saved) | x | x | x |</p>"},{"location":"archive/product/specs/users-permissions/#exploration-permissions","title":"Exploration permissions","text":"Permission Exploration Manager Exploration Editor Exploration Viewer Share exploration with other users x - - Edit the exploration x x - View exploration x x x Apply filter/sort/group to explorations (not saved) x x x <ul> <li>To have <code>Editor</code> or <code>Manager</code> permission on an Exploration, a user needs to at least have <code>Viewer</code> permissions on all dependent tables.</li> </ul> <p>Note: If we implement additional bonus features, we will also have additional permissions for subsets of tables and explorations here (only certain rows/records and columns). Those are not specced out here.</p>"},{"location":"archive/product/specs/2022-01-views/","title":"Views in Mathesar","text":""},{"location":"archive/product/specs/2022-01-views/#overview","title":"Overview","text":"<p>All data in Mathesar is stored in Tables. However, users may not always want to analyze, edit, or otherwise work with data in the same way that it is stored. This might involve combining data from multiple tables or only looking at a subset of rows and columns from a single table.</p> <ul> <li>For example, tables are often optimized for reducing redundancy in data storage. It\u2019s hard to work with interrelated data and perform data analysis tasks using tables alone. On a day to day basis, users may want to work with data spread across different tables. </li> <li>Tables for data analysis are often stored in a denormalized format. Users may want to work with it by reducing the redundancies.</li> </ul> <p>This is where Queries and Views come in \u2013 to help the user see the data how they want to see it, regardless of where it is stored.</p> <p>Queries are requests for data. The output of a query results in a \u201cvirtual\u201d table. Data is presented in rows and columns just like a table, but these rows and columns are calculated on the fly by pulling other data from wherever it is stored. Queries can involve combining data from multiple tables (or eventually other views), filtering, sorting, aggregating (grouping), or even creating entirely computed columns.</p> <p>Views are saved queries. Whenever a view is loaded, it loads the latest data based on the underlying query.</p>"},{"location":"archive/product/specs/2022-01-views/#user-goals","title":"User Goals","text":"<p>The user goals for Queries are:</p> <ul> <li>To enable users to perform more complex lookups of data in a single table than can be achieved by filtering or sorting (e.g. finding all duplicate rows in a table)</li> <li>To enable users to perform lookups of data across multiple tables</li> <li>To enable users to work with subsets of data (e.g. fewer columns, rows, or both)</li> <li>To enable users to see aggregate views of data</li> <li>To help users answer questions about their data and perform basic data analysis</li> </ul> <p>The user goals for Views are:</p> <ul> <li>To help users save commonly used queries</li> <li>To provide a better editing experience for related data (especially many-to-many relationships)</li> </ul>"},{"location":"archive/product/specs/2022-01-views/#implementation","title":"Implementation","text":"<p>Under the hood, queries are <code>SELECT</code> SQL queries and views are PostgreSQL views. </p> <p>This means that in order to work with Views in Mathesar, we need to translate concepts used in PostgreSQL queries to our end users in a user-friendly way. </p>"},{"location":"archive/product/specs/2022-01-views/#concepts-and-features","title":"Concepts and Features","text":"<p>We\u2019re introducing a number of new product concepts and features in this specification. They are expanded upon below, split into different pages for readability.</p> <ul> <li>01. Assumptions and Limitations</li> <li>02. Feature Requirements</li> <li>03. The Query Builder</li> <li>04. Formulas<ul> <li>(a) Record Aggregations</li> <li>(b) Random Generators</li> <li>(c) Text Formulas</li> <li>(d) Number Formulas</li> <li>(e) Boolean Formulas</li> <li>(f) Date. Time, and Duration Formulas</li> <li>(g) List Formulas</li> <li>(h) Cumulative Formulas</li> <li>(i) Regular Expression Formulas</li> <li>(j) Custom Formulas</li> </ul> </li> <li>05. View Structure</li> <li>06. View Columns</li> <li>07. Breaking Down DB Queries</li> <li>08. Appendix</li> </ul>"},{"location":"archive/product/specs/2022-01-views/#see-also","title":"See also","text":"<ul> <li>\u201cViews\u201d Concepts page</li> </ul>"},{"location":"archive/product/specs/2022-01-views/01-assumptions/","title":"01. Assumptions and Limitations","text":"<p>Although Queries and Views represent underlying database concepts, we will only be supporting building a subset of possible database queries in the first version of Mathesar. Our goal is to ship a proof of concept that demonstrates common use cases that might be used for an Inventory Use Case.</p> <p>Information</p> <p>Please note that the assumptions and limitations outlined in this page are only for the alpha release of Mathesar. We will reevaluate these assumptions after our first release.</p>"},{"location":"archive/product/specs/2022-01-views/01-assumptions/#viewing-views","title":"Viewing Views","text":"<p>We will support viewing Views based on any conceivable database query correctly, even if they can\u2019t be edited. Users should be able to connect a database with existing Views to Mathesar and have those Views show up correctly.</p> <p>If the query powering the view is not something we can break down into the concepts in the rest of this spec, we will only show the query and not allow the view\u2019s query to be edited.</p>"},{"location":"archive/product/specs/2022-01-views/01-assumptions/#building-queries","title":"Building Queries","text":"<ul> <li>We will not support creating or editing Views based on every conceivable database query in Mathesar.</li> <li>We will only support building queries using foreign key relationships to join tables. We eventually want to do \u201cbest guess\u201d natural joins but this is not planned for the alpha release.<ul> <li>Because we depend on foreign key relationships for joins, we will not support using Views in database queries for the first version of the product. We will only support tables and other columns in the same query. </li> </ul> </li> <li>At the moment, we only care about the final output of the views. If a view uses a subquery, CTE, union, intersection, etc. internally, we will not be representing those to the user in the UI (unless they look at the underlying SQL query).</li> <li>We will only be allowing users to build queries using a guided web interface. We eventually want to allow users to create Views using textual SQL queries, but this is not planned for the alpha release.</li> </ul>"},{"location":"archive/product/specs/2022-01-views/02-feature-requirements/","title":"02. Feature Requirements","text":"<p>To work with Queries and Views in Mathesar, we\u2019ll need to support the following functionality:</p>"},{"location":"archive/product/specs/2022-01-views/02-feature-requirements/#query-builder","title":"Query Builder","text":"<p>Mathesar should support a visual query builder to allow users to construct Queries. The query builder should be accessible from anywhere in Mathesar and should not be tied to a single table or view.</p> <p>The query builder should allow users to:</p> <ul> <li>Construct a query by selecting:<ul> <li>columns to use</li> <li>filters to apply to columns used or their tables</li> <li>formulas to use</li> <li>aggregations to apply</li> <li>summaries (group by) to apply</li> <li>sorting to apply</li> <li>a limit/offset for the rows returned</li> </ul> </li> <li>Select columns to see in the output query</li> <li>Preview the query results live</li> <li>Save a query as a View</li> </ul>"},{"location":"archive/product/specs/2022-01-views/02-feature-requirements/#creating-views","title":"Creating Views","text":"<p>Mathesar should also support creating Views, which are essentially saved Queries. View creation should start by using the query builder.</p>"},{"location":"archive/product/specs/2022-01-views/02-feature-requirements/#interacting-with-views","title":"Interacting with Views","text":"<p>Views should be a separate category of objects in Mathesar, just like Tables. Users should be able to:</p> <ul> <li>See all views in a given schema</li> <li>Find the view they want</li> <li>Open a view</li> <li>See data relevant to views, including the underlying query, column data provenance, etc.</li> <li>Apply filters, sorting, and grouping to views (similar to tables)</li> <li>Edit data in views where possible</li> </ul>"},{"location":"archive/product/specs/2022-01-views/02-feature-requirements/#query-builder-hooks","title":"Query Builder Hooks","text":"<p>We should hook into the query builder from Tables and Views wherever the context makes sense to introduce the user to it. This involves updating the designs for tables and views to pre-create queries and link to the query builder.</p> <p>Some examples:</p> <ul> <li>Creating a new view from scratch</li> <li>Editing the structure of a view</li> <li>Saving the currently applied filters, sorts, and groups of a table.</li> <li>Finding duplicate rows in a table if they can\u2019t apply a unique constraint to a column due to non-unique rows being present.</li> <li>Creating an editable view while creating a new mapping table through the \u201cLink Table\u201d feature.</li> </ul>"},{"location":"archive/product/specs/2022-01-views/03-the-query-builder/","title":"03. The Query Builder","text":"<p>This page describes how the query builder should work.</p>"},{"location":"archive/product/specs/2022-01-views/03-the-query-builder/#name","title":"Name","text":"<p>In the UI, the query builder will be called the Data Explorer to make it more approachable for non-technical users. This should also help convey to users that they can explore their data here, they\u2019re not necessarily doing anything permanent.</p>"},{"location":"archive/product/specs/2022-01-views/03-the-query-builder/#navigating-to-the-query-builder","title":"Navigating to the Query Builder","text":"<ul> <li>The query builder should be accessible from anywhere in a schema. It should not be tied to a specific table or view.</li> <li>The query builder should be able to be pre-populated with a query and linked to.<ul> <li>For example, if a user tries to set a unique constraint for a column that has non-unique values, we may want to open up the query builder with a pre-populated query that shows all duplicate rows.</li> </ul> </li> </ul>"},{"location":"archive/product/specs/2022-01-views/03-the-query-builder/#base-table","title":"Base Table","text":"<p>All queries will start from a single \u201cbase table\u201d. This table will determine which columns are available to be added to the output of the View. The user should be able to set the base table at the start of building their query. They might either explicitly set it or we could infer it from the first column they select.</p> <p>We might also want to show the base table in the query builder UI somehow.</p>"},{"location":"archive/product/specs/2022-01-views/03-the-query-builder/#selecting-columns","title":"Selecting Columns","text":"<p>Users should be able to add columns to see in the query\u2019s output. Users can add columns in two ways: from a table or from a formula.</p>"},{"location":"archive/product/specs/2022-01-views/03-the-query-builder/#from-a-table","title":"From a Table","text":"<ul> <li>The user will see a list of available columns.</li> <li>Once the user has added a column, we make a best guess for the following attributes:<ul> <li>Source Relationship: This is the relationship of the column\u2019s table to the base table. <ul> <li>If there\u2019s only one way that the tables are related, there is no need to make a guess.</li> <li>If there are multiple relationships between the table, we will pick one.</li> </ul> </li> <li>Aggregation: This sets how the column is aggregated (none i.e. separate rows per unique pair, list, count, average, min, max, etc.). <ul> <li>This is only applicable to tables which have multiple related records to the base table. </li> <li>By default, we will aggregate columns as a list.</li> <li>Please see Record Aggregations for a list of all aggregations supported.</li> </ul> </li> </ul> </li> <li>The user will see the source relationship and aggregations used and can alter them if desired. </li> <li>The user can also alter the column in the following ways:</li> <li>Adding a Formula: This alters the column to use a formula where one of the variables is the column.</li> <li>Adding a Filter: This filters the column\u2019s results to a subset.</li> <li>Once added, the user can also edit formulas and filters.</li> <li>The user can delete the column if they choose.</li> </ul>"},{"location":"archive/product/specs/2022-01-views/03-the-query-builder/#from-a-formula","title":"From a Formula","text":"<ul> <li>The user will see a list of available formulas organized by type of formula.</li> <li>The user can select a formula. They will then be prompted for the variables to use in that formula.<ul> <li>The number of variables and the types of data they accept depend on the formula chosen.</li> </ul> </li> <li>Once they select the variables for the formula, the column is then added.</li> <li>The user can edit the formula if they choose.</li> <li>The user can also apply a filter to the column and edit a filter once applied.</li> <li>The user can delete the column if they choose.</li> </ul>"},{"location":"archive/product/specs/2022-01-views/03-the-query-builder/#flowchart","title":"Flowchart","text":"<p>Here\u2019s a flowchart of decisions that need to be made when adding columns. This is meant to be an illustrative example; we might end up making decisions in a different order or replacing some decisions with assumptions that the user can then change.</p> <p></p>"},{"location":"archive/product/specs/2022-01-views/03-the-query-builder/#query-refinement","title":"Query Refinement","text":"<p>In addition to selecting output columns, the user should be able to add to the query in the following ways. </p>"},{"location":"archive/product/specs/2022-01-views/03-the-query-builder/#filtering","title":"Filtering","text":"<p>The user can add filters to filter down the results of the query to a subset of rows. They can use any of the query\u2019s output columns in filters. The filters available for the column will depend its data type and will offer a similar experience to table or view filters.</p>"},{"location":"archive/product/specs/2022-01-views/03-the-query-builder/#sorting","title":"Sorting","text":"<p>The user can sort the query results by one or more of the query\u2019s output columns. Query sorting should provide a similar experience to table or view sorting.</p>"},{"location":"archive/product/specs/2022-01-views/03-the-query-builder/#summarization","title":"Summarization","text":"<p>The user should be able to summarize the query by one of the query\u2019s output columns. This involves the following steps:</p> <ul> <li>The user selects a column to summarize on and the summary type.<ul> <li>The type of summary will depend on the column\u2019s data type.</li> <li>The summarizations offered for a given data type will match that data type\u2019s grouping options in tables/views.<ul> <li>Users can summarize based on multiple columns, just like they can group by multiple columns.</li> </ul> </li> </ul> </li> <li>The summarization is applied to the query results as follows:</li> <li>the values in the summary\u2019s target column are reduced to the group names</li> <li>the values of rest of the columns are aggregated into a list of distinct values.</li> </ul> <p>Once an summarization is applied, then any new columns added will also be aggregated as a list. The user can change how columns are aggregated on a column-by-column basis.</p> <p>To keep things simple, only one summarization can be applied at a time. This means that users are limited to one summarization step at a time, but they can use multiple columns to create that summary.</p>"},{"location":"archive/product/specs/2022-01-views/03-the-query-builder/#example-1-summarize-single-column-by-first-letter-grouping-option","title":"Example 1: Summarize single column by \u201cfirst letter\u201d grouping option","text":"<p>Consider this query output:</p> Movie Title Runtime Genres Rocket Science 1 hr 41 min Comedy, Drama The Last Duel 2 hr 32 min Action, Drama, History Road to Perdition 1 hr 57 min Crime, Drama, Thriller The Count of Monte Cristo 2 hr 11 min Adventure On the Rocks 1 hr 37 min Comedy, Drama <p>The user applies a summary of \u201cMovie Title\u201d by first letter. The resultant output will be:</p> Movie Title (First Letter) Runtime Genres O 1 hr 37 min Comedy, Drama R 1 hr 41 min, 1 hr 57 min Comedy, Crime, Drama, Thriller T 2 hr 11 min, 2 hr 32 min Adventure, Action, Drama, History"},{"location":"archive/product/specs/2022-01-views/03-the-query-builder/#example-2-summarize-multiple-columns-by-distinct-values","title":"Example 2: Summarize multiple columns by distinct values","text":"<p>Consider this de-normalized input table.</p> student_id student_name student_email professor_name subject grade 1234123412 Alice alice@uni.edu Bob Math 82 1234123412 Alice alice@uni.edu Carol Reading 97 1234123412 Alice alice@uni.edu David Writing 92 1234123412 Alice alice@uno.edu Edith Science 72 1234123412 Alice alice@uni.edu Frank Music 46 7890789078 George george@uni.edu Bob Math 82 7890789078 Georg george@uni.edu Henrietta Reading 54 7890789078 George george@uni.com Igor Writing 71 7890789078 George george@uni.edu Jennifer Science 84 7890789078 George george@uni.edu Kenneth Music 100 <p>The user applies a summary of \u201cDistinct Values\u201d with columns \u201cstudent_id\u201d, \u201cstudent_name\u201d, \u201cstudent_email\u201d. The resultant output will be:</p> student_id student_name student_email 1234123412 Alice alice@uni.edu 1234123412 Alice alice@uno.edu 7890789078 Georg george@uni.edu 7890789078 George george@uni.com 7890789078 George george@uni.edu"},{"location":"archive/product/specs/2022-01-views/03-the-query-builder/#limit-offset","title":"Limit &amp; Offset","text":"<p>The user can apply the following to the query:</p> <ul> <li>A limit to the number of rows returned</li> <li>An offset for where to start the rows returned</li> </ul>"},{"location":"archive/product/specs/2022-01-views/03-the-query-builder/#preview","title":"Preview","text":"<ul> <li>We should show users a live preview of their data as they build their query.</li> <li>The preview should support changing display options for output columns based on their data type.</li> </ul>"},{"location":"archive/product/specs/2022-01-views/03-the-query-builder/#other-actions","title":"Other Actions","text":"<ul> <li>We should allow users to see a temporary view of their query (this won\u2019t be saved as a View but they won\u2019t see the \u201cquery building\u201d part of the screen)</li> <li>We should allow users to save their query as a permanent View.</li> </ul>"},{"location":"archive/product/specs/2022-01-views/03-the-query-builder/#implementation-details","title":"Implementation Details","text":""},{"location":"archive/product/specs/2022-01-views/03-the-query-builder/#available-columns","title":"Available Columns","text":"<p>When adding query output columns, available columns are calculated as follows:</p> <ul> <li>If a base table has not been set, we show all columns from all tables.<ul> <li>We may want to hide columns with foreign key constraints (FKs), since they are duplicates of the source columns.</li> </ul> </li> <li>If a base table has been set, we show:<ul> <li>all columns from the base table <ul> <li>If the base table has no relationships to itself within three levels, then we can hide columns from the base table that have already been added to the query\u2019s output columns</li> </ul> </li> <li>all columns from tables that the base table has FKs to or with FKs to the base table, up to three levels of FKs away.</li> </ul> </li> </ul>"},{"location":"archive/product/specs/2022-01-views/03-the-query-builder/#formulas","title":"Formulas","text":"<p>Please see the next page, 04. Formulas.</p>"},{"location":"archive/product/specs/2022-01-views/03-the-query-builder/#column-input-filters","title":"Column Input Filters","text":"<p>When applying filters to an input column (let\u2019s call it <code>X</code>), the user selects three things:</p> <ul> <li>Column to apply the filter to: This could be<ul> <li>any column in the table (<code>T</code>) that <code>X</code> belongs to</li> <li>any column in any table that <code>T</code> has a FK relationship to (i.e. there\u2019s a single related record to every record in <code>T</code>), up to three levels deep</li> </ul> </li> <li>Filter operator: This depends on the data type of the column selected in the first parameter e.g. <code>contains</code></li> <li>Filter parameter: This can be either a literal value or another column. Columns available here are:<ul> <li>any column in the table (<code>T</code>) that <code>X</code> belongs to</li> <li>any column in any table that <code>T</code> has a FK relationship to (i.e. there\u2019s a single related record to every record in <code>T</code>), up to three levels deep</li> <li>any column in the base table (<code>Q</code>) of the query</li> <li>any column in any table that <code>Q</code> has a FK relationship to (i.e. there\u2019s a single related record to every record in <code>Q</code>), up to three levels deep</li> <li>any column already added to the query</li> </ul> </li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/","title":"04. Formulas","text":""},{"location":"archive/product/specs/2022-01-views/04-formulas/#structure","title":"Structure","text":"<p>Formulas have the following attributes:</p> <ul> <li>Name: A unique human-readable name</li> <li>Description: A description of what the formula does</li> <li>Variables Accepted: This is the list of variables needed for a formula to work. Variables have the following attributes:<ul> <li>Name: A unique name (within the formula)</li> <li>Description: A description of how the variable fits into the formula</li> <li>Type: The type of data accepted.</li> <li>Value: The value that this variable is set to.</li> </ul> </li> <li>Data Editable?: Whether data in cells generated by this formula is editable.</li> <li>Data Type: The data type of the column that applying this formula will result in.</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/#finding-formulas","title":"Finding Formulas","text":"<p>In order to make finding the right formula easier, we should categorize formulas by the type of variable they accept.</p> <ul> <li>For example, if the user is trying to add a formula to a <code>DATE</code> column, we would only show them the formulas that accept the <code>DATE</code> data type.</li> <li>When the user starts by adding a formula column, we should provide an interface that helps users find the formula they want easier. We could provide an autocomplete interface based on formula name, categorize formulas based on type, and/or consider other options.</li> </ul> <p>See below for a very rough representation of the idea.</p> <p></p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/#editing-formula-data","title":"Editing Formula Data","text":"<p>When a query is turned into a View, we will allow users to edit data from the View in some cases. Each formula that is editable will define its own editing behavior, but here are some general guidelines:</p> <ul> <li>Formulas that transform the original data don\u2019t result in editable data.<ul> <li>e.g. if we apply a \u201cExtract Year\u201d formula to a <code>DATE</code> column to transform, say, <code>2020-01-03</code> into <code>2020</code>, then the <code>2020</code> will not be editable.</li> <li>e.g. if we apply a \u201cCount\u201d formula to count the number of genres a movie has, we will not be able to edit the count.</li> </ul> </li> <li>Formulas that directly represent the original data may be editable.</li> <li>e.g. if we apply a \u201cList\u201d formula to list the genres related to a given movie, we can add and remove genres to that list, which will create/delete records in the appropriate underlying tables.<ul> <li>in the future, we may also support editing the genre names themselves.</li> </ul> </li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/#variable-types","title":"Variable Types","text":"<p>To reduce repetition in the formula definitions, variable types are defined here and only the type name is referenced in the lists of formulas.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/#single-record-column-reference","title":"Single Record Column Reference","text":"<p>A column which has only one record related to the query\u2019s reference point. This could be a column in the query, a column from the query\u2019s base table, or a column that the base table has an FK relationship to (up to three levels deep).</p> <p>If there are multiple ways to get to the column (i.e. there are multiple relationships between the query\u2019s base table and the column), then the column reference should also include the relationship to use.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/#multiple-record-column-reference","title":"Multiple Record Column Reference","text":"<p>A column which has multiple records related to the query\u2019s reference point, This is generally a column that has a reverse FK relationship (up to three levels deep) to the query\u2019s base table.</p> <p>If there are multiple ways to get to the column (i.e. there are multiple relationships between the query\u2019s base table and the column), then the column reference should also include the relationship to use.</p> <p>Column references to multiple related records also accept input filters, in case the query only needs to use a subset of the related records.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/#query-column-reference","title":"Query Column Reference","text":"<p>A Single Record Column Reference that\u2019s a column in the same query.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/#filters","title":"Filters","text":"<p>A set of filters that can be applied to a column.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/#single-record-text-like","title":"Single Record Text-Like","text":"<p>Either a Single Record Column Reference or a literal string.</p> <p>If using a column reference, it can be of any data type but the data in the column will be treated like text. </p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/#multiple-record-text-like","title":"Multiple Record Text-Like","text":"<p>A Multiple Record Column Reference. The column can be of any data type but the data in the column will be treated like text. </p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/#single-record-number-like","title":"Single Record Number-Like","text":"<p>Either a Single Record Column Reference or a literal number.</p> <p>If using a column reference, the data type must be representable as a number (e.g. Number, Money, Duration UI types).</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/#multiple-record-number-like","title":"Multiple Record Number-Like","text":"<p>A Multiple Record Column Reference. The data type of the column must be representable as a number (e.g. Number, Money, Duration UI types).</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/#single-record-boolean-like","title":"Single Record Boolean-Like","text":"<p>Either a Single Record Column Reference of data type boolean or a literal boolean.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/#single-record-date-like","title":"Single Record Date-Like","text":"<p>Either a Single Record Column Reference of data type date or a literal date.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/#single-record-datetime-like","title":"Single Record Datetime-Like","text":"<p>Either a Single Record Column Reference of data type datetime or a literal datetime.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/#single-record-time-like","title":"Single Record Time-Like","text":"<p>Either a Single Record Column Reference of data type time or a literal time.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/#single-record-date-or-time-like","title":"Single Record Date or Time-Like","text":"<p>Either a Single Record Column Reference of data type date/datetime/time or a literal of one of the same types.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/#single-record-duration-like","title":"Single Record Duration-Like","text":"<p>Either a Single Record Column Reference of data type duration or a literal duration.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/#single-record-list-like","title":"Single Record List-Like","text":"<p>Either a Single Record Column Reference of data type list or a literal list.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/#integer","title":"Integer","text":"<p>Either a Single Record Column Reference of data type integer or a literal integer.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/#choice","title":"Choice","text":"<p>A selection from a pre-determined list of choices.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/#regular-expression","title":"Regular Expression","text":"<p>Literal text expressing a regular expression.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/#list-of-formulas","title":"List of Formulas","text":"<p>This is a list of view formulas that we should support in the alpha release of Mathesar, categorized into types.</p> <ul> <li>Record Aggregations Formulas that aggregate a column across multiple records</li> <li>Random Generators Formulas that generate random data</li> <li>Text Formulas Formulas that work on text data</li> <li>Number Formulas Formulas that work on number data</li> <li>Boolean Formulas Formulas that work on boolean data</li> <li>Date. Time, and Duration Formulas Formulas that work on date, time, and duration data</li> <li>List Formulas Formulas that work on list data</li> <li>Cumulative Formulas Formulas building on previous rows in the query</li> <li>Regular Expression Formulas Formulas that use regular expressions</li> <li>Custom Formulas An interface to support more complicated formulas</li> </ul>"},{"location":"archive/product/specs/2022-01-views/05-view-structure/","title":"05. View Structure","text":"<p>Once a query is built using the Query Builder, it can be saved as a View. Users should be able to see and use Views in Mathesar just like Tables.</p> <p>This page describes how Views should work.</p>"},{"location":"archive/product/specs/2022-01-views/05-view-structure/#navigating-to-views","title":"Navigating to Views","text":"<p>Users should be able to:</p> <ul> <li>See all views in a given schema</li> <li>Find the view they want</li> <li>Open a view</li> </ul>"},{"location":"archive/product/specs/2022-01-views/05-view-structure/#interacting-with-a-single-view","title":"Interacting with a Single View","text":"<p>Once the user has opened a view, it should support the following features.</p>"},{"location":"archive/product/specs/2022-01-views/05-view-structure/#view-data","title":"View Data","text":"<ul> <li>The user should be able to see the View\u2019s columns and rows.</li> <li>Users should be able to apply filters, sorts, and groups to the view data, similar to tables.</li> </ul>"},{"location":"archive/product/specs/2022-01-views/05-view-structure/#editing-view-data","title":"Editing View Data","text":"<ul> <li>The user should be able to edit data in rows if the column is editable.<ul> <li>Columns that use Formulas have different editing behavior depending on the formula.</li> <li>Columns that are direct representations of data from an underlying table should be editable.</li> </ul> </li> <li>The user should be able to open up a form to edit the record of any cell with a single record as a source.</li> </ul>"},{"location":"archive/product/specs/2022-01-views/05-view-structure/#column-information","title":"Column Information","text":"<p>The user should be able to see all column information for each view column. Please see 06. View Columns for details.</p>"},{"location":"archive/product/specs/2022-01-views/05-view-structure/#query","title":"Query","text":"<p>Users should be able to see the underlying SQL query that powers the view. This is read-only, but can be copied and pasted.</p> <p>We could also potentially show a read-only breakdown of the query into Query Builder features, but I\u2019m not sure if this is feasible or would be a good idea.</p>"},{"location":"archive/product/specs/2022-01-views/05-view-structure/#view-structural-updates","title":"View Structural Updates","text":"<p>Users should be able to perform the following actions:</p> <ul> <li>Save filters and sorts applied in the UI to the View query (permanently applying those sorts/filters)</li> <li>Save filters and sorts applied in the UI to a new View</li> <li>Create a new \u201csummarized\u201d view of any groupings applied</li> <li>Open the current view in the query builder to edit its structure</li> </ul>"},{"location":"archive/product/specs/2022-01-views/06-view-columns/","title":"06. View Columns","text":"<p>Here is the information we should show in View Columns. We don\u2019t necessarily have to use the abstractions below, there might be a better way to show the data necessary.</p> <p>If we end up having a column menu in the Query Builder, we can probably reuse it here.</p>"},{"location":"archive/product/specs/2022-01-views/06-view-columns/#data-type","title":"Data Type","text":"<p>This is the final data type of the content of the column after any computations etc. are applied.</p> <ul> <li>Allowed values: same as Table data types.</li> <li>Required. Data type should always be set, at the very least, we can treat unknown data types as text.</li> </ul>"},{"location":"archive/product/specs/2022-01-views/06-view-columns/#sources","title":"Sources","text":"<p>This is the set of source columns that are used to generate the data in the current View column.</p> <ul> <li>Allowed values: References to other Table columns or columns in the same View.<ul> <li>We should also depict relationships used to get to the source and any filters applied to the source.</li> </ul> </li> <li>Optional: This could be empty for purely calculated columns (e.g. using the Postgres <code>random()</code> function and putting the output in a column)</li> </ul> <p>Using Element\u2019s UI as an example (Matrix channel names stand in for data sources here), here\u2019s how Sources might be represented:</p> <p></p>"},{"location":"archive/product/specs/2022-01-views/06-view-columns/#formula","title":"Formula","text":"<p>This is the formula used to generate data in for this column.</p> <ul> <li>Allowed values: List of pre-defined formulas, see 04. Formulas</li> <li>Optional: Columns that are direct copies of other columns from tables or views won\u2019t have a formula.</li> </ul> <p>We should allow users to use a pre-set set of formulas or (in the future) enter a custom formula using whatever functions are installed on their Postgres database.</p> <p>Using Element\u2019s UI as an example (Matrix channel names stand in for data sources here), here\u2019s how a Formula might be represented. Note that Sources are used within the Formula. </p> <p>Details about creating formulas are in 04. Formulas.</p>"},{"location":"archive/product/specs/2022-01-views/06-view-columns/#link","title":"Link","text":"<p>This notes whether a column is a join column. This is a column used to match the same values across multiple tables to create the View. These columns have multiple Sources but no Formula.</p> <ul> <li>Allowed values: True or False.</li> <li>Required: This must be set for all columns.</li> </ul> <p>In this example View, the <code>agent_code</code> and <code>cust_code</code> columns are Links.</p>"},{"location":"archive/product/specs/2022-01-views/07-breaking-down-db-queries/","title":"07. Breaking Down DB Queries","text":"<p>This page goes through the PostgreSQL documentation about queries and maps various concepts listed there to the concepts in this spec. We\u2019ll follow the structure of the PostgreSQL docs.</p>"},{"location":"archive/product/specs/2022-01-views/07-breaking-down-db-queries/#table-expressions","title":"Table Expressions","text":"<p>See \u201c7.2 Table Expressions\u201d on the PostgreSQL docs</p> Clauses Mapped To Notes <code>FROM</code> \u201cSources\u201d of columns <code>WHERE</code> \u201cFilters\u201d <code>GROUP BY</code> &amp; <code>HAVING</code> \u201cSummarization\u201d <code>GROUPING SETS</code>, <code>CUBE</code>, &amp; <code>ROLLUP</code> \u201cSummarization\u201d Window function processing \u201cFormula\u201d of columns Join columns \u201cLink\u201d of columns"},{"location":"archive/product/specs/2022-01-views/07-breaking-down-db-queries/#select-lists","title":"Select Lists","text":"<p>See \u201c7.3 Select Lists\u201d on the PostgreSQL docs</p> Clauses Mapped To Notes Select-List Items Related to \u201cSources\u201d of columns Column Labels Used to determine column name in Views <code>DISTINCT</code> \u201cSummarization\u201d"},{"location":"archive/product/specs/2022-01-views/07-breaking-down-db-queries/#combining-queries","title":"Combining Queries","text":"<p>See \u201c7.4. Combining Queries (<code>UNION</code>, <code>INTERSECT</code>, <code>EXCEPT</code>)\u201d on the PostgreSQL docs</p> <p>There is no direct mapping of query combinations to the Views UI in Mathesar, since they are internal to the query.</p> <p>They will only be visible when the user looks at the raw SQL query.</p>"},{"location":"archive/product/specs/2022-01-views/07-breaking-down-db-queries/#sorting-rows","title":"Sorting Rows","text":"<p>See \u201c7.5. Sorting Rows (<code>ORDER BY</code>)\u201d on the PostgreSQL docs</p> <p>This maps to \u201cSorting\u201d.</p>"},{"location":"archive/product/specs/2022-01-views/07-breaking-down-db-queries/#limit-and-offset","title":"LIMIT and OFFSET","text":"<p>See \u201c7.6. <code>LIMIT</code> and <code>OFFSET</code>\u201d on the PostgreSQL docs\u201d</p> <p>These map to the query builder\u2019s \u201cRow Limit\u201d and \u201cRow Offset\u201d.</p>"},{"location":"archive/product/specs/2022-01-views/07-breaking-down-db-queries/#values-lists","title":"VALUES Lists","text":"<p>See: \u201c7.7 <code>VALUES</code> Lists\u201d on the PostgreSQL docs\u201d</p> <p>These map to column \u201cSources\u201d. They will show up as a computed source.</p>"},{"location":"archive/product/specs/2022-01-views/07-breaking-down-db-queries/#with-queries","title":"WITH Queries","text":"<p>See \u201c7.8. <code>WITH</code> Queries (Common Table Expressions)\u201d on the PostgreSQL docs</p> <p>There is no direct mapping of CTEs to the Views UI in Mathesar, since they are internal to the query.</p> <p>They will only be visible when the user looks at the raw SQL query.</p>"},{"location":"archive/product/specs/2022-01-views/08-appendix/","title":"08. Appendix","text":""},{"location":"archive/product/specs/2022-01-views/08-appendix/#appendix-a-movie-tables-views","title":"Appendix A: Movie Tables &amp; Views","text":"<p>These tables and views are used to illustrate concepts in other parts of this spec.</p>"},{"location":"archive/product/specs/2022-01-views/08-appendix/#tables","title":"Tables","text":""},{"location":"archive/product/specs/2022-01-views/08-appendix/#movie","title":"Movie","text":"ID Title Release Year Primary Language 13 Thelma &amp; Louise 1991 English 22 Meet Joe Black 1998 English 33 Crouching Tiger, Hidden Dragon 2000 Mandarin 41 Crazy Rich Asians 2018 English"},{"location":"archive/product/specs/2022-01-views/08-appendix/#person","title":"Person","text":"ID Name Role 34 Michelle Yeoh Actor 45 Brad Pitt Actor 71 Geena Davis Actor 83 Zhang Ziyi Actor 84 Ang Lee Director"},{"location":"archive/product/specs/2022-01-views/08-appendix/#movie-person-map","title":"Movie Person Map","text":"ID Movie ID Person ID 67 13 45 68 22 45 69 33 34 70 41 34 89 13 71 97 33 83 99 33 84"},{"location":"archive/product/specs/2022-01-views/08-appendix/#views","title":"Views","text":""},{"location":"archive/product/specs/2022-01-views/08-appendix/#movie-actors","title":"Movie Actors","text":"Title Release Year Primary Language Actors Thelma &amp; Louise 1991 English Brad Pitt, Geena Davis Meet Joe Black 1998 English Brad Pitt Crouching Tiger, Hidden Dragon 2000 Mandarin Michelle Yeoh, Zhang Ziyi Crazy Rich Asians 2018 English Michelle Yeoh <p>This view is defined as follows:</p> <ul> <li><code>Title</code>, <code>Release Year</code>, <code>Primary Language</code> are directly from Movie</li> <li><code>Actors</code> is a List aggregation formula applied to Person\u2019s <code>Name</code> with a filter applied so that only Person records with <code>Role = \"Actor\"</code> will show up.</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4a-record-aggregations/","title":"(a) Record Aggregation Formulas","text":"<p>These formulas aggregate the values of a single column across multiple records of the same type. These are used as aggregation types when a multi-record column is added to a query.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4a-record-aggregations/#count","title":"Count","text":"<ul> <li>Data Type: Integer</li> <li>Description: Show a count of all values in the column.</li> <li>Variables Accepted:<ul> <li>Column:<ul> <li>Description: The column to aggregate.</li> <li>Type Multiple Record Column Reference</li> </ul> </li> </ul> </li> <li>Data Editable?: No</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4a-record-aggregations/#example-query","title":"Example Query","text":"<pre><code>select movie.title as title, count(actor.name) as num_actors\nfrom movie \ninner join movie_actor_map on movie.id = movie_actor_map.movie_id\ninner join actor on movie_actor_map.actor_id = actor.id\ngroup by movie.title;\n</code></pre>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4a-record-aggregations/#list","title":"List","text":"<ul> <li>Data Type: List (list item data type depends on the data type of the column being summarized.</li> <li>Description: Show a list of all values in the column.</li> <li>Variables Accepted:<ul> <li>Column:<ul> <li>Description: The column to aggregate.</li> <li>Type Multiple Record Text-Like</li> </ul> </li> </ul> </li> <li>Data Editable?: Yes </li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4a-record-aggregations/#editing-behavior","title":"Editing behavior","text":"<p>Data generated using list formulas are editable in two ways:</p> <ul> <li>Editing existing items The user can always edit the contents of an existing item.<ul> <li>We are just editing the relevant record in the underlying table.</li> <li>We should make it clear to the user that all instances of the data will be changed, not just in this record.</li> </ul> </li> <li>Adding and removing items to a list: The user can add or remove items from the list. This is only true in the following circumstances:<ul> <li>the tables being used to generate the list (including intermediate tables) have no other required fields other than the one the user is editing.</li> <li>we have enough information in the filters being used to generate the list to fill in any required fields other than the one the user is editing in the tables being used to generate the list (including intermediate tables) </li> </ul> </li> </ul> <p>To illustrate editing behavior, let\u2019s consider the Movie Actor view in Appendix A. </p> <ul> <li>Editing existing items:<ul> <li>The user can edit <code>Brad Pitt</code> in row 1 to say <code>William Bradley Pitt</code> instead.</li> </ul> </li> <li>Adding rows:<ul> <li>The user can add <code>Geena Davis</code> to the <code>Meet Joe Black</code> movie (she\u2019s not in that movie but that\u2019s beside the point). This will add a new record in Movie Person Map to map the existing actor record for Geena Davis to the existing movie record movie record with a <code>Role</code> of <code>Actor</code> (since we know that from the filter that defines the column).<ul> <li>We need to be using autocomplete to select records here (with a record preview) so that the user can select the correct record in case there are two <code>Geena Davis</code> records.</li> <li>If there was no filter defined on the column, we would leave the <code>Role</code> value blank.</li> </ul> </li> <li>The user can add <code>Anthony Hopkins</code> to <code>Meet Joe Black</code> and this will insert new records in both <code>Person</code> and <code>Movie Person Map</code> (again with a <code>Role</code> of <code>Actor</code>).</li> </ul> </li> </ul> <p>Although the illustration above uses a mapping table, it also applies to other forms of relationships.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4a-record-aggregations/#example-query_1","title":"Example Query","text":"<pre><code>select movie.title as title, array_agg(actor.name) as actors\nfrom movie \ninner join movie_actor_map on movie.id = movie_actor_map.movie_id\ninner join actor on movie_actor_map.actor_id = actor.id\ngroup by movie.title;\n</code></pre>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4a-record-aggregations/#average","title":"Average","text":"<ul> <li>Data Type: Same as the type of column accepted</li> <li>Description: Show an average of of all values in the column.</li> <li>Variables Accepted:<ul> <li>Column:<ul> <li>Description: The column to aggregate.</li> <li>Type Multiple Record Number-Like</li> </ul> </li> </ul> </li> <li>Data Editable?: No</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4a-record-aggregations/#minimum","title":"Minimum","text":"<ul> <li>Data Type: Same as the type of column accepted</li> <li>Description: Show the minimum value of all values in the column.</li> <li>Variables Accepted:<ul> <li>Column:<ul> <li>Description: The column to aggregate.</li> <li>Type Multiple Record Number-Like</li> </ul> </li> </ul> </li> <li>Data Editable?: No</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4a-record-aggregations/#maximum","title":"Maximum","text":"<ul> <li>Data Type: Same as the type of column accepted</li> <li>Description: Show the maximum value of all values in the column.</li> <li>Variables Accepted:<ul> <li>Column:<ul> <li>Description: The column to aggregate.</li> <li>Type Multiple Record Number-Like</li> </ul> </li> </ul> </li> <li>Data Editable?: No</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4a-record-aggregations/#median","title":"Median","text":"<ul> <li>Data Type: Same as the type of column accepted</li> <li>Description: Show the median value of all values in the column.</li> <li>Variables Accepted:<ul> <li>Column:<ul> <li>Description: The column to aggregate.</li> <li>Type Multiple Record Number-Like</li> </ul> </li> </ul> </li> <li>Data Editable?: No</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4a-record-aggregations/#sum","title":"Sum","text":"<ul> <li>Data Type: Same as the type of column accepted</li> <li>Description: Show the sum of all values in the column.</li> <li>Variables Accepted:<ul> <li>Column:<ul> <li>Description: The column to aggregate.</li> <li>Type Multiple Record Number-Like</li> </ul> </li> </ul> </li> <li>Data Editable?: No</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4a-record-aggregations/#product","title":"Product","text":"<ul> <li>Data Type: Same as the type of column accepted</li> <li>Description: Show the product of all values in the column.</li> <li>Variables Accepted:<ul> <li>Column:<ul> <li>Description: The column to aggregate.</li> <li>Type Multiple Record Number-Like</li> </ul> </li> </ul> </li> <li>Data Editable?: No</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4b-random-generators/","title":"(b) Random Generators","text":"<p>These formulas generate random data.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4b-random-generators/#random-number","title":"Random Number","text":"<ul> <li>Data Type: Integer or Decimal, depending on variable.</li> <li>Description: Generates a random number based on supplied parameters.</li> <li>Variables Accepted:<ul> <li>Lower Bound:<ul> <li>Type: Decimal</li> <li>Description: The lower bound for the random generator.</li> <li>Default Value: 0.0</li> </ul> </li> <li>Upper Bound:<ul> <li>Type: Decimal</li> <li>Description: The upper bound for the random generator.</li> <li>Default Value: 1.0</li> </ul> </li> <li>Allow Decimals?:<ul> <li>Type: Boolean</li> <li>Description: Whether to allow generation of decimals.</li> <li>Default Value: TRUE</li> </ul> </li> </ul> </li> <li>Date Editable?: No</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4b-random-generators/#implementation","title":"Implementation","text":"<p>We should build a custom function using the <code>random()</code> PostgreSQL function. </p> <p>Docs are here, see Table 9.6.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4b-random-generators/#random-uuid","title":"Random UUID","text":"<ul> <li>Data Type: UUID</li> <li>Description: Generates a random UUID</li> <li>Variables Accepted: None</li> <li>Date Editable?: No</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4b-random-generators/#implementation_1","title":"Implementation","text":"<p>The <code>gen_random_uuid()</code> PostgreSQL function. </p> <p>Docs are here.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4c-text-formulas/","title":"(c) Text Formulas","text":"<p>These formulas operate on text and text-like types. They are based on PostgreSQL string functions.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4c-text-formulas/#character-count","title":"Character Count","text":"<p>Returns number of characters in the text</p> <ul> <li>Date Type: Integer</li> <li>Variables Accepted:<ul> <li>Text:<ul> <li>Type: Single Record Text-Like</li> <li>Description: Text to count</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>length</code> function</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4c-text-formulas/#concatenate","title":"Concatenate","text":"<p>Concatenates two strings together.</p> <ul> <li>Date Type: Text</li> <li>Variables Accepted:<ul> <li>Text 1:<ul> <li>Type: Single Record Text-Like</li> <li>Description: First text</li> </ul> </li> <li>Text 2:<ul> <li>Type: Single Record Text-Like</li> <li>Description: Second text</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>||</code> operator </li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4c-text-formulas/#contains","title":"Contains","text":"<p>Checks if a text contains another text</p> <ul> <li>Date Type: Boolean</li> <li>Variables Accepted:<ul> <li>Base Text:<ul> <li>Type: Single Record Text-Like</li> <li>Description: Container text to check</li> </ul> </li> <li>Text:<ul> <li>Type: Single Record Text-Like</li> <li>Description: Contained text</li> </ul> </li> <li>Case Sensitive?:<ul> <li>Type: Boolean</li> <li>Description: Whether the checking should be case sensitive</li> <li>Default Value, False</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: Use <code>LIKE</code> operator</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4c-text-formulas/#lowercase","title":"Lowercase","text":"<p>Converts text to lowercase</p> <ul> <li>Date Type: Text</li> <li>Variables Accepted:<ul> <li>Text:<ul> <li>Type: Single Record Text-Like</li> <li>Description: Text to convert</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>lower</code> function</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4c-text-formulas/#overlay","title":"Overlay","text":"<p>Overlays a string at the specified position with another string</p> <ul> <li>Date Type: Text</li> <li>Variables Accepted:<ul> <li>Base Text:<ul> <li>Type: Single Record Text-Like</li> <li>Description: The text that will be processed</li> </ul> </li> <li>Starting Position:<ul> <li>Type: Integer</li> <li>Description: Starting position of text to be replaced</li> </ul> </li> <li>Overlay Text:<ul> <li>Type: Single Record Text-Like</li> <li>Description: Text to overlay on the base text </li> </ul> </li> <li>Count:<ul> <li>Type: Integer</li> <li>Description: Number of characters to replace</li> <li>Default Value, Length of the Overlay Text</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>overlay</code> function</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4c-text-formulas/#repeat","title":"Repeat","text":"<p>Repeats a string a given number of times.</p> <ul> <li>Date Type: Text</li> <li>Variables Accepted:<ul> <li>Text:<ul> <li>Type: Single Record Text-Like</li> <li>Description: Text to repeat</li> </ul> </li> <li>Number of Repetitions:<ul> <li>Type: Integer</li> <li>Description: Number of times to repeat the text</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>repeat</code> function</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4c-text-formulas/#replace","title":"Replace","text":"<p>Replaces all occurrences of a substring with another string.</p> <ul> <li>Date Type: Text</li> <li>Variables Accepted:<ul> <li>Base Text:<ul> <li>Type: Single Record Text-Like</li> <li>Description: The text that will be processed</li> </ul> </li> <li>Text to be Replaced:<ul> <li>Type: Single Record Text-Like</li> <li>Description: The substring to replace</li> </ul> </li> <li>Replacement Text:<ul> <li>Type: Single Record Text-Like</li> <li>Description: Text that will be used as the replacement</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>replace</code> function</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4c-text-formulas/#reverse","title":"Reverse","text":"<p>Reverses the text</p> <ul> <li>Date Type: Text</li> <li>Variables Accepted:<ul> <li>Text:<ul> <li>Type: Single Record Text-Like</li> <li>Description: Text to reverse</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>reverse</code> function</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4c-text-formulas/#starts-with","title":"Starts With","text":"<p>Returns a boolean that indicates whether a string starts with another string</p> <ul> <li>Date Type: Boolean</li> <li>Variables Accepted:<ul> <li>Base Text:<ul> <li>Type: Single Record Text-Like</li> <li>Description: The text that will be checked</li> </ul> </li> <li>Potential Starting Text:<ul> <li>Type: Single Record Text-Like</li> <li>Description: The text that is being compared with the beginning of the base text</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>starts_with</code> function</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4c-text-formulas/#substring","title":"Substring","text":"<p>Gets a substring of text at the given position</p> <ul> <li>Date Type: Text</li> <li>Variables Accepted:<ul> <li>Base Text:<ul> <li>Type: Single Record Text-Like</li> <li>Description: The text that will be processed</li> </ul> </li> <li>Starting Position:<ul> <li>Type: Integer</li> <li>Description: Starting position of text to be extracted</li> <li>Default Value: 0</li> </ul> </li> <li>Count:<ul> <li>Type: Integer</li> <li>Description: Number of characters to extract</li> <li>Default Value: Length of string - starting position</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>substring</code> function with this signature: <code>substring ( string text [ FROM start integer ] [ FOR count integer ] ) \u2192 text</code></li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4c-text-formulas/#title-case","title":"Title Case","text":"<p>Converts text to title case.</p> <ul> <li>Date Type: Text</li> <li>Variables Accepted:<ul> <li>Text:<ul> <li>Type: Single Record Text-Like</li> <li>Description: Text to convert</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>initcap</code> function</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4c-text-formulas/#trim","title":"Trim","text":"<p>Trims characters from the start or end of text (or both).</p> <ul> <li>Date Type: Text</li> <li>Variables Accepted:<ul> <li>Base Text:<ul> <li>Type: Single Record Text-Like</li> <li>Description: The text that will be processed</li> </ul> </li> <li>Trim Location:<ul> <li>Type: Choice (Options: \u201cStart\u201d, \u201cEnd\u201d, \u201cBoth\u201d)</li> <li>Description: Where the trimming will happen</li> <li>Default Value: Both</li> </ul> </li> <li>Characters to Trim:<ul> <li>Type: Single Record Text-Like</li> <li>Description: Characters to trim. The text provided will be treated as a list of characters; they will not be treated as a single word (e.g. <code>xyz</code> will trim any of <code>x</code>, <code>y</code>, and <code>z</code>)</li> <li>Default Value: Space (<code></code>)</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>trim</code> function</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4c-text-formulas/#uppercase","title":"Uppercase","text":"<p>Converts text to uppercase</p> <ul> <li>Date Type: Text</li> <li>Variables Accepted:<ul> <li>Text:<ul> <li>Type: Single Record Text-Like</li> <li>Description: Text to convert</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>upper</code> function</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4d-number-formulas/","title":"(d) Number Formulas","text":"<p>These formulas operate on text and text-like types. They are based on PostgreSQL mathematical functions and operators and comparison operators.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4d-number-formulas/#absolute-value","title":"Absolute Value","text":"<p>Returns the absolute value of the provided number.</p> <ul> <li>Date Type: Number</li> <li>Variables Accepted:<ul> <li>Number:<ul> <li>Type: Single Record Number-Like</li> <li>Description: Input number</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>abs()</code> function or <code>@</code> operator</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4d-number-formulas/#add","title":"Add","text":"<p>Adds two numbers together.</p> <ul> <li>Date Type: Number</li> <li>Variables Accepted:<ul> <li>Number 1:<ul> <li>Type: Single Record Number-Like</li> <li>Description: First number</li> </ul> </li> <li>Number 2:<ul> <li>Type: Single Record Number-Like</li> <li>Description: Second number</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>+</code> operator </li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4d-number-formulas/#ceiling","title":"Ceiling","text":"<p>Returns the ceiling (nearest integer greater than or equal to) of the provided number.</p> <ul> <li>Date Type: Number</li> <li>Variables Accepted:<ul> <li>Number:<ul> <li>Type: Single Record Number-Like</li> <li>Description: Input number</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>ceil</code> or <code>ceiling</code> function.</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4d-number-formulas/#comparison","title":"Comparison","text":"<p>Compares two numbers and returns the result</p> <ul> <li>Date Type: Boolean</li> <li>Variables Accepted:<ul> <li>Number 1:<ul> <li>Type: Single Record Number-Like</li> <li>Description: First number</li> </ul> </li> <li>Number 2:<ul> <li>Type: Single Record Number-Like</li> <li>Description: Second number</li> </ul> </li> <li>Comparison:<ul> <li>Type: Choice (choices: <code>&gt;</code>, <code>&gt;=</code>, <code>=</code> <code>!=</code>, <code>&lt;=</code>, <code>&lt;</code>)</li> <li>Description: Comparison to use</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>&gt;</code>, <code>&gt;=</code>, <code>=</code> <code>!=</code>, <code>&lt;=</code>, <code>&lt;</code> operators</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4d-number-formulas/#cube-root","title":"Cube Root","text":"<p>Returns the cube root of the provided number.</p> <ul> <li>Date Type: Number</li> <li>Variables Accepted:<ul> <li>Number:<ul> <li>Type: Single Record Number-Like</li> <li>Description: Input number</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>cbrt()</code> function or <code>||/</code> operator</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4d-number-formulas/#divide","title":"Divide","text":"<p>Divides a number by another number.</p> <ul> <li>Date Type: Number</li> <li>Variables Accepted:<ul> <li>Number:<ul> <li>Type: Single Record Number-Like</li> <li>Description: Number to divide</li> </ul> </li> <li>Number to Divide By:<ul> <li>Type: Single Record Number-Like</li> <li>Description: Number to divide by</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>/</code> operator. Note that we should convert integers to decimals before dividing.</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4d-number-formulas/#factorial","title":"Factorial","text":"<p>Returns the factorial of the provided number.</p> <ul> <li>Date Type: Number</li> <li>Variables Accepted:<ul> <li>Number:<ul> <li>Type: Single Record Number-Like</li> <li>Description: Input number</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>!</code> or <code>!!</code> operator</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4d-number-formulas/#floor","title":"Floor","text":"<p>Returns the floor (nearest integer less than or equal to) of the provided number.</p> <ul> <li>Date Type: Number</li> <li>Variables Accepted:<ul> <li>Number:<ul> <li>Type: Single Record Number-Like</li> <li>Description: Input number</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>floor</code> function.</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4d-number-formulas/#logarithm","title":"Logarithm","text":"<p>Calculate the logarithm of a number.</p> <ul> <li>Date Type: Number</li> <li>Variables Accepted:<ul> <li>Number:<ul> <li>Type: Single Record Number-Like</li> <li>Description: Input number</li> </ul> </li> <li>Base:<ul> <li>Type: Single Record Number-Like</li> <li>Description: Base to use for the logarithm</li> <li>Default Value: 10</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>log</code> function</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4d-number-formulas/#logarithm-natural","title":"Logarithm (Natural)","text":"<p>Calculate the natural logarithm of a number.</p> <ul> <li>Date Type: Number</li> <li>Variables Accepted:<ul> <li>Number:<ul> <li>Type: Single Record Number-Like</li> <li>Description: Input number</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>ln</code> function</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4d-number-formulas/#modulo","title":"Modulo","text":"<p>Divides a number by another number and returns the remainder</p> <ul> <li>Date Type: Number</li> <li>Variables Accepted:<ul> <li>Number:<ul> <li>Type: Single Record Number-Like</li> <li>Description: Number to divide</li> </ul> </li> <li>Number to Divide By:<ul> <li>Type: Single Record Number-Like</li> <li>Description: Number to divide by</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>%</code> operator or <code>mod</code> function.</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4d-number-formulas/#multiply","title":"Multiply","text":"<p>Multiplies two numbers together.</p> <ul> <li>Date Type: Number</li> <li>Variables Accepted:<ul> <li>Number 1:<ul> <li>Type: Single Record Number-Like</li> <li>Description: First number</li> </ul> </li> <li>Number 2:<ul> <li>Type: Single Record Number-Like</li> <li>Description: Second number</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>*</code> operator </li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4d-number-formulas/#power","title":"Power","text":"<p>Calculate the exponent of a number.</p> <ul> <li>Date Type: Number</li> <li>Variables Accepted:<ul> <li>Number:<ul> <li>Type: Single Record Number-Like</li> <li>Description: Input number</li> </ul> </li> <li>Power:<ul> <li>Type: Single Record Number-Like</li> <li>Description: Power to raise the input number to</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>power</code> function or <code>^</code> operator</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4d-number-formulas/#round","title":"Round","text":"<p>Round to a given decimal place.</p> <ul> <li>Date Type: Number</li> <li>Variables Accepted:<ul> <li>Number:<ul> <li>Type: Single Record Number-Like</li> <li>Description: Input number</li> </ul> </li> <li>Decimal Place:<ul> <li>Type: Integer</li> <li>Description: Decimal places to round to</li> <li>Default Value: 0</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>round</code> function </li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4d-number-formulas/#square-root","title":"Square Root","text":"<p>Returns the square root of the provided number.</p> <ul> <li>Date Type: Number</li> <li>Variables Accepted:<ul> <li>Number:<ul> <li>Type: Single Record Number-Like</li> <li>Description: Input number</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>sqrt()</code> function or <code>|/</code> operator</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4d-number-formulas/#subtract","title":"Subtract","text":"<p>Subtracts a number from another number.</p> <ul> <li>Date Type: Number</li> <li>Variables Accepted:<ul> <li>Number:<ul> <li>Type: Single Record Number-Like</li> <li>Description: Number to subtract from</li> </ul> </li> <li>Number to Subtract:<ul> <li>Type: Single Record Number-Like</li> <li>Description: Number to subtract</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>-</code> operator </li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4d-number-formulas/#truncate","title":"Truncate","text":"<p>Truncate to a given decimal place.</p> <ul> <li>Date Type: Number</li> <li>Variables Accepted:<ul> <li>Number:<ul> <li>Type: Single Record Number-Like</li> <li>Description: Input number</li> </ul> </li> <li>Decimal Place:<ul> <li>Type: Integer</li> <li>Description: Decimal places to truncate to</li> <li>Default Value: 0</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>trunc</code> function </li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4e-boolean-formulas/","title":"(e) Boolean Formulas","text":"<p>These formulas operate on or output boolean types. They are based on PostgreSQL logical operators.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4e-boolean-formulas/#and","title":"And","text":"<p>Compares values to see if both are true. See this table for return values:</p> a b a AND b TRUE TRUE TRUE TRUE FALSE FALSE TRUE NULL NULL FALSE FALSE FALSE FALSE NULL FALSE NULL NULL NULL <ul> <li>Date Type: Boolean</li> <li>Variables Accepted:<ul> <li>Boolean 1:<ul> <li>Type: Single Record Boolean-Like</li> <li>Description: First boolean</li> </ul> </li> <li>Boolean 2:<ul> <li>Type: Single Record Boolean-Like</li> <li>Description: Second boolean</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>AND</code> operator</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4e-boolean-formulas/#is-false","title":"Is False","text":"<p>Returns whether a particular set of filters doesn\u2019t apply to a column.</p> <ul> <li>Date Type: Boolean</li> <li>Variables Accepted:<ul> <li>Column:<ul> <li>Type: Single Record Column Reference</li> <li>Description: Column to apply filters to</li> </ul> </li> <li>Filters:<ul> <li>Type: Filters</li> <li>Description: Filters to check column values against</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: Custom</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4e-boolean-formulas/#is-true","title":"Is True","text":"<p>Returns whether a particular set of filters applies to a column.</p> <ul> <li>Date Type: Boolean</li> <li>Variables Accepted:<ul> <li>Column:<ul> <li>Type: Single Record Column Reference</li> <li>Description: Column to apply filters to</li> </ul> </li> <li>Filters:<ul> <li>Type: Filters</li> <li>Description: Filters to check column values against</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: Custom</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4e-boolean-formulas/#not","title":"Not","text":"<p>Returns the opposite boolean value of the input value.</p> <ul> <li>Date Type: Boolean</li> <li>Variables Accepted:<ul> <li>Boolean:<ul> <li>Type: Single Record Boolean-Like</li> <li>Description: Input boolean</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>NOT</code> operator</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4e-boolean-formulas/#or","title":"Or","text":"<p>Compares values to see if either one is true. See this table for return values:</p> a b a OR b TRUE TRUE TRUE TRUE FALSE TRUE TRUE NULL TRUE FALSE FALSE FALSE FALSE NULL NULL NULL NULL NULL <ul> <li>Date Type: Boolean</li> <li>Variables Accepted:<ul> <li>Boolean 1:<ul> <li>Type: Single Record Boolean-Like</li> <li>Description: First boolean</li> </ul> </li> <li>Boolean 2:<ul> <li>Type: Single Record Boolean-Like</li> <li>Description: Second boolean</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>OR</code> operator</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4f-datetime-formulas/","title":"(f) Date, Time, and Duration Formulas","text":"<p>These formulas operate on date &amp; time types. They are based on PostgreSQL date/time functions and operators.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4f-datetime-formulas/#add-duration-to-date","title":"Add Duration to Date","text":"<p>Adds a duration to a date or datetime.</p> <ul> <li>Date Type: Datetime or Time (depends on input) </li> <li>Variables Accepted:<ul> <li>Date or Time:<ul> <li>Type: Single Record Date or Time-Like</li> <li>Description: Date or time to add the duration to</li> </ul> </li> <li>Duration:<ul> <li>Type: Single Record Duration-Like</li> <li>Description: Duration to add</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>+</code> operator </li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4f-datetime-formulas/#subtract-duration-from-date","title":"Subtract Duration from Date","text":"<p>Subtracts a duration from a date or datetime.</p> <ul> <li>Date Type: Datetime or Time (depends on input)</li> <li>Variables Accepted:<ul> <li>Date or Time:<ul> <li>Type: Single Record Date or Time-Like</li> <li>Description: Date or time to subtract the duration from</li> </ul> </li> <li>Duration:<ul> <li>Type: Single Record Duration-Like</li> <li>Description: Duration to subtract</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>-</code> operator </li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4f-datetime-formulas/#date-difference-age","title":"Date Difference (Age)","text":"<p>Subtracts a datetime type from a datetime type and returns the resulting duration</p> <ul> <li>Date Type: Duration </li> <li>Variables Accepted:<ul> <li>Date or Time 1:<ul> <li>Type: Single Record Date or Time-Like</li> <li>Description: First date(time)</li> </ul> </li> <li>Date or Time 2:<ul> <li>Type: Single Record Date or Time-Like</li> <li>Description: Second date(time)</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>-</code> operator </li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4f-datetime-formulas/#current-date","title":"Current Date","text":"<p>Always shows current date.</p> <ul> <li>Date Type: Date </li> <li>Variables Accepted: None</li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>current_date</code> function</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4f-datetime-formulas/#current-time","title":"Current Time","text":"<p>Always shows current time.</p> <ul> <li>Date Type: Time </li> <li>Variables Accepted: None</li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>current_time</code> function</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4f-datetime-formulas/#current-date-time","title":"Current Date &amp; Time","text":"<p>Always shows current date and time.</p> <ul> <li>Date Type: Datetime </li> <li>Variables Accepted: None</li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>current_timestamp</code> function</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4f-datetime-formulas/#truncate","title":"Truncate","text":"<p>Truncates date to specified precision.</p> <ul> <li>Date Type: Datetime </li> <li>Variables Accepted:<ul> <li>Date or Time:<ul> <li>Type: Single Record Datetime-Like</li> <li>Description: Datetime to truncate</li> </ul> </li> <li>Precision:<ul> <li>Type: Choice. Options:<ul> <li>microseconds</li> <li>milliseconds</li> <li>second</li> <li>minute</li> <li>hour</li> <li>day</li> <li>week</li> <li>month</li> <li>quarter</li> <li>year</li> <li>decade</li> <li>century</li> <li>millennium</li> </ul> </li> <li>Description: Precision to truncate to.</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>date_trunc</code> function </li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4f-datetime-formulas/#extract","title":"Extract","text":"<p>Extracts a specific part of a date from a datetime.</p> <ul> <li>Date Type: Text </li> <li>Variables Accepted:<ul> <li>Date or Time:<ul> <li>Type: Single Record Datetime-Like</li> <li>Description: Datetime to extract the part from</li> </ul> </li> <li>Precision:<ul> <li>Type: Choice. Options:<ul> <li>microseconds</li> <li>milliseconds</li> <li>second</li> <li>minute</li> <li>hour</li> <li>day</li> <li>week</li> <li>month</li> <li>quarter</li> <li>year</li> <li>decade</li> <li>century</li> <li>millennium</li> <li>day of week</li> <li>day of year</li> <li>epoch</li> <li>day of week (ISO)</li> <li>year (ISO)</li> <li>timezone</li> <li>timezone hour</li> <li>timezone minute</li> </ul> </li> <li>Description: Precision to truncate to.</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>extract</code> function. This then needs to be processed if needed into a friendly representation based on the display options of the column (e.g. <code>1</code> for month might become <code>January</code>)</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4f-datetime-formulas/#convert-timezone","title":"Convert Timezone","text":"<p>Converts a datetime into a specified timezone.</p> <ul> <li>Date Type: Datetime </li> <li>Variables Accepted:<ul> <li>*Date or Time:<ul> <li>Type: Single Record Datetime-Like</li> <li>Description: Timestamp to convert</li> </ul> </li> <li>Timezone:<ul> <li>Type: Choice. Options are a list of valid timezones.</li> <li>Description: Timezone to convert to</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>timezone(zone, timestamp)</code> function </li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4g-list-formulas/","title":"(g) List Formulas","text":"<p>These formulas operate on list types. They are based on PostgreSQL array functions and operators and row and array comparisons.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4g-list-formulas/#append","title":"Append","text":"<p>Adds a list item to a list</p> <ul> <li>Date Type: List</li> <li>Variables Accepted:<ul> <li>List:<ul> <li>Type: Single Record List-Like</li> <li>Description: List to add to</li> </ul> </li> <li>Item:<ul> <li>Type: Single Record-Like of the data type of the list items</li> <li>Description: List item to add</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>||</code> operator or <code>array_append</code> function</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4g-list-formulas/#concatenate","title":"Concatenate","text":"<p>Turns two lists into one big list.</p> <ul> <li>Date Type: List</li> <li>Variables Accepted:<ul> <li>List 1:<ul> <li>Type: Single Record List-Like</li> <li>Description: First list</li> </ul> </li> <li>List 2:<ul> <li>Type: Single Record List-Like</li> <li>Description: Second list</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>||</code> operator </li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4g-list-formulas/#contains-list","title":"Contains List","text":"<p>Checks if all items in a list are also in another list.</p> <ul> <li>Date Type: Boolean</li> <li>Variables Accepted:<ul> <li>Container List:<ul> <li>Type: Single Record List-Like</li> <li>Description: List that contains items to check</li> </ul> </li> <li>Contains List:<ul> <li>Type: Single Record List-Like</li> <li>Description: List whose items should be contained in the other list</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>@&gt;</code> operator </li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4g-list-formulas/#contains-item","title":"Contains Item","text":"<p>Checks if a specific item is in a list.</p> <ul> <li>Date Type: Boolean</li> <li>Variables Accepted:<ul> <li>List:<ul> <li>Type: Single Record List-Like</li> <li>Description: List that contains items to check</li> </ul> </li> <li>Item:<ul> <li>Type: Same as data type of the List</li> <li>Description: Item to check</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>IN</code> construct </li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4g-list-formulas/#overlap","title":"Overlap","text":"<p>Checks if two lists have any items in common.</p> <ul> <li>Date Type: Boolean</li> <li>Variables Accepted:<ul> <li>List 1:<ul> <li>Type: Single Record List-Like</li> <li>Description: First list</li> </ul> </li> <li>List 2:<ul> <li>Type: Single Record List-Like</li> <li>Description: Second list</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>&amp;&amp;</code> operator </li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4g-list-formulas/#convert-to-text","title":"Convert to Text","text":"<p>Converts a list into text.</p> <ul> <li>Date Type: Text</li> <li>Variables Accepted:<ul> <li>List:<ul> <li>Type: Single Record List-Like</li> <li>Description: List to turn into text</li> </ul> </li> <li>Delimiter:<ul> <li>Type: Text</li> <li>Description: What to use to separate list items</li> <li>Default Value: <code>,</code></li> </ul> </li> <li>NULL text:<ul> <li>Type: Text</li> <li>Description: What to show null values as</li> <li>Default Value: `` (NULL values will not be shown at all)     </li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>array_length</code> function </li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4g-list-formulas/#length","title":"Length","text":"<p>Returns the count of a list</p> <ul> <li>Date Type: Integer</li> <li>Variables Accepted:<ul> <li>List:<ul> <li>Type: Single Record List-Like</li> <li>Description: List to count</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>array_length</code> function </li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4h-cumulative-formulas/","title":"(h) Cumulative Formulas","text":"<p>These formulas show cumulative values that build on previous rows.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4h-cumulative-formulas/#previous-row","title":"Previous Row","text":"<p>Shows data from a previous row, in case you want to see it side-by-side with the current row.</p> <ul> <li>Date Type: Same as Input Column</li> <li>Variables Accepted:<ul> <li>*Column:<ul> <li>Type: Query Column Reference</li> <li>Description: Column to show</li> </ul> </li> <li>Offset:<ul> <li>Type: Integer</li> <li>Description: How many rows back to go</li> <li>Default Value: 1</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: We need to write a custom function.</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4h-cumulative-formulas/#rolling-average","title":"Rolling Average","text":"<p>Shows an average of the data in a given column over the past X rows.</p> <ul> <li>Date Type: Decimal</li> <li>Variables Accepted:<ul> <li>*Column:<ul> <li>Type: Single Record Number-Like</li> <li>Description: Column to use for the average</li> </ul> </li> <li>Number of Rows:<ul> <li>Type: Integer</li> <li>Description: How many previous rows to average</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: We need to write a custom function.</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4h-cumulative-formulas/#percentage-change","title":"Percentage Change","text":"<p>Shows the percentage changed from the previous value in the row.</p> <ul> <li>Date Type: Decimal</li> <li>Variables Accepted:<ul> <li>*Column:<ul> <li>Type: Single Record Number-Like</li> <li>Description: Column to check changes</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: We need to write a custom function.</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4h-cumulative-formulas/#percentile","title":"Percentile","text":"<p>Shows the percentile of the current value compared to all values in the column.</p> <ul> <li>Date Type: Decimal</li> <li>Variables Accepted:<ul> <li>*Column:<ul> <li>Type: Single Record Number-Like</li> <li>Description: Column to check</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: We need to write a custom function.</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4h-cumulative-formulas/#running-total","title":"Running Total","text":"<p>Shows the running total of all values in the column so far.</p> <ul> <li>Date Type: Same as input column</li> <li>Variables Accepted:<ul> <li>*Column:<ul> <li>Type: Single Record Number-Like</li> <li>Description: Column to check</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: We need to write a custom function.</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4i-regex-formulas/","title":"(i) Regular Expression Formulas","text":"<p>These formulas use regular expressions. They are based on PostgreSQL string functions.</p>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4i-regex-formulas/#match","title":"Match","text":"<p>Returns the first text that matches a given regular expression.</p> <ul> <li>Date Type: Text</li> <li>Variables Accepted:<ul> <li>Text:<ul> <li>Type: Single Record Text-Like</li> <li>Description: The text that will be checked</li> </ul> </li> <li>Pattern:<ul> <li>Type: Regular Expression</li> <li>Description: The regular expression pattern that\u2019s being used to match</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>regexp_match</code> function</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4i-regex-formulas/#matches","title":"Matches","text":"<p>Returns all matches in a text that matches a given regular expression.</p> <ul> <li>Date Type: List</li> <li>Variables Accepted:<ul> <li>Text:<ul> <li>Type: Single Record Text-Like</li> <li>Description: The text that will be checked</li> </ul> </li> <li>Pattern:<ul> <li>Type: Regular Expression</li> <li>Description: The regular expression pattern that\u2019s being used to match</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>regexp_matches</code> function</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4i-regex-formulas/#replace","title":"Replace","text":"<p>Replaces matches of a given pattern with the replacement text.</p> <ul> <li>Date Type: Text</li> <li>Variables Accepted:<ul> <li>Text:<ul> <li>Type: Single Record Text-Like</li> <li>Description: The text that will be checked</li> </ul> </li> <li>Pattern:<ul> <li>Type: Regular Expression</li> <li>Description: The regular expression pattern that\u2019s being used to match</li> </ul> </li> <li>Replacement Text:<ul> <li>Type: Text</li> <li>Description: The text that is replacing the pattern</li> </ul> </li> <li>Number of Replacements:<ul> <li>Type: Choice (first or all)</li> <li>Description: Whether to replace all matches or just the first match</li> <li>Default Value: first</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>regexp_replace</code> function</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4i-regex-formulas/#split","title":"Split","text":"<p>Splits text into a list using a regular expression as the delimiter</p> <ul> <li>Date Type: List</li> <li>Variables Accepted:<ul> <li>Text:<ul> <li>Type: Single Record Text-Like</li> <li>Description: The text that will be split</li> </ul> </li> <li>Pattern:<ul> <li>Type: Regular Expression</li> <li>Description: The regular expression pattern that will be used as the delimiter</li> </ul> </li> </ul> </li> <li>Editable?: No</li> <li>PostgreSQL Mapping: <code>regexp_split_to_array</code> function</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4j-custom-formulas/","title":"(j) Custom Formulas","text":"<p>Custom formulas provide a more flexible interface to let users build their own formulas. Users can use:</p> <ul> <li>Column references</li> <li>Any of our pre-created formulas</li> <li>Logical operators (<code>and</code>, <code>or</code> , <code>not</code>)</li> <li>Mathematical operators (<code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>, <code>%</code>, <code>!</code>, <code>^</code>, etc.)</li> <li>Comparison operators (<code>&gt;</code>, <code>&lt;</code>, <code>&gt;=</code>, <code>&lt;=</code>, <code>=</code>, <code>!=</code>)</li> </ul>"},{"location":"archive/product/specs/2022-01-views/04-formulas/4j-custom-formulas/#interface-requirements","title":"Interface Requirements","text":"<p>We should provide a textual interface for users to enter custom formulas. This should support:</p> <ul> <li>Autocomplete for column references based on the available columns.</li> <li>Autocomplete for our pre-created formulas.<ul> <li>Once the user has started entering a formula, we should support autocomplete or dropdowns for formula options.</li> <li>For freeform inputs, we should show placeholders.</li> </ul> </li> <li>Some sort of help or autocomplete for operators.</li> </ul>"},{"location":"archive/product/specs/concepts/data-types/","title":"Data Types","text":""},{"location":"archive/product/specs/concepts/data-types/#about","title":"About","text":"<p>A data type is an attribute of a column in a Table. It describes the kind of data that can be stored by a record in that column. Examples of data types include text, number, date, email address, etc.</p> <p>Different data types have their own filters, groups, and other functionality available to help you work better with information of that type.</p> <p>Examples of filtering include:</p> <ul> <li>numbers based on whether they\u2019re greater than <code>2000</code></li> <li>dates based on whether they\u2019re before or after <code>today</code></li> <li>URLs based on whether they\u2019re <code>.com</code> or <code>.net</code>.</li> </ul> <p>Examples of grouping include: </p> <ul> <li>text based on first letter (<code>A</code>, <code>B</code>, <code>C</code>, etc.)</li> <li>numbers based on ranges (e.g. <code>1-100</code>, <code>101-200</code>, etc.)</li> <li>emails based on domain names (e.g. <code>gmail.com</code>, <code>outlook.com</code>, etc.)</li> </ul>"},{"location":"archive/product/specs/concepts/data-types/#data-types-in-mathesar","title":"Data Types in Mathesar","text":"<p>All Table columns have a data type in the Mathesar UI. By default, we use the text data type since it has the least restrictions, but you can change the data type to anything else. Here\u2019s an early design of what selecting a data type will look like:</p> <p></p> <p>You can pick from a set of options and depending on what option you pick (in this example, it\u2019s Number), you can choose additional settings to configure your column correctly. These additional settings are optional. </p>"},{"location":"archive/product/specs/concepts/data-types/#under-the-hood","title":"Under the hood","text":"<p>Unlike Databases, Schemas, Tables, and Views, data types are not a direct representation of the configuration in the database. We\u2019ve simplified data types within Mathesar to make them easier to use. Based on the settings you choose, we pick the correct underlying data type to use in the database. If you\u2019re curious, the underlying database configuration is shown as <code>Database Type</code> at the bottom of the menu (seen in the screenshot above)</p>"},{"location":"archive/product/specs/concepts/data-types/#usage","title":"Usage","text":"<ul> <li>We recommend that you take the time to set the correct data type for each of your columns to help ensure data quality. For example, if you\u2019re storing people\u2019s ages in a column, setting the column to the <code>Number</code> type will:</li> <li>Ensure that everything saved in that column is a number. You can\u2019t accidentally save someone\u2019s age as <code>34b</code> or <code>thirty four</code>.</li> <li>Give you access to operations that work on numbers. You can add up everyone\u2019s ages, average them, find all the rows belonging to someone older than <code>25</code>, group rows by age groups, and so on.</li> <li>Note to Mathesar administrators: Some UI data types such as emails and URLs require custom database types to be installed in order to be available for use. This will be covered in installation instructions for Mathesar users once they are written.</li> </ul>"},{"location":"archive/product/specs/concepts/data-types/#future-plans","title":"Future Plans","text":"<p>In the future, users will be able to plug in their own data types into Mathesar.</p>"},{"location":"archive/product/specs/concepts/data-types/#resources","title":"Resources","text":"<ul> <li>Code-focused wiki page on UI data types</li> <li>PostgreSQL documentation for data types.</li> </ul>"},{"location":"archive/product/specs/concepts/databases/","title":"Databases","text":""},{"location":"archive/product/specs/concepts/databases/#about","title":"About","text":"<p>A database is an organized collection of data, managed by software called a database management system. Please see \u201cWhat is a Database?\u201d on Oracle\u2019s website if you\u2019d like to know more about the general concept.</p>"},{"location":"archive/product/specs/concepts/databases/#databases-in-mathesar","title":"Databases in Mathesar","text":"<p>Mathesar provides a friendly user interface for databases managed by the PostgreSQL database management software. This means that you can connect one or more PostgreSQL databases to Mathesar and use Mathesar to interact with your data.</p> <p>Within a database, you can store different kinds of data in different Schemas. Data is stored in Tables and can also be manipulated through Views.</p>"},{"location":"archive/product/specs/concepts/databases/#usage","title":"Usage","text":"<ul> <li>Mathesar will create a new database for users unless one is already provided.</li> <li>We encourage users to use Schemas for storing different sets of unrelated data rather than creating multiple databases.</li> </ul>"},{"location":"archive/product/specs/concepts/filters/","title":"Filters","text":""},{"location":"archive/product/specs/concepts/filters/#about","title":"About","text":"<p>A Filter allows you to reduce the amount of data displayed in a Table or a View based on specified criteria.</p>"},{"location":"archive/product/specs/concepts/filters/#example","title":"Example","text":"<p>Imagine this table containing movies.</p> ID Title Release Year Watched? 1 Dante\u2019s Peak 1997 TRUE 2 The Bourne Identity 2002 TRUE 3 The Karate Kid 1984 TRUE 4 Full Metal Jacket 1987 TRUE 5 The French Dispatch 2021 FALSE 6 \u96e8\u6708\u7269\u8a9e 1953 FALSE 7 Big Trouble 2002 TRUE <p>You might want to only see movies you\u2019ve watched. You could apply the filter <code>\"Watched?\" is TRUE</code> and then you\u2019d only see these rows:</p> ID Title Release Year Watched? 1 Dante\u2019s Peak 1997 TRUE 2 The Bourne Identity 2002 TRUE 3 The Karate Kid 1984 TRUE 4 Full Metal Jacket 1987 TRUE 7 Big Trouble 2002 TRUE <p>Then you might want to see movies released after 1990 that you\u2019ve watched, so you\u2019d apply an additional filter of <code>Release Year &gt; 1990</code> and see:</p> ID Title Release Year Watched? 1 Dante\u2019s Peak 1997 TRUE 2 The Bourne Identity 2002 TRUE 7 Big Trouble 2002 TRUE"},{"location":"archive/product/specs/concepts/filters/#filters-in-mathesar","title":"Filters in Mathesar","text":"<p>You can filter data in a Table or a View in Mathesar using either the \u201cFilters\u201d button or each column\u2019s menu.</p>"},{"location":"archive/product/specs/concepts/filters/#further-reading","title":"Further Reading","text":"<ul> <li>If you\u2019re curious, you can look at our engineering page about Filters.</li> </ul>"},{"location":"archive/product/specs/concepts/schemas/","title":"Schemas","text":""},{"location":"archive/product/specs/concepts/schemas/#about","title":"About","text":"<p>A schema is a workspace within a Database that contains Tables, Views, and other database objects. </p>"},{"location":"archive/product/specs/concepts/schemas/#schemas-in-mathesar","title":"Schemas in Mathesar","text":"<p>You can organize your data into schemas in Mathesar and switch between schemas. In the Mathesar UI, you can only open one schema at a time.</p> <p>Every database starts off with a schema called <code>public</code>.</p>"},{"location":"archive/product/specs/concepts/schemas/#usage","title":"Usage","text":"<ul> <li>If you have different sets of unrelated data, we recommend using one schema for each set of data. For example, you can use separate schemas for (a) tracking your movie collection, and (b) budgeting.</li> <li>If you\u2019re familiar with Airtable, think of schemas as a \u201cBase\u201d. </li> </ul>"},{"location":"archive/product/specs/concepts/schemas/#resources","title":"Resources","text":"<ul> <li>To learn more about how schemas work at the database level, visit the PostgreSQL documentation.</li> </ul>"},{"location":"archive/product/specs/concepts/tables/","title":"Tables","text":""},{"location":"archive/product/specs/concepts/tables/#about","title":"About","text":"<p>A table is where data in a Database is actually stored.</p> <p>Tables consist of columns and records (rows).</p> <ul> <li>A column describes the data stored, including (but not limited to ) its Data Type.</li> <li>A record is a single unit of data that can be stored in a table. Each record stores data corresponding to each column defined on the table.</li> </ul>"},{"location":"archive/product/specs/concepts/tables/#tables-in-mathesar","title":"Tables in Mathesar","text":"<p>Creating a table is the first step to managing your data within Mathesar.</p>"},{"location":"archive/product/specs/concepts/tables/#example","title":"Example","text":"ID Name Country Age Birth 1 Jayanta Caoimhe Papua New Guinea 22 March 26, 1999 (8:01 AM) 2 Tatenda Birgitta Zimbabwe 8 October 31, 2013 (9:11 PM) 3 Barend Reinhild Belgium 45 October 2, 1976 (9:36 AM) <p>In this table, we have 5 columns and 3 records (rows).</p> <ul> <li>The columns are: <code>ID</code>, <code>Name</code>, <code>Country</code>, <code>Age</code>, and <code>Birth</code>.</li> <li>Each record fits the parameters defined by the column. So every record has a number as <code>ID</code> and date &amp; time as <code>Birth</code>.</li> </ul>"},{"location":"archive/product/specs/concepts/tables/#usage","title":"Usage","text":"<p>In order to avoid duplicating data and make data entry easier, we encourage users to set up a single table for each category of data and then create links betweeen them as needed.</p> <p>In the above example, it would be better to have a separate table for <code>Country</code> as follows.</p>"},{"location":"archive/product/specs/concepts/tables/#people","title":"People","text":"ID Name Country ID Age Birth 1 Jayanta Caoimhe 21 22 March 26, 1999 (8:01 AM) 2 Tatenda Birgitta 23 8 October 31, 2013 (9:11 PM) 3 Barend Reinhild 25 45 October 2, 1976 (9:36 AM)"},{"location":"archive/product/specs/concepts/tables/#countries","title":"Countries","text":"ID Country 21 Papua New Guinea 23 Zimbabwe 25 Belgium <p>Now, if you need to add a new person from Papua New Guinea to the People table, you don\u2019t need to type <code>Papua New Guinea</code> again and risk making a typo. You don\u2019t need to remember that Papua New Guinea\u2019s ID is 21 either - Mathesar offers auto-complete functionality for linked tables and will find the correct record from Countries when you start typing the country name.</p> <p>Although this is convenient for data entry, while looking at the data or analyzing it, you might want to see the full country name next to each person\u2019s name. For that functionality, you should set up a View. </p>"},{"location":"archive/product/specs/concepts/views/","title":"Views","text":""},{"location":"archive/product/specs/concepts/views/#about","title":"About","text":"<p>Views are \u201cvirtual tables\u201d. Data is presented in rows and columns just like a table, but these rows and columns are calculated on the fly by pulling other data from wherever it is stored.</p> <p>Views can involve combining data from multiple tables or other views, filtering, sorting, aggregating (grouping), or even creating entirely computed columns.</p> <p>Under the hood, views are defined by a database (SQL) query. </p>"},{"location":"archive/product/specs/concepts/views/#views-in-mathesar","title":"Views in Mathesar","text":"<p>We expect that Tables will be used for entering simple data quickly and Views will be used for looking at data, creating reports, or editing inter-related data easily.</p> <p>You should use Views when you\u2019d like to:</p> <ul> <li>see data aggregated across multiple tables in one place.</li> <li>bookmark a subset of data in a table (e.g. filtered, sorted, or grouped data)</li> <li>summarize data (e.g. have a column that shows counts of records in a table)</li> <li>compute data (e.g. subtract the value of one column from another column and show the result in a new column)</li> </ul>"},{"location":"archive/product/specs/concepts/views/#usage","title":"Usage","text":"<p>Tables that are structured to avoid data duplication (i.e. are properly normalized) are not the most useful for seeing the most relevant information in a single place.</p>"},{"location":"archive/product/specs/concepts/views/#views-vs-tables","title":"Views vs. Tables","text":"<p>To think about the difference between Views and Tables, here\u2019s an example. Imagine you want to track your movie watches in Mathesar. Questions you might be thinking about are:</p> <ul> <li>On what day of the week do I usually watch movies?</li> <li>When did I last see Brad Pitt in a movie?</li> <li>How many movies did I watch that were released in the 90s vs. the 2000s.</li> <li>What was the last foreign movie I watched?</li> </ul>"},{"location":"archive/product/specs/concepts/views/#table-structure","title":"Table Structure","text":"<p>In order to track the data necessary to answer these questions, here\u2019s a possible structure for your tables:</p>"},{"location":"archive/product/specs/concepts/views/#movies","title":"Movies","text":"ID Title Release Year Primary Language 13 Thelma &amp; Louise 1991 English 22 Meet Joe Black 1998 English 33 Crouching Tiger, Hidden Dragon 2000 Mandarin 41 Crazy Rich Asians 2018 English .. .. .. .."},{"location":"archive/product/specs/concepts/views/#actors","title":"Actors","text":"ID Name 34 Michelle Yeoh 45 Brad Pitt 71 Geena Davis 83 Zhang Ziyi .. .."},{"location":"archive/product/specs/concepts/views/#movie-actor-map","title":"Movie Actor Map","text":"ID Movie ID Actor ID 67 13 45 68 22 45 69 33 34 70 41 34 89 13 71 97 33 83 .. .. .."},{"location":"archive/product/specs/concepts/views/#movie-watch","title":"Movie Watch","text":"ID Movie ID Date 91 13 2021-10-13 100 22 2021-10-01 104 33 2021-09-23 190 41 2021-08-12 203 13 2019-01-20 .. .. .."},{"location":"archive/product/specs/concepts/views/#the-role-of-views","title":"The Role of Views","text":"<p>As is obvious, none of these tables answer your questions by themselves, even when filters, sorts, or aggregations are applied to an individual table. Also, when you watch a new movie, logging it would involve adding data to four separate tables. The job of views is to simplify that.</p> <p>Imagine a view with this structure:</p> ID Title Actors Last Watched Times Watched Language Release Year 13 Thelma &amp; Louise Brad Pitt, Geena Davis 2021-10-13 2 English 1991 22 Meet Joe Black Brad Pitt 2021-10-01 1 English 1998 33 Crouching Tiger, Hidden Dragon Michelle Yeoh, Zhang Ziyi 2021-09-23 1 Mandarin 2000 41 Crazy Rich Asians Michelle Yeoh 2021-08-12 1 English 2018 .. .. .. .. <p>Once you have set up this view, you could filter and sort to get answers to your questions, or add new movie watches easily by adding all relevant data from one place.</p>"},{"location":"archive/product/specs/concepts/views/#future-plans","title":"Future Plans","text":"<p>In the future, we will offer alternate display modes for Views (e.g. calendar, map, kanban, etc.).</p>"},{"location":"archive/product/technical-specs/dateandtime/","title":"Human Readable Dates and Times","text":""},{"location":"archive/product/technical-specs/dateandtime/#goals","title":"Goals","text":"<ol> <li>Users should be able to interact with dates, times, datetimes, and time durations in Mathesar in the most human-friendly way possible</li> <li>The UI should be extremely forgiving w.r.t. date/time input, and also display dates and times in a human-friendly way.</li> <li>The API should be extremely forgiving w.r.t. date/time input, but should return dates, times, and time durations in a more programmatic, i.e., consistent way than the UI.</li> <li>The UI and API should be consistent in the following way:  If the input string is accepted by both UI and API, they should always result in the same date/time being stored, regardless of the input method.</li> <li>The dates/time input strings accepted by the API should be a subset of those accepted by the UI. That is, there should be no dates/times/time durations that are accepted by the API, but which are invalidated by the UI.</li> </ol>"},{"location":"archive/product/technical-specs/dateandtime/#overall-input-flow","title":"Overall input flow","text":"<p>For the moment, the UI should simply send the input string along to the API to be handled by the data layer, which should use the underlying database to parse input strings into date/time types to avoid inconsistency. </p> <p>If we want to extend the set of understandable date/time input strings in the future, then the UI could parse the more exotic input strings into the appropriate canonical form described below and send that as the input to be stored to the API. The canonical form isn\u2019t required, but it\u2019s recommended since it guarantees the known value ending up stored in the database. Care should be taken to ensure that if the UI parses the string, then it\u2019s either </p> <ul> <li>a string which wouldn\u2019t be handled by the database parsing, or</li> <li>the parsing results in an identical value being stored as the one that would have resulted from sending the raw string to the API. </li> </ul> <p>If the UI is not able to parse the input, it should still send the raw input string to the API and let the data layer try to parse the string. This helps satisfy goal number 5. If the data layer is able to parse the string, then store it. Otherwise, raise a validation error.</p> <p>Another way to input data is through bulk import. In that case, we\u2019re completely reliant on the database parsing. This is the reason goal (4) is important.</p> <p>The PostgreSQL documentation regarding Date and Time types is here. Note especially the input and output of the various types.</p>"},{"location":"archive/product/technical-specs/dateandtime/#regarding-relative-times","title":"Regarding relative times","text":"<p>There are some relative dates / times which make sense, e.g. \u201ctomorrow\u201d, to store in a date column. These will not be stored in a \u201crelative\u201d way, though. They\u2019ll be stored as a static date or time (one day later than the current day in the example). As for durations, there\u2019s some weird overlap between intervals \u201c2 days ago\u201d and a specific time \u201c2 days ago\u201d. We\u2019ll choose whether to store the duration or a static time based on the column type or other context.</p>"},{"location":"archive/product/technical-specs/dateandtime/#overall-output-flow","title":"Overall output flow","text":"<p>For showing dates / times, they\u2019ll always be returned from the API in the appropriate canonical form described below. It\u2019s then up to the UI layer to format them for a pleasant display to the user.</p>"},{"location":"archive/product/technical-specs/dateandtime/#rfc-3339-based-on-iso-8601","title":"RFC 3339 (based on ISO 8601)","text":"<p>The canonical representation of a date, time, datetime, or duration in Mathesar will be as per the RFC 3339 spec, with very minor modifications to match our use case.</p>"},{"location":"archive/product/technical-specs/dateandtime/#canonical-representation-of-durations","title":"Canonical Representation of Durations","text":"<p>A duration describes the amount of time between two datetime values (or dates or times). Two durations can be added or subtracted to create another duration. A duration can be added to a date, time, or datetime to get a different date, time, or datetime. As per the RFC, the canonical representation of a duration is:</p> <p><pre><code>f'P{years}Y{months}M{days}DT{hours}H{minutes}M{seconds}S'\n</code></pre> Here, <code>seconds</code> can be an integer or float, and the other variables are all integers. For the canonical representation, we are filling in each unit with zeroes, which is optional in the RFC spec. To be completely proper, we aggregate units of time into larger ones where possible:</p> <ul> <li>seconds aggregate into minutes,</li> <li>minutes aggregate into hours, and</li> <li>months aggregate into years.</li> </ul> <p>Because some units of time (months and days) are inconsistent w.r.t. the number of smaller units they contain, we avoid aggregating some units:</p> <ul> <li>hours do not aggregate into days, and</li> <li>days do not aggregate into months.</li> </ul>"},{"location":"archive/product/technical-specs/dateandtime/#examples-of-canonical-durations","title":"Examples of Canonical Durations","text":"<ul> <li><code>'1 year 1 month, 1 day 1 hour 1 minute 1.1 seconds'</code> maps to <code>P1Y1M1DT1H1M1.1S</code></li> <li><code>'0 years 13 months 31 days 23 hours 60 minutes 61.1 seconds'</code> maps to <code>P1Y1M31DT24H1M1.1S</code></li> <li><code>'1 year -1 month 3 days 14 hours -10 minutes 30.4 seconds'</code> maps to <code>P0Y11M3DT13H50M30.4S</code></li> <li><code>'1 year -1 month 3 days 14 hours -10 minutes 30.4 seconds ago'</code> maps to <code>P0Y-11M-3DT-13H-50M-30.4S</code></li> </ul> <p>Notes:</p> <ul> <li>Commas and pluralization don\u2019t matter. </li> <li>We use <code>T</code> to separate the date and time portions.</li> <li>Take care of where the units do and do not aggregate into larger units in the second example.</li> <li>Take care of how units are disaggregated in the third and fourth examples (e.g., 1 year - 1 month is 11 months). Negatives can get complicated.</li> <li>In the final example, we see that <code>'ago'</code> negates the whole duration, but negative signs <code>'-'</code> affect only the single following unit.</li> </ul>"},{"location":"archive/product/technical-specs/dateandtime/#canonical-representation-of-dates-and-times","title":"Canonical Representation of Dates and Times","text":"<p>These will similarly follow RFC 3339.</p>"},{"location":"archive/product/technical-specs/dateandtime/#dates","title":"Dates","text":"<p><pre><code>f'{year}-{month}-{day} {era}'\n</code></pre> Here, <code>year</code> will have a minimum of 4 digits, using preceding zeroes for years like 0042 b.c. Years with more than 4 digits have the correct number of digits. <code>month</code> is a 2-digit integer, as is <code>day</code> (with preceding zeroes as needed). <code>era</code> will always be included, and will be either <code>BC</code> or <code>AD</code> as appropriate.</p>"},{"location":"archive/product/technical-specs/dateandtime/#examples-of-canonical-dates","title":"Examples of canonical dates","text":"<ul> <li><code>2022-02-15 AD</code></li> <li><code>0022-02-15 BC</code></li> <li><code>10101-01-01 AD</code></li> </ul>"},{"location":"archive/product/technical-specs/dateandtime/#times","title":"Times","text":"<p><pre><code>f'{hour}:{minute}:{second}{offset}'\n</code></pre> Here, <code>hour</code> and <code>minute</code> are both 2-digit integers between <code>00</code> and <code>59</code>. <code>second</code> is an integer or float which is at least <code>00</code> and which is strictly less than <code>60</code>. Each of these is padded to the tens place with zeroes if needed. The <code>offset</code> has a <code>+</code> or <code>-</code> prefix, and then the form <code>{hour}:{minute}</code> to describe the amount of the offset. In the special case where <code>offset</code> is zero, i.e., for UTC, we use <code>Z</code>.</p> <p>For columns which don\u2019t have time zones, we\u2019ll (of course) omit the <code>offset</code> entirely.</p>"},{"location":"archive/product/technical-specs/dateandtime/#examples-of-canonical-times","title":"Examples of canonical times","text":"<ul> <li><code>12:30:15Z</code></li> <li><code>12:30:15-08:00</code></li> <li><code>12:30:15+05:30</code></li> <li><code>12:30:15.5432</code></li> </ul>"},{"location":"archive/product/technical-specs/dateandtime/#datetime-combinations","title":"Date/Time combinations","text":"<p>For these, we use a combination of the pieces above to construct <pre><code>f'{year}-{month}-{day}T{hour}:{minute}{second}{offset} {era}'\n</code></pre> For columns which don\u2019t have time zones, we\u2019ll (of course) omit the <code>offset</code> entirely.</p>"},{"location":"archive/product/technical-specs/dateandtime/#examples-of-canonical-datetime-combinations","title":"Examples of canonical date/time combinations","text":"<ul> <li><code>2022-02-15T12:30:15Z AD</code></li> <li><code>0022-02-15T12:30:15 BC</code></li> <li><code>2222-02-15T12:30:15.12345-08:00 AD</code></li> </ul> <p>Note the <code>T</code> separator between the date and time portions.</p>"},{"location":"archive/product/technical-specs/dateandtime/#appendix-mathesar-vs-other-tools","title":"Appendix: Mathesar vs. other tools","text":"<p>This appendix should collect (over time) more and more examples of differences between date/time/datetime parsing in Mathesar and other tools.</p>"},{"location":"archive/product/technical-specs/dateandtime/#google-sheets","title":"Google Sheets","text":"Data type User input PostgreSQL Google Sheets date <code>7/8</code> error <code>2022-07-08</code> date <code>12/30/69</code> <code>2069-12-30</code> <code>1969-12-30</code> time <code>6 pm</code> error <code>18:00:00</code>"},{"location":"archive/product/technical-specs/ddl/","title":"DDL Operations","text":"<p>Data Definition Language (DDL) operations are those involving creating, altering, or dropping (deleting) database objects like:</p> <ul> <li>Tables</li> <li>Views</li> </ul> <p>The main interest we\u2019ll have in these operations in this context is to allow the user to refine or modify their data model, and have that model reflected in the underlying DB model. We\u2019ll mostly focus on table creation and manipulation, since that\u2019s the main expected operation of this type.</p>"},{"location":"archive/product/technical-specs/ddl/#goals","title":"Goals","text":"<ul> <li>User should be able to create tables</li> <li>User should be able to define tables in terms of already existing tables (e.g., joins, or by splitting columns out of a table)</li> <li>User should be able to recover previous models. <ul> <li>For DDL ops, it\u2019s not clear this should be an \u201cundo\u201d flow. The user might start with one big table, normalize their DB schema to reduce repetition for some manual input, then want to see everything back on one big table again. It\u2019s more of having different models with the same underlying data.</li> </ul> </li> </ul>"},{"location":"archive/product/technical-specs/ddl/#ddl-function-signatures","title":"DDL function signatures","text":"<ul> <li>Since DDL operations do not consistently support transactions, we should prioritize safety and correctness for these functions.</li> <li>In Python, these functions should take non-immutable types (e.g., strings) as input, and return non-immutable types as outputs.</li> <li>Ideally, these immutable types should be strings.</li> <li>This will enhance safety of these functions, and guarantee that they check the DB themselves for its state before commencing any changes.</li> <li>This will also enable better composability of these functions (it\u2019s easy to chain functions together that have the same output type (or tuples of it) as input type)</li> </ul>"},{"location":"archive/product/technical-specs/dependents-graph/","title":"Dependents graph spec","text":"<p>This spec describes the goals of the dependents graph feature and the details of its implementation.</p>"},{"location":"archive/product/technical-specs/dependents-graph/#overview","title":"Overview","text":"<p>Dependents Graph is a feature for returning a graph of dependent objects for a chosen Mathesar object (representing a single database object). At the time of writing, it\u2019s possible to get dependents for:</p> <ul> <li>Schemas</li> <li>Tables</li> <li>Table columns</li> </ul> <p>Information</p> <p>This can be easily extended and added to other types if their support appears in Mathesar since the entry point for the query is just the object OID (almost always the unique identifier of any object in the database).</p> <p>As possible dependent objects, it returns:</p> <ul> <li>Tables</li> <li>Views</li> <li>Table constraints</li> <li>Indexes</li> <li>Triggers</li> <li>Sequences</li> <li>Functions (as direct schemas\u2019 dependents)</li> </ul> <p>For each dependent object, a new set of dependents is constructed. The depth of the graph is artificially limited to 10, but the limit can be changed.</p> <p>For Mathesar-supported types, the graph returns its Django id (like the table\u2019s <code>14</code>). OIDs return along with names, for all other types of objects. </p>"},{"location":"archive/product/technical-specs/dependents-graph/#example","title":"Example:","text":"<pre><code>[\n    {\n        \"obj\": {\n            \"objid\": 147774,\n            \"type\": \"view\",\n            \"name\": \"superauthors\"\n        },\n        \"parent_obj\": {\n            \"id\": \"14\",\n            \"type\": \"table\"\n        },\n        \"level\": 1\n    },\n    {\n        \"obj\": {\n            \"id\": \"40\",\n            \"type\": \"table constraint\"\n        },\n        \"parent_obj\": {\n            \"id\": \"14\",\n            \"type\": \"table\"\n        },\n        \"level\": 1\n    },\n    {\n        \"obj\": {\n            \"id\": \"38\",\n            \"type\": \"table constraint\"\n        },\n        \"parent_obj\": {\n            \"id\": \"14\",\n            \"type\": \"table\"\n        },\n        \"level\": 1\n    },\n    {\n        \"obj\": {\n            \"objid\": 147832,\n            \"type\": \"view\",\n            \"name\": \"topauthors\"\n        },\n        \"parent_obj\": {\n            \"objid\": 147774,\n            \"type\": \"view\",\n            \"name\": \"superauthors\"\n        },\n        \"level\": 2\n    }\n]\n</code></pre> <p>This example represents a shortened version of the graph returned for a <code>Table</code> with an id <code>14</code>. You can see it by the properties of the <code>parent_obj</code> object of the first level of dependents. Since one of its dependents is a <code>View</code> with an OID <code>147774</code> , you can see one of its dependents on the second level.</p> <p>The actual graph will be much larger and include dependents for the other objects of the <code>14</code>th and all the other objects.</p> <p>It\u2019s possible to exclude specific types from the response using query parameters: <code>exclude=table&amp;exclude=view</code>.</p>"},{"location":"archive/product/technical-specs/dependents-graph/#possible-relations","title":"Possible relations:","text":"Referent type Dependent types Schema Table, View, Type, Function, Sequence Table View, Table constraint, Index, Trigger View View Column Table constraint, Index, View, Sequence Table constraint Type (domain) Column, Function Function Trigger Index Table constraint"},{"location":"archive/product/technical-specs/dependents-graph/#ui","title":"UI","text":"<p>Still under consideration</p> <p>When trying to delete one of the objects, a pop-up window should appear showing all the dependent objects that prevent a user from deleting it. Objects with their own dependents will have toggles to show them. By default, they should be collapsed, displaying just the first level. </p> <p>An example from Kriti:</p> <p></p> <p>An iteration based on a previous mockup which utilizes graph capabilities also:</p> <p>Option 1:</p> <p></p> <p>Option 2:</p> <p></p>"},{"location":"archive/product/technical-specs/dependents-graph/#implementation-details","title":"Implementation details","text":""},{"location":"archive/product/technical-specs/dependents-graph/#api","title":"API","text":"<p>At the API level, these queries return:</p> <ul> <li>Django ID and the type of the object for supported database objects (schemas, tables, table columns and table constraints)</li> <li>Name, type and OID of all the other objects</li> </ul> <p>Getting Django IDs for supported types happens in the serializer.</p> <p>Filtering</p> <p>A simple backend filter that allows specifying types to exclude from the result.</p> <p>Exclusion of those types will remove their dependents from the graph. A different kind of filter that \u201chides\u201d some nodes but keeps the hierarchy of the graph is about to be implemented in the UI layer.</p>"},{"location":"archive/product/technical-specs/dependents-graph/#db","title":"DB","text":"<p>The main source for dependents is the internal system catalogue called <code>pg_depend</code>. It stores all dependents, but we return just the <code>automatic</code> and <code>normal</code> ones (PostgreSQL: Documentation: 14: 52.18.\u00a0pg_depend)</p> <p>There is one case of implied dependency. It uses the <code>pg_rewrite</code> table to identify how views depend on other objects through the stored there rewrite rules .</p> <p>The main query for getting all dependents is generated in two steps:</p> <ol> <li><code>UNION</code> all CTEs, each of them representing dependents of a specific type (table, constraint, view, etc.)</li> <li>Recursive CTE that unions the base CTE (dependents of a requested object) and recursive part that queries dependents for all objects of the previous level</li> </ol> <p>Each row has its own dependency chain that helps to track the already included dependent objects and omits self-referencing or infinite loops.</p> <p>Each dependent-type CTE is a single lateral join between the <code>pg_depend</code> table and the <code>pg_identify_object</code> function. The function returns the type and name of the object.</p> <p>Column dependents</p> <p>Each object in the <code>pg_depend</code> is presented as a separate row, except the table column. Instead, there are maybe multiple entries with the same <code>refobjid</code> (the OID of the referenced object) but with different <code>refobjsubid</code>. The latter represents the attnum of the column. That\u2019s why looking for dependents of a column object is slightly different. To do it properly, the <code>refobjsubid</code> column must be used.</p>"},{"location":"archive/product/technical-specs/dependents-graph/#the-has_dependents-query","title":"The <code>has_dependents</code> query","text":"<p>There is a separate query that checks whether the specific object has any dependents. It\u2019s a separate one that just looks for dependents of a specific type. If any returns <code>True</code>.</p>"},{"location":"archive/product/technical-specs/dml/","title":"DML Operations","text":"<p>DML (Data Manipulation Language) operations involve adding (inserting), deleting, and modifying (updating) data in a database. This section deals with details about importing data, adding it to tables, and modifying/deleting records from tables.</p>"},{"location":"archive/product/technical-specs/dml/#goals","title":"Goals","text":"<ul> <li>User should be able to insert arbitrary data into tables.</li> <li>Given a table with an appropriate column set, a user should be able to import more data to that table.</li> <li>Given a table derived from a data import (say, of a CSV), and tables derived from that table through improved data modeling, a user should be able to modify any of the views of the data (i.e., one of the normalized tables, or the original non-normalized format), and maintain consistency.</li> <li>A user may import a spreadsheet, then refine the data model to reduce redundancy (e.g., by splitting the table according to 2NF)</li> <li>They might still want to import more data in the original format (say from an updated version of the original source).</li> <li>They might want to also add data manually using the improved model.</li> <li>Undo. The user should be able to undo inserts (easy), deletes (kinda easy) and updates (a little more difficult).</li> </ul>"},{"location":"archive/product/technical-specs/dml/#dml-function-signatures","title":"DML Function signatures","text":"<ul> <li>These (as opposed to DDL functions) are allowed mutable types (e.g., an SQLAlchemy <code>Table</code> object as input and output)</li> <li>We\u2019ll prioritize speed and efficiency over safety and accuracy for these.</li> <li>We expect these functions to be run quite often, and for reactivity to be essential.</li> <li>All DML operations are transactional in PostgreSQL (and indeed in the SQL standard).</li> <li>We expect these functions to be run quite often, and for reactivity to be essential.</li> </ul>"},{"location":"archive/product/technical-specs/import-preview-api/","title":"Import Preview API","text":"<p>Warning</p> <p>This spec is accurate as of 2021-09-06, but we will not be updating it in the future.</p> <p>Relevant issues are:</p> <p>#199, #200, and #201</p> <p>As specified in the table import design spec, we need to be able to support a flow where the user imports a CSV, then sees a preview of the table which would be created, with inferred types.  Thus, we need to create a table preview endpoint.</p>"},{"location":"archive/product/technical-specs/import-preview-api/#changing-whether-the-first-row-is-a-header","title":"Changing whether the first row is a header","text":"<p>In order to change whether the first row of the CSV is used as a header or not, we will need update the data file and recreate the table from it. This is accomplished by changing the <code>header</code> parameter of the data file resource via a <code>PATCH</code> request. This controls whether to use the first row as headers.</p>"},{"location":"archive/product/technical-specs/import-preview-api/#possible-type-alterations-for-a-column","title":"Possible type alterations for a column","text":"<p>The <code>columns</code> endpoint will now include the possible targets for type alteration of that column.  For example, a string can be altered to any type.  An integer, however, can\u2019t be altered to an email type. At the moment, possible target types will be determined only by the current type of the column, and not the data it contains.</p>"},{"location":"archive/product/technical-specs/import-preview-api/#preview-endpoint-behavior","title":"Preview Endpoint behavior","text":"<p>For previewing the inferred types and names of columns, we will use a new <code>previews</code> endpoint under the table detail endpoint.  We\u2019ll submit a <code>POST</code> to the endpoint to create the preview, and then receive a JSON formatted as in the normal table detail endpoint in return with the modified table. <pre><code>POST /api/db/vX/tables/&lt;table_id&gt;/previews/\n</code></pre> could have submitted JSON like: <pre><code>{\n    \"columns\": [\n        {\n            \"name\": \"mathesar_id\",\n            \"type\": \"INTEGER\",\n        },\n        {\n            \"name\": \"Center2\",\n            \"type\": \"VARCHAR\"\n        },\n        {\n            \"name\": \"Status\",\n            \"type\": \"VARCHAR\"\n        },\n        {\n            \"name\": \"Case Number\",\n            \"type\": \"VARCHAR\"\n        },\n        {\n            \"name\": \"Patent Number\",\n            \"type\": \"TEXT\"\n        }\n    ]\n}\n</code></pre> The full table blob should be returned, so a return for the above request could be something like: <pre><code>{\n    \"id\": 1,\n    \"name\": \"the_patents_table\",\n    \"schema\": 2,\n    \"created_at\": \"2021-07-07T09:00:30.108653Z\",\n    \"updated_at\": \"2021-07-07T09:00:30.108707Z\",\n    \"columns\": [\n        {\n            \"id\": 1,\n            \"name\": \"mathesar_id\",\n            \"type\": \"INTEGER\",\n            \"type_options\": null,\n            \"display_options\": null\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Center2\",\n            \"type\": \"VARCHAR\",\n            \"type_options\": null,\n            \"display_options\": null\n        },\n        {\n            \"id\": 3,\n            \"name\": \"Status\",\n            \"type\": \"VARCHAR\",\n            \"type_options\": null,\n            \"display_options\": null\n        },\n        {\n            \"id\": 4,\n            \"name\": \"Case Number\",\n            \"type\": \"VARCHAR\",\n            \"type_options\": null,\n            \"display_options\": null\n        },\n        {\n            \"id\": 5,\n            \"name\": \"Patent Number\",\n            \"type\": \"TEXT\",\n            \"type_options\": null,\n            \"display_options\": null\n        }\n    ],\n    \"records\": \"http://localhost:8000/api/v0/tables/1/records/\",\n    \"data_files\": [\n        1\n    ]\n}\n</code></pre></p>"},{"location":"archive/product/technical-specs/import-preview-api/#implementation-of-preview","title":"Implementation of Preview","text":"<p>Because we eventually want to do type inference in a temporary table, we\u2019ll avoid using the table resulting from the current process in the preview action.  Instead, the implementation will simply put together a select with casts (using the custom casting functions defined by the Mathesar installation) and aliases.</p>"},{"location":"archive/product/technical-specs/import-preview-api/#saving-changes","title":"Saving changes","text":"<p>The changes to column types and names can be saved by submitting a <code>PATCH</code> request to the <code>tables</code> endpoint, with the column list being the same as the <code>previews</code> request.  </p> <p>Table name changes should be submitted using the already existing <code>PATCH</code> behavior (i.e., a <code>PATCH</code> with the <code>name</code> key changed).</p> <p><pre><code>PATCH /api/db/vX/tables/&lt;table_id&gt;\n</code></pre> could submit a JSON like: <pre><code>{\n    \"columns\": [\n        {},\n        {\n            \"id\": 2,\n            \"name\": \"Center\"\n        },\n        {\n            \"id\": 3,\n            \"type\": \"TEXT\"\n        },\n        {\n            \"id\": 4,\n        },\n        {\n            \"id\": 5,\n            \"name\": \"Patent ID\",\n            \"type\": \"INTEGER\"\n        }\n    ]\n}\n</code></pre> The full table blob will be returned, so a return for the above request could be something like: <pre><code>{\n    \"id\": 1,\n    \"name\": \"the_patents_table\",\n    \"schema\": 2,\n    \"created_at\": \"2021-07-07T09:00:30.108653Z\",\n    \"updated_at\": \"2021-07-07T09:00:30.108707Z\",\n    \"columns\": [\n        {\n            \"id\": 1,\n            \"name\": \"mathesar_id\",\n            \"type\": \"INTEGER\",\n            \"type_options\": null,\n            \"display_options\": null\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Center\",\n            \"type\": \"VARCHAR\",\n            \"type_options\": null,\n            \"display_options\": null\n        },\n        {\n            \"id\": 3,\n            \"name\": \"Status\",\n            \"type\": \"TEXT\",\n            \"type_options\": null,\n            \"display_options\": null\n        },\n        {\n            \"id\": 5,\n            \"name\": \"Patent ID\",\n            \"type\": \"INTEGER\",\n            \"type_options\": null,\n            \"display_options\": null\n        }\n    ],\n    \"records\": \"http://localhost:8000/api/v0/tables/1/records/\",\n    \"data_files\": [\n        1\n    ]\n}\n</code></pre></p> <p>This would set the columns in the preview to have the specified names and types. Any column which is unaltered would have and empty JSON object (as in the 0th column above), otherwise, only attributes of a column which are to be altered would be submitted in the request. So, in the example:</p> <ul> <li>we alter nothing about the 0th column,</li> <li>we alter the name of the 1st column, </li> <li>we alter the type of the 2nd column,</li> <li>we dropped the 3rd column, and</li> <li>we alter both the name and type of the 4th column.</li> </ul> <p>Please note that both name and columns cannot be changed in the same request at the moment.</p>"},{"location":"archive/product/technical-specs/installation-improvements-plan-0_1_4/","title":"Installation Improvement Plan","text":"<p>This project contains the summarized plan to improve the installation, mostly based on the  previous discussions. Implementing the planned changes will be done in separate projects</p> <ul> <li>Installation Improvement 0.1.4</li> </ul>"},{"location":"archive/product/technical-specs/installation-improvements-plan-0_1_4/#problems","title":"Problems","text":"<ol> <li>Many users have found our installation process to be complicated, this great feedback summarizes a lot of pain points.</li> </ol>"},{"location":"archive/product/technical-specs/installation-improvements-plan-0_1_4/#reasons","title":"Reasons","text":"<ol> <li>We are targeting too many different use cases for Mathesar in our current documentation, which makes the documentation overwhelming for the user, and we need to simplify things.</li> <li>Installing Mathesar involves many steps without any feedback or preventive checks in place, which makes the process brittle and introduces failure points that we can avoid. he user might miss out some steps and will be able to only notice it after completing all the installation steps.</li> <li>There is too much configuration needed before Mathesar can be started, which makes it difficult to try Mathesar out quickly.</li> <li>Configuration is done through scripts specific to certain installation methods, and not in the product itself, which makes some installation methods much more difficult, hard to give feedback. This also makes it hard to explain in the documentation in an intuitive manner.</li> </ol>"},{"location":"archive/product/technical-specs/installation-improvements-plan-0_1_4/#targeted-personas","title":"Targeted Personas","text":"<p>We discussed and agreed upon a set of personas to target initially</p> <p>Top</p> <ul> <li>Someone trying Mathesar out quickly (and can use Docker)</li> <li>We assume this user is just evaluating Mathesar and will move to a different installation setup after evaluating.</li> <li>Someone installing Mathesar on a PaaS</li> <li>Someone installing server &amp; DB on same remote system<ul> <li>Using Docker</li> <li>Using Debian, but not Docker</li> <li>Using some other flavor of Linux</li> </ul> </li> <li>Someone installing server &amp; DB on separate remote systems<ul> <li>same as above</li> </ul> </li> </ul> <p>Medium</p> <ul> <li>Someone installing server on localhost, but connecting to a remote DB</li> <li>Someone installing Mathesar on existing DevOps infrastructure<ul> <li>Helm, Kubernetes goes here</li> </ul> </li> </ul> <p>Not prioritizing at all - until more than one person asks</p> <ul> <li>Ansible / other automation guides</li> <li>Someone installing Mathesar on a remote system that\u2019s not Linux</li> <li>Someone who wants to build Mathesar from source</li> <li>Someone trying Mathesar out quickly locally (and cannot use Docker)</li> </ul> <p>Discourage</p> <ul> <li>Someone installing everything on localhost (not just trying it out)</li> </ul>"},{"location":"archive/product/technical-specs/installation-improvements-plan-0_1_4/#limitations-of-the-project","title":"Limitations of the Project","text":"<ul> <li>We won\u2019t be making any changes to other areas of the product like database permissions, updating packages. We will only be organizing our existing Installation process.</li> <li>The user need to be a <code>SUPERUSER</code> or be the <code>OWNER</code> of the database if they want Mathesar to manage that database</li> </ul>"},{"location":"archive/product/technical-specs/installation-improvements-plan-0_1_4/#terminology","title":"Terminology","text":"<ul> <li>Internal database - Mathesar stores its metadata like <code>Exploration</code>, <code>Admin user</code> registration details in this database. </li> <li>User database - These databases contain the data which the user wants to manage using Mathesar. Mathesar can manage more than one database at a time.</li> <li>Installing Mathesar Schema - Mathesar needs to install some SQL functions in the user database for it to function correctly. When the user does some operation using the Mathesar UI these functions are called by Mathesar to perform operations on the database. Additionally Mathesar offers custom types that don\u2019t exists on Postgres like <code>EMAIL</code> which can be used by the user.</li> </ul>"},{"location":"archive/product/technical-specs/installation-improvements-plan-0_1_4/#possible-lifecycle-of-mathesar","title":"Possible lifecycle of Mathesar","text":"<ol> <li>Installing and setting up Mathesar App - User installs and sets up Mathesar as a functionally incomplete app (like hardware without software). It has no uses as of now as there won\u2019t be any databases managed by Mathesar at this point. We expect the user to perform these steps only once in the installation lifecycle. This happens only once</li> <li>Configuring Mathesar - The user might want to make some additional configuration like connecting to an additional database, pointing a domain at the Mathesar server. The user might want to configure more than once and might not do it right after installation</li> <li>Updating Mathesar - When we make a new release, the user will need to update Mathesar to use the new features. This can happen more than once</li> <li>Uninstalling Mathesar - In some unfortunate circumstances, the user might uninstall Mathesar. This happens only once</li> </ol> <p>The installation plan is based on the assumption above. So please comment if you are not okay with the above assumption</p>"},{"location":"archive/product/technical-specs/installation-improvements-plan-0_1_4/#outline-of-the-steps-after-the-installation-overhaul-project","title":"Outline of the steps after the installation overhaul project","text":"<p>Please note, these steps don\u2019t directly correlate 1:1 with our installation documentation structure, rather the intent is to categorize based on the behavior of the steps and give an overview of the steps for easier understanding of how they affect the installation process. The documentation outline will provide detailed information of the steps involved with a particular installation type </p>"},{"location":"archive/product/technical-specs/installation-improvements-plan-0_1_4/#installing-mathesar","title":"Installing Mathesar","text":"<p>The installation steps are grouped into three categories (ordered sequentially)</p> <ol> <li>Install</li> <li>This category includes steps for setting up the download source, fetching the necessary files (docker image, binary) and commands for installing and starting Mathesar.</li> <li>Once these steps are complete, Mathesar will be running locally, and the user can open Mathesar by visiting a particular URL (defaults to http://localhost:8000)</li> <li>The following defaults apply to all the installation type<ul> <li>A <code>SECRET_KEY</code> will be automatically generated and stored in the config file</li> <li>An SQLite database file will be created and will be used as the internal database for storing the Mathesar metadata</li> </ul> </li> <li> <p>For certain installation types, we might override the above defaults to provide a better default suited for that installation type. These will be mentioned in the documentation outline</p> </li> <li> <p>Pre-install config</p> </li> <li>The defaults Mathesar come with might not suit every use-case. These are the optional steps that the user may need to perform to adapt Mathesar to their environment.</li> <li>These settings are targeted towards technical users, mostly done using the command line, and it is assumed the user knows what he is doing</li> <li>Note: They need to be performed before starting and using Mathesar.</li> <li>Mathesar related is tightly tied to configurations in this step. The user should not expect to retain Mathesar data magically if he is pointing the internal database URL to a different database.</li> <li> <p>The following configuration steps fall into this category</p> <ul> <li>Passing in their own secret key as an environment variable. </li> <li>Passing in the credentials of the database to be used as the internal database.</li> </ul> </li> <li> <p>Setup</p> </li> <li>Once Mathesar is installed and running, the user needs to set up few things before Mathesar can be used.</li> <li>These will be done using the Mathesar UI</li> <li>The following configuration steps fall into this category<ul> <li>Setting up a Mathesar admin user</li> </ul> </li> </ol>"},{"location":"archive/product/technical-specs/installation-improvements-plan-0_1_4/#post-install-configuring-mathesar","title":"Post Install Configuring Mathesar","text":"<p>The installation steps are grouped into two</p> <ol> <li>Post-install non-mathesar config </li> <li>These are optional steps that the user may need to perform to actually make Mathesar functionally complete.</li> <li>These steps will be done using the Mathesar UI</li> <li>Internal database will be used for storing the information (if any)</li> <li>The following configuration steps fall into this category<ul> <li>Adding an external database credentials into Mathesar using the Mathesar UI. The schemas are automatically installed into the database when the credentials are added</li> </ul> </li> <li>Post-install mathesar config</li> <li>These are optional steps that the user may perform to configure Mathesar.</li> <li>Unlike the \u201cPre-install config\u201d these are optional and can be configured even after using Mathesar after sometime</li> <li>Unlike the \u201cPost-install non-mathesar config\u201d, they cannot be configured on the fly instead the user will need to restart the Mathesar server for the effect to take place</li> <li>The following configuration steps fall into this category<ul> <li>Whitelisting domains from which Mathesar can accept API requests.</li> </ul> </li> </ol>"},{"location":"archive/product/technical-specs/installation-improvements-plan-0_1_4/#update-process","title":"Update process","text":"<ul> <li>Update will most likely be a one or two-step process and will be quite similar to the steps in \u201cInstalling Mathesar\u201d. For example, if you had used <code>apt install mathesar</code> when installing, you would do <code>apt update mathesar</code></li> <li>For certain installation types, optionally, we will offer a convenient way UI to let the user update from within the Mathesar app.</li> <li>We will automatically run the necessary database migrations, update Mathesar schema for the user databases managed by Mathesar without any user intervention</li> </ul>"},{"location":"archive/product/technical-specs/installation-improvements-plan-0_1_4/#uninstall-process","title":"Uninstall process","text":"<ul> <li>Remove the installed schema from a specific database - Removing the database from Mathesar will uninstall all the installed types from the user database</li> <li>Completely remove Mathesar - Remove databases first using the above step and then perform one or two steps specific to the installation type for uninstalling Mathesar completely </li> </ul>"},{"location":"archive/product/technical-specs/installation-improvements-plan-0_1_4/#outline-of-the-documentation","title":"Outline of the documentation","text":""},{"location":"archive/product/technical-specs/installation-improvements-plan-0_1_4/#proposed-outline","title":"Proposed Outline","text":""},{"location":"archive/product/technical-specs/installation-improvements-plan-0_1_4/#homepage","title":"Homepage","text":"<ul> <li>Introduction &amp; Overview <ul> <li>Content: homepage of docs.mathesar.org</li> <li>Remains the same</li> </ul> </li> <li>Installation <ul> <li>We will be replacing the current Installation section in the homepage of docs.mathesar.org and the related navigation section with the following installation options. Each installation option will point to the content page</li> <li>Install with Docker<ul> <li>Content: Single image Docker</li> <li>Note: We will provide a single Docker image which comes in-built with Postgres server. The Postgres server won\u2019t be started if the user configures Mathesar to use an existing database as its internal database</li> <li>Persona: Try it out quickly locally [TOP]</li> <li>Persona: Someone installing on a remote system [TOP]</li> </ul> </li> <li>Install on [PaaS name]<ul> <li>Content: Instructions for specific PaaS</li> <li>Note: By default, configured to be production ready.</li> <li>Persona: Try it out quickly on a PaaS [TOP]</li> </ul> </li> <li>Install on Debian<ul> <li>Content: Non-Docker install</li> <li>Persona: Someone installing on a remote system (Debian) [TOP]</li> </ul> </li> <li>Install as Python module from PyPI<ul> <li>Content: Instructions for installing from PyPI</li> <li>Persona: Someone installing on a remote system (non-Debian Linux) [TOP]</li> <li>Persona: Someone installing server on localhost, but connecting to a remote DB [MEDIUM]</li> </ul> </li> <li>Install with Helm<ul> <li>Content: Instructions for using Helm Chart</li> <li>Persona: Install on existing infrastructure [MEDIUM]</li> </ul> </li> </ul> </li> <li>Configuration<ul> <li>Environment (common for all installation options)</li> <li>Connecting to DBs on localhost</li> </ul> </li> </ul>"},{"location":"archive/product/technical-specs/installation-improvements-plan-0_1_4/#pattern-for-the-content-page-for-the-reader-not-part-of-outline","title":"Pattern for the content page (for the reader; not part of outline)","text":"<p>We will follow the below pattern to keep the documentation consistent and easier to maintain.</p> <ul> <li>Pre-requisites</li> <li>Installation</li> <li>Install steps </li> <li>Pre-install config options will be shown as a tip or a warning.<ul> <li>As these steps should be done before starting Mathesar, we need to make sure the user knows about these steps and takes an informed decision before proceeding further.</li> <li>The description is meant to be brief and will point to the actual content which will be under the \u201cNext steps to take\u201d Mathesar section</li> </ul> </li> <li>Setup steps</li> <li>Next steps to take<ul> <li>Post install non-mathesar config options</li> <li>Only the information on why and how to configure using the UI</li> <li>Use case based configurations</li> <li>Groups multiple configurations to fit into a use case which helps the user take an informed decision<ul> <li>Use case (ex: Setting up for production, automatic updates)</li> <li>Description on why it is needed</li> <li>Points to the relevant section in the Configuring Mathesar. Can point to multiple configuration options (use env variables, access Mathesar using a domain name)</li> </ul> </li> </ul> </li> <li>Administration</li> <li>Update process</li> <li>Configuring Mathesar<ul> <li>Post install Mathesar config options</li> <li>Inform users to restart Mathesar after making changes</li> <li>Pre-install config options</li> <li>Warn users of data loss or unexpected state if these configurations are changed after using Mathesar</li> </ul> </li> <li>Uninstall process</li> </ul>"},{"location":"archive/product/technical-specs/installation-improvements-plan-0_1_4/#content-page","title":"Content Page","text":""},{"location":"archive/product/technical-specs/installation-improvements-plan-0_1_4/#install-with-docker","title":"Install with Docker","text":"<ul> <li>Pre-requisites:<ul> <li>Install Docker</li> <li>Root access if you\u2019re on Linux</li> </ul> </li> <li>Steps:<ul> <li>Single docker run command (Install)<ul> <li>Mount a volume to store information in the default location used by Docker</li> <li>Tip where we explain how to configure for production use (Pre-install config)<ul> <li>Set secret key as environment variable </li> <li>Use a separate database for storing mathesar metadata etc</li> </ul> </li> </ul> </li> <li>Set up superuser through UI (Setup)</li> </ul> </li> <li>Next steps to take (Post install config)</li> <li>Set up additional DBs through UI</li> <li>Set up a update server</li> <li>Set up for production server<ul> <li>Use environment variables. Point to \u201cConfiguring Mathesar\u201d section</li> </ul> </li> <li>Administration</li> <li>Configuring Mathesar<ul> <li>Platform specific configuration instructions</li> <li>Point to \u201cEnvironment variables\u201d page</li> </ul> </li> <li>Uninstall process</li> <li>Implementation details (for the reader; not part of outline)</li> <li>The docker image will come with an in-built Postgres server, where the internal and user database will be created by default unless the user configures Mathesar to use a remote database</li> <li>The in-built Postgres server won\u2019t be started to save resources if the user has configured Mathesar to use a remote database</li> </ul>"},{"location":"archive/product/technical-specs/installation-improvements-plan-0_1_4/#install-with-paas","title":"Install with PaaS","text":"<ul> <li>Pre-requisites:<ul> <li>Have an account on the PaaS platform (Depends on the platform, some platforms might allow you to set up without an account)</li> </ul> </li> <li>Steps:<ul> <li>Click the one click deploy button or click on the Mathesar app on the app store which will install Postgres server along with Mathesar server (Varies based on the platform)</li> <li>Set up superuser through UI</li> </ul> </li> <li>Next steps to take</li> <li>Set up an automatic update process</li> <li>Administration</li> <li>Configuring Mathesar<ul> <li>Platform specific configuration instructions</li> <li>Point to \u201cEnvironment variables\u201d page</li> </ul> </li> <li>Uninstall process</li> </ul>"},{"location":"archive/product/technical-specs/installation-improvements-plan-0_1_4/#install-on-debian","title":"Install on Debian","text":"<ul> <li>Pre-requisites:<ul> <li>Postgres server</li> </ul> </li> <li>Steps:<ul> <li>Add Mathesar repo to apt</li> <li>Run <code>apt install</code> to install Mathesar</li> <li>Run command to start the Mathesar executable</li> <li>Set up superuser through UI</li> <li>Set up user DBs through UI</li> </ul> </li> <li>Next steps to take</li> <li>Set up for production server<ul> <li>Use environment variables. Point to \u201cConfiguring Mathesar\u201d section</li> <li>Use Postgres server as the internal database</li> </ul> </li> <li>Administration</li> <li>Steps for updating</li> <li>Configuring Mathesar<ul> <li>Platform specific configuration instructions</li> <li>Point to \u201cEnvironment variables\u201d page</li> </ul> </li> <li>Uninstall process</li> </ul>"},{"location":"archive/product/technical-specs/installation-improvements-plan-0_1_4/#install-as-python-module-from-pypi","title":"Install as Python module from PyPI","text":"<ul> <li>Pre-requisites:<ul> <li>Python Interpreter</li> <li>Postgres server</li> </ul> </li> <li>Steps:<ul> <li>Set up a virtualenv</li> <li>Install using pip</li> <li>Run command to start the Mathesar executable</li> <li>Set up superuser through UI</li> <li>Set up user DBs through UI</li> </ul> </li> <li>Next steps to take</li> <li>Set up for production server<ul> <li>Use environment variables. Point to \u201cConfiguring Mathesar\u201d section</li> <li>Use Postgres server as internal database</li> </ul> </li> <li>Administration</li> <li>Steps for updating</li> <li>Configuring Mathesar<ul> <li>Platform specific configuration instructions</li> <li>Point to \u201cEnvironment variables\u201d page</li> </ul> </li> <li>Uninstall process</li> </ul>"},{"location":"archive/product/technical-specs/installation-improvements-plan-0_1_4/#install-with-helm","title":"Install with Helm","text":"<ul> <li>Pre-requisites:<ul> <li>Kubernetes</li> <li>Helm</li> <li>Postgres server</li> </ul> </li> <li>Steps:<ul> <li>Add Mathesar repo to helm repo</li> <li>Run <code>helm install</code> to install Mathesar</li> <li>Set up superuser through UI</li> <li>Set up user DBs through UI</li> </ul> </li> <li>Next steps to take</li> <li>Set up for production server<ul> <li>Use environment variables</li> <li>Enable ingress</li> </ul> </li> <li>Administration</li> <li>Steps for updating</li> <li>Configuring Mathesar<ul> <li>Platform specific configuration instructions</li> <li>Point to \u201cEnvironment variables\u201d page</li> </ul> </li> <li>Uninstall process</li> </ul>"},{"location":"archive/product/technical-specs/installation-improvements-plan-0_1_4/#environment-variables","title":"Environment Variables","text":"<p>List of environment variables and descriptions</p>"},{"location":"archive/product/technical-specs/installation-improvements-plan-0_1_4/#connecting-to-dbs-on-localhost","title":"Connecting to DBs on localhost","text":"<p>This will explain how to connect to localhost DBs if you\u2019re using Docker (content is already on docs.mathesar.org)</p>"},{"location":"archive/product/technical-specs/installation-improvements-plan-0_1_4/#stuff-were-removing-from-current-docs-not-part-of-outline","title":"Stuff we\u2019re removing from current docs (not part of outline)","text":"<ul> <li>Guided script installation<ul> <li>plus appendices</li> </ul> </li> <li>Docker compose installation<ul> <li>plus \u201ccustomizing docker compose\u201d page</li> </ul> </li> <li>Install from scratch</li> <li>Administration section (uninstall &amp; upgrade Mathesar)<ul> <li>It Will be folded into individual installation types</li> </ul> </li> </ul>"},{"location":"archive/product/technical-specs/internationalization/","title":"Internationalization of Mathesar Codebase","text":""},{"location":"archive/product/technical-specs/internationalization/#language-detection-language-switcher","title":"Language Detection &amp; Language Switcher","text":"<p>The <code>selected_language</code> will be stored inside the DB and sent to the front end inside the <code>common_data</code>. For a particular user when there is no <code>selected_language</code> stored, the backend will detect the language from the <code>Accept-Language</code> HTTP header with a fallback to <code>en</code>.</p> <p>The logged-in user will have a language switcher with a list of all of the currently supported languages by Mathesar. This option will be provided on the user profile page available at <code>/profile</code> path. Selecting a new language from here will make an API call to the backend to update the <code>selected_language</code> in the DB.</p>"},{"location":"archive/product/technical-specs/internationalization/#enabling-codebase-to-be-translated","title":"Enabling codebase to be translated","text":""},{"location":"archive/product/technical-specs/internationalization/#translating-client-side-rendered-pages","title":"Translating client-side rendered pages","text":"<p>We will be using the typesafe-i18n library\u2019s svelte adapter. This provides type-aware translation usage across the codebase.</p> <p>Reasons for choosing typesafe-i18n</p> <ol> <li>First-class type safety</li> <li>Official Svelte adapter</li> <li>Built-in Async loading</li> <li>Built-in Export functionality</li> </ol> <p>Other libraries considered &amp; reasons for rejections</p> <p>svelte-i18n</p> <ol> <li>In-frequent updates</li> <li>Inferior type awareness as compared to typesafe-i18n</li> </ol> <p>tolgee</p> <ol> <li>Inferior type awareness as compared to typesafe-i18n</li> <li>Their more interesting offering is the translations management platform, which is paid after a certain number of strings even for open source.</li> </ol> <p>Bundle size impact &amp; loading the translations files</p> <p>The bundle footprint of the suggested library is low. ~2KB Gzipped.</p> <p>Translations files will be loaded in parallel with the FE code. There are two approaches to it:</p> <ol> <li>Detecting the language and adding the translations for that language in the common_data. But this will lead increase in the size of the common_data since the translations will grow with time.</li> <li>Loading the translations via a script tag. This will require having a global loader in the index.html which gets hidden once the translations are loaded.</li> </ol> <p>The final approach will be decided during the implementation and the tech spec will be updated accordingly.</p> <p>Translation inside the components</p> <p>The typesafe-i18n library\u2019s svelte adapter sets up svelte stores to store the translations strings, locale, etc. The two main stores are:</p> <ol> <li><code>LL</code> to translate strings inside a component. <code>{$LL.HELLO({ name: 'world' })}</code>.</li> <li><code>locale</code> to get the current locale. <code>$locale</code></li> </ol> <p>It also exports a function to update the locale in the store. <code>setLocale</code> to update the current locale.</p> <p>Where will the translation file be stored?</p> <p>Translations files will be stored inside <code>mathesar_ui</code>. The structure will be:</p> <pre><code>i18n\n  en\n    index.ts\n  fr\n    index.ts\n</code></pre> <p>Translating RichText and strings with embedded components</p> <p>Throughout the codebase, there are a lot of strings that contain components embedded inside them. Translating them becomes tricky, here is how we\u2019ll do it:</p> <p>Consider,</p> <pre><code>\"welcomeMessage\": \"Welcome, {name}! Click {on-this-component} or {on-this-span} to continue!\"\n</code></pre> <p>the usage could be simplified to:</p> <pre><code>&lt;RichText text={t('welcomeMessage', {name})} let:activeSlot&gt;\n  {#if activeSlot === 'on-this-component'}\n    &lt;Component/&gt;\n  {:else if activeSlot === 'on-this-span'}\n    &lt;span&gt;some content&lt;/span&gt;\n  {/if}\n&lt;/RichText&gt;\n</code></pre> <p><code>RichText</code> would only parse the result of the translated string, i.e. it will not perform any translation within it. It would be a general-purpose component that gets a string and replaces placeholders with its slot content.</p> <p>The RichText component would parse the string, identify placeholders, split it, and render it as an array or arrays, rendering them with slots passing down the <code>activeSlot</code> property. This allows us to use both Components or DOM elements as we see fit.</p> <p>The <code>RichText</code> component would look something like this.</p> <pre><code>&lt;script&gt;\n  export let text: string;\n  // text would contain `Welcome, DemonLord! Click {on-this-component} or {on-this-span} to continue!`\n\n  ...\n\n  $: splitText = parse(text);\n  /** The text would be parsed, and split to return something like:\n    * [\n    *   [\"Welcome, DemonLord! Click \", \"on-this-component\", \" or \"],\n    *   [\"\", \"on-this-span\", \" to continue!\"]\n    * ]\n    */\n&lt;/script&gt;\n\n{#each splitText as [prefix, slotname, postfix]}\n  {prefix}&lt;slot activeSlot={slotname}/&gt;{postfix}\n{/each}\n</code></pre> <p>Standards for creating keys</p> <ol> <li>Immutable strings will be used as keys for translations.</li> <li>All such keys will be in <code>camelCase</code>.</li> </ol> <p>Translations inside the components library</p> <p>Some components inside the component library that has some strings hard-coded inside them. E.g. <code>FileUpload.svelte</code>. We will refactor such components to accept those strings as props or slots (with English strings hard-coded in the component as defaults)</p> <p>Plurals/Formatting(date, time, currency, etc\u2026)</p> <p>The typesafe-i18n library supports this on the client side using formatters</p> <p>Ex:</p> <pre><code>Delete {labeledCount(selectedRowIndices, 'records', {\n  casing: 'title',\n  countWhenSingular: 'hidden',\n})}\n</code></pre> <p>Using the message format from the typesafe-i18n lib</p> <pre><code>&lt;script&gt;\nconst translations = {\n  //                                        singular | plural\n  deleteRecords: \"Delete {{1 record | ?? record}}\"\n\n  // There are other formats possible: {{zero|one|two|few|many|other}}\n  // See the full list here: https://github.com/ivanhofer/typesafe-i18n/tree/main/packages/runtime#plural\n}\n\nconsole.log(LL.deleteRecords(1)) // Delete record\nconsole.log(LL.deleteRecords(2)) // Delete 2 records\n&lt;/script&gt;\n</code></pre> <p>Translations services like Transifex have a very user-friendly UI to show this to the translators: https://help.transifex.com/en/articles/6231958-working-with-plurals-and-genders#h_51e09ec18a</p>"},{"location":"archive/product/technical-specs/internationalization/#translating-server-side-rendered-pages-api-error-messages","title":"Translating server-side rendered pages &amp; API error messages","text":"<p>Our application has a few pages being rendered by the Django templating engine. To support localization in those templates:</p> <p>Use the Django translations mechanism for templates and other backend-related translations including but not limited to API error messages that are shown on the UI as it is. This will lead to two separate translations file which should be fine. Both of the files(server-generated and client generated) can be uploaded to the translations service. This will be somewhat similar to i18next\u2019s namespaces approach. The benefits that we get here are two folds:</p> <ol> <li>Using the Django translations with Django templates is very straightforward and we do not need to do any JS trickery to use the npm installed typesafe-i18n version inside the templates.</li> <li>We also get translations for the API error messages. Also, note that most of the framework-generated error messages are already translated by the respective package. For ex: https://www.django-rest-framework.org/topics/internationalization/.</li> </ol> <p>Error messages generated by the Postgres</p> <p>Some of the error messages are being generated by Postgres directly. Translating them will not be part of this project due to the high effort and complexity.</p>"},{"location":"archive/product/technical-specs/internationalization/#working-with-translations","title":"Working with translations","text":"<p>Getting the translations</p> <p>There are multiple ways to do this: | Property | Language Service Provider | Freelance Translators | Machine Translations | | -------------- | -------------------------- | ------------------------- | ----------------------------------------------------------------------------- | | Accuracy | Provides the most accuracy | Fairly accurate | Least accurate, especially for longer sentences. Majorly has grammatical errors | | Ease of access | Takes time to find one | Relatively easier to find | Google translate. | | Cost | Very costly relatively | Costly | Mostly free |</p> <p>There is one more approach called the \u201cHybrid approach\u201d where to avoid getting hit on the developer velocity, developers get the translations they need using the Machine translations strategy. The translation files are still sent to a translator but only according to a schedule(let\u2019s say once a month).</p> <p>Automated workflow for integrating new translations</p> <p>This section describes the approach to automating the process of sending the strings to be translated to the translator and integrating the response back into the codebase.</p> <p>We can use Transifex for this automation:</p> <ol> <li>The file exported with all the strings can be uploaded to Transifex using its GitHub sync feature.</li> <li>Add the languages that need we need the translations in and invite translators.</li> <li>Submitted translations can be reviewed and finally integrated back into the codebase automatically using Transifex\u2019s GitHub integration.</li> </ol> <p>Other options:</p> <ol> <li>Lokalise has a free plan for open-source projects.</li> <li>[Inlang] also has a free tier for open-source projects.</li> </ol> <p>Translations update workflow</p> <p>Any change in the base language(English) text will require the developer to notify the translator via the translation service(Transifex). This will be part of the developer docs as well as the guidelines for translators mentioned in the project proposal.</p>"},{"location":"archive/product/technical-specs/internationalization/#development-tooling","title":"Development Tooling","text":"<p>Linting A new eslint rule will be written as part of this project to help identify untranslated strings.</p> <p>The rule would work like this:</p> <ol> <li>Any raw text longer than 2 characters occurring directly in the Svelte template is an error.</li> <li>Also, any string in JS that looks like UI text is an error.</li> </ol> <p>Plugin for VS code to work with translations https://github.com/lokalise/i18n-ally</p>"},{"location":"archive/product/technical-specs/internationalization/#localized-urls","title":"Localized URLs","text":"<p>Generally seems to be used very rarely. There are problems like checking URLs for unsupported symbols, the complexity of the routes and code, broken links, and having the slugs for all supported locales at all times in the codebase. Hence, is out of the scope of this project.</p>"},{"location":"archive/product/technical-specs/list-data-type-frontend-specs/","title":"List data type - Frontend specs","text":""},{"location":"archive/product/technical-specs/list-data-type-frontend-specs/#creating-a-column","title":"Creating a column","text":"<p>From the table\u2019s view: 1. The user clicks on the \u201c+\u201d button. 2. The usual modal is displayed. Among the type options, the <code>list</code> type is displayed.</p> <p></p> <ol> <li>The user has to set a name for the column. They also have to choose the <code>list</code> type. After clicking this option, the user has to choose the type of the items that the list will contain. A sub-list of the currently supported data types is displayed (excluding the list type).</li> </ol> <p></p> <ol> <li>The \u201cAdd\u201d button is enabled and the user has to click on it  in order to create the list column.</li> </ol> <p></p>"},{"location":"archive/product/technical-specs/list-data-type-frontend-specs/#notes","title":"Notes","text":"<ul> <li>Only one-dimensional (1-D) arrays are going to be supported, therefore, the user is not going to be prompted to provide a \u201cdimensions\u201d argument.</li> <li> <p>Nested/multi-dimensional arrays are going to be displayed and treated as strings.  Example of multi-dimensional arrays: </p> </li> <li> <p>For already existing Postgresql databases from the user, which could contain multi-dimensional arrays, we can add an information note on the sidebar that warns about this constraint. The message could be something like: \u201cOnly 1-D lists/arrays are supported. If there exist items with more dimensions, then the entire column will be considered as a list of strings type\u201d. </p> </li> </ul>"},{"location":"archive/product/technical-specs/numbers/","title":"Number display and entry","text":""},{"location":"archive/product/technical-specs/numbers/#product-goals","title":"Product goals","text":"<ul> <li> <p>(Goal A) Mathesar is capable of displaying and accepting entry for all numbers which Postgres is capable of storing.</p> </li> <li> <p>(Goal B) Aside from the numbers, <code>NaN</code>, <code>-Infinity</code>, and <code>Infinity</code>, users are able to type all numbers into Mathesar exactly as Mathesar displays those numbers to them.</p> </li> <li> <p>(Goal C) When a user enters data which cannot be accurately stored in the column exactly as-entered, then Mathesar stores the nearest acceptable value and clearly communicates to stored value to the user.</p> <p>For example, a <code>float8</code> column cannot accurately store the value <code>9999999999999999</code> (because it will instead be stored as <code>1e+16</code>). In this example, Mathesar will store <code>1e+16</code>, displaying that value back to the user after entry.</p> </li> <li> <p>(Goal D) Mathesar displays numbers and accepts entry of numbers in the user\u2019s desired locale, including the correct decimal separator and grouping separators.</p> </li> <li> <p>(Goal E) Mathesar auto-formats numbers as the user types.</p> </li> <li> <p>(Goal F) Mathesar accepts entry of numbers in scientific notation and displays numbers in scientific notation when the user is likely to prefer it. For example <code>1E100</code> instead of 1 followed by 100 zeros.</p> </li> </ul>"},{"location":"archive/product/technical-specs/numbers/#implementation-strategies","title":"Implementation strategies","text":""},{"location":"archive/product/technical-specs/numbers/#api","title":"API","text":"<ul> <li>The API transmits numbers as strings because most JSON parsers are not capable of accurately parsing high precision numbers or special Postgres numbers stored plainly in JSON. The format for such strings is described below.</li> </ul>"},{"location":"archive/product/technical-specs/numbers/#canonical-stringified-number-format","title":"Canonical stringified number format","text":"<p>Throughout our stack, we may want to represent numbers as strings. When doing so, we follow a format very similar to numbers in JSON.</p> <ul> <li>The decimal separator is an ASCII dot.</li> <li>The minus sign is an ASCII hyphen.</li> <li>The exponent separator is an uppercase \u201cE\u201d.</li> <li>Grouping separators are disallowed.</li> <li>The strings <code>\"NaN\"</code>, <code>\"-Infinity\"</code>, and <code>\"Infinity\"</code> are used to represent special Postgres numbers. Note that this is one way in which our stringified number format differs from JSON \u2013 raw values like <code>NaN</code> are not valid inside JSON.</li> <li>The string <code>\"NULL\"</code> should not be used. In JSON, the value <code>null</code> should be used instead.</li> <li> <p>Examples:</p> <ul> <li><code>\"NaN\"</code></li> <li><code>\"-Infinity\"</code></li> <li><code>\"Infinity\"</code></li> <li><code>\"0\"</code></li> <li><code>\"1234.5\"</code></li> <li><code>\"99999999999999999999999999999999\"</code></li> <li><code>\"-1.2E-15\"</code></li> </ul> </li> </ul>"},{"location":"archive/product/technical-specs/numbers/#locale","title":"Locale","text":"<ul> <li> <p>To satisfy Goal D, Number columns have an optional <code>locale</code> display option which is set by the front end and read by the front end. If a column\u2019s <code>display_options</code> does not have a <code>locale</code> value, then the front end infers the locale from the user\u2019s browser. The back-end remains locale-agnostic and never uses the <code>locale</code> display option for any back-end logic.</p> </li> <li> <p>Mathesar is limited to only displaying and accepting entry for numbers using the latin numbering system. This means sacrificing Goal A for the locales  \u201cbn\u201d, \u201cfa\u201d, and \u201cmr\u201d (Bengali, Persian, Marathi) which use non-latin numbering systems by default.</p> </li> <li> <p>The minus sign is always displayed using an ASCII hyphen, regardless of locale (even though some locales like \u2018li\u2019 use the Unicode minus sign). The Unicode minus sign (and similar characters) will be accepted in all locales while entering numbers though.</p> </li> <li> <p>For display of scientific notation, the exponent separator is always displayed using the ASCII \u201cE\u201d regardless of locale even though some locales use other exponent separators. For input, other strings are accepted too, such as \u201ce\u201d (lowercase) and \u201c\u0415\u201d (U+0415) and variations of \u201cx10^\u201d.</p> </li> </ul>"},{"location":"archive/product/technical-specs/numbers/#parsing","title":"Parsing","text":"<ul> <li> <p>The front end parses user input, by performing string transformations to normalize the input into canonical stringified form. For example, all characters matching the current locale\u2019s decimal separator are converted to ASCII dots.</p> </li> <li> <p>The front end parses canonical stringified numbers (as produced above, or received from the API) by attempting to produce a <code>number</code> or <code>BigInt</code> which can be re-formatted exactly to match the input (without loss of precision).</p> </li> <li> <p>The front end will fail to parse canonical stringified numbers like <code>\"99999999999999.99\"</code> (which cannot be accurately represented by any of JavaScript\u2019s built-in data types) because they will fail to be reformatted without loss of precision.</p> </li> <li> <p>The front end actually almost doesn\u2019t need to parse numbers at all. But it does so for the following reasons.</p> <ol> <li> <p>Because we want to format a cell\u2019s numerical value for display. There are a variety of smaller goals here.</p> <ul> <li>Likely the most important goal is to format the decimal separator in accordance with the user\u2019s locale (dot or comma). That\u2019s easy to do with strings, so if that\u2019s all we care about, then we can actually stick with strings.</li> <li>Adding grouping separators is nice, but not crucial. Even if the separators are applied after the user finishes typing, I think they offer a significant UX improvement in some situations. If we stick exclusively to strings, it\u2019s actually quite hard to add the grouping separators in a locale-aware way. The <code>Intl</code> API takes care of it for us, but only if we have a <code>number</code> or <code>BigInt</code> \u2013 so that requires parsing.</li> <li>Similar to above, <code>Intl</code> offers a bunch of other formatting options that we\u2019ll likely want to utilize at some point in the future, like <code>style: 'percent'</code>, <code>style: 'currency'</code>, <code>minimumFractionDigits</code>, and <code>maximumFractionDigits</code>. That stuff is trivial to implement when using <code>Intl</code>, but harder to do with raw strings.</li> </ul> </li> <li> <p>Because we also want to accept user-entered number in other contexts, besides the cell values</p> <p>For editing a cell, we\u2019ll likely never need access to the numerical value of the cell on the front end (beyond the need to format the number for display). But we will need access to numerical values of user input on the front end in the future. For example, when/if we allow the user to configure the minimum number of fraction digits, I\u2019d want to take that user input and feed it back into <code>Intl.NumberFormat</code> to display a formatted preview of a sample number. I think we\u2019d also want client-side validation to ensure that <code>minimumFractionDigits</code> is within <code>0</code> and <code>20</code>, as required by <code>Intl.NumberFormat</code>.</p> </li> </ol> </li> </ul>"},{"location":"archive/product/technical-specs/numbers/#formatting","title":"Formatting","text":"<ul> <li> <p>The front-end formats numbers for display in the browser\u2019s locale.</p> </li> <li> <p>Values from the API are formatted (to satisfy Goal D), and values from the user are formatted as the user types (to satisfy Goal E). In both of these cases we begin with a string.</p> </li> <li> <p>When the front end can parse the input into a <code>number</code> or <code>BigInt</code>, it uses <code>Intl.NumberFormat</code> for formatting, which allows robust handling of grouping separators across various locales.</p> </li> <li> <p>When the front end cannot parse the canonical stringified number, it falls back to a simplistic formatter which only performs string transformation to ensure only that the decimal separator matches the user\u2019s locale. This produces a formatted result which lacks grouping separators, partially sacrificing Goal D.</p> </li> </ul>"},{"location":"archive/product/technical-specs/numbers/#ux","title":"UX","text":"<ul> <li> <p>The front-end allows users to enter the Postgres numbers <code>NaN</code>, <code>-Infinity</code>, and <code>Infinity</code> using a context menu \u2013 and it displays those numbers stylized (similar to <code>NULL</code>).</p> </li> <li> <p>While the user is entering a number, Mathesar partially reformats the user\u2019s entry in order to match the final display of the number as closely as possible (to satisfy Goal E). For example, with a \u201cen-US\u201d locale, the entry <code>1234</code> is reformatted to <code>1,234</code> as the user types. However, some entries cannot be fully reformatted as the user types. For example, an entry of <code>1.</code> would be fully formatted to <code>1</code> but must preserve the trailing decimal so that the user may type additional characters.</p> <p>After the user shifts focus away from the number input, Mathesar fully reformats their entry. For example, <code>1.</code> will be reformatted to <code>1</code> (removing the trailing zero).</p> </li> </ul>"},{"location":"archive/product/technical-specs/numbers/#scientific-notation","title":"Scientific notation","text":"<ul> <li> <p>To satisfy Goal F, Mathesar delegates to the front-end the responsibility to decide between displaying a number in standard notation or scientific notation.</p> <p>The algorithm for making this decision is as follows.</p> <ul> <li>If the front-end cannot parse the number, then it retains the notation used in the stringified number.</li> <li>If the front-end can only produce a <code>BigInt</code>, then it will use standard notation because: (a) <code>Intl.NumberFormat</code> is not capable of accurately formatting very large <code>BigInt</code> values due to its upper limit on <code>maximumFractionDigits</code> of <code>20</code>, and (b) standard notation makes it clearer to the user that the value is an integer.</li> <li>If the front-end can produce a <code>number</code>, then it will use some yet-to-be-determined heuristics to make a best guess as to whether the user would prefer to see the number in standard notation or scientific notation.</li> </ul> </li> </ul>"},{"location":"archive/product/technical-specs/numbers/#loss-of-precision","title":"Loss of precision","text":"<ul> <li>To satisfy Goal C, Mathesar delegates responsibility to the back-end for transforming precise values entered by the user into less-precise values stored by Postgres. The front-end does not attempt any rounding or truncation. The back-end responds with the value saved in Postgres and the front-end displays this value. At this point, it is the responsibility of the user to notice that their value has been rounded or truncated. (This behavior is consistent with <code>psql</code>, spreadsheets, and AirTable.)</li> </ul>"},{"location":"archive/product/technical-specs/numbers/#future-consideration","title":"Future consideration","text":"<ul> <li>At some point we may add display options for numbers, which allow users to customize things like: percentages, minimum fraction digits, maximum fraction digits, parentheses for negative numbers, forcing scientific notation on/off, forcing grouping separators on/off.</li> </ul>"},{"location":"archive/product/technical-specs/record-selector/","title":"Record Selector spec","text":""},{"location":"archive/product/technical-specs/record-selector/#design-goals","title":"Design goals","text":"<ul> <li>When the user wants to enter a value into a FK cell, they use the record selector to select a record from the linked table.</li> <li>If the linked table does not already contain a matching record, then the record selector makes it easy for the the user to create a new record and select it.</li> </ul>"},{"location":"archive/product/technical-specs/record-selector/#basic-behavior","title":"Basic behavior","text":"<p>Here\u2019s a \u201cPublications\u201d record selector, as it looks immediately after opening:</p> <p></p>"},{"location":"archive/product/technical-specs/record-selector/#layout","title":"Layout","text":"<ul> <li>It\u2019s a modal.</li> <li>Its height grows as needed, but no more than 10 results ever display, making vertical scrolling unlikely.</li> <li>If vertical scrolling becomes necessary, then only the results scroll (with the headers and search inputs remaining fixed).</li> <li>To account for tables with many columns, the width of the modal should grow as needed until it fills almost the entire viewport width. Even so, horizontal scrolling may be needed in some cases.</li> </ul>"},{"location":"archive/product/technical-specs/record-selector/#opening","title":"Opening","text":"<ul> <li>When a FK cell is selected, pressing <code>Enter</code> opens the record selector for it. Note: This behavior is consistent with Google Tables, but different from AirTable. For a cell with existing values, AirTable does not open the record selector on <code>Enter</code>, presumably to prevent the user from accidentally overwriting values. I prefer the consistency of Google\u2019s behavior here.</li> <li>Double-clicking a FK cell opens the record selector for it. (This UX is also more in-line with Google than AirTable.) Note: We could consider adding additional entry points such as an icon click target within blank cell (akin to AirTable), but I think it\u2019s worth exploring those details later.</li> <li>The record selector functions identically regardless of whether its origin cell already contains a selected record. This behavior matches Google Tables, but differs from AirTable because AirTable requires the user to manually clear the cell before opening the record selector.</li> </ul>"},{"location":"archive/product/technical-specs/record-selector/#search-inputs","title":"Search inputs","text":"<ul> <li>After opening, the input within the first non-PK column has focus. (And this behavior may actually be a bit more smarter once we have implemented some other features for which I have not yet released specs documents.)</li> <li><code>Tab</code> and <code>Shift+Tab</code> moves focus between the search inputs.</li> </ul>"},{"location":"archive/product/technical-specs/record-selector/#the-selected-option","title":"The \u201cselected option\u201d","text":"<ul> <li>The record selector presents records as \u201coptions\u201d, similar to a <code>&lt;select&gt;</code> element.</li> <li>One (and only one) option is selected at all times.</li> <li>The selected option is styled the same as when a row is selected in a sheet.</li> <li>The first row is selected by default.</li> <li><code>Up</code> and <code>Down</code> keys move the selection.</li> <li>If the user modifies the selection and then modifies the query, the selection is reset to the the first row.</li> </ul>"},{"location":"archive/product/technical-specs/record-selector/#closing","title":"Closing","text":"<ul> <li>Clicking the close button on the modal closes the record selector without producing a record.</li> <li>Pressing the <code>Esc</code> key closes the record selector without producing a record.</li> <li>Single-clicking on a result closes the record selector, producing the record associated with that result.</li> <li>Pressing <code>Enter</code> closes the record selector, producing the record associated with the currently select option.</li> <li>When a selection is made, the value of the cell is updated to link to the selected record. When no selection is made, the value of the cell is not changed.</li> </ul>"},{"location":"archive/product/technical-specs/record-selector/#search-algorithm","title":"Search algorithm","text":"<p>The search uses some fuzzy logic when finding and sorting records. Here\u2019s how it works:</p>"},{"location":"archive/product/technical-specs/record-selector/#overview","title":"Overview","text":"<ul> <li>The user enters values into the search inputs exactly as they would enter them into cells within the sheet. For example, a Date type will have a date picker. There will likely be some edge cases here to work out during implementation, especially when dealing with invalid input.</li> <li>Records are matched against all query columns using a points system.</li> <li>For non-string-like columns (e.g. Number, Date, etc), a record get 4 points per column matched. A match is performed via strict equality.</li> <li>For string-like columns, a record gets 4 points for exact matches, 3 points for matches at the start of the string, and 2 points for matches within the string.</li> <li>Results are displayed with records listed first that have the highest total points across all query columns.</li> <li>Without any search criteria, ten records are displayed, ordered by descending primary key (Note that the mockups herein do not accurately reflect this requirement.)</li> </ul>"},{"location":"archive/product/technical-specs/record-selector/#example","title":"Example","text":"<ol> <li>Begin with our shared sample data (transformed to the final schema).</li> <li> <p>Add some more data:</p> <pre><code>insert into \"Authors\" (\"First Name\", \"Last Name\") values\n('Brianna', 'Murphy'),\n('Annabelle', 'Smith'),\n('Joanna', 'Stevenson'),\n('Adrian', 'Richardson'),\n('Anna', 'Richardson'),\n('Anna', 'Wilson-Rich'),\n('Joanna', 'Rich'),\n('Hans', 'Ulrich');\n</code></pre> </li> <li> <p>We are looking for an author named \u201cAnna Rich\u201d. Let\u2019s search the \u201cAuthors\u201d table by entering \u201cAnna\u201d into \u201cFirst Name\u201d and \u201cRich\u201d into \u201cLast Name\u201d.</p> </li> <li> <p>This produces the following results (with the <code>points</code> column displayed here for reference).</p> Id First Name Last Name Website points Anna Rich 276 Anna Richardson 7 277 Anna Wilson-Rich 6 278 Joanna Rich 6 137 Barbara Rich 4 80 Anna Humphrey http://annahumphrey.com 4 6 Anne Richards http://richards.biz 3 39 Michael Richards 3 71 James Richard https://richard.com 3 272 Annabelle Smith 3 274 Adrian Richardson 3 </li> <li> <p>We don\u2019t get any exact matches, but the records that match most closely are listed first.</p> </li> <li> <p>The query is run as follows:</p> <pre><code>WITH anon_cte AS (\n    SELECT *,\n        CASE WHEN \"First Name\" ILIKE 'Anna' THEN 4\n            WHEN \"First Name\" ILIKE 'Anna%' THEN 3\n            WHEN \"First Name\" ILIKE '%Anna%' THEN 2\n            ELSE 0\n        END\n        +\n        CASE WHEN \"Last Name\" ILIKE 'Rich' THEN 4\n            WHEN \"Last Name\" ILIKE 'Rich%' THEN 3\n            WHEN \"Last Name\" ILIKE '%Rich%' THEN 2\n            ELSE 0\n        END\n        AS points\n    FROM \"Authors\"\n)\nSELECT * FROM anon_cte\nWHERE points &gt; 0\nORDER BY points DESC\nLIMIT 10;\n</code></pre> <p>The case statements should probably be wrapped into some db-layer function like <code>search_score(text, text) -&gt; int</code>, and overloading that would enable scoring other types.</p> </li> </ol>"},{"location":"archive/product/technical-specs/record-selector/#creating-a-new-record","title":"Creating a new record","text":"<ol> <li> <p>When at least one column contains a query, a \u201cghost row\u201d will appear above the result set, allowing the user to select a record that will be created on-the-fly using all of the data from their search. The ghost row is filled in as the user types.</p> <p></p> </li> <li> <p>The user can highlight the ghost row by pressing <code>Up</code> \u2013 and in this state, validation errors will be displayed for cells as needed using the same UX as when adding a new row to a table.</p> <p></p> </li> </ol>"},{"location":"archive/product/technical-specs/record-selector/#entering-a-related-record-using-a-nested-record-selector","title":"Entering a related record using a nested record selector","text":"<ol> <li> <p>To create a new Publications record, the user needs to supply an Authors record. They use a \u201cnested\u201d record selector to locate or create one Authors record as follows:</p> <p></p> <p>Note: There are some layout details here that will need to be worked out during implementation, such as horizontal scrolling.</p> </li> <li> <p>The nested record selector opens when its target cell is selected (there\u2019s not need to press <code>Enter</code>), and it closes when a different higher-level cell is selected. There\u2019s no way for it to be closed while its target cell is selected.</p> <p>Note: UX gets a bit weird with tables that only contain FK columns. In the worst case scenario, a table would have only two columns, both of which are FKs. Selecting a record would be impossible because there would be no way to close the nested selectors. In the slightly-better-but-still-bad case, a table contains a PK plus two FKs. Here, you\u2019d need to select the PK cell to hid the nested selectors. These cases are rare enough that I think it\u2019s fine to discount them for now. With some more thought and experimentation, we can detect cases like that adjust the UI behavior a bit to better suit them.</p> </li> <li> <p>After selecting an Authors record, the top-level Publications record selector will become active again, with a value for \u201cAuthor Id\u201d filled in, and with a string representation of that Authors record displayed in its place.</p> </li> </ol>"},{"location":"archive/product/technical-specs/record-selector/#unsolved-problems","title":"Unsolved problems","text":""},{"location":"archive/product/technical-specs/record-selector/#updating-a-record-before-selecting-it","title":"Updating a record before selecting it","text":"<p>Use case\u2026</p> <ol> <li>I\u2019m entering a new \u201cItems\u201d record.</li> <li>For my item, I\u2019m selecting a \u201cPublications\u201d record.</li> <li>I\u2019ve found the publication using the ISBN, so I\u2019m confident that it\u2019s the correct record. I\u2019d like to select it!</li> <li>But I also notice that the record is missing a \u201cYear\u201d value.</li> <li>I can see the year on the book right in front of me so I\u2019d like to update the data, making it cleaner. But I don\u2019t want to lose my place in the process of adding a new \u201cItems\u201d record. I\u2019d like to update the publication year inline before choosing it.</li> </ol> <p>With a little more UX work, I think it would be possible to incorporate an \u201cupdate\u201d functionality into the record selector.</p>"},{"location":"archive/product/technical-specs/record-selector/#locating-a-record-based-on-aggregate-data","title":"Locating a record based on aggregate data","text":"<p>Use case\u2026</p> <ol> <li> <p>I\u2019ve acquired a new copy of Moneyball by Michael Lewis, and I\u2019d like to enter it as an item.</p> </li> <li> <p>Within the item, I begin to locate or create a \u201cPublications\u201d record. My search looks as follows:</p> Id ISBN Title Year Author Id Publisher Id Moneyball 91821 0393324818 Moneyball: The Art of Winning an Unfair Game 2004 <code>Michael Lewis</code> <code>W. W. Norton Company</code> \u2026 \u2026 \u2026 \u2026 \u2026 \u2026 </li> <li> <p>The first result appears to be a match at first, but then I notice that the book I\u2019m holding is the 2011 edition, with ISBN 0393338398. Upon entering those details I see there is no matching record in the database, so I set out to add one by filling in all the fields I can.</p> </li> <li> <p>I need to associate my new Publications record, with an Authors record. Here\u2019s what my Authors search looks like:</p> Id First Name Last Name Website Michael Lewis 8276 Michael Lewis <code>NULL</code> 13901 Michael Lewis <code>NULL</code> \u2026 \u2026 \u2026 \u2026 </li> <li> <p>Hmmm. There are two Michael Lewis records! Which do I chose? Are they duplicates? I real life, there are actually as many as twenty published authors named Michael Lewis! While picking an Authors record, I want to see a list of books associated with each author.</p> <p>This is tricky though. The Michael Lewis I\u2019m after has published a lot of books! How will that list of books be sorted? What text will display for each book? (Because the full title of Moneyball is actually quite long.) Can I filter the list? Can I select an author named Michael Lewis who has published at least one book whose title begins with Moneyball??? Designing a UX which helps answer that sort of question (without lots of clicks and keystrokes) is an interesting challenge!</p> </li> </ol> <p>We could also construct a more common use case if we venture outside our example schema. Consider a CRM-like schema with <code>person</code> records which each have many <code>email_address</code> records. When entering an <code>activity</code> record, I want to select a <code>person</code> that has at least one <code>email_address</code> which contains a field that matches a query. And in this case I also want to add a new person with that email address if I don\u2019t find a matching person. Adding is especially tough because we can\u2019t create the <code>email_address</code> record until we create the <code>peron</code> record, so the \u201cdrill-down-and-back-up-again\u201d UX outlined in the specs above won\u2019t work for the <code>email_address</code>.</p> <p>These scenarios are more tricky to handle and will require more UX thought. But for some schemata handling them well will be pretty important. </p>"},{"location":"archive/product/technical-specs/syncing/","title":"Syncing Database Objects","text":"<p>We synchronize database objects between the database and the web service layers through reflection of those objects. For any object created through the Mathesar web interface, we do this by having the web service create a model instance in its service database corresponding to the created object. \u00a0However, for objects created via other means, we reflect these in the Mathesar UI by capturing the state of relevant objects in the database, and propagating that state upwards to the web service\u2019s models, and then eventually the UI. For more information about database reflection, see the SQLAlchemy docs.</p>"},{"location":"archive/product/technical-specs/syncing/#goal","title":"Goal","text":"<p>The UI should reflect the current state of the DB, subject to performance constraints.</p>"},{"location":"archive/product/technical-specs/syncing/#database-object-models","title":"Database object models","text":"<p>We include the <code>oid</code> field for each database object model (currently table or schema) in order to identify it in the database.</p>"},{"location":"archive/product/technical-specs/syncing/#renew-models-whenever-listing","title":"Renew models whenever listing","text":"<p>Whenever we perform an action such as \u2018list all tables in schema\u2019 or \u2018list all schemata in database\u2019, we reflect all DB objects.  However, we only do so at most every 5 minutes.  This is accomplished by checking the Django cache for a particular key, <code>database_reflected_recently</code>.  We don\u2019t store any actual data in the cache, but rather in the <code>Schema</code> and <code>Table</code> models.  The cache only serves to let us know when to re-reflect the underlying DB objects and make appropriate changes to the model tables.</p> <p>In the current codebase, we trigger the function to check the cache and reflect DB objects when needed whenever we access the queryset for either the <code>SchemaViewSet</code> or <code>TableViewSet</code> (in <code>mathesar/views/api.py</code>). To do this, we use the special <code>get_queryset</code> function. This gets picked up and automatically run when the ViewSet is called. Using this allows us to run arbitrary code before returning the queryset. In particular, we call the function <code>reflect_db_objects</code> in the same module.  This function finds all DB objects by their <code>oid</code>, and notes any changes.</p>"},{"location":"archive/product/technical-specs/syncing/#cache-names-of-objects","title":"Cache names of objects","text":"<p>Since we use the <code>name</code> property of DB objects more than anything else, we cache it using the Django cache framework.</p>"},{"location":"archive/product/technical-specs/syncing/#importing-a-previously-existing-db","title":"Importing a previously-existing DB","text":"<p>We\u2019ll \u201cimport\u201d a previously existing DB simply by reflecting all schemata in the database, and then reflecting all tables in each schemata, adding the resulting objects to the <code>Schema</code> and <code>Table</code> model tables as we go.</p>"},{"location":"archive/product/technical-specs/syncing/#objects-which-are-always-read-on-the-fly","title":"Objects which are always read on the fly","text":"<p>Records and Columns of tables are always read from the DB on the fly.</p>"},{"location":"archive/team/jobs/2021-04-designer/","title":"2021-04 - Product Designer","text":"<p>This job was filled in April 2021.</p>"},{"location":"archive/team/jobs/2021-04-designer/#the-project","title":"The Project","text":"<p>We\u2019re looking for a product designer to help build a brand new open source product that helps users of all skill levels use, extend, and visualize their data. We are heavily inspired by Dabble DB.</p> <p>The current team is two engineers, we\u2019re alumni of Creative Commons and have experience working on open source projects and building community. We\u2019re aiming for an initial team size of four, including this position and a frontend engineer. We\u2019re based out of the nonprofit Center of Complex Interventions and are advised by Joi Ito and Reid Hoffman.</p>"},{"location":"archive/team/jobs/2021-04-designer/#the-position","title":"The Position","text":"<p>We haven\u2019t started writing code for this project yet and your first task will be to help us design and ship the MVP. You\u2019ll have full ownership of the product design process, including user interviews, taking ideas from initial conception to high-fidelity designs, and regular usability testing. You\u2019ll translate complex data manipulation concepts into a simple and intuitive user interface for non-technical users. You\u2019ll collaborate closely with the front end engineer to ship your designs.</p> <p>This position also involves ownership in building an active community around the product, including participating in conversations with both contributors and users, mentoring for programs like Google Summer of Code, and maintaining documentation, reviewing pull requests, and so on.</p> <p>We are a fully distributed team, and you can be located anywhere in the world, as long as you are can make time between 2 PM and 8 PM UTC for meetings as needed.</p>"},{"location":"archive/team/jobs/2021-04-designer/#qualifications","title":"Qualifications","text":"<p>We\u2019re looking for a designer that has extensive experience with translating complex concepts into intuitive web interfaces for non-technical users and working with engineering teams to ship them. You should be an expert in design best practices, especially in accessibility and mobile-friendliness. You should also have experience conducting effective user interviews and usability testing, and generally be an advocate for creating an exceptional user experience.</p> <p>Excellent communication skills in English (both written and verbal) are essential, since this position is fully remote. You should be able to work independently, build good working relationships remotely, and be a proactive communicator. You should also enjoy writing documentation, helping others, and building a community. You\u2019re probably also curious and enjoy learning new things.</p> <p>Some nice-to-haves:</p> <ul> <li>understanding of SQL and databases</li> <li>design experience with spreadsheet, tables, or large datasets</li> <li>experience as a contributor or maintainer of open source software</li> <li>familiarity with HTML/CSS</li> </ul>"},{"location":"archive/team/jobs/2021-04-designer/#salary-and-benefits","title":"Salary and Benefits","text":"<p>You will be a salaried employee if you\u2019re in the US and an independent contractor otherwise. We offer a competitive salary in the nonprofit sector. We also have a budget for learning material (books, courses, etc.) and conferences.</p> <p>US employees have the following benefits:</p> <ul> <li>Medical, dental, and vision insurance coverage (CCI covers 80% of employee costs and 70% of dependent costs for medical insurance and 50% of employee costs for dental and vision insurance).</li> <li>Life insurance coverage</li> <li>401(k) forthcoming</li> </ul>"},{"location":"archive/team/jobs/2021-04-designer/#how-to-apply","title":"How to Apply","text":"<p>Please fill out this form.</p>"},{"location":"archive/team/jobs/2021-04-designer/#equal-employment-opportunity-policy","title":"Equal Employment Opportunity Policy","text":"<p>The Center of Complex Interventions, Inc. (CCI) is an equal opportunity employer. CCI complies with and adheres to all United States state and federal anti-discrimination laws with respect to its employment practices. CCI does not discriminate against any employee or applicant for employment on the basis of race, color, religion, gender, sexual orientation, gender identity and expression, national origin or ancestry, age, or disability or any other category protected under state or federal law. This policy extends to recruiting, hiring, compensation, benefits, assignment, working conditions, termination, re-employment, employee treatment, and all other terms, conditions and privileges of employment. All employment-related decisions are made on a nondiscriminatory basis so as to further the principle of equal employment opportunity.</p>"},{"location":"archive/team/jobs/2021-04-frontend/","title":"2021-04 - Frontend Engineer #1","text":"<p>This job was filled in April 2021.</p>"},{"location":"archive/team/jobs/2021-04-frontend/#the-project","title":"The Project","text":"<p>We\u2019re looking for a frontend engineer to help build a brand new open source product that helps users of all skill levels use, extend, and visualize their data. We are heavily inspired by Dabble DB.</p> <p>The current team is two engineers, we\u2019re alumni of Creative Commons and have experience working on open source projects and building community. We\u2019re aiming for an initial team size of four, including this position and a product designer. We\u2019re based out of the nonprofit Center of Complex Interventions and are advised by Joi Ito and Reid Hoffman.</p>"},{"location":"archive/team/jobs/2021-04-frontend/#the-position","title":"The Position","text":"<p>We haven\u2019t started writing code for this project yet and you\u2019ll be our first frontend engineer. We expect that you\u2019ll have full ownership of the front end, including picking the stack, writing modular, scalable, and well-documented code, and ensuring accessibility, near-instantaneous performance, and a great user experience. You\u2019ll also help with ideation and design of the MVP and new features, collaborating closely with our product designer.</p> <p>This position also involves ownership in building an active community around the product, including participating in conversations with both contributors and users, mentoring for programs like Google Summer of Code, and maintaining documentation, reviewing pull requests, and so on.</p> <p>We are a fully distributed team, and you can be located anywhere in the world, as long as you are can make time between 2 PM and 8 PM UTC for meetings as needed.</p>"},{"location":"archive/team/jobs/2021-04-frontend/#qualifications","title":"Qualifications","text":"<p>We\u2019re looking for an experienced engineer that has architected, built, and deployed complex frontend applications that deal with large amounts of data. Ensuring scalability, accessibility, and performance are critical, and ideally, you have strong opinions on how to make that happen. We also expect you to be an advocate for creating an exceptional user experience.</p> <p>Excellent communication skills in English (both written and verbal) are essential, since this position is fully remote. You should be able to work independently, build good working relationships remotely, and be a proactive communicator. You should also enjoy writing documentation, helping others, and building a community. You\u2019re probably also curious and enjoy learning new things.</p> <p>Some nice-to-haves:</p> <ul> <li>solid understanding of SQL and databases</li> <li>experience as a contributor or maintainer of open source software</li> <li>experience with usability testing</li> <li>familiarity with Python</li> <li>remote work experience</li> </ul>"},{"location":"archive/team/jobs/2021-04-frontend/#salary-and-benefits","title":"Salary and Benefits","text":"<p>You will be a salaried employee if you\u2019re in the US and an independent contractor otherwise. We offer a competitive salary in the nonprofit sector. We also have a budget for learning material (books, courses, etc.) and conferences.</p> <p>US employees have the following benefits:</p> <ul> <li>Medical, dental, and vision insurance coverage (CCI covers 80% of employee costs and 70% of dependent costs for medical insurance and 50% of employee costs for dental and vision insurance).</li> <li>Life insurance coverage</li> <li>401(k) forthcoming</li> </ul>"},{"location":"archive/team/jobs/2021-04-frontend/#how-to-apply","title":"How to Apply","text":"<p>Please fill out this form.</p>"},{"location":"archive/team/jobs/2021-04-frontend/#equal-employment-opportunity-policy","title":"Equal Employment Opportunity Policy","text":"<p>The Center of Complex Interventions, Inc. (CCI) is an equal opportunity employer. CCI complies with and adheres to all United States state and federal anti-discrimination laws with respect to its employment practices. CCI does not discriminate against any employee or applicant for employment on the basis of race, color, religion, gender, sexual orientation, gender identity and expression, national origin or ancestry, age, or disability or any other category protected under state or federal law. This policy extends to recruiting, hiring, compensation, benefits, assignment, working conditions, termination, re-employment, employee treatment, and all other terms, conditions and privileges of employment. All employment-related decisions are made on a nondiscriminatory basis so as to further the principle of equal employment opportunity.</p>"},{"location":"archive/team/jobs/2021-09-frontend/","title":"2021-09 - Frontend Engineer #2","text":"<p>This job was closed to new applicants on 2021-09-10</p> <p>We\u2019re looking for a frontend engineer to work on Mathesar, a brand new open source project that will enable users of all skill levels to store, visualize, and collaborate with others on data. We\u2019re currently working hard on our alpha version, which we are aiming to ship by November 2021. We\u2019re based out of the nonprofit Center of Complex Interventions (CCI) and are advised by Joi Ito and Reid Hoffman.</p>"},{"location":"archive/team/jobs/2021-09-frontend/#the-position","title":"The Position","text":"<p>You\u2019ll be collaborating closely with everyone on the existing Mathesar team to build out the frontend for the project. Our frontend stack is Svelte and TypeScript, and our initial roadmap for the MVP is on GitHub.</p> <p>We\u2019re working on interesting problems related to simplifying and automating database operations to make them easy to work with for non-technical users without sacrificing flexibility for advanced users. We\u2019re still working on the first version of the product, so there\u2019s ample opportunity to provide input into the direction of the project from both the technical and usability perspectives. You\u2019ll also have opportunities to contribute to backend and infrastructure work if you desire \u2013 we are an informal team.</p> <p>This position also involves ownership in building an active community around the product, including participating in conversations with both contributors and users, mentoring for programs like Google Summer of Code, and maintaining documentation, reviewing pull requests, and so on.</p> <p>We are a fully distributed team and work mostly asynchronously via Matrix and GitHub Discussions. You can be located anywhere in the world, as long as you are can make time between 2 PM and 8 PM UTC for occasional video calls and team events.</p>"},{"location":"archive/team/jobs/2021-09-frontend/#qualifications","title":"Qualifications","text":"<p>We expect you to:</p> <ul> <li>have had production experience with architecting, building, and deploying complex data-driven frontend applications using a modern JavaScript framework such as Svelte, Vue, or React.</li> <li>have had experience with ensuring frontend accessibility, scalability, and performance.</li> <li>have experience working professionally within an engineering team.</li> <li>have excellent verbal communication skills in English.</li> <li>enjoy explaining your ideas quickly, clearly, and comprehensively in writing.</li> <li>work independently, build good working relationships remotely, and communicate proactively.</li> <li>be an advocate for an exceptional user experience.</li> <li>be interested in building an open source community and helping others contribute to the project.</li> <li>be curious and enjoy learning new things.</li> </ul> <p>You get bonus points if you have experience with any of the following:</p> <ul> <li>Svelte and TypeScript.</li> <li>Python (especially Django or SQL Alchemy).</li> <li>Relational databases and SQL.</li> <li>Open source contribution or community building.</li> <li>Remote (especially asynchronous) work.</li> <li>Collaborating with designers.</li> <li>Usability testing.</li> </ul>"},{"location":"archive/team/jobs/2021-09-frontend/#interview-process","title":"Interview Process","text":"<p>The interview process will consist of four rounds:</p> <ul> <li>Round 1: 1 hour technical interview with our frontend engineer.</li> <li>Round 2: We\u2019ll assign you an open issue on the Mathesar repository and ask you to complete it. This is aimed at giving everyone involved a look at what it would be like to work together day to day.</li> <li>Round 3: 1 hour interview with our designer and backend engineer.</li> <li>Round 4: 45 min interview with our project lead.</li> </ul> <p>The final candidate will also have a conversation with CCI\u2019s Executive Director to learn more about the organization.</p>"},{"location":"archive/team/jobs/2021-09-frontend/#salary-and-benefits","title":"Salary and Benefits","text":"<p>You will be a salaried employee if you\u2019re in the US and an independent contractor otherwise. We offer a competitive salary in the nonprofit sector. We also have a budget for learning material (books, courses, etc.) and conferences.</p> <p>US employees have the following benefits:</p> <ul> <li>Medical, dental, and vision insurance coverage (CCI covers 80% of employee costs and 70% of dependent costs for medical insurance and 50% of employee costs for dental and vision insurance).</li> <li>Life insurance coverage</li> <li>401(k)</li> </ul>"},{"location":"archive/team/jobs/2021-09-frontend/#how-to-apply","title":"How to Apply","text":"<p>Please fill out this application form.</p> <p>You are also welcome to join our community and ask any questions you might have or contribute to the project.</p>"},{"location":"archive/team/jobs/2021-09-frontend/#equal-employment-opportunity-policy","title":"Equal Employment Opportunity Policy","text":"<p>The Center of Complex Interventions, Inc. (CCI) is an equal opportunity employer. CCI complies with and adheres to all United States state and federal anti-discrimination laws with respect to its employment practices. CCI does not discriminate against any employee or applicant for employment on the basis of race, color, religion, gender, sexual orientation, gender identity and expression, national origin or ancestry, age, or disability or any other category protected under state or federal law. This policy extends to recruiting, hiring, compensation, benefits, assignment, working conditions, termination, re-employment, employee treatment, and all other terms, conditions and privileges of employment. All employment-related decisions are made on a nondiscriminatory basis so as to further the principle of equal employment opportunity.</p>"},{"location":"archive/team/jobs/2021-10-backend/","title":"2021-10 - Senior Backend Engineer","text":"<p>This job was closed to new applicants in 2021-10</p> <p>We\u2019re looking for a backend engineer to work on Mathesar, a new open source project aimed at making databases more accessible to non-technical users. Our goal is to enable users of all skill levels to store, visualize, and collaborate with others on data.</p> <p>We\u2019re currently working hard on our alpha version, which we are aiming to ship by the end of 2021. Our team is based out of the nonprofit Center of Complex Interventions (CCI) and we are advised by Joi Ito and Reid Hoffman.</p>"},{"location":"archive/team/jobs/2021-10-backend/#the-position","title":"The Position","text":"<p>We\u2019re working on simplifying and automating database operations and data migrations to make them easy to work with for non-technical users without sacrificing flexibility for advanced users. You\u2019ll be collaborating closely with the rest of the Mathesar team to build the backend for the project using PostgreSQL, Python, SQLAlchemy, and Django.</p> <p>We\u2019re still working on the first version of the product (you can find our roadmap on GitHub) and there\u2019s ample opportunity to provide input into the direction of the project from both the technical and usability perspectives. You\u2019ll also have opportunities to contribute to frontend and infrastructure work if you desire \u2013 we are an informal team.</p> <p>This position also involves ownership in building an active community around the project, including participating in conversations with both contributors and users, mentoring new contributors and interns, maintaining documentation and tutorials, reviewing pull requests, and so on.</p> <p>We are a fully distributed team and work mostly asynchronously via Matrix and GitHub Discussions. You can be located anywhere in the world, as long as you can make time between 2 PM and 8 PM UTC for occasional video calls and team events.</p>"},{"location":"archive/team/jobs/2021-10-backend/#qualifications","title":"Qualifications","text":"<p>Requirements:</p> <ul> <li>Expertise in Python.</li> <li>Strong grasp of SQL and database performance (PostgreSQL preferred).</li> <li>Experience with architecting and maintaining Python web applications (Django and/or SQLAlchemy preferred).</li> <li>Experience designing REST APIs.</li> <li>Professional experience collaborating on a product within a 4-5 member engineering team.</li> <li>Excellent verbal communication skills in English.</li> <li>Comfort with explaining your ideas quickly, clearly, and comprehensively in writing.</li> <li>Ability to work independently, build good working relationships remotely, and communicate proactively.</li> <li>Interest in building an open source community and helping others contribute to the project.</li> <li>Comfort with working without defined specifications and identifying and resolving ambiguity quickly.</li> <li>Curiosity and enjoyment of learning new things.</li> </ul> <p>Nice to have:</p> <ul> <li>Experience with build/infrastructure tools like Docker and Ansible.</li> <li>Experience maintaining Linux servers.</li> <li>Experience with building self-hosted products.</li> <li>Open source contribution or community building.</li> <li>Remote (especially asynchronous) work.</li> <li>Experience with working on complex data-driven frontend applications using a modern JavaScript framework.</li> </ul>"},{"location":"archive/team/jobs/2021-10-backend/#interview-process","title":"Interview Process","text":"<p>The interview process will consist of four rounds:</p> <ul> <li>Round 1: Interview with our project lead</li> <li>Round 2: We\u2019ll ask you to contribute a feature to Mathesar to simulate what it would be like to work together day to day.</li> <li>Round 3: Interview with our backend engineer</li> <li>Round 4: Interview with our frontend engineer and designer</li> </ul>"},{"location":"archive/team/jobs/2021-10-backend/#salary-and-benefits","title":"Salary and Benefits","text":"<p>You will be a salaried employee if you\u2019re in the US and an independent contractor otherwise. We offer a competitive salary in the nonprofit sector. We also have a budget for learning material (books, courses, etc.) and conferences.</p> <p>US employees have the following benefits:</p> <ul> <li>Medical, dental, and vision insurance coverage (CCI covers 80% of employee costs and 70% of dependent costs for medical insurance and 50% of employee costs for dental and vision insurance).</li> <li>Life insurance coverage</li> <li>401(k)</li> </ul>"},{"location":"archive/team/jobs/2021-10-backend/#how-to-apply","title":"How to Apply","text":"<p>Please fill out this application form.</p> <p>You are also welcome to join our community and ask any questions you might have or contribute to the project.</p>"},{"location":"archive/team/jobs/2021-10-backend/#equal-employment-opportunity-policy","title":"Equal Employment Opportunity Policy","text":"<p>The Center of Complex Interventions, Inc. (CCI) is an equal opportunity employer. CCI complies with and adheres to all United States state and federal anti-discrimination laws with respect to its employment practices. CCI does not discriminate against any employee or applicant for employment on the basis of race, color, religion, gender, sexual orientation, gender identity and expression, national origin or ancestry, age, or disability or any other category protected under state or federal law. This policy extends to recruiting, hiring, compensation, benefits, assignment, working conditions, termination, re-employment, employee treatment, and all other terms, conditions and privileges of employment. All employment-related decisions are made on a nondiscriminatory basis so as to further the principle of equal employment opportunity.</p>"},{"location":"archive/team/jobs/2022-05-frontend/","title":"2022-05 - Frontend Engineer #3","text":"<p>We decided not to fill this position in 2022-05.</p>"},{"location":"archive/team/jobs/2022-05-frontend/#about-us","title":"About us","text":"<p>Mathesar is an open source tool that provides an intuitive interface to databases. Our goal is to make it easy for non-technical users to create, organize, and analyze data collaboratively, without any prior knowledge of database concepts. We started prototyping the project in March 2021 and are working towards our first (alpha) release in mid-2022.</p> <p>You\u2019ll be joining our small, globally distributed team at the Center of Complex Interventions (CCI), a U.S. nonprofit. We work asynchronously and value work/life balance. Our work is public - look through our code, read our project and team wiki, and join our communication channels.</p>"},{"location":"archive/team/jobs/2022-05-frontend/#what-you-will-do","title":"What you will do","text":"<p>You\u2019ll be our third frontend engineer. Your day-to-day work will involve:</p> <ul> <li>Primarily, writing code using Svelte and TypeScript</li> <li>Collaborating with other team members, including:<ul> <li>providing written feedback on product and design specs for new features</li> <li>figuring out technical architecture</li> <li>getting clarification on your work if you need it</li> <li>reviewing pull requests</li> </ul> </li> <li>Helping with open source community work, including:<ul> <li>creating issues</li> <li>writing documentation</li> <li>helping new contributors who are stuck</li> <li>participating in mentoring programs like Google Summer of Code</li> </ul> </li> <li>Occasionally attending video calls between 12:00-18:00 UTC for:<ul> <li>meetings focused on a specific agenda</li> <li>team events</li> </ul> </li> </ul>"},{"location":"archive/team/jobs/2022-05-frontend/#about-you","title":"About you","text":"<ul> <li>You have strong JavaScript development skills, including<ul> <li>Understanding of the latest standards</li> <li>Proficiency in modern JS frameworks</li> </ul> </li> <li>You have significant experience with the work involved in maintaining a large production codebase</li> <li>You proactively identify and resolve requirements that are not well-defined</li> <li>You aim for an exceptional user experience when you build products, including thinking about<ul> <li>small design details and interactions</li> <li>accessibility</li> <li>performance and load times</li> <li>usability</li> </ul> </li> <li>You have a solid grasp of database and SQL concepts</li> <li>You\u2019re an excellent communicator in English,<ul> <li>you can explain ideas quickly, clearly, and comprehensively in writing</li> <li>you are verbally fluent</li> </ul> </li> <li>You\u2019re interested in actively participating in an open source community</li> <li>You\u2019re curious and enjoy learning new things</li> </ul>"},{"location":"archive/team/jobs/2022-05-frontend/#what-to-expect-from-the-hiring-process","title":"What to expect from the hiring process","text":"<ul> <li>First, you\u2019ll fill out an application form with a few project-specific questions</li> <li>We\u2019ll review applications on a rolling basis and either:<ul> <li>contact you to schedule an introductory interview, or</li> <li>let you know we will not be interviewing you</li> </ul> </li> <li>If the introductory interview goes well, we will schedule a technical interview</li> <li>If the technical interview goes well, we will ask you to solve an issue with the Mathesar codebase asynchronously. This will involve a few hours of your time.</li> <li>If the coding task goes well, we will schedule one more interview where you\u2019ll meet our designer and a member of our backend team</li> <li>We\u2019ll make our final decision and let you know the outcome</li> </ul>"},{"location":"archive/team/jobs/2022-05-frontend/#salary-and-benefits","title":"Salary and benefits","text":"<p>We offer competitive compensation for the nonprofit sector.</p> <p>If you\u2019re in the U.S., you will be hired as a salaried employee. Employees have the following benefits:</p> <ul> <li>Medical, dental, and vision insurance coverage<ul> <li>Medical: CCI covers 80% of employee costs and 70% of dependent costs </li> <li>Dental and Vision: CCI covers 50% of employee costs for dental and vision insurance</li> </ul> </li> <li>401(k), including matching</li> <li>Life insurance coverage</li> </ul> <p>If you\u2019re outside the U.S., you will be an independent contractor. </p> <p>Both contractors and employees will be reimbursed for job-related learning materials (books, courses, etc.) and conferences.</p>"},{"location":"archive/team/jobs/2022-05-frontend/#how-to-apply","title":"How to Apply","text":"<p>Please fill out this application form.</p>"},{"location":"archive/team/jobs/2022-05-frontend/#equal-employment-opportunity-policy","title":"Equal Employment Opportunity Policy","text":"<p>The Center of Complex Interventions, Inc. (CCI) is an equal opportunity employer. CCI complies with and adheres to all United States state and federal anti-discrimination laws with respect to its employment practices. CCI does not discriminate against any employee or applicant for employment on the basis of race, color, religion, gender, sexual orientation, gender identity and expression, national origin or ancestry, age, or disability or any other category protected under state or federal law. This policy extends to recruiting, hiring, compensation, benefits, assignment, working conditions, termination, re-employment, employee treatment, and all other terms, conditions and privileges of employment. All employment-related decisions are made on a nondiscriminatory basis so as to further the principle of equal employment opportunity.</p>"},{"location":"archive/team/workflow/comms-assignee/","title":"Comms Assignee","text":"<p>Danger</p> <p>This page is archived and does not reflect current team workflow.</p> <p>Every week, one person from the Mathesar core team is assigned to be the \u201cComms Assignee\u201d. This means that they are in charge of communication with the community for that week.</p>"},{"location":"archive/team/workflow/comms-assignee/#current-schedule","title":"Current Schedule","text":"<p>Please check the latest planning discussion for the current Comms Assignee schedule.</p>"},{"location":"archive/team/workflow/comms-assignee/#purpose","title":"Purpose","text":"<p>The idea behind the Comms Assignee is to let the rest of the team ignore GitHub notifications if they need to and trust that the Comms Assignee will let them know if there\u2019s anything they need to do, such as weigh in on an issue or review a pull request.</p>"},{"location":"archive/team/workflow/comms-assignee/#how-to-do-comms","title":"How to do comms","text":""},{"location":"archive/team/workflow/comms-assignee/#every-day","title":"Every day","text":"<ol> <li>Respond to Matrix messages from community members in all channels.</li> <li>Look through issues that need triage and triage them.</li> <li>Look through recently updated issues and assign issues to community members who have commented with intent to start work.</li> <li>Look through new PRs for any lacking an assigned reviewer. Comment on the PR, requesting a review by tagging specific team members who you think would be suited to review it.</li> </ol> <p>Ensure community members receive a response within 1 business day, either from you or someone else. You don\u2019t need to resolve everything within one day though. With a new PR for example, you can comment on it, thank the contributor, and let them know when they can expect their PR to be reviewed.</p>"},{"location":"archive/team/workflow/comms-assignee/#once-per-week","title":"Once per week","text":"<ul> <li> <p>Open pull requests</p> <p>The Comms Assignee should check in on PRs from community contributors that have not seen any updates in a while. Do your best to help move the PR towards completion which include asking if the contributor needs any help.</p> </li> </ul>"},{"location":"archive/team/workflow/comms-assignee/#notes","title":"Notes","text":"<ul> <li> <p>Delegate tasks to other team members in as needed.</p> </li> <li> <p>Thank new contributors for their time and point them towards other ways to get help if they need it.</p> </li> </ul>"},{"location":"archive/team/workflow/decisions/","title":"Engineering Decisions","text":"<p>Danger</p> <p>This page is archived.</p>"},{"location":"archive/team/workflow/decisions/#june-2021","title":"June 2021","text":"<ul> <li>We decided to use limit/offset pagination instead of cursor pagination.<ul> <li>Discussion: Pagination options</li> </ul> </li> <li>We finalized on using TypeScript on the client.<ul> <li>Discussion: Using Typescript on Client</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/decisions/#may-2021","title":"May 2021","text":"<ul> <li>We finalized what we expect the Mathesar \u201cMoney\u201d type to look like.<ul> <li>Discussion: Money type</li> </ul> </li> <li>We\u2019re going to store timezones with local timezone information, not as UTC.</li> <li>Discussion: Timezones</li> <li>We\u2019re using <code>NUMERIC</code> Postgres types to power our general \u201cNumber\u201d type on the roadmap.<ul> <li>Discussion: \u201cNumber\u201d types </li> </ul> </li> <li>We finalized implementation details for table creation from file imports.</li> <li>Discussion: CSV importing / type inference</li> </ul>"},{"location":"archive/team/workflow/decisions/#april-2021","title":"April 2021","text":"<ul> <li>Mathesar should function as a GUI to existing DBs, although it does a lot more. There should only be one source of truth for database-related data.</li> <li>Discussion: Mathesar: DB Client, or more integrated?</li> <li>We\u2019re using Svelte for the frontend.</li> <li>Discussion: \u201cDeciding the frontend framework\u201d on GitHub Discussions</li> <li>The frontend and backend code will live in the same repository.</li> <li>Discussion: \u201cRepository structure to accommodate frontend code\u201d on GitHub Discussions</li> <li>We\u2019re storing web application related tables in a separate database.</li> <li>Discussion: \u201cSeparate DB for webapp tables and user tables\u201d on GitHub Discussions</li> <li>Additional Reasoning: We want to be able to reflect an entire database in Mathesar without having to modify it.</li> </ul>"},{"location":"archive/team/workflow/decisions/#march-2021","title":"March 2021","text":"<ul> <li>We\u2019re using SQLAlchemy to interact with user-defined database objects rather than Django models.</li> <li>Reasoning: We don\u2019t want to define user-defined database objects in code, we want the database to be the single source of truth and reflect what\u2019s there.</li> <li>We\u2019re using Django and Django REST Framework for the web application backend.</li> <li>Reasoning: We know it well and can build with it quickly.</li> <li>We\u2019re using Python for the backend.</li> <li>Reasoning: We know it well and can build with it quickly.</li> </ul>"},{"location":"archive/team/workflow/tools/","title":"Team Communication Tool","text":""},{"location":"archive/team/workflow/tools/#github","title":"GitHub","text":"<p>We use GitHub for code, issue tracking, and long form discussions. Please see Workflow for more information.</p>"},{"location":"archive/team/workflow/tools/#gmail","title":"Gmail","text":"<p>Everyone has an <code>@mathesar-foundation.org</code> email address that we use for everything work-related. We don\u2019t generally use much email.</p> <p><code>admins [at] mathesar [dot] org</code> is a Google Group that some Mathesar staff members are on. We use it for shared accounts (e.g. DockerHub). Emails sent to it forward to all of us.</p>"},{"location":"archive/team/workflow/tools/#loom","title":"Loom","text":"<p>We use Loom to record and store narrated screen recordings for asynchronous communication. It\u2019s useful to walk through a feature in a pull request, walk through a new design, or just ask questions.</p>"},{"location":"archive/team/workflow/tools/#matrix","title":"Matrix","text":"<p>We use Matrix for chat. We have our own homeserver and everyone on the core team has <code>@matrix.mathesar.org</code> accounts that they\u2019re expected to use for work. You can also join our public rooms with your private account if you\u2019d like.</p> <p>Please see Community for a list of public rooms.</p>"},{"location":"archive/team/workflow/tools/#slack","title":"Slack","text":"<p>We use Slack for chatting with the CCI team and community. Feel free to browse and join any public channels, there are a lot of them.</p>"},{"location":"archive/team/workflow/tools/#documents","title":"Documents","text":""},{"location":"archive/team/workflow/tools/#figma","title":"Figma","text":"<p>We use Figma and FigJam to create, share, and comment on design and brainstorming documents.</p>"},{"location":"archive/team/workflow/tools/#balsamiq-cloud","title":"Balsamiq Cloud","text":"<p>We use Balsamiq Cloud to create and share low-fidelity wireframes.</p> <p>We\u2019ve suspended this for now.</p>"},{"location":"archive/team/workflow/tools/#google-drive","title":"Google Drive","text":"<p>We have a <code>Mathesar</code> Google Drive where we put documents. We don\u2019t use this a lot since most of our documents are public.</p>"},{"location":"archive/team/workflow/tools/#hackmd","title":"HackMD","text":"<p>We use HackMD for collaborative note taking (e.g. for meetings). The format is Markdown and it syncs to GitHub, so it\u2019s also useful to create drafts of wiki pages since we can push documents to the wiki repo.</p>"},{"location":"archive/team/workflow/tools/#wiki","title":"Wiki","text":"<p>This wiki. We use it as a team knowledge base. We will use it for public documentation in the future.</p>"},{"location":"archive/team/workflow/tools/#infrastructure","title":"Infrastructure","text":""},{"location":"archive/team/workflow/tools/#google-cloud-platform","title":"Google Cloud Platform","text":"<p>We use Google Cloud Platform to host our servers, specifically:</p> <ul> <li>The Mathesar Matrix homeserver</li> <li>The Mathesar wiki</li> <li>The Mathesar staging server</li> </ul> <p>Access is controlled via Google Groups.</p>"},{"location":"archive/team/workflow/tools/#utilities","title":"Utilities","text":""},{"location":"archive/team/workflow/tools/#1password","title":"1Password","text":"<p>We currently use CCI\u2019s 1Password account to share Mathesar-related passwords (e.g. staging server auth, credentials for our GitHub bot account, etc.)</p>"},{"location":"archive/team/workflow/tools/#savvycal","title":"SavvyCal","text":"<p>We use SavvyCal to schedule meetings with third-parties (e.g. interviews). Not everyone has a SavvyCal account, we set them up as needed.</p>"},{"location":"archive/team/workflow/tools/#google-calendar","title":"Google Calendar","text":"<p>We use Google Calendar to manage our calendars. </p> <p>It is expected that you keep your calendar up to date so that people can schedule meetings without having to check with you about availability. The working hours feature is especially useful. You should set your working hours to when you\u2019re available for meetings; you\u2019re not necessarily expected to be working during all of those hours.</p> <p>We have two shared calendars:</p> <ul> <li>The <code>Mathesar</code> calendar is used for shared Mathesar-related events.</li> <li>The <code>CCI Vacation</code> calendar is used to note when you\u2019ll be taking time off. Please update it in advance.</li> </ul>"},{"location":"archive/team/workflow/tools/#syften","title":"Syften","text":"<p>We use Syften to get email alerts of mentions of Mathesar and related topics on social media, forums, and blogs. </p>"},{"location":"archive/team/workflow/weekly-discussion/","title":"Weekly Discussion","text":"<p>Danger</p> <p>We\u2019re no longer doing these.</p> <p>At the beginning of each week, we start a discussion on GitHub Discussions to review Mathesar\u2019s progress, provide updates to the community, and to check in about our process and workload. Everyone is welcome to add a new topic to discuss or to comment on existing topics.</p> <p>Core team members are required to participate, others are welcome.</p> <p>All weekly discussions can be found here.</p>"},{"location":"archive/team/workflow/weekly-discussion/#posting-a-discussion","title":"Posting a Discussion","text":"<p>Quick notes on posting discussions. This is usually Kriti\u2019s responsibility, but other people on the core team might need to post discussions sometimes if Kriti is unavailable.</p> <ul> <li>Create a new discussion in the <code>Planning</code> category.</li> <li>Set the label to <code>status: draft</code> when you are constructing the discussion.</li> <li>Make sure to link back to each top-level topic from the main topic.</li> <li>Set the label to <code>status: started</code> when the discussion is ready for contribution. Post to the <code>General</code> channel on Matrix saying the discussion is up.</li> <li>Once the discussion is complete, set the label to <code>status: done</code>.</li> </ul>"},{"location":"archive/team/workflow/workflow/","title":"Mathesar Team Workflow","text":"<p>Mathesar work happens on GitHub. We create GitHub issues to track everything we\u2019re working on for both design and code.</p> <p>We track our tasks in the Mathesar GitHub project.</p> <p>We\u2019re reorganizing our team workflow into projects and ongoing responsibilities.</p>"},{"location":"archive/team/workflow/workflow/#creating-pull-requests","title":"Creating pull requests","text":"<ul> <li>All pull requests should follow the code review rules.</li> <li>All external contributors need to open an issue first before creating a pull request.</li> <li>Team members are allowed to create PRs for minor changes without a related issue.</li> </ul>"},{"location":"archive/team/workflow/workflow/#in-case-of-breaking-api-changes","title":"In case of breaking API changes","text":"<p>This process is only valid until we have a first user.  Then, it should be reviewed.</p> <ul> <li>Try to implement API changes in ways that do not cause breakage.</li> </ul> <p>In case that\u2019s unavoidable:</p> <ol> <li>Finish the changes to the API, and open a PR.  This should be well documented, with a clear description of what the breaking changes are.</li> <li>Contact a front end dev directly, and ask them to look at the PR.  At this point, they should just assess whether the needed front end changes are quick, easy, and feasible with a short turnaround time.</li> <li>Go through the normal review process for the back end code and API form to the point where all are happy with the API response format.</li> <li>If the front end devs are able to make appropriate front end changes easily and quickly, they should do so in the same PR.</li> <li>If not (i.e., if front end devs are busy, if it\u2019s too complicated, or if the back end PR\u2019s unmerged state starts to block too many things): merge the PR with a big warning (i.e., a comment @\u2019ing multiple people).</li> <li>File an urgent bug describing the changes to the back end, and the needed changes to the front end.</li> </ol>"},{"location":"archive/team/workflow/workflow/#resources","title":"Resources","text":"<p>For a list of public repos and other resources, see GitHub.</p> <ul> <li>Mathesar GitHub project that organizes our open issues</li> </ul>"},{"location":"archive/team/workflow/workflow/#private-resources","title":"Private resources","text":"<p>These resources are only available to the Mathesar core or community team at the moment.</p> <ul> <li>The Mathesar Ansible repository contains a playbook that deploys our staging server.</li> <li>The Mathesar \u201cstaging\u201d server is a deployed version of the latest <code>master</code>. The username and password to access it are located in 1Password.</li> <li>The Mathesar private notes repository contains notes that are private to the core team.</li> <li>The Mathesar scripts repository contains a bunch of random scripts useful for Mathesar workflows.</li> </ul>"},{"location":"archive/team/workflow/responsibilities/","title":"Ongoing responsibilities","text":"<ul> <li>These are ongoing tasks involved in maintaining Mathesar.</li> <li>Owners are accountable for the work associated with each responsibility. They also coordinate with helpers as needed.</li> <li>Ongoing responsibilities should not be the majority of anyone\u2019s work. Most work should be specced out into time-limited projects.</li> </ul> <p>Please see the navigation for the list of responsibilities.</p>"},{"location":"archive/team/workflow/responsibilities/fundraising/","title":"Fundraising","text":"<p>Warning</p> <p>Under construction</p> <p>Owner: Kriti</p> <p>This involves fundraising to sustain Mathesar\u2019s development and maintenance.</p> <p>Moved from:</p> <ul> <li>Project: Raise additional funding for Mathesar</li> </ul>"},{"location":"archive/team/workflow/responsibilities/gsoc/","title":"GSoC 2023","text":"<p>Owner: Dom Helpers: Anish, Rajat</p>"},{"location":"archive/team/workflow/responsibilities/gsoc/#introduction","title":"Introduction","text":"<p>Quick summary: it should be enough for any reader wanting to know what their responsibilities are (and to read the related notes) to check their role descriptions under Phase-independent responsibilities and Current phase.</p> <p>This document lists the responsibilities, related instructions and guidelines for a GSoC program. GSoC is made up of multiple phases, each of which have different responsibilities. This document is structured accordingly. Phase-independent responsibilities are listed, then phase-dependent responsibilities are divided into whether it\u2019s the current phase, a previous phase, or an upcoming phase. Between phases, the GSoC team roles, membership and responsibilities are variant. The rest of the document is under the Details section, which holds guides, links and instructions, and it\u2019s linked as needed from the responsibility lists.</p>"},{"location":"archive/team/workflow/responsibilities/gsoc/#phase-independent-responsibilities","title":"Phase-independent responsibilities","text":""},{"location":"archive/team/workflow/responsibilities/gsoc/#owner","title":"Owner","text":"<ul> <li>Be an org admin for GSoC</li> <li>Be extremely familiar with the GSoC program, including<ul> <li>GSoC mentor guide</li> <li>All our Mentoring documentation and policies</li> </ul> </li> <li>Keep an eye on any GSoC related emails and action items, and ensure the rest of the team completes any action items</li> <li>Keep an eye on GSoC related deadlines and timelines<ul> <li>See Calendar</li> </ul> </li> <li>Keep our custom GSoC calendar up-to-date</li> <li>Includes keeping track of recurring tasks<ul> <li>See Calendar</li> </ul> </li> <li>Follow up on requests from GSoC (e.g. filling out forms about impact of GSoC on Mathesar), since it builds goodwill</li> <li>Generally keep an eye on GSoC process efficiency and make improvements to processes or documentation as needed<ul> <li>See Periodic process reviews and reports</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/responsibilities/gsoc/#current-phase","title":"Current phase","text":""},{"location":"archive/team/workflow/responsibilities/gsoc/#ranking-phase","title":"Ranking phase","text":"<p>Starts 2023-04-04, ends 2023-04-27.</p>"},{"location":"archive/team/workflow/responsibilities/gsoc/#team","title":"Team","text":"Role Assignees Owner (aka Admin) Dominykas Candidate helper Anish, Rajat, Dominykas Mentor Anyone that\u2019s a mentor in a GSoC project idea"},{"location":"archive/team/workflow/responsibilities/gsoc/#responsibilities","title":"Responsibilities","text":""},{"location":"archive/team/workflow/responsibilities/gsoc/#mentors","title":"Mentors","text":"<ul> <li>Participate in final proposal review, when requested by the owner<ul> <li>See final proposal review</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/responsibilities/gsoc/#candidate-helper","title":"Candidate helper","text":"<ul> <li>Help candidates with their late contributions<ul> <li>During the ranking phase, candidates might still be making contributions, which might be useful when ranking their proposals</li> </ul> </li> <li>See helping guidelines</li> </ul>"},{"location":"archive/team/workflow/responsibilities/gsoc/#owner_1","title":"Owner","text":"<ul> <li>Facilitate final proposal ranking<ul> <li>See final proposal review</li> </ul> </li> <li>Make sure the rankings are submitted in a timely manner<ul> <li>Consider attempting to balance that against doing final reviews late in the phase so that candidates have more time to make contributions</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/responsibilities/gsoc/#previous-phases","title":"Previous phases","text":""},{"location":"archive/team/workflow/responsibilities/gsoc/#proposal-phase","title":"Proposal phase","text":"<p>Starts 2023-03-20, ends 2023-04-04.</p>"},{"location":"archive/team/workflow/responsibilities/gsoc/#team_1","title":"Team","text":"Role Assignees Owner (aka Admin) Dominykas Candidate greeter/helper Anish, Rajat, Dominykas"},{"location":"archive/team/workflow/responsibilities/gsoc/#responsibilities_1","title":"Responsibilities","text":""},{"location":"archive/team/workflow/responsibilities/gsoc/#everyone","title":"Everyone","text":"<ul> <li>Review draft proposals<ul> <li>Do so in a timely manner</li> </ul> </li> <li>Keep relevant spreadsheet/s up-to-date with the status of your reviews<ul> <li>See Internal draft proposal tracking spreadsheet section</li> </ul> </li> <li>Make sure that only a single mentor is responsible for a given review at any given time<ul> <li>See Who is responsible for a review section</li> </ul> </li> <li>See Review instructions section</li> <li>Enforce a no-early-issue-assigns rule during the GSoC proposals phase (ends April 4th)</li> <li>See no-early-issue-assigns</li> </ul>"},{"location":"archive/team/workflow/responsibilities/gsoc/#candidate-greeterhelpers","title":"Candidate greeter/helpers","text":"<ul> <li>Perform greet/help daily</li> <li>Greet, meaning notice new contributors and greet them</li> <li>Help, meaning respond to requests for help or guidance<ul> <li>On Matrix and Github</li> <li>See greet/help schedule section</li> <li>See greeting instructions section</li> <li>See helping guidelines section</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/responsibilities/gsoc/#owner_2","title":"Owner","text":"<ul> <li>Monitor GSoC draft applications and ensure they all get reviewed in a timely manner.<ul> <li>Follow up with other team members as needed.</li> </ul> </li> <li>Keep track of issues that have already been assigned and un-assign them after 7 days of inactivity.<ul> <li>Anish is doing this, but it\u2019s good to keep an eye on this.</li> <li>https://github.com/orgs/mathesar-foundation/archive/projects/1/views/42 may be helpful, it sorts by last activity.</li> </ul> </li> <li>Ensure there are enough open issues for GSoC contributors to work on OR revise the applicant guide to remove the contribution requirement and come up with an alternate way to evaluate candidates (maybe have a standard backend and frontend task for everyone).</li> </ul>"},{"location":"archive/team/workflow/responsibilities/gsoc/#details","title":"Details","text":""},{"location":"archive/team/workflow/responsibilities/gsoc/#final-proposal-review","title":"Final proposal review","text":"<p>Performed in two passes. First pass is that the spammy or obviously unfitting proposals are filtered out. Likely performed by the owner. Second pass is where the mentors evaluate proposals for the projects they are mentoring, and those who interacted with the candidates evaluate the candidates. All of this is done in the final review spreadsheet. The final rankings are derived by sorting the approved proposals on their scores and their authors\u2019 (candidates\u2019) scores.</p> <p>In the second pass, each proposal for a given project idea has the same three reviewers. Two of them are the project idea\u2019s mentors. The third is another member of the team, preferably someone with an outside perspective on the project idea. The reviewers for candidates are assigned based on who interacted most with them on the issue tracker.</p> <p>Effort is put in so that the workload distribution between the proposal reviewers is equal-ish and/or practical.</p>"},{"location":"archive/team/workflow/responsibilities/gsoc/#final-proposal-review-instructions","title":"Final proposal review instructions","text":"<p>The final review consists of reviewing each candidate and each proposal. That is done in two separate sheets within the final review spreadsheet. See detailed instructions below.</p>"},{"location":"archive/team/workflow/responsibilities/gsoc/#candidate-review","title":"Candidate review","text":"<ol> <li>Go to the current final review spreadsheet</li> <li>Go to the sheet titled \u201cSecond pass, candidate\u201d</li> <li>Find a candidate that you are a reviewer of, and that you have not yet scored</li> <li>Inspect the candidate\u2019s contributions in the issue tracker and score the candidate<ul> <li>notice the links to the candidate\u2019s PRs, issues created, and issues assigned</li> <li>inspect all aspects of the candidate\u2019s activity in the issue tracker, not only the code contribution</li> <li>consider reaching out to teammates that might have had insightful interactions with your candidate, unless these teammates are already assigned to review this candidate</li> </ul> </li> <li>Repeat from the beginning until you\u2019ve scored all of the candidates you\u2019re a reviewer of</li> <li>If this marks the end of your candidate and proposal reviews, notify the admin of you having completed the scoring, via the same channel through which you were requested to perform it (probably via an email thread)</li> </ol>"},{"location":"archive/team/workflow/responsibilities/gsoc/#proposal-review","title":"Proposal review","text":"<ol> <li>Go to the current final review spreadsheet</li> <li>Go to the sheet titled \u201cSecond pass, proposal\u201d</li> <li>Find a proposal that you are a reviewer of, and that you have not yet scored</li> <li>Familiarize with the proposal\u2019s project idea by reading its wiki page</li> <li>Inspect the proposal\u2019s PDF and score the proposal<ul> <li>if you\u2019re getting errors when trying to load the PDF, you might have to navigate to https://summerofcode.withgoogle.com/, log out (if you\u2019re logged in), and log in</li> </ul> </li> <li>Repeat from the beginning until you\u2019ve scored all of the proposals you\u2019re a reviewer of</li> <li>If this marks the end of your candidate and proposal reviews, notify the admin of you having completed the scoring, via the same channel through which you were requested to perform it (probably via an email thread)</li> </ol>"},{"location":"archive/team/workflow/responsibilities/gsoc/#final-proposal-review-spreadsheet","title":"Final proposal review spreadsheet","text":"<ul> <li>Current 2023 spreadsheet (private)</li> <li>Archived 2022 spreadsheet (private)</li> </ul>"},{"location":"archive/team/workflow/responsibilities/gsoc/#draft-proposal-review","title":"Draft proposal review","text":""},{"location":"archive/team/workflow/responsibilities/gsoc/#who-is-responsible-for-a-review","title":"Who is responsible for a review","text":"<p>The primary mentor for a project is responsible for getting the project\u2019s draft proposals reviewed. Primary mentors are encouraged to delegate part of their work to the secondary mentors, but, until that\u2019s coordinated, the primary mentor is responsible for the proposal getting reviewed. Motivation for this rule is to prevent someone expecting the other mentor to step up without solicitation and thus resulting in delayed reviews.</p> <p>Who is currently responsible for a review is tracked in the tracking spreadsheet.</p>"},{"location":"archive/team/workflow/responsibilities/gsoc/#internal-draft-proposal-tracking-spreadsheet","title":"Internal draft proposal tracking spreadsheet","text":"<p>This spreadsheet gets a row added automatically for every draft proposal submitted via our submission form. It also tracks whether a review is pending, who is responsible for a pending review, and who and when reviewed a given proposal. Respective mentors are expected to keep all of this up-to-date.</p> <p>Do not remove rows from the spreadsheet. You might be tempted to do this for multiple review requests for the same person, but that would impede admin\u2019s ability to track the submit-review process: for example, the admin needs to know if certain proposals are waiting for a review for a long time, and if all but the most recent are removed, the admin doesn\u2019t know when it was first submitted; if you remove all but the oldest, the admin doesn\u2019t know that the candidate is making repeated review requests.</p>"},{"location":"archive/team/workflow/responsibilities/gsoc/#draft-review-instructions","title":"Draft review instructions","text":"<ol> <li>Use the tracking spreadsheet to tell which reviews you have pending</li> <li>Read the proposal and provide feedback via Google Doc comments</li> <li>(Recommended) Place general comments on the title of the proposal (or somewhere thereabouts); this seems to have become an unwritten rule (until now) amongst some of the mentors</li> <li>Once done, add a general comment saying that the review is finished, so that the status of the review is not ambiguous to the candidate</li> <li>(Recommended) Ask that the candidate resubmit via the same draft proposal form he originally used, when/if he wants to request a new review; this way the admin will be able to track and notify of new requests for review, otherwise it\u2019s the mentor\u2019s responsibility </li> <li>Update the tracking spreadsheet </li> </ol>"},{"location":"archive/team/workflow/responsibilities/gsoc/#greeting-instructions","title":"Greeting instructions","text":"<p>Suggested process:</p> <ol> <li>Notice new contributors<ul> <li>In Matrix, check the little visualizations above and below messages of new people joining to see who is new</li> </ul> </li> <li>Welcome them, whether they\u2019re active or engage first or not</li> <li>Preemptively remind them of our resources for self-guidance:</li> <li>the applicant guide</li> <li>or, the contributing guide</li> <li>Having provided a resource for self-guidance, encourage them to speak up if something is not clear.</li> </ol> <p>Example in our Matrix General channel:</p> <p><code>Welcome @practicat, @Joangie Marquez, @Mayank Arya, @shantanu oak, @krishav \ud83d\udc4b If you're here for GSoC, don't forget to check out our [GSoC candidate  guide](/community/gsoc/applicant-guide). If something is not clear, reach out!</code></p>"},{"location":"archive/team/workflow/responsibilities/gsoc/#helping-guidelines","title":"Helping guidelines","text":"<p>A few things to keep in mind</p> <ul> <li>Be on the watch for problems that might affect a lot of people, or few people but gravely</li> <li>Don\u2019t do new contributors\u2019 work for them</li> <li>Don\u2019t be dismissive either</li> <li>Refer them to resources for self-guidance (namely our applicant or contributing guides)</li> <li>Politely remind of our expectation that contributors will be relatively self-sufficient and tolerant of minimal hand-holding</li> </ul>"},{"location":"archive/team/workflow/responsibilities/gsoc/#greethelp-schedule","title":"Greet/help schedule","text":"<p>We aim to greet and help new contributors (mostly GSoC candidates) multiple times per day (between all of us, not each). This schedule should act as a very rough guide, in practice we\u2019ll often respond whenever we see a new message, but in case that\u2019s inconvenient, use this schedule as a guide for when to perform this task.</p> Member Approximate time Dominykas UTC 11:00 Anish UTC 4:30 Rajat UTC 4:30 <p>Related conversation thread.</p>"},{"location":"archive/team/workflow/responsibilities/gsoc/#office-hours","title":"Office hours","text":"<p>Office hours are public sync meetings we host where community members (GSoC candidates mostly) join to get help. Previous year such meetings only received community participation just before the end of the proposal period. We\u2019re currently planning to host these only during the last week of the proposal period.</p> <p>We track community events, including office hours, on a wiki page and GSoC-related events in our GSoC Calendar.</p>"},{"location":"archive/team/workflow/responsibilities/gsoc/#no-early-issue-assigns","title":"No early issue assigns","text":"<p>This rule should not be always applied. Its purpose is to maximize the number of issues candidates have available. Useful when number of issues available for candidates to prove themselves is low.</p> <p>No-early-issue-assigns rule means that a contributor can be assigned to an issue only when he has a PR that reached some kind of completion (merged or killed).</p> <p>See this conversation thread for the edge case this opens up where multiple PRs for the same issue compete to be merged</p> <ul> <li>This rule should only be applied when evaluating candidates</li> <li>Note to admin, make sure to evaluate whether number of issues is indeed low</li> <li>Note to admin, consider selecting a subset of issues to which this rule should apply<ul> <li>E.g. in 2023 we had too few backend issues, but sufficient number of frontend issues</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/responsibilities/gsoc/#calendar","title":"Calendar","text":"<p>This Google calendar is used to track GSoC-related deadlines and related tasks.</p>"},{"location":"archive/team/workflow/responsibilities/gsoc/#periodic-process-reviews-and-reports","title":"Periodic process reviews and reports","text":"<p>GSoC administration involves periodic process reviews and reports. They are scheduled in the calendar. This thread tracks resulting updates: https://github.com/mathesar-foundation/mathesar/issues/2733</p>"},{"location":"archive/team/workflow/responsibilities/gsoc/#notes-for-future-programs","title":"Notes for future programs","text":"<p>Here we collect insights gained that might be useful during future programs:</p> <ul> <li>We might benefit from checking project coherence earlier; in 2023 we didn\u2019t have an explicit step checking for coherence: in terms of proposal (not candidate) filtering, one step was checking if the proposal is not too short, and the other was the final review.</li> <li>In 2023, we had proposals that were known to their mentors to be strong (because their drafts were submitted for early review), but GSoC admin didn\u2019t know that; if there were a way to communicate that to GSoC admin early, that would have saved some time;</li> <li>A suggestion has been made that we could have each person, that interacted with a given candidate, give a self-weighted score to that candidate; a single score to compensate for the fact that this would mean people doing more reviews, and self-weighted (weight applied to score by reviewer) to compensate for not every reviewer having as much information about the candidate.</li> </ul>"},{"location":"archive/team/workflow/responsibilities/gsoc/#2023-proposal-phase-retrospective","title":"2023 proposal phase retrospective","text":"<pre><code>Sean\n    - PR reviews\n    - We could do a retrospective of GSoC at the end of GSoC (end of summer)\n    - Feels cynical\n        - Example\n            - 4 PRs for a single issue\n                - 3 team members left 15 comments across them\n                - at the end Sean submitted a PR himself\n                    - took him 1 hour and Pavish didn't have critique\n        - Hasn't seen the rewards of GSoC\n        - Feels like a competitive classroom\n            - As opposed to a community\n        - GSoC sucks all of the good first issues\n            - Makes them unavailable to contributors from outside GSoC\n    - What are we open to considering changing (next year)?\n    - Are there other ways we could evaluate candidates?\n    - Ranking/scoring needs improvement, but went smoother than contributions\n\nKriti\n    - Many ways to solve candidate evaluation\n        - We could have a test that people have to take\n    - Too much core team time spent on candidates that might not be interesting\n        - Seen other projects not engage with people until they've done some work\n    - At CC\n        - Less noise\n        - Maybe GSoC is different these days\n    - A lot of people don't put in the minimum of effort\n    - People wanting to put things on their resume is not bad\n        - It's an exchange\n            - Problem is if the candidate doesn't offer anything\n\nAnish\n    - Many people were trying to pump up number of PRs they had\n        - A single person did 7 good-first-issues\n            - Instead of doing more difficult issues\n        - Or single person doing many issues simultaneously\n\nMukesh\n    - Lack of documentation is a test for contributors\n    - A lot of contributors seem to treat GSoC as competitive\n        - GSoC is something you can put on your resume\n    - There should be a progression from easy to hard issues\n        - For each contributor\n    - Maybe contributors should come up with suggestions or ideas\n        - Kriti: we've had bad experiences with this\n    - GSoC candidates are often on Windows\n        - Causes many Windows-related issues\n            - Distorts feedback space\n            - Actual users might not be on Windows\n        - Kriti: we should just take this into account when triaging issues\n    - Unequal distribution of proposals for project ideas\n        - Many strong proposals for the same project idea\n            - But many project ideas didn't get almost any proposals\n\nGhislaine\n    - Valuable contributors are those that actually want to add new features\n        - They care\n        - Sean:\n            - 1 contributor on frontend that didn't come from GSoC\n\nSurvey\n    - What percentage of time each of us spent on GSoC during the proposal phase?\n        - Sean 60%\n        - Pavish 50%\n        - Kriti 20%\n        - Mukesh 40%\n        - Brent 20%\n        - Anish 30%\n        - Dom 100%\n</code></pre>"},{"location":"archive/team/workflow/responsibilities/marketing/","title":"Marketing","text":"<p>Owner: Kriti Helpers: Brent, Sean, Ghislaine, Anish</p>"},{"location":"archive/team/workflow/responsibilities/marketing/#day-to-day-maintenance-tasks","title":"Day-to-day maintenance tasks","text":""},{"location":"archive/team/workflow/responsibilities/marketing/#respond-to-syften-notifications","title":"Respond to Syften notifications","text":"<p>Syften notifications are auto-assigned to the \u201cMarketing\u201d group in Freshdesk. They cover Hacker News and Reddit.</p> <p>If a comment or post can be considered user feedback, please flag it to the owner of the user feedback responsibility.</p>"},{"location":"archive/team/workflow/responsibilities/marketing/#process-for-responding","title":"Process for responding:","text":"<ul> <li>Share the post in the <code>Mathesar - Marketing</code> Matrix channel.</li> <li>Decide if a response is needed and who will respond.</li> <li>Compose a response.<ul> <li>Share in the channel if you want feedback before posting.</li> </ul> </li> <li>Post the response.</li> </ul>"},{"location":"archive/team/workflow/responsibilities/marketing/#guidelines-for-responding","title":"Guidelines for responding","text":"<ul> <li>If Mathesar is mentioned:<ul> <li>Responses should be aimed at thanking people, addressing people\u2019s concerns, and/or answering questions.</li> <li>Responses should people to existing conversations, issues, and discussions as much as possible.</li> </ul> </li> <li>If someone mentions a problem that Mathesar could be used to solve:<ul> <li>Responses should suggest using Mathesar in a tactful way.</li> <li>Our goal here should not be to shoehorn Mathesar into all sorts of use cases. Instead, we should be on the lookout only for cases that Mathesar is a good solution for.</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/responsibilities/marketing/#respond-to-mathesar-mentions-on-twitter-x","title":"Respond to Mathesar mentions on Twitter (X?)","text":"<p>Twitter needs to be monitored manually. Sign in to Twitter (credentials in 1Password) and click on the \u201cNotifications\u201d tab.</p> <ul> <li>Re-tweet it from our account and/or thank them for the shoutout.</li> <li>Only re-tweet if the tweet appears to be from a real person or organization. Do not re-tweet bot accounts (e.g. \u201cFirst Issues Bot\u201d).</li> <li>Also respond to questions, etc. as outlined in the Syften section.</li> </ul>"},{"location":"archive/team/workflow/responsibilities/marketing/#make-release-announcements","title":"Make release announcements","text":"<p>Release announcements should include highlights from release notes. We should avoid the announcements following a template because people tend to ignore repetitive things.</p> <ul> <li>Post a message in the <code>Mathesar - General</code> channel on Matrix announcing the release</li> <li>Post a message to the developers and users mailing lists announcing the release</li> <li>Tweet when we publish a new release</li> <li>TODO: also figure out where / how to post on Reddit for new releases</li> </ul>"},{"location":"archive/team/workflow/responsibilities/marketing/#sporadic-maintenance-tasks","title":"Sporadic maintenance tasks","text":"<ul> <li>Clean up marketing Freshdesk tickets and close the ones with no action items.</li> <li>Evaluate Syften keywords and update them if needed.</li> <li>Make progress on our Mathesar launch publicity checklist, delegate tasks as needed.<ul> <li>We\u2019ll hold off on making new announcements until our installation process is improved</li> </ul> </li> <li>Keep track of where we\u2019re getting traffic from (using Syften, GitHub Insights and our analytics), and track notable sources in the Marketing History page<ul> <li>Also post noteworthy publicity to the <code>Mathesar - Marketing</code> channel on Matrix.</li> </ul> </li> <li>Add Mathesar to aggregators (tracked in this issue).<ul> <li>Feel free to ask the owner to review any copy written for this.</li> </ul> </li> <li>Do research on more relevant aggregators that Mathesar could be added to and add them to the issue.</li> </ul>"},{"location":"archive/team/workflow/responsibilities/marketing/#higher-level-tasks","title":"Higher-level tasks","text":"<ul> <li>Maintain and execute go-to-market strategy</li> <li>Maintain the marketing website, and decide what changes are needed when.<ul> <li>Create issues and ensure the work is tracked and delegated appropriately.</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/responsibilities/marketing/#notes-resources","title":"Notes &amp; Resources","text":"<ul> <li>See Marketing section of the wiki.</li> <li>Eventually, the plan is to create an \u201cevangelism guide\u201d (example)</li> </ul>"},{"location":"archive/team/workflow/responsibilities/product-management/","title":"Product management","text":"<p>Owner: Kriti Helper: Pavish, Ghislaine, Sean</p>"},{"location":"archive/team/workflow/responsibilities/product-management/#maintenance-tasks","title":"Maintenance tasks","text":"<ul> <li>Make product-level decisions that are blocking work.</li> <li>Coordinate review of all user-facing design, code and documentation changes from a product perspective.<ul> <li>The owner should ensure that review happens, but does not have to perform every review themselves.</li> <li>Ghislaine has volunteered to review design/frontend work.</li> <li>Sean has volunteered to review copy/documentation work.</li> </ul> </li> <li>Be available to talk through product questions and decisions with other team members.</li> </ul>"},{"location":"archive/team/workflow/responsibilities/product-management/#higher-level-tasks","title":"Higher-level tasks","text":"<ul> <li>User research.</li> <li>Maintain the product strategy and roadmap.</li> <li>Coordinate speccing out upcoming / new features.<ul> <li>Includes research and writing up.</li> <li>Ensure the right team members are consulted during the process.</li> </ul> </li> <li>Review and improve product processes.</li> <li>Ensure that the team is on the same page about the vision and goals for each feature and the product as a whole.</li> </ul>"},{"location":"archive/team/workflow/responsibilities/repo-admin/","title":"Repo administration","text":"<p>Owner: Sean Helper: (nobody)</p>"},{"location":"archive/team/workflow/responsibilities/repo-admin/#responsibilities-at-a-glance","title":"Responsibilities at a Glance","text":"<ul> <li>Receive the firehose of GitHub notifications and take action on items as necessary.</li> <li>Triage new issues and PRs</li> <li>Actively shepherd PRs toward closing to help prevent them from going stale</li> <li>Troubleshoot GitHub actions and make improvements where necessary</li> </ul>"},{"location":"archive/team/workflow/responsibilities/repo-admin/#owners-tasks","title":"Owner\u2019s Tasks","text":""},{"location":"archive/team/workflow/responsibilities/repo-admin/#acting-on-github-notifications-for-issues-and-prs","title":"Acting on GitHub notifications for issues and PRs","text":"<p>Make sure your notifications setting for all of the Mathesar repositories is set to All Activity.</p> <p>Go through each of your notifications for the Mathesar repositories and follow the approach documented below:</p> <ul> <li>If the notification is about the following, ignore it<ul> <li>Closing an issue</li> <li>Merging/Closing a PR</li> <li>Any activity on a draft PR, apart from making it ready for review.</li> </ul> </li> <li>For the rest of the notifications, if it\u2019s about a PR<ul> <li>Assignee - Make sure it\u2019s assigned to someone. You might want to check the recent conversation to validate the assignee.</li> <li>Label - Make sure it has the correct <code>status:</code> label.</li> <li>Milestone - Make sure it\u2019s in the same milestone as the issue it fixes.</li> <li>Description: Make sure it follows our PR template.</li> <li>Personally follow up with the assignees if there hasn\u2019t been any activity on it from the last 3-4 working days.<ul> <li>If it\u2019s a core team member, you can reach out via Matrix.</li> <li>If it\u2019s a non-core team member, you can tag and ask for an update using the PR comments.</li> </ul> </li> <li>When a non-core team member does not reply for more than a week, check with the core team reviewer. If she is comfortable with moving the PR forward and merging it then assign the corresponding issue to her otherwise close the PR.</li> </ul> </li> <li> <p>For the rest of the notifications, if it\u2019s about an issue</p> <ul> <li>Make sure to read the issue description and the recent conversation on it before moving to the next steps.</li> <li>Make sure the issue is triaged properly as per our guide here</li> <li>A mental model for labels:<ul> <li>\u201cdifficulty: easy\u201d =&gt; \u201chelp wanted\u201d &amp; \u201cgood first issues\u201d</li> <li>\u201cdifficulty: medium\u201d =&gt; \u201chelp wanted\u201d</li> <li>\u201cdifficulty: hard\u201d =&gt; no extra labels</li> <li>\u201cdifficulty: extra hard\u201d =&gt; \u201crestricted: maintainers\u201d</li> </ul> </li> <li>Pay extra attention before marking an issue as ready. Do not mark issues as <code>status: ready</code> until they have enough details for someone to work on them.</li> <li>Assignee:<ul> <li>Make sure to assign the issue if someone wants to claim it and the issue is not restricted to maintainers.</li> <li>Make sure to un-assign the issue if there has been no activity from a community contributor from the last 1 week, as per our contributing guidelines</li> </ul> </li> <li>Notifications about the GitHub bot marking an issue <code>stale</code>: If the issue already exists, remove the stale label otherwise add a comment and close it as done.</li> </ul> </li> <li> <p>If a comment or issue can be considered user feedback or helpful for marketing materials, please flag it to the owners of these responsibilities (user feedback, marketing) respectively.</p> </li> </ul>"},{"location":"archive/team/workflow/responsibilities/repo-admin/#acting-on-notifications-from-github-discussions","title":"Acting on notifications from GitHub Discussions","text":"<p>Flag discussion-related notifications to the marketing and user feedback teams for a response. This can be done by sending a notification to the Marketing channel and tagging the owner of user feedback and marketing responsibilities.</p>"},{"location":"archive/team/workflow/responsibilities/repo-admin/#assigning-reviewers-fairly","title":"Assigning reviewers fairly","text":"<p>Depending if the PR is related to the backend or frontend, assign it to a core team member who has the least no of reviews already assigned.</p>"},{"location":"archive/team/workflow/responsibilities/repo-admin/#triage","title":"Triage","text":"<p>Use the following script to list issues/PR that need triage.</p> <p>You need to install github-cli to use the below script.</p> <pre><code>export GH_PAGER=cat\ngh -R mathesar-foundation/mathesar issue list --search \"is:open no:milestone\"\ngh -R mathesar-foundation/mathesar issue list --search 'is:open label:\"status: triage\"'\ngh -R mathesar-foundation/mathesar pr list --search \"is:open no:assignee -is:draft\"\ngh -R mathesar-foundation/mathesar pr list --search \"is:open no:milestone -is:draft\"\n\ngh -R mathesar-foundation/mathesar-wiki issue list --search \"is:open no:milestone\"\ngh -R mathesar-foundation/mathesar-wiki issue list --search 'is:open label:\"status: triage\"'\ngh -R mathesar-foundation/mathesar-wiki pr list --search \"is:open no:assignee -is:draft\"\n</code></pre>"},{"location":"archive/team/workflow/responsibilities/repo-admin/#helpers-tasks","title":"Helper\u2019s Tasks","text":"<ul> <li>Take action on GitHub notifications every Monday since that\u2019s when we have one of the largest influx.</li> <li>Fill in for the owner by doing the tasks mentioned above when he is out of the office.</li> </ul>"},{"location":"archive/team/workflow/responsibilities/team-management/","title":"Team management","text":"<p>Owner: Kriti Helper: Sean</p>"},{"location":"archive/team/workflow/responsibilities/team-management/#maintenance-tasks","title":"Maintenance tasks","text":"<p>Kriti does most of these.</p> <ul> <li>Hold 1:1 meetings with all team members ensuring everyone is productive, happy, and accountable.<ul> <li>1:1 agendas are not set primarily by the manager, it\u2019s a space for team members to discuss or communicate whatever they would like to.</li> <li>Non-work related conversation is also fine.</li> </ul> </li> <li>Review people\u2019s work logs and try to preempt future problems or blockers with high-priority tasks.</li> <li>Keep track of progress in active projects and help move them along as needed.<ul> <li>Weekly project updates help with this.</li> <li>Help could involve coordination between team members, co-working sessions on a particular problem, facilitating a decision, or whatever else is needed.</li> </ul> </li> <li>Schedule and facilitate core team weekly meetings.<ul> <li>Cancel 1 day in advance if no agenda items are present.</li> </ul> </li> <li>Schedule team/community events and make sure they have hosts</li> </ul>"},{"location":"archive/team/workflow/responsibilities/team-management/#higher-level-tasks","title":"Higher-level tasks","text":"<p>Kriti works on these.</p> <ul> <li>Goal-setting for team and project</li> <li>Facilitating project planning</li> <li>Hiring, onboarding, compensation &amp; benefits</li> <li>Training &amp; career/skill development</li> <li>Reviewing and improving existing processes</li> </ul>"},{"location":"archive/team/workflow/responsibilities/user-feedback/","title":"User feedback tracking","text":"<p>Owner: Kriti Call Assistance Helpers: Pavish, Kriti, Brent, Ghislaine</p>"},{"location":"archive/team/workflow/responsibilities/user-feedback/#all-team-members","title":"All Team Members","text":"<p>All team members are encouraged to actively participate in the feedback process, regardless of their assigned roles. This includes flagging or sharing user feedback that they come across during their interactions with Mathesar\u2019s users or while monitoring various channels.</p>"},{"location":"archive/team/workflow/responsibilities/user-feedback/#owner","title":"Owner","text":"<p>The owner of the User Feedback responsibility is responsible for the following tasks:</p> <ul> <li>Monitor the \u201chello@mathesar.org\u201d email, and follow up with users as needed.</li> <li>Document and organize user feedback from all channels, making it easily accessible on the User Feedback HackMD page.</li> <li>Categorize collected feedback using appropriate tags and attributes.</li> <li>Create surveys and call scripts for the various stages of the feedback process:<ul> <li>Feedback Follow-Up: Reach out to users that have provided feedback to learn more about their experiences and needs.</li> <li>Discovery: Gather information about existing or potential users\u2019 needs and goals, and understand the problem space.</li> <li>Onboarding: Identify opportunities for improvement in the onboarding experience, particularly for new users.</li> <li>Satisfaction: Understand how users feel about Mathesar and their overall experience, particularly for long-term users.</li> </ul> </li> <li>Create email templates for the various stages of the feedback process:<ul> <li>Call Invitation: Invite users to participate in a feedback call.</li> <li>Survey Invitation: Invite users to participate in a survey.</li> </ul> </li> <li>Send out emails, surveys, and call invitations to users.</li> <li>Schedule and conduct feedback calls with users.</li> <li>Manage and maintain additional channels for user feedback, such as roadmaps, user guides, and blogs.</li> </ul>"},{"location":"archive/team/workflow/responsibilities/user-feedback/#call-assistance-helpers","title":"Call Assistance Helpers","text":"<p>During feedback calls, helpers can play an active role in supporting the conversation by taking detailed notes, asking follow-up questions, and providing input from various perspectives, such as technical or user experience.</p>"},{"location":"archive/team/workflow/responsibilities/user-feedback/#identifying-feedback","title":"Identifying Feedback","text":""},{"location":"archive/team/workflow/responsibilities/user-feedback/#what-counts-as-feedback","title":"What counts as feedback","text":"<ul> <li>User experiences: Feedback describing Mathesar\u2019s usability, performance, or overall satisfaction.</li> <li>Feature requests: Suggestions for new features or improvements addressing specific user needs.</li> <li>Pain points: Issues or challenges faced by users while using Mathesar.</li> <li>Competitor comparisons: Instances where users compare Mathesar to other tools or solutions.</li> <li>Misconceptions or confusion: Indications of user misunderstandings about Mathesar\u2019s functionality, purpose, or usage.</li> </ul>"},{"location":"archive/team/workflow/responsibilities/user-feedback/#what-doesnt-count-as-feedback","title":"What doesn\u2019t count as feedback","text":"<ul> <li>Technical support: Questions or issues resolved through troubleshooting, bug fixes, or guidance on using Mathesar.</li> <li>Non-constructive criticism: Vague or unfounded complaints without context or specific details (e.g., \u201cThere are already many tools like this,\u201d \u201cI don\u2019t like it\u201d)</li> </ul>"},{"location":"archive/team/workflow/responsibilities/user-help/","title":"User help","text":"<p>Owner: Kriti Helpers: Brent, Pavish, Sean</p>"},{"location":"archive/team/workflow/responsibilities/user-help/#maintenance-tasks","title":"Maintenance tasks","text":"<ul> <li>Ensure that someone from the core team responds to user communication promptly and follows up with action items as needed.<ul> <li>Channels:<ul> <li>GitHub Issues</li> <li>GitHub discussions</li> <li>Matrix (the Users &amp; General channels are most likely to receive messages)</li> <li>Email from <code>hello [at] mathesar [dot] org</code> (in Freshdesk)</li> <li>Installation request forms (in Freshdesk)</li> </ul> </li> </ul> </li> <li>Ensure that someone is responsible for following up promptly for all user communications</li> <li>Flags user feedback to the owner of the user feedback responsibility.</li> </ul>"},{"location":"archive/team/workflow/responsibilities/user-help/#principles","title":"Principles","text":"<ul> <li>User help is the highest priority</li> <li>Treat users like gold</li> <li>Do work ourselves so that they don\u2019t have to do work (e.g. spend time reproducing their setup, etc.)</li> </ul>"},{"location":"archive/team/workflow/responsibilities/user-help/#higher-level-tasks","title":"Higher-level tasks","text":"<ul> <li>Find additional users for Mathesar proactively and help them</li> <li>Figure out how to improve communication with users (both quantity and quality)</li> </ul>"},{"location":"archive/team/workflow/worklogs/anish/","title":"Anish\u2019s work log","text":""},{"location":"archive/team/workflow/worklogs/anish/#actively-working-on","title":"Actively working on","text":"<ul> <li>Installation docs.</li> </ul>"},{"location":"archive/team/workflow/worklogs/anish/#2023-11-17","title":"2023-11-17","text":"<ul> <li>Reviewed Brent\u2019s \u201cConnections API\u201d PR (#3309)</li> <li>Compose: Documented env variables and added a bunch of todos (commits)</li> </ul>"},{"location":"archive/team/workflow/worklogs/anish/#2023-11-16","title":"2023-11-16","text":"<ul> <li>Sync with Brent</li> <li>Shared about page info with Ghislane</li> <li>Compose: Cleaned up compose file and deprecated <code>DJANGO_DATABASE_URL</code> (commits)</li> </ul>"},{"location":"archive/team/workflow/worklogs/anish/#2023-11-15","title":"2023-11-15","text":"<ul> <li>Reviewed (#3200).</li> <li>Working on (#3306)</li> </ul>"},{"location":"archive/team/workflow/worklogs/anish/#2023-11-14","title":"2023-11-14","text":"<ul> <li>Working on (#3306)</li> </ul>"},{"location":"archive/team/workflow/worklogs/anish/#2023-11-13","title":"2023-11-13","text":"<ul> <li>Started working on the compose file (#3306)</li> </ul>"},{"location":"archive/team/workflow/worklogs/anish/#2023-11-10","title":"2023-11-10","text":"<ul> <li>Async with Brent about installation</li> </ul>"},{"location":"archive/team/workflow/worklogs/anish/#2023-11-09","title":"2023-11-09","text":"<ul> <li>Sync with Brent</li> <li>Read our current installation docs</li> </ul>"},{"location":"archive/team/workflow/worklogs/anish/#2023-11-08","title":"2023-11-08","text":"<ul> <li>Setup new Matrix account</li> <li>Weekly team meet</li> <li>Short sync with Kriti</li> </ul>"},{"location":"archive/team/workflow/worklogs/anish/#2023-11-07","title":"2023-11-07","text":"<ul> <li>Installation improvement: Add metadata about internal db connection in common_data (#3299)</li> </ul>"},{"location":"archive/team/workflow/worklogs/anish/#2023-11-06","title":"2023-11-06","text":"<ul> <li>More reading about psycopg and postgres permissions</li> </ul>"},{"location":"archive/team/workflow/worklogs/anish/#2023-11-03","title":"2023-11-03","text":"<ul> <li>Read psycopg docs about connection pooling</li> </ul>"},{"location":"archive/team/workflow/worklogs/anish/#2023-11-02","title":"2023-11-02","text":"<ul> <li>Sync with Brent</li> </ul>"},{"location":"archive/team/workflow/worklogs/anish/#2023-11-01","title":"2023-11-01","text":"<ul> <li>Weekly team meet</li> <li>Sync with Kriti</li> <li>Fixed install commands in docs (#3279)</li> </ul>"},{"location":"archive/team/workflow/worklogs/anish/#archive","title":"Archive","text":"<ul> <li>October 2023 work logs</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/","title":"Brent\u2019s work log","text":""},{"location":"archive/team/workflow/worklogs/brent/#actively-working-on","title":"Actively working on","text":""},{"location":"archive/team/workflow/worklogs/brent/#user-help-marketing","title":"User help / marketing","text":"<ul> <li>https://mathesar.freshdesk.com/a/tickets/1279 (follow up)</li> <li>working on AWS setups:</li> <li>Fargate</li> <li>EC2 + RDS behind a VPN</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#pr-reviews","title":"PR reviews","text":"<ul> <li>https://github.com/mathesar-foundation/mathesar/pull/3245</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#infrastructure","title":"Infrastructure","text":"<ul> <li>Update internal Mathesar installation</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#installation","title":"Installation","text":"<ul> <li>Working through big-picture reorg of docs so we can parallelize</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#preexisting-db-compatibility","title":"Preexisting DB compatibility","text":"<ul> <li>Splitting findings into projects with \u2018themes\u2019 so we can prioritize.</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#architecture","title":"Architecture","text":"<ul> <li>Putting notes together into something coherent and consumable by others</li> <li>Working on expanding layer-perspective documents</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#marketing","title":"Marketing","text":"<ul> <li>Keeping an eye on Syften notifications</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#db-connections","title":"DB connections","text":"<ul> <li>working on Add new RPC-style API to create connections</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#last-week","title":"Last week","text":"<p>I\u2019m combining reports from last week, since I spent the first part of the week dealing with a personal issue, and the last part was pretty disorganized. I didn\u2019t get much done, and my logging was nonexistent.</p>"},{"location":"archive/team/workflow/worklogs/brent/#meetings","title":"Meetings","text":"<ul> <li>1:1 with Kriti</li> <li>1:1 with Ghislaine</li> <li>Team meeting</li> <li>1:1 with Anish</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#db-connections_1","title":"DB connections","text":"<ul> <li>Finished up PR:  Connections API (merged)</li> <li>Discussions about new RPC endpoint</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#api-documentation","title":"API documentation","text":"<ul> <li>Shut down project, communicated reasons with Varsha</li> <li>Closed PRs</li> <li>Started going through already-merged docs work to figure out how to remove.</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#installation-improvements","title":"Installation improvements","text":"<ul> <li>Communication with Anish</li> <li>Followed up on docker compse situation</li> <li>Walked Anish through process of setting up a subdomain and a VM on our GCP infrastructure for testing</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#2023-11-17","title":"2023-11-17","text":""},{"location":"archive/team/workflow/worklogs/brent/#meetings_1","title":"Meetings","text":"<ul> <li>1:1 with Varsha</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#api-documentation_1","title":"API documentation","text":"<ul> <li>Went through copious PRs from Varsha</li> <li>Read through DRF Spectacular documentation</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#db-connections_2","title":"DB Connections","text":"<ul> <li>Read through some RPC framework docs to see if they\u2019re worth getting into for </li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#2023-11-16","title":"2023-11-16","text":""},{"location":"archive/team/workflow/worklogs/brent/#meetings_2","title":"Meetings","text":"<ul> <li>1:1 with Anish</li> <li>1:1 with Sean</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#db-connections_3","title":"DB Connections","text":"<ul> <li>Touch ups on PR:  Connections API</li> <li>Started on issue:  Add new RPC-style API to create connections</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#infrastructure_1","title":"Infrastructure","text":"<ul> <li>Checked on internal Mathesar installation</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#installation_1","title":"Installation","text":"<ul> <li>Caught up on current state of changes with Anish</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#2023-11-15","title":"2023-11-15","text":""},{"location":"archive/team/workflow/worklogs/brent/#meetings_3","title":"Meetings","text":"<ul> <li>1:1 with Pavish</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#db-connections_4","title":"DB Connections","text":"<ul> <li>Submitted PR: Connections API, fixes Implement new \u201cconnections\u201d model and API.</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#marketing_1","title":"Marketing","text":"<ul> <li>Cleared out Syften notifications</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#infrastructure_2","title":"Infrastructure","text":"<ul> <li>Checked on status of internal Mathesar installation; no update needed.</li> <li>Read some AWS docs while tests were running.</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#2023-11-14","title":"2023-11-14","text":"<p>Avoided anything but coding and reading docs today.</p>"},{"location":"archive/team/workflow/worklogs/brent/#db-connections_5","title":"DB Connections","text":"<ul> <li>Continued work on Implement new \u201cconnections\u201d model and API.</li> <li>Coding (obviously)</li> <li>Tried a number of different ways to make the changes clearer, while keeping them superficial.</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#2023-11-13","title":"2023-11-13","text":""},{"location":"archive/team/workflow/worklogs/brent/#prs","title":"PRs","text":"<ul> <li>Initial look through of numerous PRs from Varsha about documentation project</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#infrastructure_3","title":"Infrastructure","text":"<ul> <li>Updated Mathesar internal installation</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#db-connections_6","title":"DB Connections","text":"<ul> <li>Worked a bit on getting the tests passing, and making superficial changes to satisfy the API specced in Implement new \u201cconnections\u201d model and API.</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#2023-11-10","title":"2023-11-10","text":"<p>Short day; kids and exhaustion intervened.</p>"},{"location":"archive/team/workflow/worklogs/brent/#db-connections_7","title":"DB connections","text":"<ul> <li>continued work on 3291</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#installation-improvements_1","title":"Installation improvements","text":"<ul> <li>continued discussion with Anish</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#2023-11-09","title":"2023-11-09","text":""},{"location":"archive/team/workflow/worklogs/brent/#meetings_4","title":"Meetings","text":"<ul> <li>1:1 with Anish</li> <li>1:1 with Kriti</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#installation-improvements_2","title":"Installation improvements","text":"<ul> <li>worked out details of plan with Anish</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#db-connections_8","title":"DB connections","text":"<ul> <li>Started work on https://github.com/centerofci/mathesar/issues/3291</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#2023-11-08","title":"2023-11-08","text":""},{"location":"archive/team/workflow/worklogs/brent/#meetings_5","title":"Meetings","text":"<ul> <li>1:1 with Ghislaine</li> <li>Team meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#installation-improvements_3","title":"Installation improvements","text":"<ul> <li>Working through some details, getting prod docker setup running, noting some rough edges</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#db-connections_9","title":"DB connections","text":"<ul> <li>Trying to figure out the depth of the problem of doing this the \u201cright way\u201d (lots of dependencies)</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#2023-11-07","title":"2023-11-07","text":""},{"location":"archive/team/workflow/worklogs/brent/#meetings_6","title":"Meetings","text":"<ul> <li>1:1 with Adam</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#pr-reviews_1","title":"PR reviews","text":"<ul> <li>https://github.com/centerofci/mathesar/pull/3295 (merged)</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#installation-improvements_4","title":"Installation improvements","text":"<ul> <li>Emailed about new plan for this project</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#mentoring","title":"Mentoring","text":"<ul> <li>helped new contributor with a problem, found issue in our docs</li> <li>Submitted https://github.com/centerofci/mathesar/pull/3300/files to fix the issue.</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#user-help","title":"User help","text":"<ul> <li>Spent more time reading AWS docs related to desired setup</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#2023-11-06","title":"2023-11-06","text":""},{"location":"archive/team/workflow/worklogs/brent/#db-connections_10","title":"DB connections","text":"<ul> <li>Initial read-through and planning for implementation of https://github.com/centerofci/mathesar/issues/3294</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#installation_2","title":"Installation","text":"<ul> <li>Worked through some details about new installation plan</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#pr-reviews_2","title":"PR reviews","text":"<ul> <li>https://github.com/centerofci/mathesar/pull/3198 (closed; not needed)</li> <li>https://github.com/centerofci/mathesar/pull/3295 (requested changes)</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#2023-11-03","title":"2023-11-03","text":"<ul> <li>This was a short day; sleep deprivation forced me to end a bit early.</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#user-help-marketing_1","title":"User help / Marketing","text":"<ul> <li>filled a number of details in the CRM about some user calls</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#documentation","title":"Documentation","text":"<ul> <li>I got a bit tangled up in a pipeline issue preventing docs from building properly</li> <li>Fixed that issue, merged relevant PR</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#pr-reviews_3","title":"PR reviews","text":"<ul> <li>https://github.com/centerofci/mathesar/pull/3279 (fixed minor issue, merged)</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#2023-11-02","title":"2023-11-02","text":""},{"location":"archive/team/workflow/worklogs/brent/#meetings_7","title":"Meetings","text":"<ul> <li>1:1 with Anish</li> <li>sync with Kriti</li> <li>DB connections, round 2 with Sean</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#db-connections_11","title":"DB connections","text":"<ul> <li>prep for meeting with Sean</li> <li>reread the docs about connection types, authentication, etc.</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#2023-11-01","title":"2023-11-01","text":""},{"location":"archive/team/workflow/worklogs/brent/#meetings_8","title":"Meetings","text":"<ul> <li>DB connections meeting with Sean</li> <li>Mathesar weekly meeting</li> <li>retro about user call</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#infrastructure_4","title":"Infrastructure","text":"<ul> <li>Continued work on AWS set up</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#user-help-marketing_2","title":"User help / marketing","text":"<ul> <li>Experimented with VPN setup and Mathesar, relevant to AJP</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#db-connections_12","title":"DB connections","text":"<ul> <li>composed and sent massive email about DB connection setup</li> </ul>"},{"location":"archive/team/workflow/worklogs/brent/#installation_3","title":"Installation","text":"<ul> <li>read through installation docs (old and new versions)</li> <li>read through OpenSuse\u2019s OBS docs</li> </ul>"},{"location":"archive/team/workflow/worklogs/ghislaine/","title":"Ghislaine\u2019s work log","text":""},{"location":"archive/team/workflow/worklogs/ghislaine/#2023-11-30","title":"2023-11-30","text":"<ul> <li>Merge Records Design</li> </ul> <p>Current Focus: - I\u2019m preparing research notes and designs to discuss the merge records issue next week w/ team</p>"},{"location":"archive/team/workflow/worklogs/ghislaine/#2023-11-29","title":"2023-11-29","text":"<ul> <li>Merge Records Design Research (Existing solutions and use cases)</li> </ul>"},{"location":"archive/team/workflow/worklogs/ghislaine/#2023-11-28","title":"2023-11-28","text":"<ul> <li>Design Session Notes and Wireframes</li> </ul>"},{"location":"archive/team/workflow/worklogs/ghislaine/#2023-11-27","title":"2023-11-27","text":"<ul> <li>Design Session Notes and Wireframes</li> </ul>"},{"location":"archive/team/workflow/worklogs/ghislaine/#2023-11-24","title":"2023-11-24","text":"<ul> <li>Wireframes for design session</li> <li>Prepare notes for design session</li> </ul> <p>Currently working on: - Bulk association of records</p>"},{"location":"archive/team/workflow/worklogs/ghislaine/#2023-11-23","title":"2023-11-23","text":"<ul> <li>Call w/ Pavish</li> <li>Discuss Bulk association of records</li> <li>Write notes/ prepare design session</li> </ul> <p>Currently working on: - Bulk association of records</p>"},{"location":"archive/team/workflow/worklogs/ghislaine/#2023-11-22","title":"2023-11-22","text":"<ul> <li>Call w/ Brent</li> <li>Discuss Bulk association of records</li> <li>Write notes/ prepare design session</li> </ul>"},{"location":"archive/team/workflow/worklogs/ghislaine/#2023-11-21","title":"2023-11-21","text":"<ul> <li>Check-in with Kriti</li> <li>Design for Bulk association of records</li> </ul> <p>Currently working on: - Bulk association of records</p>"},{"location":"archive/team/workflow/worklogs/ghislaine/#2023-11-20","title":"2023-11-20","text":"<ul> <li>One-on-one with Kriti</li> <li>Setup new email account </li> </ul> <p>Currently working on: - Bulk association of records</p>"},{"location":"archive/team/workflow/worklogs/ghislaine/#2023-11-17","title":"2023-11-17","text":"<p>Short day since I wasn\u2019t feeling great. - Bulk association research: Looked at how other products handle many-to-many mapping - Add designs for for Bidirectional Navigation to the Github issue / finalize meeting notes</p> <p>Currently working on: - Bulk association of records</p>"},{"location":"archive/team/workflow/worklogs/ghislaine/#2023-11-16","title":"2023-11-16","text":"<ul> <li>Design Session</li> <li>Design work</li> <li>CRM Updates and setting up meeting</li> <li>Research and design for Bulk Association of records</li> </ul> <p>Currently working on: - Design for Bidirectional Navigation - Design for Bulk Association: I\u2019ve already explored alternatives, now writing a short description of each to share for feedback.</p>"},{"location":"archive/team/workflow/worklogs/ghislaine/#2023-11-14","title":"2023-11-14","text":""},{"location":"archive/team/workflow/worklogs/ghislaine/#2023-11-15","title":"2023-11-15","text":""},{"location":"archive/team/workflow/worklogs/ghislaine/#2023-11-13","title":"2023-11-13","text":"<ul> <li>Design for Bidirectional Navigation</li> <li>Email Discussions</li> </ul> <p>Current Focus: - Update list of usability design priorities</p>"},{"location":"archive/team/workflow/worklogs/ghislaine/#2023-11-10","title":"2023-11-10","text":"<ul> <li>Team Event</li> <li>Meeting with Adam</li> <li>Prioritize Usability Issues</li> <li>Design for Bidirectional Navigation</li> </ul>"},{"location":"archive/team/workflow/worklogs/ghislaine/#2023-11-09","title":"2023-11-09","text":"<ul> <li>Design for Bidirectional Navigation</li> <li>Discuss editing record links</li> <li>Meeting with Pavish</li> </ul>"},{"location":"archive/team/workflow/worklogs/ghislaine/#2023-11-08","title":"2023-11-08","text":"<ul> <li>Usability issues: Bidirectional Navigation</li> <li>Team Weekly meeting</li> <li>Meeting with Brent: Back-end discussions</li> </ul> <p>Current Focus: - Design for usability issues</p>"},{"location":"archive/team/workflow/worklogs/ghislaine/#2023-11-07","title":"2023-11-07","text":"<ul> <li>Database connections design</li> <li>Research chat widget options</li> <li>Usability issues: Bidirectional Navigation</li> </ul>"},{"location":"archive/team/workflow/worklogs/ghislaine/#2023-11-06","title":"2023-11-06","text":"<ul> <li>Database connections design</li> <li>Catch up with Kriti</li> </ul>"},{"location":"archive/team/workflow/worklogs/ghislaine/#2023-11-02","title":"2023-11-02","text":"<ul> <li>Database Connections UX Feedback Round</li> <li>Review Usability Github Issues and prepare designs</li> </ul> <p>Current Focus: - Design for usability issues</p>"},{"location":"archive/team/workflow/worklogs/ghislaine/#2023-11-01","title":"2023-11-01","text":"<ul> <li>Database Connections UX Feedback Round</li> <li>Submit Mathesar project to project aggregators</li> <li>Team meeting</li> <li>Discussion regarding user feedback calls</li> </ul>"},{"location":"archive/team/workflow/worklogs/kriti/","title":"Kriti\u2019s work log","text":"<p>I\u2019ve moved my work tracking and log to Basecamp.</p>"},{"location":"archive/team/workflow/worklogs/kriti/#2023-11-22-wed","title":"2023-11-22 (Wed)","text":"<ul> <li>Weekly team meeting</li> <li>Orientation / onboarding meeting with Insperity</li> <li>1:1 with Adam</li> <li>Lots of administrative and IT stuff for the org transition, including (but not limited to)<ul> <li>Signed up for corporate bank account </li> <li>Reconciled invoices and receipts across multiple folders<ul> <li>Google Drive permissions are awful</li> </ul> </li> <li>Various wire transfer related issues</li> <li>Quick call with Sean to go over payroll and benefits next steps</li> <li>Back and forth with Sam on various permissions things</li> <li>Changing more account emails</li> </ul> </li> <li>Email + Matrix + Slack + GitHub catch up</li> </ul>"},{"location":"archive/team/workflow/worklogs/kriti/#2023-11-21-tue","title":"2023-11-21 (Tue)","text":"<ul> <li>More administrative and IT changes for org transition<ul> <li>Follow ups for email changes</li> <li>MassTax account issues</li> <li>Updated Freshdesk account and emails</li> <li>Renamed Twitter account name</li> <li>Followed up on a broken CCI website</li> <li>Updated GCP IAM group names</li> <li>Followed up with documentation for bank account access</li> <li>Accountant follow up</li> <li>Domain name WHOIS / contact info updates</li> <li>Signed and sent a whole bunch of documents for bank / brokerage account</li> </ul> </li> <li>Call with Adam to catch up on ongoing admin stuff</li> <li>Scheduled 2024 board meetings</li> <li>Email + Matrix + Slack + GitHub catch up<ul> <li>Reviewed new design update</li> <li>Responded to chat email</li> <li>Reviewed and responded to design issue prioritization email</li> <li>plus a lot more emails and responses</li> </ul> </li> <li>Re-verified GitHub Pages domain</li> <li>Prep call with Sean for user call</li> <li>Call with user</li> <li>Prepped agenda for tomorrow\u2019s weekly meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/kriti/#2023-11-17-fri-2023-11-20-mon","title":"2023-11-17 (Fri) &amp; 2023-11-20 (Mon)","text":"<ul> <li>Mostly a blur of administrative and IT changes for the organization<ul> <li>Updated GitHub organization URL + related changes</li> <li>Updated Google Workspace domain, logo, name, etc. + related changes</li> <li>Updated a LOT of other sites</li> <li>Updated my email on a lot of sites</li> <li>Took over Sam\u2019s accounts on a LOT of sites</li> <li>Lots of chatting with support, etc.</li> <li>Cleaned up older CCI accounts</li> <li>Talked to a bunch of different people about their Slack accounts, etc.</li> <li>Transferred CCI Slack ownership to Sam</li> <li>Lots more small things</li> </ul> </li> <li>1:1 with Pavish</li> <li>1:1 with Brent</li> <li>1:1 with Ghislaine</li> <li>Call with Ian</li> <li>Call with Sam</li> <li>Email + Matrix + Slack + GitHub catch up + various follow ups<ul> <li>Grant acknowledgement letter</li> <li>CCI website changes discussion</li> <li>Design discussion for bidirectional navigation</li> </ul> </li> </ul> <p>I\u2019m sure there\u2019s a bunch of stuff I\u2019m not remembering, but I don\u2019t think it\u2019s worth putting all that into the work log.</p>"},{"location":"archive/team/workflow/worklogs/kriti/#2023-11-16-thu","title":"2023-11-16 (Thu)","text":"<ul> <li>Email + Matrix + Slack + GitHub catch up<ul> <li>Followed up on some pending GitHub issues</li> <li>Followed up on org insurance todo</li> <li>Reached out to publicist</li> <li>Other responses and conversations</li> </ul> </li> <li>Design call to talk through bidirectional navigation issue</li> <li>1:1 with Sean</li> <li>Reviewed everyone\u2019s work logs and talked to a couple people about updating the work log format</li> <li>Prepped a list of open questions for administrative / org transition stuff</li> <li>Call with Adam and Sam about administrative stuff</li> <li>Organized todos related to administrative / org transition stuff</li> <li>Signed new org insurance</li> <li>Sent out email about new invoicing process</li> </ul>"},{"location":"archive/team/workflow/worklogs/kriti/#2023-11-15-wed","title":"2023-11-15 (Wed)","text":"<ul> <li>Email + Matrix + Slack + GitHub catch up<ul> <li>Followed up on design thread</li> <li>Reviewed email from Ghislaine to user</li> <li>Followed up on weekly check-in</li> <li>Read through new CRM entries</li> </ul> </li> <li>CCI board meeting</li> <li>Followed up with lawyer about name change issues</li> <li>Call with Sean about GitHub workflow</li> </ul>"},{"location":"archive/team/workflow/worklogs/kriti/#2023-11-14-tue","title":"2023-11-14 (Tue)","text":"<ul> <li>Cancelled Loom account</li> <li>Reviewed Pavish\u2019s pgconf talk proposal</li> <li>Call with Sean re: team workflow &amp; briefly benefits</li> <li>Email + Matrix + Slack + GitHub catch up<ul> <li>Discussed vacation policies with Anish</li> <li>Lots of other follow ups and conversation</li> <li>Sorted out SavvyCal billing issue</li> </ul> </li> <li>Board meeting prep<ul> <li>Followed up with lawyer</li> <li>Created detailed agenda and minutes<ul> <li>Shared with other board members</li> </ul> </li> <li>Incorporated new updates from lawyer into agenda</li> </ul> </li> <li>Weekly meeting prep<ul> <li>Cancelled meeting</li> <li>Sent email for async check-in</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/kriti/#2023-11-13-mon","title":"2023-11-13 (Mon)","text":"<ul> <li>Call with Adam and Sam to prep for upcoming board meeting</li> <li>Call with Pavish about translation workflow</li> <li>Updated team about new org name, registered domains</li> <li>Reviewed our 2022 Form 990 (org tax form)</li> <li>Email + Matrix + Slack + GitHub catch up<ul> <li>Scheduled call with Adam / Sam for transition items</li> <li>Weighed in on Editing Linked Records \u00b7 Issue #3242</li> <li>Follow up re: grant we might process</li> <li>Conference related follow ups with Brent and Pavish</li> </ul> </li> <li>Responded to Ghislaine\u2019s two emails re: design work</li> <li>Followed up on new installation request</li> <li>Followed up with SJ re: next call</li> <li>Reviewed team work logs</li> <li>Lots of async back and forth about board meeting prep and upcoming tax deadline</li> </ul>"},{"location":"archive/team/workflow/worklogs/kriti/#2023-11-10-fri","title":"2023-11-10 (Fri)","text":"<p>Out for Veterans Day</p> <ul> <li>Attended team event</li> </ul>"},{"location":"archive/team/workflow/worklogs/kriti/#2023-11-09-thu","title":"2023-11-09 (Thu)","text":"<ul> <li>1:1 with Brent</li> <li>1:1 with Adam</li> <li>Decided on name for organization</li> <li>Coordination with Sean and Pavish on next steps for their work</li> <li>Some cleanup of the CCI GitHub account</li> <li>Email + Matrix + Slack + GitHub catch up<ul> <li>Various responses + administrative follow ups</li> <li>Reviewed the bidirectional navigation design spec + process questions</li> <li>Follow ups for organizational insurance and fundraising next steps</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/kriti/#2023-11-08-wed","title":"2023-11-08 (Wed)","text":"<ul> <li>6 meetings<ul> <li>Team meeting</li> <li>Meeting with Brent, Sean, Anish re: DB connections backend work</li> <li>2 x meetings with Anish about logistics / feedback</li> <li>External / user research call</li> <li>Meeting with Sean to prep for above call</li> </ul> </li> <li>Email + Matrix + Slack + GitHub catch up<ul> <li>Various responses + administrative follow ups</li> </ul> </li> <li>Logistics for Anish<ul> <li>Contract</li> <li>New Matrix account</li> </ul> </li> <li>Core team / maintainers verbiage updates<ul> <li>Wiki</li> <li>GitHub team</li> <li>Email list</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/kriti/#2023-11-07-tue","title":"2023-11-07 (Tue)","text":"<p>Partial day, medical stuff</p> <ul> <li>Email + Matrix + Slack + GitHub catch up<ul> <li>Talked to Brent and Pavish</li> <li>Weighed in on documentation PR</li> <li>Reviewed installation plan</li> </ul> </li> <li>External call</li> <li>Follow ups on some administrative stuff<ul> <li>Insperity</li> <li>New contract</li> </ul> </li> <li>Upgraded work computer OS, some related fixes</li> </ul>"},{"location":"archive/team/workflow/worklogs/kriti/#2023-11-06-mon","title":"2023-11-06 (Mon)","text":"<ul> <li>Call with Pavish to go over translation workflow</li> <li>1:1 with Ghislaine</li> <li>A bunch of CRM updates</li> <li>Email + Matrix + Slack + GitHub catch up<ul> <li>Various responses</li> <li>Merged stale bot PR</li> </ul> </li> <li>Added more detail to weekly meeting agenda items</li> <li>Call with Insperity</li> <li>Some thinking about new org name</li> </ul>"},{"location":"archive/team/workflow/worklogs/kriti/#2023-11-03-fri","title":"2023-11-03 (Fri)","text":"<ul> <li>Feedback call with Rajat</li> <li>1:1 with Pavish</li> <li>Short call with Sean to discuss DB connections / homepage</li> <li>Wrote up 2023 activities report for CIT</li> <li>Updated CRM entries for a few different people</li> <li>Email + Matrix + Slack + GitHub catch up<ul> <li>Various responses</li> <li>Set up next call with Ian</li> <li>Some follow ups on invoices and admin stuff</li> <li>Various other admin follow ups</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/kriti/#2023-11-02-thu","title":"2023-11-02 (Thu)","text":"<ul> <li>Call with Brent re: Freshdesk and installation</li> <li>1:1 with Adam<ul> <li>Mathesar overview, etc.</li> </ul> </li> <li>Set up Adam with Matrix</li> <li>Redid 1:1 schedule</li> <li>Set up mathesar.org email aliases for team</li> <li>Set up Transifex accounts for the team</li> <li>Some marketing discussion / comments</li> <li>Email + Matrix + Slack + GitHub catch up<ul> <li>Some overdue responses </li> </ul> </li> <li>Progress on next steps for Anish</li> <li>Some more offboarding tasks for Dom, Mukesh, Rajat</li> <li>CIT visiting researcher followup</li> </ul>"},{"location":"archive/team/workflow/worklogs/kriti/#2023-11-01-wed","title":"2023-11-01 (Wed)","text":"<ul> <li>2 x team meetings</li> <li>Call with Anish</li> <li>Call with Ian re: funding and board</li> <li>Onboarding tasks for Adam</li> <li>Offboarding tasks for Dom, Mukesh, Rajat<ul> <li>This took a long time</li> </ul> </li> <li>Email + Matrix + Slack catch up</li> </ul>"},{"location":"archive/team/workflow/worklogs/kriti/#archive","title":"Archive","text":"<ul> <li>October 2023 work logs</li> <li>September 2023 work logs</li> <li>August 2023 work logs</li> <li>July 2023 work logs</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/","title":"Pavish\u2019s work log","text":""},{"location":"archive/team/workflow/worklogs/pavish/#working-on","title":"Working on:","text":"<ul> <li>I18n project - translating the app</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#soon","title":"Soon","text":"<ul> <li>Set up calls for Product \u201cbig picture\u201d meetings</li> <li>Clean up django migration scripts</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#later","title":"Later","text":"<ul> <li>Figure out E2E testing strategy and user flows</li> <li>Test Cypress as a possible tool to use (Playwright is still my choice at the moment)</li> <li>Come up with a docker setup for E2E tests</li> <li>Come up with user flows</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#daily-logs","title":"Daily logs","text":""},{"location":"archive/team/workflow/worklogs/pavish/#2023-12-06-wednesday","title":"2023-12-06 Wednesday","text":"<ul> <li>Raised PR translating \u2018/src/components/\u2019</li> <li>Quick call with Sean to resolve review comments</li> <li>Started work on translating \u2018src/systems\u2019</li> <li>Responded to Add loading and error indications in the database page</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#2023-12-05-tuesday","title":"2023-12-05 Tuesday","text":"<ul> <li>i18n work</li> <li>Continued translating app</li> <li>Ticket approval meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#2023-12-04-monday","title":"2023-12-04 Monday","text":"<ul> <li>i18n work</li> <li>Raised PR for replacing old eslint svelte plugin with new official one</li> <li>Continued translating app</li> <li>Re-reviewed and merged Handle failed API requests on schema page</li> <li>Recorded video to clarify issue #2123</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#2023-12-01-friday","title":"2023-12-01 Friday","text":"<ul> <li>Continued i18n work</li> <li>Design session call</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#2023-11-30-thursday","title":"2023-11-30 Thursday","text":"<ul> <li>Raised PR for DB connections UI</li> <li>Sent mail on design issues to address in DB connections UI</li> <li>Created issues:</li> <li>Frontend followup work on Database connections UI</li> <li>Internal server error when database connection fails</li> <li>Add loading and error indications in the database page</li> <li>Repo admin work</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#2023-11-29-wednesday","title":"2023-11-29 Wednesday","text":"<ul> <li>Continued work on DB connections UI</li> <li>Call with Brent</li> <li>Call with Kriti</li> <li>Repo admin work</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#2023-11-28-tuesday","title":"2023-11-28 Tuesday","text":"<ul> <li>Re-reviewed and requested changes in Handle failed API requests on schema page</li> <li>Continued work on DB connections UI</li> <li>Repo admin work</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#2023-11-27-monday","title":"2023-11-27 Monday","text":"<ul> <li>Reviewed and requested changes in Added Focus styles to Schema Row, Table Row and Buttons</li> <li>Reviewed and merged Fixed formatting strings for timestampsWithTZ</li> <li>Reviewed and requested changes in Handle failed API requests on schema page</li> <li>Repo admin work</li> <li>Team meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#2023-11-24-friday","title":"2023-11-24 Friday","text":"<ul> <li>Started working on DB connections UI</li> <li>Repo admin work</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#2023-11-23-thursday","title":"2023-11-23 Thursday","text":"<ul> <li>Went through Connections PR, and fixed breaking frontend changes</li> <li>Call with Ghislaine</li> <li>Added Transifex integration config and more notes in the Django i18n PR</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#2023-11-22-wednesday","title":"2023-11-22 Wednesday","text":"<ul> <li>Caught up on emails and chats, updated email address to mathesar.org domain</li> <li>Raised PR for django translations and instructions for maintainers</li> <li>Weekly team meeting</li> <li>Took a look at Connections API PR</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#2023-11-20-monday-2023-11-21-tuesday","title":"2023-11-20 Monday &amp; 2023-11-21 Tuesday","text":"<ul> <li>I was out sick</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#2023-11-17-friday","title":"2023-11-17 Friday","text":"<ul> <li>Responded to orderable field issue</li> <li>Responded to Add focus indications issue</li> <li>Renewed certificate for staging.mathesar.org</li> <li>Added commits to update roles in website update PR</li> <li>Responded to mail for visiting researchers from Henkaku center</li> <li>Chat &amp; call with Sean on me picking up some of the DB Connections work</li> <li>1:1 with Kriti</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#2023-11-16-thursday","title":"2023-11-16 Thursday","text":"<ul> <li>Pondered a bit more on permissions and workspaces</li> <li>Design sessions call</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#2023-11-15-wednesday","title":"2023-11-15 Wednesday","text":"<ul> <li>Call with Brent</li> <li>Responded to work check-in email</li> <li>Got Replace typesafe-i18n with svelte-i18n PR ready for review</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#2023-11-14-tuesday","title":"2023-11-14 Tuesday","text":"<ul> <li>Prepared proposal for PGConf India 2024</li> <li>Got it reviewed from Kriti</li> <li>Submitted proposal</li> <li>Spent some time thinking about permissions and workspaces</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#2023-11-13-monday","title":"2023-11-13 Monday","text":"<ul> <li>Call with Kriti on end-to-end workflow for translations</li> <li>Continued work on cleaning up Replace typesafe-i18n with svelte-i18n PR</li> <li>Did some searches for conferences we could attend</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#2023-11-10-friday","title":"2023-11-10 Friday","text":"<ul> <li>Thought more about processes around translation</li> <li>Researched other open-source products using transifex</li> <li>Community team event</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#2023-11-09-thursday","title":"2023-11-09 Thursday","text":"<ul> <li>Cleaned up en &amp; jp svelte translation files, added some more translations</li> <li>Linked GH repo in Transifex and point to the en &amp; jp json files to test it out</li> <li>Responded to review email for \u2018Bidirectional Navigation Between Table and Explorations\u2019</li> <li>Call with Ghislaine</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#2023-11-08-wednesday","title":"2023-11-08 Wednesday","text":"<ul> <li>Responded to Brent\u2019s email on installations</li> <li>Core team meeting</li> <li>Call with Adam</li> <li>Continued i18n work</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#2023-11-07-tuesday","title":"2023-11-07 Tuesday","text":"<ul> <li>Continued i18n work</li> <li>Decided to replace typesafe-i18n with a library that supports the ICU format<ul> <li>Raised a draft PR with svelte-i18n and added utilities to handle our existing customizations</li> <li>Long call with Sean to see if he had any objections as he involved in the i18n project spec</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#2023-11-06-monday","title":"2023-11-06 Monday","text":"<ul> <li>Raised PR to simply Dockerfile and dev compose file</li> <li>Continued i18n work</li> <li>Continued figuring out automation workflow </li> <li>Chat with Kriti on ordering translations</li> <li>Created an issue to track cleaning up migration scripts</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#2023-11-03-friday","title":"2023-11-03 Friday","text":"<ul> <li>I18n work</li> <li>Continued figuring out approach to integrate with GH actions</li> <li>Chat with Brent on separate dev Dockerfile</li> <li>Chat on cleaning up backend migrations</li> <li>1-1 with Kriti</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#2023-11-02-thursday","title":"2023-11-02 Thursday","text":"<ul> <li>Reviewed UX for DB connections page, responded to Ghislaine\u2019s email</li> <li>Continued looking through pending i18n work</li> <li>Started figuring out ways to make existing approach cleaner</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#2023-11-01-wednesday","title":"2023-11-01 Wednesday","text":"<ul> <li>Core team meeting</li> <li>User call retrospective meeting</li> <li>Started looking at i18n work to assess what\u2019s pending</li> </ul>"},{"location":"archive/team/workflow/worklogs/pavish/#archive","title":"Archive","text":"<ul> <li>October 2023 work logs</li> <li>September 2023 work logs</li> <li>August 2023 work logs</li> <li>July 2023 work logs</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/","title":"Sean\u2019s work log","text":""},{"location":"archive/team/workflow/worklogs/sean/#todo","title":"TODO","text":""},{"location":"archive/team/workflow/worklogs/sean/#2023-12-12-tuesday","title":"2023-12-12 Tuesday","text":"<ul> <li>Review filter and create schemas using connection_id</li> <li>Review Django i18n and instructions and add a commit with a some dev-docs polish work</li> <li>Design meeting</li> <li>DCFSA enrollment</li> <li>Open PR to Allow editing connection nicknames</li> <li>Push more changes to Use connection ids instead of names</li> <li>Resolve several merge conflicts in New DB connection form and rebase on top of Add connections rpc endpoints</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-12-11-monday","title":"2023-12-11 Monday","text":"<ul> <li>Review/merge Translate /src/systems, support passing arguments to RichText slots, including brief call with Pavish</li> <li>Team meeting + notes</li> <li>Adapt repo admin workflow to function across all org repos</li> <li>Some issues cleanup</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-12-08-friday","title":"2023-12-08 Friday","text":"<ul> <li>Small community event</li> <li>Spend some time looking into the state of the API Documentation project and asking questions about it</li> <li>Work on Allow editing a connection nickname</li> <li>Open draft PR to Use connection ids instead of names</li> <li>Open issue Modify schemas API to accept connection IDs instead of connection nicknames</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-12-07-thursday","title":"2023-12-07 Thursday","text":"<ul> <li>Work on improving code within Added drag functionality to update precedence for sort condition.</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-12-06-wednesday","title":"2023-12-06 Wednesday","text":"<ul> <li>Some continued work on repo issues and label cleanup</li> <li>Build workflow for keeping GitHub ticket labels clean</li> <li>Review/merge Replace eslint-plugin-svelte3 with officially supported eslint-plugin-svelte plugin</li> <li>Review Translate /src/components, add linting and formatting rules</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-12-05-tuesday","title":"2023-12-05 Tuesday","text":"<ul> <li>Some continued work reviewing Added drag functionality to update precedence for sort condition</li> <li>Monthly ticket approval meeting</li> <li>Work on re-organizing ticket labels</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-12-04-monday","title":"2023-12-04 Monday","text":"<ul> <li>Send email seeking consensus on deleting our GitHub project</li> <li>Some repo admin work</li> <li>Discuss New connection API with Brent</li> <li>Review and refine queue of product approval tickets</li> <li>Review weekly meeting agenda</li> <li>Review/merge Db Connections page and Welcome page</li> <li>Sink a decent amount of time into troubleshooting issues with backend bugs in the connections API and </li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-12-01-friday","title":"2023-12-01 Friday","text":"<ul> <li>Insperity onboarding</li> <li>Design meeting</li> <li>1:1 with Kriti</li> <li>I9 form</li> <li>Benefits enrollment</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-11-23-2023-11-30","title":"2023-11-23 - 2023-11-30","text":"<p>(Vacation)</p>"},{"location":"archive/team/workflow/worklogs/sean/#2023-11-22-wednesday","title":"2023-11-22 Wednesday","text":"<p>(Very short day due to trip prep and lack of childcare)</p> <ul> <li>Team meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-11-21-tuesday","title":"2023-11-21 Tuesday","text":"<ul> <li>Weigh in on chat system email thread</li> <li>Continued progress on New DB connection form, including a draft PR</li> <li>User call</li> <li>Preliminary review of Added drag functionality to update precedence for sort condition</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-11-20-monday","title":"2023-11-20 Monday","text":"<p>(Slightly shorter day due to kid stuff)</p> <ul> <li>Review/merge Set clear value as null</li> <li>A small amount of user comms</li> <li>Re-review \u201cUsability Issues\u201d email thread and HackMD doc</li> <li>Begin scaffolding Front end changes for the \u201cNew Database Connection\u201d form</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-11-19-sunday","title":"2023-11-19 Sunday","text":"<p>(A small amount of work to offset expected gaps in the coming week)</p> <ul> <li>Finish combing through draft tickets and categorizing them</li> <li>Prepare queue of tickets to discuss at December\u2019s product approval meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-11-17-friday","title":"2023-11-17 Friday","text":"<ul> <li>Add more design specs to Provide bidirectional navigation between explorations and base tables in order to describe behavior</li> <li>Respond to a number of community contributor comments in GitHub</li> <li>Quick chat with Pavish about handoff of DB connections</li> <li>Improve clarity of specs within Front end work to re-organize DB connections and splinter some work off into a separate ticket, for easier hand-off to Pavish</li> <li>Review/merge Replace typesafe-i18n with svelte-i18n</li> <li>Set up recurring monthly \u201cticket approval meetings\u201d</li> <li>Comb through lots of \u201cdraft\u201d tickets to categorize them in preparation for December\u2019s monthly product approval meeting. Also comment and close a number of tickets along the way.</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-11-16-thursday","title":"2023-11-16 Thursday","text":"<ul> <li>1:1 with Brent</li> <li>Give team a heads up about travel plans</li> <li>Design meeting</li> <li>1:1 with Kriti</li> <li>Propose changes to GitHub tickets workflow</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-11-15-wednesday","title":"2023-11-15 Wednesday","text":"<p>(Shorter day due to some health issues)</p> <ul> <li>Some user comms work</li> <li>Some work on GH ticket process, including a call with Kriti</li> <li>Start work on DB Connection changes</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-11-14-tuesday","title":"2023-11-14 Tuesday","text":"<p>(Shorter day due to some kid issues)</p> <ul> <li>Install adjustable monitor arm on my desk</li> <li>Research and triage Linked record removal not being reflected after save</li> <li>Research and weigh in on Able to order on an unorderable field</li> <li>Call with Kriti to discuss GitHub issues process</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-11-13-monday","title":"2023-11-13 Monday","text":"<ul> <li>Some repo admin work</li> <li>Review Ghislaine\u2019s \u201cPrioritized List of Usability Issues\u201d</li> <li>Spend some time researching and learning about Grist</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-11-10-friday","title":"2023-11-10 Friday","text":"<p>(Out for holiday)</p>"},{"location":"archive/team/workflow/worklogs/sean/#2023-11-09-thursday","title":"2023-11-09 Thursday","text":"<ul> <li>Review Ghislaine\u2019s Bidirectional Navigation Design Spec</li> <li>Some work on user comms</li> <li>Design discussion within Editing Linked Records</li> <li>Review Added overflow condition for TableView</li> <li>Call with Pavish to go over some small questions</li> <li>Capture user feedback from Matrix Prajwal</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-11-08-wednesday","title":"2023-11-08 Wednesday","text":"<ul> <li>Review \u201cInstallation improvements 0.1.4\u201d email thread</li> <li>Some user feedback work</li> <li>Team meeting + add notes to wiki</li> <li>Small dead end rabbit hole trying to find a way to query my local Matrix Element in order to get data out of chats</li> <li>Larger dead end rabbit hole trying to configure xremap to do some keyboard shortcut things for personal workflows</li> <li>User call + prep + debrief + notes</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-11-07-tuesday","title":"2023-11-07 Tuesday","text":"<ul> <li>Some repo admin work, shepherding PRs along</li> <li>Investigate and reply to contributor\u2019s comments in Record page widget causing overflow</li> <li>Review Add metadata about internal db connection in common_data</li> <li>Discussion about docs navigation within Add resource links to user guide intro page</li> <li>Some thinking and planning for \u201cGitHub issues workflow\u201d discussion tomorrow</li> <li>Review planned agenda items for tomorrow\u2019s meeting</li> <li>Send thoughts to team on \u201cProduct process\u201d for tomorrow\u2019s discussion</li> <li>Call with Pavish about i18n work</li> <li>Call with Adam</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-11-06-monday","title":"2023-11-06 Monday","text":"<ul> <li>Review and discussion around DB connections page design</li> <li>Discussion about CRM scope</li> <li>Create ticket to spec out Front end work for new DB connections functionality</li> <li>Fix merge conflicts in Refactor CellSelection data structure and store</li> <li>Open PR to Disable the stale issues bot</li> <li>Review add cell tab in table inspector for showing cell content, adding some commits</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-11-03-friday","title":"2023-11-03 Friday","text":"<ul> <li>Update \u201cNew DB Connection\u201d UI specs</li> <li>Send email informing others of those specs updates</li> <li>Design discussion about Editing Linked Records</li> <li>Design discussion about DB Connections home page, including writing a \u201cmini spec\u201d for new proposed behavior</li> <li>Create tickets for:<ul> <li>Connections work addendum</li> <li>Implement new \u201cconnections\u201d model and API</li> <li>Pass data about the internal DB connection to the front end via common_data</li> <li>Add new RPC-style API to create connections</li> </ul> </li> <li>Send \u201cDB Connections backend work\u201d email</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-11-02-thursday","title":"2023-11-02 Thursday","text":"<ul> <li>Delete the mathesar-update-companion</li> <li>Call with Brent about DB connections UI</li> <li>Add tickets:<ul> <li>Provide bidirectional navigation between explorations and base tables</li> <li>Create FK column from new column dialog</li> <li>Configure search strategy within record selector</li> <li>Implement the \u201cAdd Record\u201d page</li> <li>Improvements for working with large text fields</li> <li>Make navigation header behave more consistently</li> <li>Remove \u201cRecords will be repositioned on refresh\u201d message</li> <li>Record page widget causing overflow</li> <li>Unable to open nested Record selector for self-referential FK</li> </ul> </li> <li>Some small repo admin tasks</li> <li>Begin making adjustments to specs in response to meeting with Brent</li> <li>Begin writing up new GitHub tickets for DB connections work</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-11-01-wednesday","title":"2023-11-01 Wednesday","text":"<ul> <li>Review DB Connections Home Page</li> <li>Call with Brent about DB connections UI</li> <li>Re-assign issues and PRs assigned to Rajat</li> <li>Team meeting</li> <li>User interview meeting</li> <li>Some user outreach follow-up work</li> <li>Unassign Dom, Mukesh, and Rajat from all tickets and PRs by manually reviewing each</li> <li>Whittle down queue of all assigned tickets by closing, commenting, and unassigning people</li> <li>Lots of clean up in GitHub issues</li> <li>Open PR to remove mentions of <code>mathesar-update-companion</code> from the <code>.github</code> directory within the mathesar repo.</li> <li>Open website PR Update core team</li> <li>Document repo setup tasks in wiki page and add section on removing a repo.</li> <li>Update wiki to document ongoing responsibilities post team-restructuring</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-10-31-tuesday","title":"2023-10-31 Tuesday","text":"<ul> <li>Finish updating \u201cNew DB connection\u201d specs, and alert reviewers of changes</li> <li>Review \u201cworkspaces\u201d email from Pavish</li> <li>Quick call with Pavish regarding user feedback</li> <li>Quick call with Kriti regarding user feedback</li> <li>1:1 with Mukesh</li> <li>Do some more user outreach via email and Matrix</li> <li>Begin mapping out changes necessary to implement modified DB connections designs</li> <li>Spend some time writing up tickets to flush out my local queue of tickets to write</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-10-30-monday","title":"2023-10-30 Monday","text":"<ul> <li>Enroll in new healthcare benefits</li> <li>Call with Pavish to discuss DB connection UI</li> <li>Brief call with Brent to discuss DB connection UI</li> <li>Send email to team about release notes improvements</li> <li>Send feedback email to Rajat</li> <li>Begin adjusting \u201cNew DB Connection\u201d specs to suit changes discussed with Pavish and Brent</li> <li>Research and respond to \u201cDeleting a Database Connection\u201d thread</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-10-27-friday","title":"2023-10-27 Friday","text":"<ul> <li>Team event</li> <li>Quick call with Pavish and Kriti to handle some user comms tasks</li> <li>Call with Ghislaine to discuss DB connection UI</li> <li>Review FidalMathew: Close RecordSelector on overlay click, including some troubleshooting and additional work in order to merge.</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-10-26-thursday","title":"2023-10-26 Thursday","text":"<p>(Short day due to headache)</p> <ul> <li>Open PR on marketing website to Make timeline for cloud version less specific</li> <li>Chat with Dom</li> <li>Quick call with Kriti to go over some health insurance stuff</li> <li>Some comments and clean up in various GitHub tickets and PRs</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-10-25-wednesday","title":"2023-10-25 Wednesday","text":"<ul> <li>Quick call with Ghislaine about user outreach</li> <li>Investigate user reported issue FK Column Is Not Given Dropdown / Selector \u2013 Only Raw Text Input \u00b7 Issue #3255 \u00b7 centerofci/mathesar</li> <li>Help move some older PRs along by making comments</li> <li>Resolve git merge conflicts in Save preferred_language for auth user in db and troubleshoot issue with conflicting Django migrations in order to prepare the PR for merge</li> <li>Resolve git merge conflicts in Db connection UI and merge</li> <li>Some smaller discussions</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-10-24-tuesday","title":"2023-10-24 Tuesday","text":"<ul> <li>DB connections UI prototyping and design</li> <li>Call with Brent about DB connections UI</li> <li>Finish first draft of DB connection UI specs and send an email requesting that others review it.</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-10-23-monday","title":"2023-10-23 Monday","text":"<ul> <li>Some user outreach and CRM work</li> <li>Quick 1/1 with Kriti</li> <li>Some UX design, thinking, and prototype work for the DB connections UI</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-10-20-friday","title":"2023-10-20 Friday","text":"<p>(1/2 day due to household stuff and kids doctors appointment)</p> <ul> <li>Call with Pavish about DB connections</li> <li>Email discussion about Matrix problems</li> <li>Send another batch of user outreach email messages</li> <li>Set up sean@mathesar.org as an email address that I can send from</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-10-19-thursday","title":"2023-10-19 Thursday","text":"<p>(1/2 day in order to take a nap)</p> <ul> <li>Call with Mukesh about DB connections and documentation</li> <li>Some CRM updates from user communication</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-10-18-wednesday","title":"2023-10-18 Wednesday","text":"<p>(out due to sick kid)</p>"},{"location":"archive/team/workflow/worklogs/sean/#2023-10-17-tuesday","title":"2023-10-17 Tuesday","text":"<p>(1/2 day due to sick kid)</p> <ul> <li>User feedback meeting with Pavish and Ghislaine</li> <li>Sync with Brent regarding DB connections</li> <li>Partially attend permissions UX meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-10-16-monday","title":"2023-10-16 Monday","text":"<p>(1/2 day due to kid stuff)</p> <ul> <li>1/1 with Kriti</li> <li>Email about DB connections work</li> <li>Catch up on some smaller email conversations</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-10-13-friday","title":"2023-10-13 Friday","text":"<ul> <li>Call with Ghislaine about DB connection UI</li> <li>Team event</li> <li>Some continued thinking about DB connection architecture problems</li> <li>Spend some time wrestling with Freshdesk, especially, trying to figure out how to reply to a user using markdown.</li> <li>Discuss abandoning Freshdesk for the user outreach project</li> <li>Some continued conversation with Serafeim Papastefanos over email (Logged)</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-10-12-thursday","title":"2023-10-12 Thursday","text":"<ul> <li>1 hr deep clean and re-organization of desk workspace</li> <li>Database connection email discussion</li> <li>Call with Kriti about database connections</li> <li>Call with Mukesh about database connections</li> <li>Send a small handful of user outreach emails</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-10-11-wednesday","title":"2023-10-11 Wednesday","text":"<ul> <li>Produce more PR age report metrics</li> <li>Struggle with figuring out how to use Freshdesk to suit our needs for the user outreach. (I tried a bunch of things but couldn\u2019t get Feshdesk to do exactly what we wanted.)</li> <li>Some work reviewing Db connection UI</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-10-10-tuesday","title":"2023-10-10 Tuesday","text":"<ul> <li>Call with Ghislaine and Pavish about about user outreach and feedback</li> <li>Call with Ghislaine, Pavish, and Kriti about user outreach and feedback</li> <li>Review Ghislaine\u2019s usability issues email and HackMD document</li> <li>Call with Ghislaine about usability issues</li> <li>Call with Mukesh about installation documentation questions</li> <li>Update user outreach email template, removing \u201cAmazon\u201d and linking to calendar</li> <li>Review SavvyCal functionality from user perspective</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-10-09-monday","title":"2023-10-09 Monday","text":"<ul> <li>Look into benefits questions from Kriti</li> <li>Some repo analytics as follow-up thoughts to Repo management link posted by Kriti</li> <li>Move Cannot import large csv tables out of release milestone, with comment pointing user towards other issues</li> <li>Read Installation Improvements project and plan to become more familiar with it for the release</li> <li>Read Release management docs</li> <li>Cleanup some wiki docs content on release management and process</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-10-06-friday","title":"2023-10-06 Friday","text":"<ul> <li>DB connection UX meeting</li> <li>Docs pairing session with Mukesh</li> <li>Email \u201cproduct vision follow-up thoughts\u201d</li> <li>Begin reviewing Db connection UI by</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-10-05-thursday","title":"2023-10-05 Thursday","text":"<ul> <li>Team meeting</li> <li>Address review feedback to user outreach email</li> <li>Give team a heads up about next week</li> <li>Some discussion around Allow Typing Into Cells Once Highlighted</li> <li>Respond to \u201c2023 Cycle 2 (v0.1.4) retrospective\u201d email</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-10-04-wednesday","title":"2023-10-04 Wednesday","text":"<ul> <li>Spend some time helping new devs in Matrix General</li> <li>Spend some time conversing with new user on Reddit</li> <li>1/1 with Dom</li> <li>More work getting the CRM up and running and preparing data for user outreach project</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-10-03-tuesday","title":"2023-10-03 Tuesday","text":"<ul> <li>User feedback meeting with Ghislaine and Pavish</li> <li>1/1 with Mukesh</li> <li>Some release management work, communicating with people to ensure tasks are delegated and documented optimally</li> <li>Lots of work getting data into the CRM</li> <li>Respond to Reddit thread</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-10-02-monday","title":"2023-10-02 Monday","text":"<ul> <li>Open PR for first draft of user outreach email</li> <li>Spend some time trying to figure out how to use Freshdesk</li> <li>Spend some time skimming through Matrix to identify prospects for user outreach</li> <li>Ping Dom about email thread regarding Anshuman\u2019s GSoC project.</li> <li>Repo work, cleaning up tickets and PRs in preparation for 0.1.4 release</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-09-29-friday","title":"2023-09-29 Friday","text":"<ul> <li>Send email about GitHub repository analytics</li> <li>Team event</li> <li>Comment within email thread about user feedback process</li> <li>Prepare GitHub user outreach data</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-09-28-thursday","title":"2023-09-28 Thursday","text":"<ul> <li>Finish categorizing users from our GitHub repo</li> <li>1/1 with Rajat</li> <li>User feedback meeting</li> <li>1/1 with Kriti</li> <li>Polish and publish github_to_duckdb code</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-09-27-wednesday","title":"2023-09-27 Wednesday","text":"<ul> <li>Team meeting</li> <li>Investigate and close Continue looking for available names when an auto-generated constraint name is unavailable</li> <li>Some small discussions</li> <li>Some time playing with scraping issue/comment/user data from our GitHub repo into a database</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-09-26-tuesday","title":"2023-09-26 Tuesday","text":"<ul> <li>Troubleshoot Docker issues with Pavish preventing me from reviewing his PR</li> <li>1/1 with Mukesh</li> <li>Follow up with user about column comments</li> <li>Review Upgrade node</li> <li>Raise discussion about UX design for Excel/JSON import project</li> <li>Review Fidal: Close record selector on overlay</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-09-25-monday","title":"2023-09-25 Monday","text":"<ul> <li>1/1 with Pavish</li> <li>Some thinking on product direction</li> <li>Review Mukesh: install docs</li> <li>Review Pavish: column descriptions</li> <li>1/1 with Kriti</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-09-22-friday","title":"2023-09-22 Friday","text":"<p>(Out due to two sick kids)</p>"},{"location":"archive/team/workflow/worklogs/sean/#2023-09-21-thursday","title":"2023-09-21 Thursday","text":"<p>(Partial day due to one sick kid)</p> <ul> <li>1/1 with Brent</li> <li>Sync with Ghislaine and Pavish re: niche</li> <li>Review Mukesh: installation docs</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-09-20-wednesday","title":"2023-09-20 Wednesday","text":"<p>(Out due to two sick kids)</p>"},{"location":"archive/team/workflow/worklogs/sean/#2023-09-19-tuesday","title":"2023-09-19 Tuesday","text":"<p>(Partial day due to two sick kids)</p> <ul> <li>1/1 with Mukesh</li> <li>Try removing all event listeners from cell-related components to see if it improves performance.</li> <li>Troubleshooting running the front end in prod mode</li> <li>Some smaller discussions</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-09-18-monday","title":"2023-09-18 Monday","text":"<p>(Partial day due to two sick kids)</p> <ul> <li>1/1 with Rajat</li> <li>Sync with Brent and Dom about API for pasting data into cells</li> <li>1/1 with Dom</li> <li>Several smaller discussions on Matrix</li> <li>Review docs: Add troubleshooting guide link</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-09-15-friday","title":"2023-09-15 Friday","text":"<ul> <li>Attend community event</li> <li>Some chat with community members in Matrix General</li> <li>Some tinkering with baby steps towards building an internal Mathesar CRM instance</li> <li>Briefly look into Handle API errors on schema page to help answer question from Rajat</li> <li>Some continued work on JS table rendering performance research</li> <li>Some continued work on CellSelection</li> <li>Some smaller discussions</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-09-14-thursday","title":"2023-09-14 Thursday","text":"<p>(Shorter due to headache)</p> <ul> <li>Review Ghislaine\u2019s niche research report</li> <li>1/1 with Ghislaine re: niche research project</li> <li>Some continued work on JS table rendering performance research</li> <li>Cleanup of some tickets</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-09-13-wednesday","title":"2023-09-13 Wednesday","text":"<p>(Out due to sick kid)</p>"},{"location":"archive/team/workflow/worklogs/sean/#2023-09-12-tuesday","title":"2023-09-12 Tuesday","text":"<p>(Half day due to sick kid)</p> <ul> <li>Spend a little time profiling JS perf with table page rendering to get a rough sense of where our bottle necks are.</li> <li>1/1 with Mukesh</li> <li>Survey work meeting</li> <li>Wordsmith options for survey</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-09-11-monday","title":"2023-09-11 Monday","text":"<ul> <li>Push some more commits to my CellSelection PR</li> <li>Open ticket Reactivity problem with cell value in Data Explorer table inspector</li> <li>1/1 with Rajat</li> <li>Some time exploring MotherDuck product</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-09-08-friday","title":"2023-09-08 Friday","text":"<ul> <li>Some smaller team management check-ins and follow-ups</li> <li>Several small discussions</li> <li>Partial 1/1 with Rajat</li> <li>Re-review [i18n] Save preferred_language for auth user in db</li> <li>Re-review [i18n] Language switcher for anon users</li> <li>Review community PR fix: cell loses focus when clicking on its outline</li> <li>1/1 with Ghislaine</li> <li>Review Dont show \u201cGo to Record Page\u201d for error rows</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-09-07-thursday","title":"2023-09-07 Thursday","text":"<ul> <li>A number of smaller team management tasks</li> <li>1/1 with Anish</li> <li>1/1 with Mukesh</li> <li>Review copy in DB config UI, commenting in Figma, and starting a discussion on Matrix.</li> <li>Finish and send critique of user survey</li> <li>Some minor clean up in some tickets and PRs</li> <li>Review docs changes in Remove db superuser requirement</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-09-06-wednesday","title":"2023-09-06 Wednesday","text":"<ul> <li>Catch up on emails</li> <li>Some prep work for team meeting</li> <li>Team meeting</li> <li>1/1 with Pavish</li> <li>Re-review user survey and begin drafting response</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-09-05-tuesday","title":"2023-09-05 Tuesday","text":"<p>(Vacation day)</p>"},{"location":"archive/team/workflow/worklogs/sean/#2023-09-04-monday","title":"2023-09-04 Monday","text":"<p>(Out for US holiday)</p>"},{"location":"archive/team/workflow/worklogs/sean/#2023-09-01-friday","title":"2023-09-01 Friday","text":"<ul> <li>Team event</li> <li>Discuss scheduling of niche research meeting with Pavish and Ghislaine</li> <li>Push more commits to my Cell Selection refactor PR</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-08-31-thursday","title":"2023-08-31 Thursday","text":"<ul> <li>Brief team-management-related check-ins with Brent, Pavish, Ghislaine, Anish, Rajat</li> <li>Open ticket Configure code formatting for Markdown within docs and wiki sites</li> <li>Raise mdformat bug preventing us from using it</li> <li>Publish Markdown Style Guide</li> <li>Send Markdown syntax email</li> <li>Some continued work on Cell Selection refactor</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-08-30-wednesday","title":"2023-08-30 Wednesday","text":"<ul> <li>Respond to \u201cAvoiding regressions\u201d email thread</li> <li>Respond to \u201cProduct level permissions to account for related entities\u201d thread</li> <li>1/1 with Brent</li> <li>Write script to identify stale work logs</li> <li>Review \u201cQuick User Check-in\u201d survey, emailing critique</li> <li>Clean up FE code standard PR, moving it to a draft PR on the main repo.</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-08-29-tuesday","title":"2023-08-29 Tuesday","text":"<p>(Shorter day due to some intermittent family demands throughout the day)</p> <ul> <li>1/1 with Mukesh</li> <li>Work on Sheet selection refactor</li> <li>1/1 with Ghislaine</li> <li>Some smaller conversations</li> <li>Begin drafting response to \u201cAvoiding regressions\u201d thread</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-08-28-monday","title":"2023-08-28 Monday","text":"<ul> <li>Chat with Rajat about upcoming tasks</li> <li>Review QA tickets opened by Brent, adding some comments</li> <li>Work on Markdown style guide</li> <li>Work on Sheet selection refactor</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-08-25-friday","title":"2023-08-25 Friday","text":"<ul> <li>Review Move UserProfile to the App level context from Route level context</li> <li>Some prep work for team management while Kriti is away</li> <li>Push more commits to my draft CellSelection PR</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-08-24-thursday","title":"2023-08-24 Thursday","text":"<ul> <li>Address Review feedback in Migrate wiki to MkDocs</li> <li>Handle deployment of new mkdocs wiki site</li> <li>Troubleshoot changes with CNAME file on wiki deployment</li> <li>1/1 with Kriti</li> <li>Create ticket Decommission Wiki.js server</li> <li>Resume work on Refactor CellSelection data structure and store</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-08-23-wednesday","title":"2023-08-23 Wednesday","text":"<ul> <li>Team meeting</li> <li>Bring PR to Migrate wiki to MkDocs out of draft state</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-08-22-tuesday","title":"2023-08-22 Tuesday","text":"<ul> <li>Resolve conflicts in Refactor CellSelection data structure and store</li> <li>Resolve conflicts in Make column type inference optional</li> <li>Address Kriti\u2019s feedback in Make column type inference optional</li> <li>Begin work to Migrate wiki to MkDocs</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-08-21-monday","title":"2023-08-21 Monday","text":"<ul> <li>Troubleshoot some computer issues</li> <li>Discussions</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-08-18-friday","title":"2023-08-18 Friday","text":"<p>(shorter day due to some kid stuff)</p> <ul> <li>Update project page from previous cycle</li> <li>Team meeting</li> <li>Team event</li> <li>Some smaller discussions</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-08-17-thursday","title":"2023-08-17 Thursday","text":"<ul> <li>Catch up on several email and Matrix discussions</li> <li>Some cleanup of GitHub tickets</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-08-16-wednesday","title":"2023-08-16 Wednesday","text":"<ul> <li>Call with Dom regarding priorities for cycle</li> <li>Organize front-end cycle work into 2023-08 Front end work ticket</li> <li>Respond to \u201cPackage version management\u201d email thread</li> <li>Respond to Brent\u2019s \u201cinstalling stuff\u201d email thread</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-08-15-tuesday","title":"2023-08-15 Tuesday","text":"<p>(out sick)</p>"},{"location":"archive/team/workflow/worklogs/sean/#2023-08-14-monday","title":"2023-08-14 Monday","text":"<p>(out sick)</p>"},{"location":"archive/team/workflow/worklogs/sean/#2023-08-11-friday","title":"2023-08-11 Friday","text":"<ul> <li>Review [i18n] Language switcher for anon users</li> <li>Continue Discussion about active cell height design and regression</li> <li>Read and mull over Brent\u2019s \u201cinstall things\u201d email. I have a lot to say about this, and I\u2019ve already written a lot, but I\u2019m not really sure how to respond in the thread, given how entrenched in our current approach the backend team already seems to be.</li> <li>Open ticket Turn off the Stale Issues Bot</li> <li>Identify high-priority issues for the cycle</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-08-10-thursday","title":"2023-08-10 Thursday","text":"<ul> <li>Team meeting</li> <li>Review [i18n] Save preferred_language for auth user in db</li> <li>Write a response to Brent\u2019s \u201cShould we install things on the DB\u201d notes (not sent yet, since Brent hasn\u2019t begun the email thread).</li> <li>Poke my head into some of the SQL work going on the backend to take a look at it, as it relates to Brent\u2019s \u201cShould we install things on the DB\u201d thoughts</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-08-09-wednesday","title":"2023-08-09 Wednesday","text":"<ul> <li>Team meeting</li> <li>Review [i18n] RichText component, adding some commits</li> <li>Open ticket Flatten BaseTranslation object</li> <li>Partially review [i18n] Export &amp; import translations</li> <li>Review [i18n] Load \u201cen\u201d translations parallely</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-08-08-tuesday","title":"2023-08-08 Tuesday","text":"<p>(Partial day due to sick kid)</p> <ul> <li>Continue troubleshooting Docker issue</li> <li>Review Shared queries - Auth handling for query requests, frontend consumer view, API tests</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-08-07-monday","title":"2023-08-07 Monday","text":"<ul> <li>Call with Dom re troubleshooting API weirdness</li> <li>Continue troubleshooting issues with weird errors. Try unsuccessfully to wipe out all my Docker state</li> <li>1/1 with Kriti</li> <li>Bring optional inference PR out of draft state</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-08-04-friday","title":"2023-08-04 Friday","text":"<ul> <li>Team event</li> <li>Some work on optional inference</li> <li>Some smaller discussions</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-08-03-thursday","title":"2023-08-03 Thursday","text":"<ul> <li>Some thinking about \u201cniche\u201d conversations and email thread</li> <li>Call with Ghislaine about use cases</li> <li>Some discussion about how to prioritize front end work this cycle</li> <li>Resolve tricky git conflicts in my optional inference PR due to i18n work</li> <li>Some work on optional inference</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-08-02-wednesday","title":"2023-08-02 Wednesday","text":"<p>(Another short day)</p> <ul> <li>Some work on optional inference</li> <li>Team meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-08-01-tuesday","title":"2023-08-01 Tuesday","text":"<p>(Only able to work a couple hr due to failed kid nap)</p> <ul> <li>Some work on optional inference</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-07-31-monday","title":"2023-07-31 Monday","text":"<p>(Half day)</p> <ul> <li>Discuss front end issue with installing packages</li> <li>Review [i18n] Install typesafe-i18n &amp; translates one component and email dev list about package issue</li> <li>Some work on optional inference</li> <li>Some smaller discussions</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-07-30-sunday","title":"2023-07-30 Sunday","text":"<p>(Some work during kids nap)</p> <ul> <li>Matrix discussion with user about feature requests</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-07-28-friday","title":"2023-07-28 Friday","text":"<p>(half day)</p> <ul> <li>Continue email discussion about user-reported tickets</li> <li>Help troubleshoot Type suggestions broken</li> <li>Send frontend fixes weekly project update email</li> <li>Continue troubleshooting docker/npm problem</li> <li>Some progress continuing to review [i18n] Install typesafe-i18n &amp; translates one component</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-07-27-thursday","title":"2023-07-27 Thursday","text":"<ul> <li>Open ticket Type suggestions broken</li> <li>Spend some time partially reviewing [i18n] Install typesafe-i18n &amp; translates one component</li> <li>Open email discussion about Criteria for closing use-reported tickets</li> <li>Resolve merge conflicts in Refactor CellSelection data structure and store</li> <li>Push some more commits to my optional inference PR</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-07-26-wednesday","title":"2023-07-26 Wednesday","text":"<ul> <li>Continue work on optional inference</li> <li>Team meeting</li> <li>Some smaller discussions</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-07-25-tuesday","title":"2023-07-25 Tuesday","text":"<ul> <li>Chat about next steps for Rajat\u2019s i18n PR.</li> <li>Review Pavish\u2019s Shareable links frontend PR</li> <li>Push some more commits to my optional inference PR</li> <li>Read and respond to product strategy documents in preparation for Wednesday\u2019s meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-07-24-monday","title":"2023-07-24 Monday","text":"<ul> <li>Open ticket: Discussion about active cell height design and regression</li> <li>Review Use Truncate component in Record Selector table cells, pushing some additional commits and merging</li> <li>Begin discussion about i18n project workflow</li> <li>Open PR to Copy formatted cell values to clipboard instead of raw values</li> <li>A small amount of work on optional inference</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-07-21-friday","title":"2023-07-21 Friday","text":"<ul> <li>Respond to Ghislaine\u2019s ticket Change in Behaviour of Sorting, Filtering, Grouping and Copy-Paste for Linked Records<ul> <li>Create ticket: Copying FK cells should copy the record summary instead of the PK value</li> <li>Create ticket: Behavior when sorting FK columns may be confusing to users</li> </ul> </li> <li>Send weekly project update emails for frontend fixes project and my work within the backend fixes project</li> <li>Team meeting</li> <li>Continued work on optional inference, pushing some more commits to my draft PR</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-07-20-thursday","title":"2023-07-20 Thursday","text":"<ul> <li>Meet with Brent and Aritra about summarization functions</li> <li>Chat about wiki sync problems</li> <li>Create PR with 1 hour quick stab at migration to mkdocs</li> <li>Create issue Migrate wiki to MkDocs</li> <li>Continue working on Make column type inference optional</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-07-19-wednesday","title":"2023-07-19 Wednesday","text":"<ul> <li>Team meeting</li> <li>Matrix chat with Kriti about some product design process stuff</li> <li>Help triage Support for column descriptions/comments</li> <li>Create ticket Help users understand the connection between descriptions and PostgreSQL comments</li> <li>Several other smaller discussions</li> <li>Push more commits to my draft CellSelection PR, beginning to integrate new CellSelection code into TabularData class</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-07-18-tuesday","title":"2023-07-18 Tuesday","text":"<ul> <li>Chat with Rajat about cell selection PR</li> <li>Help answer questions for community contributor working on Use Truncate component in Record Selector table cells</li> <li>Push more commits to my draft CellSelection PR, filling in logic within the scaffolding</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-07-17-monday","title":"2023-07-17 Monday","text":"<ul> <li>Open draft PR to Make column type inference optional and begin a discussion soliciting feedback from others</li> <li>Open ticket Gracefully recover from failed type inference during import</li> <li>Discuss Refactor CellSelection data structure and store with Pavish</li> <li>Address review feedback in Clean up import docs and merge</li> <li>Review Scroll sheet all the way down when clicking the New Record button, adding another commit and merging</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-07-14-friday","title":"2023-07-14 Friday","text":"<ul> <li>Send project update email</li> <li>Review Date Input closes now on tab</li> <li>Call with Dom to discuss type inference issues and brainstorm solutions</li> <li>Open PR with Small clean up to import help text code</li> <li>Open PR to Clean up import docs</li> <li>Some progress to Make column type inference optional</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-07-13-thursday","title":"2023-07-13 Thursday","text":"<ul> <li>GSoC project meeting with Aritra</li> <li>Continued work on cell selection refactor</li> <li>Add some more content to my \u201cQuerydown for Mathesar devs\u201d Gist, explaining why I think \u201cmandatory aggregation\u201d is important, with an example using the Data Explorer</li> <li>Minor updates to frontend fixes project description</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-07-12-wednesday","title":"2023-07-12 Wednesday","text":"<ul> <li>Open draft PR with scaffolding to Refactor CellSelection data structure and store, and write a summary requesting Pavish and Rajat review the approach.</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-07-11-tuesday","title":"2023-07-11 Tuesday","text":"<ul> <li>Re-review Updated frontend to send a single bulk delete request instead of one request for each record</li> <li>Re-review Added margin between breadcrumb selector and bottom of the veiwport</li> <li>Start discussion about graceful fallback behavior for all unsupported Postgres data types</li> <li>Review Varsha\u2019s Sample schema file for API Documentation</li> <li>Installation planning meeting</li> <li>Some progress writing code for SheetSelection refactor</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-07-10-monday","title":"2023-07-10 Monday","text":"<ul> <li>Mark Usability Improvements project as \u201ccut short\u201d so that it can be closed</li> <li>Add 2023-07 frontend fixes project page</li> <li>Respond to comment on Date input should close date picker when losing focus via Tab or Shift+Tab, posting clearer steps to reproduce.</li> <li>Review Added margin between breadcrumb selector and bottom of the veiwport</li> <li>Open ticket Time cell not saved after pressing Tab key</li> <li>Open ticket Confusing timezone issue when editing Time cells</li> <li>Review Add Peak Time aggregation function</li> <li>Review Add Peak Day of Week aggregation function</li> <li>Review Add Peak Month aggregation function</li> <li>Review Updated frontend to send a single bulk delete request instead of one request for each record</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-07-07-friday","title":"2023-07-07 Friday","text":"<ul> <li>Team event</li> <li>Catch up with some email discussions from the past week</li> <li>Re-review Publicly Sharable Links spec</li> <li>Begin mapping out some thoughts for the SheetSelection refactor RFC</li> </ul>"},{"location":"archive/team/workflow/worklogs/sean/#2023-07-06-thursday","title":"2023-07-06 Thursday","text":"<ul> <li>Many meetings:<ul> <li>Front end team meeting</li> <li>Core team meeting</li> <li>List data types meeting</li> <li>Installation planning meeting</li> <li>1/1 with Kriti</li> </ul> </li> <li>Some work organizing info for upcoming project</li> <li>Some work planning Friday\u2019s team event</li> <li>Review/merge small community dev docs pr Fix typo error in DEVELOPER_GUIDE.md</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/","title":"Dom\u2019s work log","text":""},{"location":"archive/team/workflow/worklogs/archive/dom/#active","title":"Active","text":"<ul> <li>Create and prioritize issue for writing tests for db creation/update/removal via API</li> <li>Discovered that there are no tests for this when trying to reproduce #3230</li> <li>Associated code is messy, fix it up as well</li> <li>Make sure #3230 (db reflection bug) is not reproducible anymore</li> <li>See #3245 (db bug fixes) reviewed and merged</li> <li>Open some good first issues</li> <li>Got a few ideas</li> <li>Do #2844 (api for bulk upserting of records)</li> <li>on pause; &gt;75% done, but seems low priority<ul> <li>frontend aspect can\u2019t fit into 0.1.4</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#backlog","title":"Backlog","text":"<ul> <li>Consider automating finding 404 in our wiki</li> <li>Do #3076 (automate deploying internal mathesar)</li> <li>Process selected TODO comments into issues #2181</li> <li>Consider adding a make-like tool to main repo for common tasks</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-10-23","title":"2023-10-23","text":"<ul> <li>Sync with Brent</li> <li>Troubleshoot CI failing for #3245</li> <li>Found the (seemingly) last bug that kept tests from passing in CI</li> <li>Attempt to reproduce #3230 (db reflection bug) with #3245 merged</li> <li>Can\u2019t, but I found the bug elusive to reproduce before</li> <li>Asked Rajat to try as well</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-10-20","title":"2023-10-20","text":"<ul> <li>Troubleshoot CI failing for #3245</li> <li>Found one of the problems, but ran into another</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-10-19","title":"2023-10-19","text":"<ul> <li>Troubleshoot CI failing for #3245</li> <li>Discuss using Zulip</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-10-18","title":"2023-10-18","text":"<ul> <li>Present GSoC proposal phase notes to team</li> <li>Finish preparing GSoC proposal phase note page in wiki</li> <li>Respond in Sean\u2019s product vision follow-up email thread</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-10-17","title":"2023-10-17","text":"<ul> <li>Troubleshoot CI failing for #3245</li> <li>Respond in UX question about DB connections email thread</li> <li>Process notes from GSoC summit on proposal phase into a document</li> <li>https://github.com/centerofci/mathesar-wiki/pull/106</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-10-16","title":"2023-10-16","text":"<ul> <li>Traveling from Sunnyvale to Dominican Republic</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-10-13","title":"2023-10-13","text":"<ul> <li>Submit PR related to #3230 (db reflection bug)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-10-12","title":"2023-10-12","text":"<ul> <li>Traveling to Sunnyvale for GSoC summit</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-10-11","title":"2023-10-11","text":"<ul> <li>Traveling to Sunnyvale for GSoC summit</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-10-10","title":"2023-10-10","text":"<ul> <li>Traveling to Sunnyvale for GSoC summit</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-10-09","title":"2023-10-09","text":"<ul> <li>Read GSoC summit updates</li> <li>Respond in CRM intro email thread</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-10-06","title":"2023-10-06","text":"<ul> <li>Respond in cycle 0.1.4 retrospective email thread</li> <li>Worked on #3230</li> <li>Continued working through the connection leak<ul> <li>Significant progress, but there\u2019s still a major leak somewhere</li> <li>Can\u2019t yet merge</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-10-05","title":"2023-10-05","text":"<ul> <li>Worked on #3230</li> <li>Changes to reflection caused the connection leak bug to creep up again<ul> <li>Have to fix that in order to merge</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-10-05_1","title":"2023-10-05","text":"<ul> <li>Conversation in frontend channel</li> <li>Team sync</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-10-04","title":"2023-10-04","text":"<p>Had a very hard time being productive, effectively took most of day off.</p> <ul> <li>Sync with Sean</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-10-03","title":"2023-10-03","text":"<ul> <li>Started working on #3230 (db reflection bug)</li> <li>Respond in #3223 (Rajat\u2019s db connection pr)</li> <li>Review #3201 and merge</li> <li>Review #3200</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-10-02","title":"2023-10-02","text":"<ul> <li>Respond in rsqla1 retrospective</li> <li>Sync with Brent</li> <li>Respond in ux design process for importing excel/json email thread</li> <li>See Anshumna\u2019s final evaluation performed</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-09-29","title":"2023-09-29","text":"<p>Away on sick leave.</p>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-09-28","title":"2023-09-28","text":"<p>Away on sick leave.</p>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-09-27","title":"2023-09-27","text":"<p>Away on sick leave.</p>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-09-26","title":"2023-09-26","text":"<ul> <li>Last sync with Anshuman</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-09-25","title":"2023-09-25","text":"<ul> <li>Do Supabase integration tests #3141</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-09-22","title":"2023-09-22","text":"<ul> <li>Submitted draft PR for Paste API</li> <li>Fix GSoC summit travel arrangements, broken due to a cancellation</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-09-21","title":"2023-09-21","text":"<p>Feeling burnt out, trying to get work in, but starting late and energy levels are low.</p> <ul> <li>Respond to Anshuman in group chat</li> </ul> <p>Ended up working mostly on my dev setup and other minimally-productive things that were easy to focus on.</p>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-09-20","title":"2023-09-20","text":"<ul> <li>Respond to Anish in Matrix</li> <li>Respond in GSoC group chat</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-09-19","title":"2023-09-19","text":"<ul> <li>Sync with Anshuman</li> <li>Sync with Anish</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-09-18","title":"2023-09-18","text":"<ul> <li>See #3186 reviewed and merged</li> <li>Sync with Brent</li> <li>Sync with Sean</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#complete","title":"Complete","text":""},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-09-16-saturday","title":"2023-09-16 (Saturday)","text":"<p>Resumed work.</p>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-09-15","title":"2023-09-15","text":"<p>Spent the day getting a VPS and setting it up for work; ended up being more work than I expected; important part of my configs didn\u2019t survive the death of my previous dev box; but, by the end of the day I have a working development environment.</p> <p>Decided that I\u2019ll make this Saturday (09-16) a workday to make up for some of the lost time.</p>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-09-14","title":"2023-09-14","text":"<p>Had technical difficulties with my development machine today: I bricked my motherboard during a component upgrade; was not able to work; spent the day troubleshooting my hardware and concluded that I cannot repair it within a practical timeframe: will look for alternatives;</p>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-09-13","title":"2023-09-13","text":"<ul> <li>Make requested changes in #3186 (support for column comments in backend)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-09-12","title":"2023-09-12","text":"<p>Had technical difficulties with the internet today, cut workday short.</p> <ul> <li>Respond in rsqla1 retrospective email thread</li> <li>hard deadline is Sept 15th</li> <li>but I said I\u2019ll do it Sept 12th (Tuesday)<ul> <li>so we can do more rounds of conversation</li> </ul> </li> <li>Sync with Anshuman</li> <li>Did final RSVP for GSoC summit</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-09-11","title":"2023-09-11","text":"<ul> <li>Sync with Brent</li> <li>Post Monday\u2019s weekly project update</li> <li>Review #3200 (contributor\u2019s pr)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-09-08","title":"2023-09-08","text":"<p>I\u2019ve been taking a long time to get into our SQL code; the learning curve is somewhat steep, I find. I do feel like I\u2019m making good progress though.</p> <ul> <li>Review and merge #3195 (anshuman\u2019s pr)</li> <li>Finish making requested changes to #3186 (support for column comments in backend)</li> <li>Sync with Brent</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-09-07","title":"2023-09-07","text":"<ul> <li>Make most of requested changes to #3186 (support for column comments in backend)</li> <li>Respond in #3195 (anshuman\u2019s pr)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-09-06","title":"2023-09-06","text":"<ul> <li>Start #2844 (api for bulk upserting of records)</li> <li>Team sync</li> <li>Catch up on emails</li> <li>Sync with Anshuman</li> <li>Review #3195 (anshuman\u2019s pr)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-","title":"2023-??-??","text":"<p>Unavailable due to family reasons</p>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-08-29","title":"2023-08-29","text":"<p>Largely unavailable due to family trouble</p> <ul> <li>Setup a bi-weekly sync with Sean until the end of cycle</li> <li>Cancelled sync with Anshuman</li> <li>Started drafting a developer guide for working with our Postgres library</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-08-28","title":"2023-08-28","text":"<ul> <li>Sync with Brent</li> <li>Review and merge #3155 (anshuman\u2019s pr)</li> <li>Add support for column comments in backend in #3186</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-08-24","title":"2023-08-24","text":"<ul> <li>Spent all day debugging support for column comments</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-08-24_1","title":"2023-08-24","text":"<ul> <li>See #3140 (test third party table with long identifiers) reviewed and merged</li> <li>See #3129 (fix db list in demo) reviewed and merged</li> <li>Respond in release email thread</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-08-23","title":"2023-08-23","text":"<ul> <li>Review and merge #3156 (brent\u2019s test bug workaround pr)</li> <li>Respond in installation email thread</li> <li>Respond in appetite email thread</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-08-22","title":"2023-08-22","text":"<ul> <li>Sync with Anshuman</li> <li>Respond in stale bot issue thread</li> <li>Respond in niche research thread</li> <li>Respond in should we install on user db email thread</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-08-21","title":"2023-08-21","text":"<ul> <li>Start work on backend fixes</li> <li>Respond in installation email thread</li> <li>Respond in xy problem email thread</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-08-18","title":"2023-08-18","text":"<ul> <li>Published worklog</li> <li>Prepare for team meeting</li> <li>Respond in criteria for closing user issues email thread</li> <li>Update backend fixes project with outcome</li> <li>Read the newly posted and newly updated project documents</li> <li>Respond in investigate interop with preexisting dbs email thread</li> <li>Respond in appetite email thread</li> <li>Respond in release email thread</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-08-17","title":"2023-08-17","text":"<ul> <li>Make reservations for the GSoC mentor summit</li> <li>Catch up on email</li> <li>Respond in release email thread</li> <li>Respond in xy problem email thread</li> <li>Respond in package version management email thread</li> <li>Respond in should we install on user db email thread</li> <li>Respond in summarizations for json email thread</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-08-16","title":"2023-08-16","text":"<ul> <li>Make progress in cleaning up a backend issues created during last few months</li> <li>Prioritize tasks for backend fixes of next cycle #3144</li> <li>Figure out when and who will do Supabase research #3144</li> <li>Sync with Sean on prioritization of issues</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-08-14","title":"2023-08-14","text":"<ul> <li>Respond in should we install on user db email thread</li> <li>Respond in todo list for cooldown email thread</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-08-11","title":"2023-08-11","text":"<p>Home life interfered, had to push most of today\u2019s work to Monday.</p> <ul> <li>Create issue #3141 (investigate supabase integration)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-08-10","title":"2023-08-10","text":"<ul> <li>Sync with Sean and Kriti over backlog prioritization</li> <li>Respond in Criteria for closing user-reported tickets email thread</li> <li>Team sync</li> <li>Submit PR with test case for long identifiers in preexisting database #3140</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-08-09","title":"2023-08-09","text":"<ul> <li>Review #3133 (pavish\u2019s pr)</li> <li>Review #3127 (pavish\u2019s pr)</li> <li>Attend weekly meeting</li> <li>Prepare for weekly meeting</li> <li>Reread last Wednesday\u2019s weekly meeting notes</li> <li>Sync with Brent</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-08-08","title":"2023-08-08","text":"<ul> <li>Report #3135 (column endpoint is slow when columns are many)</li> <li>Review #3050 (sean\u2019s column inference pr)</li> <li>Sync with Anshuman</li> <li>See #3083 (anshuman\u2019s excel tests pr) reviewed</li> <li>Respond in backend fixes weekly update email thread</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-08-07","title":"2023-08-07","text":"<ul> <li>Post weekly project update</li> <li>Got a database dump from Sean to see if I can reproduce</li> <li>Sync with Sean about imports and weird HTTP/reflection problems he\u2019s facing</li> <li>Push changes to #3113 to fix connection leak</li> <li>Organize keeping more detailed meeting notes for Anshuman\u2019s project</li> <li>Push changes to #3113 to make it clearer</li> <li>Sync with Pavish over #3113</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-08-04","title":"2023-08-04","text":"<ul> <li>Prepare/organize Friday\u2019s core team event</li> <li>Finish #3129 (fix db list in demo mode)</li> <li>Fix demo README.md instructions to include <code>python manage.py setup_demo_template_db</code></li> <li>Update #3128 with meeting notes</li> <li>Review #3113 (pavish\u2019s pr)</li> <li>Sync with Brent over #3128 (allow whitelisted dynamic defaults)</li> <li>Notify developer email list of breaking changes in dev db container</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-08-03","title":"2023-08-03","text":"<ul> <li>Review #3113 (pavish\u2019s pr)</li> <li>Pushed draft pr #3129 (fix db list in demo mode)</li> <li>Review and merge #3059 (anshuman\u2019s pr)</li> <li>Create and update #3128 (allow whitelisted dynamic defaults)</li> <li>Respond in the release email thread</li> <li>Respond in Varsha\u2019s API endpoint email thread</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-08-02","title":"2023-08-02","text":"<ul> <li>Sync with Anshuman</li> <li>Review #3059 (anshuman\u2019s pr)</li> <li>Read conversation about fdws in backend channel</li> <li>Read conversation with plan2 in general channel</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-07-27","title":"2023-07-27","text":"<ul> <li>Review #3107 (brent\u2019s PR)</li> <li>Made part of reservations for the GSoC summit</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-07-27_1","title":"2023-07-27","text":"<ul> <li>Sync with Mukesh</li> <li>Notify of my break this week starting one day later than planned (and ending as planned)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-07-26","title":"2023-07-26","text":"<ul> <li>Sync with Brent over #3097 (brent\u2019s pr)</li> <li>Respond in #3078 (dynamic defaults via function lists)</li> <li>Update #3095 (improve support for unknown types) based on Brent\u2019s comment</li> <li>Prepare for team meeting</li> <li>Do Anshuman\u2019s midterm evaluation</li> <li>Finish reviewing #3097 (brent\u2019s pr)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-07-25","title":"2023-07-25","text":"<ul> <li>Review around half of #3097 (brent\u2019s pr)</li> <li>Review #3092 (pavish\u2019s backend pr)</li> <li>Created #3095 (improve support for unknown types)</li> <li>Update #3007 (support for point type)</li> <li>Update #2959 (support for citext type)</li> <li>Close as fixed #2709 (unknown types breaking Mathesar bug report)</li> <li>See #3040 (rudimentary support for unknown types) reviewed and merged</li> <li>Respond in #3040</li> <li>See #3025 reviewed and merged</li> <li>Respond in Varsha\u2019s API endpoint uid email thread</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-07-24","title":"2023-07-24","text":"<ul> <li>Do Friday\u2019s project update</li> <li>Respond in #3083 (anshuman\u2019s excel tests pr)</li> <li>Review #3059 (anshuman\u2019s excel import pr)</li> <li>Respond in #2751 (update readme with troubleshooting instructions)</li> <li>See #3029 merged</li> <li>Read projects\u2019 friday updates</li> <li>Respond in Varsha\u2019s API endpoint uid email thread</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-07-21","title":"2023-07-21","text":"<ul> <li>On sick leave</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-07-20","title":"2023-07-20","text":"<p>Feeling under the weather, having trouble focusing</p> <ul> <li>Create #3078 (dynamic defaults via function lists)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-07-19","title":"2023-07-19","text":"<ul> <li>Read weekly meeting agenda</li> <li>Review #3029 (gunicorn user instructions PR)</li> <li>Report adding unique constraint failing on point types #3067</li> <li>Report being able to sort by unsortable types #3066</li> <li>Respond in #3040</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-07-18","title":"2023-07-18","text":"<ul> <li>Do #3024 (support for unknown types) in #3040</li> <li>Add email thread links to backend fixes project wiki page</li> <li>Respond in #3050 (make column type inference optional)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-07-17","title":"2023-07-17","text":"<ul> <li>Worked on #3024 all day</li> <li>Review #3042</li> <li>Make sure GSoC\u2019s tax form is filled out</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-07-14","title":"2023-07-14","text":"<ul> <li>Offload #3039 (Anshuman\u2019s max_level PR) to Anish</li> <li>Post friday\u2019s backend fixes project update</li> <li>Handover a frontend bandaid-workaround for #2995 (fix big csv imports timing out) to Sean</li> <li>He said he\u2019ll create an issue for it</li> <li>He also said he\u2019ll start a conversation about UX work for a more wholesome solution to #2995</li> <li>Sync with Sean about #2995 (fix big csv imports timing out)</li> <li>Start conversation with Sam and Kriti about the GSoC tax form whose deadline is tomorrow</li> <li>Put all backend fixes project tickets in 0.1.3 milestone</li> <li>Respond in 2023-07 installation improvements project email thread</li> <li>Review projects</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-07-13","title":"2023-07-13","text":"<ul> <li>Seek advice on matrix backend channel about #3024 (support for unknown types)</li> <li>Message link</li> <li>Ask Sean to take up #2346, which is a mostly-frontend fix for #2995 (fix big csv imports timing out)</li> <li>Review and merge #3008</li> <li>Tidied up comments in #2346</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-07-12","title":"2023-07-12","text":"<ul> <li>Update backend fixes project</li> <li>Update backend fixes project to say that #3024 is an alternative approach to #2959 and #3007</li> <li>Investigate #3024 (graceful handling of unsupported types)</li> <li>Reproduce #2709 (unknown types breaking Mathesar bug report)</li> <li>Respond in querydown email thread</li> <li>Respond in #3024 (graceful handling of unsupported types)</li> <li>Respond in #2161</li> <li>Update backend fixes project</li> <li>Respond in backend fixes email thread</li> <li>Respond in #2995 (type inference timeout bug report)</li> <li>Make sure Aritra\u2019s midterm evaluation is submitted in time</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-07-11","title":"2023-07-11","text":"<ul> <li>Sync with Anshuman</li> <li>Do #2245 (multi-column unique and pk constraints) in #3025</li> <li>Make metaticket for backend fixes project #3022</li> <li>Start work on backend fixes</li> <li>Review and merge #3016</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-07-10","title":"2023-07-10","text":"<ul> <li>Triage #3009</li> <li>Review #3008</li> <li>Respond to Anshuman\u2019s DM</li> <li>Finish backend fixes project\u2019s timeline</li> <li>Review #3016</li> <li>Try doing querydown in lispy syntax for discussion with Sean</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-07-07","title":"2023-07-07","text":"<ul> <li>Write up backend fixes project</li> <li>Review and merge #2993 (remove lazydict)</li> <li>Split reviewing Anshuman\u2019s PRs with Anish</li> <li>Open #3007</li> <li>Respond in backend+frontend fixes email thread</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/dom/#2023-07-06","title":"2023-07-06","text":"<ul> <li>Filter unassigned+backend+frontend issues to what we might do</li> <li>Review and merge #2968</li> <li>Troubleshoot a bug with Anshuman</li> <li>Review and merge #2977</li> <li>Review, make changes and merge #2992</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/","title":"Mukesh work log","text":""},{"location":"archive/team/workflow/worklogs/archive/mukesh/#actively-working-on","title":"Actively working on","text":"<ul> <li>Review and merge Github action for uploading static assets to release</li> <li>Reply to DB connections work email</li> <li>Attend Users &amp; Permission meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#backlog","title":"Backlog","text":"<ul> <li>Add a compatibility table for comparing various personas with our features</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-10-17","title":"2023-10-17","text":"<ul> <li>Check in with Varsha</li> <li>Sync with Brent and Sean over the Database connection string UX</li> <li>Attend the Users &amp; Permission discussion</li> <li>Reviewed Fixed incomplete error responses in OpenAPI documentation for /datafiles/ endpoint</li> <li>Reviewed Implemented extend schema decorator to document the error response for /databases/ endpoint</li> <li>Partially review Github action for uploading static assets to release</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-10-16","title":"2023-10-16","text":"<ul> <li>Did some minor improvements to the Installation Docs</li> <li>Added tooltip for previewing Glossary items in the installation docs</li> <li>Send an email to OpenSuse requesting access to rename the home directory to Mathesar, which would enable us to use the <code>https://build.opensuse.org/mathesar/Debian11</code> as the apt repository URL instead of <code>https://build.opensuse.org/:mathesar/Debian11</code></li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-10-13","title":"2023-10-13","text":"<ul> <li>Check in with Brent</li> <li>Attend community event</li> <li>Compose Reply to the Database connection string UX email</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-10-12","title":"2023-10-12","text":"<ul> <li>Check in with Sean on the Database connection string UX and few documentation related issues</li> <li>Sync with Kriti</li> <li>Fixed all the todo items in debian docs</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-10-11","title":"2023-10-11","text":"<ul> <li>Send out the email for Database connection string UX</li> <li>Added content to the Mathesar docs homepage</li> <li>Added content to uninstall section based on the discussion with Sean</li> <li>Looked at the PR review backlogs to make sure if PR review went under the radar</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-10-10","title":"2023-10-10","text":"<ul> <li>Write email for the Database connection string</li> <li>Took partial day off as I was not feeling well</li> <li>Check in with sean</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-10-09","title":"2023-10-09","text":"<ul> <li>Sync with Rajat to discuss the documentation content needed for \u201cDatabase connection UI\u201d</li> <li>Send message to Sean to ask for help with organising Mathesar concepts like Mathesar schema</li> <li>Compose email for the Database connection string UX</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-10-06","title":"2023-10-06","text":"<ul> <li>Sync with Brent on various backend architecture related discussion</li> <li>Sync meeting to discuss UX for Database connection string</li> <li>Sync with Sean for organizing the installation documentation</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-10-05","title":"2023-10-05","text":"<p>Had a partial day off due to sickness - Weekly meeting - Make some minor fixes to the installation documentation pull requests - Check in Pavish</p>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-10-04","title":"2023-10-04","text":"<p>Had a day off due to sickness</p>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-10-03","title":"2023-10-03","text":"<ul> <li>Check-in with Sean</li> <li>Add install.py fixes to the \u201cBuild from scratch\u201d docs deprecation PR</li> <li>Build Debian package based on Rajat\u2019s PR</li> <li>Merge Anish Database connection API PR</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-10-02","title":"2023-10-02","text":"<ul> <li>Send email on choosing the Debian build platform </li> <li>Reply to the \u201cBest installation method for helping people install Mathesar\u201d email</li> <li>Fix the Build from source documentation</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-09-29","title":"2023-09-29","text":"<ul> <li>Write email on architecture incompatibility with Debian build platforms</li> <li>Reply to the install.py issue</li> <li>Took the day off as I wasn\u2019t well</li> <li>Partially attended the core team event</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-09-28","title":"2023-09-28","text":"<ul> <li>Finally fixed the issues with building on a Debian build platform</li> <li>Started writing email summarising Debian build platform options.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-09-27","title":"2023-09-27","text":"<ul> <li>Create draft PR for Debian install docs</li> <li>Reply to install.py issue</li> <li>Weekly meeting</li> <li>Fixed some of the issues with building the Debian package on Open build service</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-09-26","title":"2023-09-26","text":"<ul> <li>Hit a lot of roadblocks with building Debian package on a build service</li> <li>Check in with Sean</li> <li>Decided to build the debian package manually</li> <li>Create PR to revert back the missing database credential env variable</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-09-25","title":"2023-09-25","text":"<ul> <li>Try building the debian package on a build platform</li> <li>Coordinate with Anish and Rajat on the Database credentials work</li> <li>Read through the emails</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-09-22","title":"2023-09-22","text":"<ul> <li>Sync with Brent</li> <li>Finish documenting deprecation information to the docker compose and build from scratch</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-09-21","title":"2023-09-21","text":"<ul> <li>Fix issues with the Postgres docker image PR</li> <li>Async discussion with Anish to discuss Debian installation docs</li> <li>Progress on deprecating docker compose and build from scratch docs</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-09-20","title":"2023-09-20","text":"<ul> <li>Use the Postgres docker image in Github CI test suite</li> <li>Async discussion with Anish to help with fixing the SQLite migration issue</li> <li>Merge SQLite support for internal database </li> <li>Merge Debian package script</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-09-19","title":"2023-09-19","text":"<ul> <li>Create PR to Update Docker installation instructions based on the updated installation plan </li> <li>Check in with Anish on the SQlite PR tests  </li> <li>Check in with Rajat</li> <li>Check in with Sean</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-09-18","title":"2023-09-18","text":"<ul> <li>Review Postgres basic compatibility versions 13, 14, 15 and merge</li> <li>Test out the Postgres Docker image PR for compatibility issues</li> <li>Progress on documentation for Docker images</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-09-15","title":"2023-09-15","text":"<ul> <li>Sync with Brent</li> <li>Organize the community event</li> <li>Progress on documentation for Docker images</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-09-14","title":"2023-09-14","text":"<ul> <li>Write up the glossary section</li> <li>Final review and approve backend credentials PR</li> <li>Check on the build platforms used for building debian package</li> <li>Async check in with Brent</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-09-13","title":"2023-09-13","text":"<ul> <li>Review Anish backend credentials API PR </li> <li>Sync with Pavish and Ghislaine</li> <li>Sync with Anish on the backend credentials PR</li> <li>Async check in Rajat</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-09-12","title":"2023-09-12","text":"<ul> <li>Check in with Sean</li> <li>Reply to the Design spec feedback</li> <li>Review Github actions for generating static assets</li> <li>Made some progress on updating the docker documentation</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-09-11","title":"2023-09-11","text":"<ul> <li>Write up Installation project update</li> <li>Check in with Installation project helpers</li> <li>Start writing documentation</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-09-11_1","title":"2023-09-11","text":"<ul> <li>Write up Installation project update</li> <li>Check in with Installation project helpers</li> <li>Start writing documentation</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-09-08","title":"2023-09-08","text":"<ul> <li>Sync with Brent</li> <li>Open up the Add script for creating debian package for a review</li> <li>Review \u201cDatabase credentials page\u201d design spec</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-09-07","title":"2023-09-07","text":"<ul> <li>Check in with Brent to discuss Postgres 15 compatibility issues, debian package review</li> <li>Check in with Pavish to discuss manifest.json location</li> <li>Review backend PR for adding database credential API</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-09-06","title":"2023-09-06","text":"<ul> <li>Weekly meeting</li> <li>Fix issues with the postgres docker image PR based on the review</li> <li>Final testing and fixes with the debian package PR</li> <li>Assign anish to work on adding support for SQLite as internal database</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-09-05","title":"2023-09-05","text":"<ul> <li>Check in with Varsha</li> <li>Check in with Anish, did a review of github action to generate static files</li> <li>Test out the debian package on various debian distro and fix issues that came up with it</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-09-04","title":"2023-09-04","text":"<ul> <li>Fixed the permission issue with the demo db setup script</li> <li>Async discussion with Anish to check in on the progress</li> <li>Make fixes to the debian package PR</li> <li>Reorganize the work to be done for the installation project as I got sidetracked with the deployment</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-09-01","title":"2023-09-01","text":"<ul> <li>Partial day off due to travel</li> <li>Debugging issues with the demo server</li> <li>Sync with brent</li> <li>Team event</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-08-31","title":"2023-08-31","text":"<ul> <li>Open PR which documents Demo server version upgrade process</li> <li>Day off due to travel</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-08-30","title":"2023-08-30","text":"<ul> <li>Debug problems with the demo server</li> <li>Sync with brent to discuss the problem the problems with the demo server</li> <li>Open PR which contains Demo server fixes</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-08-29","title":"2023-08-29","text":"<ul> <li>Based on the feedback updated Add Postgres to Mathesar docker image and asked for a review</li> <li>Async check in with anish</li> <li>Create a draft PR for Add script for creating debian package</li> <li>Sync with Sean</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-08-29_1","title":"2023-08-29","text":"<ul> <li>Based on the feedback updated Add Postgres to Mathesar docker image and asked for a review</li> <li>Async check in with anish</li> <li>Create a draft PR for Add script for creating debian package</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-08-28","title":"2023-08-28","text":"<ul> <li>Continue work on debian package for Mathesar</li> <li>Took a day off due to migraine</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-08-25","title":"2023-08-25","text":"<ul> <li>Sync with Kriti</li> <li>Work on adding a debian package </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-08-24","title":"2023-08-24","text":"<ul> <li>Created various issues to track the Installation Improvement Project 0.1.4</li> <li>Async discussions with Anish</li> <li>Update the Installation Improvement Project 0.1.4 based on the feedback</li> <li>Async discussion with Varsha</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-08-23","title":"2023-08-23","text":"<ul> <li>Review and merge Add tests for third party table with long identifiers</li> <li>Team meeting</li> <li>Update the Installation Improvement Project 0.1.4</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-08-22","title":"2023-08-22","text":"<ul> <li>Review Niche Research Project Feedback</li> <li>Review Compatibility with the preexisting DB project</li> <li>Reply to XY problem email</li> <li>Tested the Postgres Mathesar docker image</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-08-21","title":"2023-08-21","text":"<ul> <li>Sync with Varsha</li> <li>Moved all pending issues from 0.1.3 milestone to 0.1.4</li> <li>Commented on Export &amp; import translations</li> <li>Reviewed Varsha\u2019s datafiles error schema and tables endpoint PR</li> <li>Reply to feedback for the Installation Improvement email</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-08-18","title":"2023-08-18","text":"<ul> <li>Update the Installation Improvement project based on feedback from Ghislaine and Kriti</li> <li>Sync with Anish</li> <li>Team meeting</li> <li>Community event</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-08-17","title":"2023-08-17","text":"<ul> <li>Write up the Installation Improvement project</li> <li>Sync with Ghislaine</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-08-16","title":"2023-08-16","text":"<ul> <li>Reply to the \u201cInstalling on user db\u201d email</li> <li>Review superuser creation templates update PR</li> <li>Wrote the project for laying the groundwork for installation improvement.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-08-15","title":"2023-08-15","text":"<ul> <li>Review the PR\u2019s opened by Varsha to unblock some of her work</li> <li>Wrote the guidelines for the Installation project spec </li> <li>Split the project into two, one for laying the groundwork and the other for documentation</li> <li>Read through \u201cInstalling on user db email\u201d</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-08-14","title":"2023-08-14","text":"<ul> <li>Sync with Varsha</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-08-11","title":"2023-08-11","text":"<ul> <li>Sync with Brent</li> <li>Set meetings with Ghislaine, Anish and Rajat</li> <li>Fix superuser requirement PR</li> <li>Start writing the Installation project spec</li> <li>Review local settings PR</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-08-10","title":"2023-08-10","text":"<ul> <li>Read through pre-meeting notes, come up with thoughts</li> <li>Team meeting</li> <li>More investigation into the Postgres docker image PR</li> <li>Reply to superuser requirement PR</li> <li>Fix superuser requirement PR</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-08-09","title":"2023-08-09","text":"<ul> <li>Read through pre-meeting notes</li> <li>Team meeting</li> <li>Fix the Postgres docker image PR</li> <li>Review Rajat\u2019s PR</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-08-08","title":"2023-08-08","text":"<ul> <li>Sync with Brent on the PR for adding Postgres to our docker image</li> <li>Fix the Postgres docker image PR</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-08-07","title":"2023-08-07","text":"<ul> <li>Sync with Ghislaine on Postgis use-case</li> <li>Address review feedback</li> <li>Review Rajat\u2019s PR</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-08-04","title":"2023-08-04","text":"<ul> <li>Sync with Brent</li> <li>Team Event</li> <li>Debug issues with the debian package </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-08-03","title":"2023-08-03","text":"<ul> <li>Make requested changes to Add Postgres to Mathesar docker image</li> <li>Review Column splitting PR</li> <li>Add documentation changes to the Superuser create PR </li> <li>Check in with Rajat on the superuser create PR</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-08-03_1","title":"2023-08-03","text":"<ul> <li>Make requested changes to Add Postgres to Mathesar docker image</li> <li>Review Column splitting PR</li> <li>Add documentation changes to the Superuser create PR </li> <li>Check in with Rajat on the superuser create PR</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-08-02","title":"2023-08-02","text":"<ul> <li>Sync with Brent to discuss issues with column moving logic</li> <li>Create PR for Postgres included docker image</li> <li>Reply to the feedback for the Remove db superuser requirement PR</li> <li>Team meeting</li> <li>Review Rajat\u2019s Internalization PR</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-08-01","title":"2023-08-01","text":"<ul> <li>Discussions related to failing test cases due to max db clients error</li> <li>Clean up the mathesar docker image</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-07-31","title":"2023-07-31","text":"<ul> <li>PR for removing superuser requirement</li> <li>Review Rajat\u2019s Internationalization PR</li> <li>Some async discussions</li> <li>Add postgres to mathesar docker image</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-07-28","title":"2023-07-28","text":"<ul> <li>Work on removing DB superuser permissions</li> <li>Update documentation to remove the superuser requirement</li> <li>Sync with brent</li> <li>Attend installation planning meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-07-27","title":"2023-07-27","text":"<ul> <li>Sync with Dominkyas</li> <li>Reply to some async discussions</li> <li>Sync with Kriti</li> <li>Review some of Rajat\u2019s PR</li> <li>Work on removing DB superuser permissions</li> <li>Update documentation to remove the superuser requirement</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-07-26","title":"2023-07-26","text":"<ul> <li>Team Meeting</li> <li>Reply to some async discussions</li> <li>Sync with Pavish</li> <li>Review Shareable links PR</li> <li>Make changes to Installation Documentation Outline and add V3 outline</li> <li>Start working on removing DB superuser permissions</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-07-25","title":"2023-07-25","text":"<ul> <li>Review Support unknown types (backend)</li> <li>Review some of Varsha\u2019s PR</li> <li>Split tasks in the Installation Improvement Project into feature complete and feature incomplete tasks</li> <li>Check with Ghislaine on the design work for superuser create page</li> <li>Open PR for the Django superuser creation page </li> <li>Sync with Kriti</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-07-24","title":"2023-07-24","text":"<ul> <li>Sync with Varsha</li> <li>Reviewed, modified and merged some of Dom\u2019s and Varsha\u2019s PR</li> <li>Read through various resources to come up with ideas for the ideal Installation Documentation draft</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-07-20","title":"2023-07-20","text":"<ul> <li>Review of Varsha\u2019s PR</li> <li>Doing some minor touches to the superuser creation PR</li> <li>Sync with Brent</li> <li>Team event</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-07-19","title":"2023-07-19","text":"<ul> <li>Attend Team meeting</li> <li>Confirm the Installation Improvement 0.1.3 timeline with helpers and reviewers</li> <li>Reply to Pavish feedback on the Installation Improvement project</li> <li>Make changes to the Installation Improvement project page</li> <li>Sync with kriti</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-07-18","title":"2023-07-18","text":"<ul> <li>Contacted helpers for the Installation Improvement 0.1.3 project to get their confirmation</li> <li>Updated the Installation Improvement 0.1.3 project specs and sent out email of the changes made</li> <li>Started working on the backend issues for the super user creation page</li> <li>Integrate local IDE workspace with the workflow logs to make worklog updates easier</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-07-17","title":"2023-07-17","text":"<ul> <li>Write up project for Installation Improvement</li> <li>Sync with varsha</li> <li>Sync with Kriti</li> <li>Created issues for Installation Improvements 0.1.3 project</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-07-14","title":"2023-07-14","text":"<ul> <li>Update the Installation Project proposal </li> <li>Had a sync call with Brent</li> <li>Took a day off </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-07-13","title":"2023-07-13","text":"<ul> <li>Restarted writing the Simplying Installation project details</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-07-12","title":"2023-07-12","text":"<ul> <li>Some async discussion</li> <li>Started writing the project for Simplying Installation</li> <li>Unproductive day due to health issues</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-07-11","title":"2023-07-11","text":"<ul> <li>Started writing email for the potential solution for simplifying Installation. Couldn\u2019t complete before the meeting</li> <li>Attend Installation IV meeting</li> <li>Sync call with Rajat to discuss Internationalization implementation in Django templates.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-07-10","title":"2023-07-10","text":"<ul> <li>Had a day off</li> <li>Sync with varsha</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/mukesh/#2023-07-07","title":"2023-07-07","text":"<ul> <li>Filter out the installation solutions specific for the targeted groups </li> <li>Sync with Brent</li> <li>Core Team event</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/rajat/","title":"Rajat\u2019s work log","text":"<p>TODO</p> <ul> <li>Create an ESLint rule to catch all untranslated strings &amp; fix all the current errors. i18n</li> <li>Review add cell tab in table inspector for showing cell content</li> <li>Wrapping raw strings with translation function in the whole codebase\u2019s PR update.</li> <li>Start an email thread on the dev mailing list for the i18n retrospective (actively writing)</li> <li>Pending i18n Documentations. i18n</li> <li>i18n testing</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/rajat/#2023-10-23","title":"2023-10-23","text":"<ul> <li>Repo-admin work</li> <li>Made some progress on: Create an ESLint rule to catch all untranslated strings &amp; fix all the current errors. i18n</li> <li>Rewriting rules from no-literal-string to be able to run on <code>svelte-eslint-parse</code></li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/rajat/#2023-10-20","title":"2023-10-20","text":"<ul> <li>Repo-admin work</li> <li>Made some progress on: Create an ESLint rule to catch all untranslated strings &amp; fix all the current errors. i18n</li> <li>Rewriting rules from no-literal-string to be able to run on <code>svelte-eslint-parse</code></li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/rajat/#2023-10-19","title":"2023-10-19","text":"<ul> <li>Repo-admin work</li> <li>Made some progress on: Create an ESLint rule to catch all untranslated strings &amp; fix all the current errors. i18n</li> <li>Finally able to run no-raw-text rule from the local</li> <li>Started reading about <code>svelte-eslint-parser</code> to understand how it works and how to make it work with new rules.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/rajat/#2023-10-18","title":"2023-10-18","text":"<ul> <li>Repo-admin work</li> <li>Made some progress on: Create an ESLint rule to catch all untranslated strings &amp; fix all the current errors. i18n</li> <li>Struggling to run no-raw-text rule from the local</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/rajat/#2023-10-17","title":"2023-10-17","text":"<ul> <li>Partially available</li> <li>Repo-admin work</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/rajat/#2023-10-16","title":"2023-10-16","text":"<ul> <li>Out sick</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/rajat/#2023-10-13-running-svelte-plugin-on-the-local","title":"2023-10-13 (Running svelte plugin on the local)","text":"<ul> <li>Repo-admin work</li> <li>Made some progress on: Create an ESLint rule to catch all untranslated strings &amp; fix all the current errors. i18n</li> <li>Trying to run no-raw-text rule from the local so that its easier to make edits and test it.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/rajat/#2023-10-12","title":"2023-10-12","text":"<ul> <li>Repo-admin work</li> <li>Made some progress on: Create an ESLint rule to catch all untranslated strings &amp; fix all the current errors. i18n</li> <li>Finding an existing plugin that does anything close to the requirement.</li> <li>The closest one that I could find - no-literal-string</li> <li>The plan is to extend the existing svelte plugin to accommodate rules from no-literal-string</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/rajat/#2023-10-11","title":"2023-10-11","text":"<ul> <li>Repo-admin work</li> <li>Made some progress on: Create an ESLint rule to catch all untranslated strings &amp; fix all the current errors. i18n</li> <li>Started researching on how to write ESLint plugin</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/rajat/#2023-10-10","title":"2023-10-10","text":"<ul> <li>Repo-admin work</li> <li>Minor fixes in Db connection UI. The PR is approved but blocked on missing doc links.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/rajat/#2023-10-09","title":"2023-10-09","text":"<ul> <li>Repo-admin work</li> <li>Synced with Mukesh regarding missing links in database ui PR.</li> <li>Replied to retro e-mail for the last cycle.</li> <li>Tackled review feedback &amp; made ready for review - [i18n] Load \u201cen\u201d translations parallely</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/rajat/#2023-10-06","title":"2023-10-06","text":"<ul> <li>Worked on review feedback for - [i18n] Load \u201cen\u201d translations parallely</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/rajat/#2023-10-05","title":"2023-10-05","text":"<ul> <li>Tackle Review feedback for Db connection UI &amp; made ready for review again</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/rajat/#2023-10-04","title":"2023-10-04","text":"<ul> <li>Made some progress on: Wrapping raw strings with translation function in the whole codebase\u2019s PR update. This needs some more work due to more development after last changes on this PR.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/rajat/#2023-10-03","title":"2023-10-03","text":"<ul> <li>Made some progress on: Wrapping raw strings with translation function in the whole codebase\u2019s PR update. This needs some more work due to more development after last changes on this PR.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/rajat/#2023-10-02","title":"2023-10-02","text":"<ul> <li>Db connection UI ready for review</li> <li>Repo-admin work</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/rajat/#archive","title":"Archive","text":"<ul> <li>September 2023 work logs</li> <li>August 2023 work logs</li> <li>July 2023 work logs</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/anish/","title":"Anish\u2019s work log archive: 2023-07","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-07/anish/#2023-07-31","title":"2023-07-31","text":"<ul> <li>Caught up on matrix.</li> <li>Started working on adding tests for links &amp; constraints ddl operations</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/anish/#2023-07-28","title":"2023-07-28","text":"<ul> <li>Sync with Brent</li> <li>Sync with Anshuman</li> <li>Add tests for alter schema operations for #3098</li> <li>Remove unnecessary python layer tests for schema related DDL operations</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/anish/#2023-07-27","title":"2023-07-27","text":"<p>Day off</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/anish/#2023-07-26","title":"2023-07-26","text":"<ul> <li>Added tests for dropping with different params for #3098</li> <li>Mathesar weekly meet</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/anish/#2023-07-25","title":"2023-07-25","text":"<ul> <li>Added tests for creating &amp; dropping for SQL tests for schema ddl #3098</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/anish/#2023-07-24","title":"2023-07-24","text":"<ul> <li>Figuring out how to start implementing the tests in the sql layer and which tests should be pulled down from the python layer</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/anish/#2023-07-21","title":"2023-07-21","text":"<p>Day off</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/anish/#2023-07-20","title":"2023-07-20","text":"<ul> <li>Sync with Brent</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/anish/#2023-07-19","title":"2023-07-19","text":"<ul> <li>Mathesar weekly meet</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/anish/#2023-07-18","title":"2023-07-18","text":"<p>Day off</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/anish/#2023-07-17","title":"2023-07-17","text":"<p>Day off</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/anish/#2023-07-14","title":"2023-07-14","text":"<ul> <li>Reviewed Added max_level param for JSON import feature in the backend #3039</li> <li>Sync with Anshuman</li> <li>Testing research</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/anish/#2023-07-13","title":"2023-07-13","text":"<ul> <li>Add tests for #2986</li> <li>Sync with Brent</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/anish/#2023-07-12","title":"2023-07-12","text":"<ul> <li>Refactor #2986 and make it ready for review </li> <li>Async with Brent</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/anish/#2023-07-11","title":"2023-07-11","text":"<ul> <li>Implement many-to-many links function for #2986</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/anish/#2023-07-10","title":"2023-07-10","text":"<ul> <li>Documenting about SQL for links creation #2986</li> <li>Async with Aritra</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/anish/#2023-07-07","title":"2023-07-07","text":"<ul> <li>Sync with Anshuman</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/anish/#2023-07-06","title":"2023-07-06","text":"<ul> <li>Met with Brent for discussing about the code organisation for #2976</li> <li>Refactor Cleaner consolidated logic for adding constraints #2976</li> <li>Help with a bug on matrix</li> <li>Mathesar weekly meet</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/","title":"Brent\u2019s work log archive: 2023-07","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#2023-07-31","title":"2023-07-31","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#bugfixes","title":"Bugfixes","text":"<ul> <li>Made a quick PR New linting rule #3116 to fix an issue arising from an update in <code>flake8</code>.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#pr-reviews","title":"PR Reviews","text":"<ul> <li>SQL tests for schema ddl #3098 (merged)</li> <li>Fix the error when list aggregation on mathesar custom array #3106</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#2023-07-28","title":"2023-07-28","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#meetings","title":"Meetings","text":"<ul> <li>Caught up with Anish</li> <li>1:1 with Mukesh</li> <li>Installation planning meeting V</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#rsqla1-project-work","title":"RSQLA1 project work:","text":"<ul> <li>Got table splitting working, but exposed a bug in how defaults are reflected.</li> <li>Organized next week\u2019s work with Anish</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#user-help","title":"User help","text":"<ul> <li>Submitted PR Remove pglast, use SQL function instead #3107, fixing Does not work on windows #2961</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#2023-07-27","title":"2023-07-27","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#meetings_1","title":"Meetings","text":"<ul> <li>Summarization project meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#summarization-project-work","title":"Summarization project work","text":"<ul> <li>Meeting with Aritra and Sean</li> <li>Helped Aritra sort out weird bug when aggregating custom types to arrays.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#rsqla1-project-work_1","title":"RSQLA1 Project work:","text":"<ul> <li>Started on table splitting functions</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#2023-07-26","title":"2023-07-26","text":"<p>This was a short day; I got trapped in town for awhile.</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#meetings_2","title":"Meetings","text":"<ul> <li>1:1 with Dom</li> <li>Team meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#comms","title":"Comms","text":"<ul> <li>Caught up on email and messaging</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#gh-admin","title":"GH admin:","text":"<ul> <li>commented on and read through relevant issues</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#rsqla1-project-work_2","title":"RSQLA1 project work:","text":"<ul> <li>Discussed PR with Dom.</li> <li>Merged PR: Add DDL functions for altering columns #3097.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#list-project-work","title":"List project work","text":"<ul> <li>Read through Maria\u2019s slides and report; offered feedback</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#2023-07-25","title":"2023-07-25","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#rsqla1-project-work_3","title":"RSQLA1 project work:","text":"<ul> <li>Submitted PR: Add DDL functions for altering columns #3097</li> <li>Caught up with Anish about his progress.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#2023-07-24","title":"2023-07-24","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#github-admin","title":"Github admin","text":"<ul> <li>cleared out GH inbox to make it useful again</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#rsqla1-project-work_4","title":"RSQLA1 project work:","text":"<ul> <li>Discovered and fixed tricky bug in type string builder function.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#pr-reviews_1","title":"PR reviews","text":"<ul> <li>Add Peak Month aggregation function. #3006 (merged)</li> <li>Add SQL files to the pytest workflow #3082 (merged)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#list-project-work_1","title":"List project work","text":"<ul> <li>Read through Maria\u2019s report for the list project, provide feedback</li> <li>Asynced with Maria about report write-up and presentation</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#2023-07-21","title":"2023-07-21","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#meetings_3","title":"Meetings","text":"<ul> <li>1:1 with Mukesh</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#rsqla1-project-work_5","title":"RSQLA1 project work:","text":"<ul> <li>Getting python layer for column alteration DDL organized, tested.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#list-project-work_2","title":"List project work","text":"<ul> <li>Caught up with Maria about report, and her plans for presenting in team meeting next week</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#summarization-work","title":"Summarization work","text":"<ul> <li>Participated in the email thread about preproc functions.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#2023-07-20","title":"2023-07-20","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#meetings_4","title":"Meetings","text":"<ul> <li>1:1 with Anish</li> <li>Summarization project meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#infrastructure","title":"Infrastructure","text":"<ul> <li>Create issue for automating internal.mathesar.org deployment.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#summarization-project","title":"Summarization project","text":"<ul> <li>Meeting about summarizations; will proceed with a couple of list aggregations</li> <li>Discussed how to proceed with Kriti async.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#2023-07-19","title":"2023-07-19","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#meetings_5","title":"Meetings","text":"<ul> <li>Team meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#pr-reviews_2","title":"PR reviews","text":"<ul> <li>Add Peak Month aggregation function. #3006 (requested changes)</li> <li>SQL for links creation #2986</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#rsqla1-project-work_6","title":"RSQLA1 Project work","text":"<ul> <li>Tidying up and documenting column alteration DDL SQL functions</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#infrastructure_1","title":"Infrastructure","text":"<ul> <li>updating internal.mathesar.org to newest <code>develop</code> version.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#user-help_1","title":"User help","text":"<ul> <li>Did a quick look through code using <code>pglast</code> and replied to Does not work on windows #2961</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#2023-07-18","title":"2023-07-18","text":"<p>This day was heads-down coding.</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#rsqla1-project-work_7","title":"RSQLA1 project work:","text":"<ul> <li>Worked on column alteration DDL functions</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#2023-07-17","title":"2023-07-17","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#misc-email","title":"Misc email","text":"<ul> <li>Caught up on developer mailing list</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#meetings_6","title":"Meetings","text":"<ul> <li>1:1 with Dom</li> <li>List project meeting with Maria</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#rsqla1-project-work_8","title":"RSQLA1 project work:","text":"<ul> <li>Sent project update email</li> <li>Worked on column alteration DDL functions</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#list-project-work_3","title":"List project work","text":"<ul> <li>Discussed with Maria how to report to the others how the project turned (is turning) out.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#summarization-project-work_1","title":"Summarization project work","text":"<ul> <li>Caught up on preproc discussion on Matrix channel.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#2023-07-14","title":"2023-07-14","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#meetings_7","title":"Meetings","text":"<ul> <li>1:1 with Mukesh</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#rsqla1-project-work_9","title":"RSQLA1 project work:","text":"<ul> <li>async with Anish about state of SQL for links creation #2986</li> <li>Worked on column alteration DDL functions</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#summarization-project-work_2","title":"Summarization project work","text":"<ul> <li>Set up Aritra to proceed with some preprocessing to get more out of current aggregations.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#2023-07-13","title":"2023-07-13","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#meetings_8","title":"Meetings","text":"<ul> <li>1:1 with Anish</li> <li>Summarization project meeting with Aritra and Sean</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#rsqla1-project-work_10","title":"RSQLA1 project work:","text":"<ul> <li>Followed up with Anish about plan for splitting work moving forward.</li> <li>Update project description</li> <li>Started on Column altering DDL functions</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#summarization-project-work_3","title":"Summarization project work:","text":"<ul> <li>Discuss with Sean and Aritra which summarization functions we want to pursue next.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#2023-07-12","title":"2023-07-12","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#pr-reviews_3","title":"PR Reviews:","text":"<ul> <li>SQL for links creation #2986 (requested changes)</li> <li>Add Peak Day of Week aggregation function. #3004 (commented)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#rsqla1-project-work_11","title":"RSQLA1 project work:","text":"<ul> <li>Reviewed remaining pieces, cross-referenced with RSQLA1: Move DDL Operations to SQL Functions #2737</li> <li>only one minor change was required; it\u2019s already pretty up-to-date</li> <li>Asynced with Anish about how to divide work</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#summarization-project-work_4","title":"Summarization project work","text":"<ul> <li>Completed evaluation for GSoC</li> <li>Discussed compostition and so on w.r.t. summarization in this PR</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#user-help_2","title":"User help:","text":"<ul> <li>Responded to form inquiry in Freshdesk ticket</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#2023-07-11","title":"2023-07-11","text":"<p>This was a short day for me.</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#meetings_9","title":"Meetings:","text":"<ul> <li>Installation Planning</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#pr-reviews_4","title":"PR reviews","text":"<ul> <li>Add <code>Peak Time</code> aggregation function. #2981 (merged)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#rsqla1","title":"RSQLA1","text":"<ul> <li>Follow up on PR Table create ddl #3016 (merged)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#summarization-project-work_5","title":"Summarization project work:","text":"<ul> <li>Back-and-forth async with Aritra about the SQL portion of his time aggregation PR.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#installation-planning","title":"Installation planning:","text":"<ul> <li>Thought and discussion about what to do regarding DB credential storage.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#2023-07-10","title":"2023-07-10","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#meetings_10","title":"Meetings:","text":"<ul> <li>Met with Aritra about time aggregation summarization</li> <li>1:1 with Dom</li> <li>Met with Maria about list type</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#pr-reviews_5","title":"PR reviews:","text":"<ul> <li>Add <code>Peak Time</code> aggregation function. #2981 (requested changes)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#email","title":"Email","text":"<ul> <li>Caught up on core team mailing list</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#summarization-project-work_6","title":"Summarization project work:","text":"<ul> <li>Synced with Aritra about review of his PRs.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#list-data-type-project-work","title":"List data type project work:","text":"<ul> <li>Asynced with Maria about how to proceed with list type work</li> <li>Synced with Maria about List type.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#rsqla1-project-work_12","title":"RSQLA1 Project work:","text":"<ul> <li>Submitted Table create ddl #3016</li> <li>Responded to comments and feedback on the same PR.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#2023-07-07","title":"2023-07-07","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#meetings_11","title":"Meetings:","text":"<ul> <li>Sync with Mukesh</li> <li>Core team event</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#list-data-type-project-work_1","title":"List data type project work:","text":"<ul> <li>Async with Maria about how to proceed with new ideas after yesterday\u2019s meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#pr-reviews_6","title":"PR reviews:","text":"<ul> <li>Cleaner consolidated logic for adding constraints #2976 (merged)</li> <li>Add <code>Peak Time</code> aggregation function. #2981 (requested changes)</li> <li>Add Peak Day of Week aggregation function. #3004 (requested changes)</li> <li>Add Peak Month aggregation function. #3006 (requested changes)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#user-help_3","title":"User help:","text":"<ul> <li>Investigate and comment on Error while update &amp; import #3002</li> <li>Open issue to improve documentation Make permissions requirements clear for gunicorn user #3013</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#summarization-project-work_7","title":"Summarization project work:","text":"<ul> <li>PR reviews</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#2023-07-06","title":"2023-07-06","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#pr-reviews_7","title":"PR reviews:","text":"<ul> <li>Cleaner consolidated logic for adding constraints #2976</li> <li>Add <code>Peak Time</code> aggregation function. #2981</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#meetings_12","title":"Meetings:","text":"<ul> <li>Met with Anish w.r.t. his PR #2976, discussed how to organize the code</li> <li>Mathesar weekly meeting</li> <li>Met with Maria, Aritra, and Sean about arrays in Mathesar and how to proceed on that project.</li> <li>Met with team members about the Installation project</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#code","title":"Code:","text":"<ul> <li>wrote some SQL layer tests for table creation SQL function.</li> <li>fixed minor bugs in the same.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/brent/#pondering","title":"Pondering:","text":"<ul> <li>Thought about how to enforce array dimensionality without relying on type system</li> <li>Thought a bit about how to wire Mathesar up to read-only databases and non-Postgres databases using Foreign Data Wrappers</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/ghislaine/","title":"Ghislaine\u2019s work log archive: 2023-07","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-07/ghislaine/#2023-07-28","title":"2023-07-28","text":"<p>I am reviewing user feedback for the user research project, going through the feedback that we gathered months ago in HackMD, identifying additional use cases, and integrating this information into our new user research collection in Mathesar.</p> <p>I\u2019ve made a minor adjustment to the design of the installation admin user creation flow.</p> <p>Based on my personal experience using Mathesar for the user research project, I\u2019m compiling a set of recommendations to enhance its functionality and usability. Once complete, I plan to share this with the rest of the team.</p> <p>Current Focus:</p> <ul> <li>Identifying potential niches, associated use cases, and stakeholders.</li> <li>Conducting research into these niches.</li> <li>Continually refining and developing user personas.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/ghislaine/#2023-07-26","title":"2023-07-26","text":"<p>Prepared presentation for the team meeting.  Attended team meeting and presented user research. Design for Admin User creation.</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/ghislaine/#2023-07-24","title":"2023-07-24","text":"<p>I\u2019ve continued work on the use cases table. I\u2019ve been digging into the different stakeholders and understanding their needs, capturing goals and pain points from various sources. I\u2019ve also been preparing the data and insights for the upcoming meeting with the team.</p> <p>Current Focus:</p> <ul> <li>Creating the use cases table for the user research project</li> <li>Preparing for the upcoming meeting with the team</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/ghislaine/#2023-07-20","title":"2023-07-20","text":"<p>I continued working on the table. I also logged usability issues that I found and opened a GitHub issue to address a bug I encountered.</p> <p>I\u2019ve been exploring other similar products, gathering more use cases. This work has included redefining categories to ensure we have enough information for creating personas.</p> <p>Had a meeting with Kriti to discuss the progress of our work.</p> <p>Current Focus:</p> <ul> <li>Creating the use cases table for the user research project</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/ghislaine/#2023-07-19","title":"2023-07-19","text":"<p>Today, I\u2019ve been gathering more use cases. Had a brief discussion with Mukesh regarding the Installation project.</p> <p>Current Focus:</p> <ul> <li>Creating the use cases table for the user research project</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/ghislaine/#2023-07-18","title":"2023-07-18","text":"<p>Added new use cases and collected more template examples. I also had discussions regarding new projects that require design support and responded to Make column type inference optional </p> <p>Current Focus:</p> <ul> <li>Creating the use cases table for the user research project</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/ghislaine/#2023-07-17","title":"2023-07-17","text":"<p>Today, I\u2019ve been working on the use cases. Specifically, I have added a stakeholders column and included new cases. I\u2019ve conducted additional online research as well.</p> <p>Kriti and I had a meeting to review the current status of our work. We identified next steps during our discussion.</p> <p>One of these steps includes a plan to increase our use case data volume (before analysis). This will enable everyone to conduct their own analysis.</p> <p>Current Focus:</p> <ul> <li>Creating the use cases table for the user research project</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/ghislaine/#2023-07-14","title":"2023-07-14","text":"<p>Current Focus:</p> <ul> <li>Creating the use cases table for the user research project</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/ghislaine/#2023-07-13","title":"2023-07-13","text":"<p>Similar to yesterday, I continued work on the table and had a review with Kriti. We agreed that it is important to identify both the stakeholders and the actors for each use case to ensure we serve the right audience when developing them. Also, I have been noting down usability issues as I experience working with Mathesar.</p> <p>Current Focus:</p> <ul> <li>Creating the use cases table for the user research project</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/ghislaine/#2023-07-12","title":"2023-07-12","text":"<p>I have been working on setting up a Mathesar schema to capture all the different use cases. For each one I review, I am adding the needed features. Additionally, I examined the Freshdesk tickets to identify new use cases.</p> <p>Current Focus:</p> <ul> <li>Creating the use cases table for the user research project</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/ghislaine/#2023-07-11","title":"2023-07-11","text":"<p>Yesterday, I identified a variety of use cases from the Syften posts that contained keywords we were tracking. I then transformed these into a set of structured use cases.</p> <p>Following this, I reviewed them with Kriti and we collectively decided on our next steps. Our upcoming task is to aggregate all the identified information into these use cases. The goal is to understand what\u2019s blocking Mathesar from serving these users effectively.</p> <p>At this stage, we aren\u2019t making any decisions about which use cases to work on. However, the intention is to generate a broad map of what\u2019s out there in terms of competing solutions. This will aid us in understanding where we are best suited to fill out those gaps.</p> <p>Current Focus:</p> <ul> <li>Creating the use cases table for the user research project</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/ghislaine/#2023-07-10","title":"2023-07-10","text":"<p>I\u2019ve gone through Syften notifications, reading through the different posts extracting user needs. Started categorizing them and will now focus in different use cases.</p> <p>Current Focus:</p> <ul> <li>Writing the first user research report draft</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/ghislaine/#2023-07-07","title":"2023-07-07","text":"<p>I am continuining work with the research project, which basically involves going through freshdesk and capturing any relevant feeedback, categorizing it and finding patterns.</p> <p>Had a call with Kriti to define the goals and deliverables for the user research project.</p> <p>Current Focus:</p> <ul> <li>Writing the first user research report draft</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/ghislaine/#2023-07-06","title":"2023-07-06","text":"<p>In preparation for the user feedback project I am going through all the unread Freshdesk tickets and collecting the different user needs into a document.</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/kriti/","title":"Kriti\u2019s work log archive: 2023-07","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-07/kriti/#2023-07-31-mon","title":"2023-07-31 (Mon)","text":"<p>Partial day, sick</p> <ul> <li>Comms<ul> <li>Caught up on GitHub / Matrix / email + related action items</li> <li>Rescheduled / scheduled a couple of meetings</li> <li>Matrix discussion about Foreign Data Wrappers and people who don\u2019t want to install our schemas</li> </ul> </li> <li>Fundraising<ul> <li>Completed new version of script + associated slides for this week\u2019s meeting</li> <li>Preparatory call for Friday\u2019s fundraising meeting</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/kriti/#2023-07-28-fri","title":"2023-07-28 (Fri)","text":"<ul> <li>Product<ul> <li>Installation planning meeting</li> <li>Reviewed i18n UI</li> <li>Reviewed superuser creation design question</li> </ul> </li> <li>Comms<ul> <li>Caught up on GitHub / Matrix / email</li> <li>Responded to Sean\u2019s email about user reported issues workflow</li> </ul> </li> <li>Team management<ul> <li>Reviewed work logs, sent reminder about missing logs</li> </ul> </li> <li>Fundraising<ul> <li>How to Raise Money workshop session (8/11, 90 min)</li> </ul> </li> <li>User help<ul> <li>Responded to installation feedback discussion</li> <li>Added <code>user reported</code> label to #3076</li> <li>Triaged a bunch of new user reported issues</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/kriti/#2023-07-27-thu","title":"2023-07-27 (Thu)","text":"<ul> <li>Team management<ul> <li>1:1 with Mukesh </li> </ul> </li> <li>Comms<ul> <li>Caught up on GitHub / Matrix / email</li> <li>Responded to Sean\u2019s email about user reported issues </li> </ul> </li> <li>User help<ul> <li>Followed up on user\u2019s request for a <code>develop</code> build in      </li> </ul> </li> <li>Product<ul> <li>Worked through installation docs outline and meeting agenda with Mukesh</li> </ul> </li> <li>Fundraising<ul> <li>Did some work on the script for the upcoming meeting </li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/kriti/#2023-07-26-wed","title":"2023-07-26 (Wed)","text":"<ul> <li>Team management<ul> <li>Weekly meeting</li> </ul> </li> <li>Fundraising<ul> <li>Prep for today\u2019s workshop session (podcast)     </li> <li>How to Raise Money workshop session (7/11)</li> </ul> </li> <li>Comms<ul> <li>Caught up on GitHub / email / Matrix correspondence</li> <li>Followed up on release management &amp; product strategy email threads</li> <li>Call with Sam</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/kriti/#2023-07-25-tue","title":"2023-07-25 (Tue)","text":"<ul> <li>Comms<ul> <li>Caught up on GitHub / email / Matrix correspondence</li> </ul> </li> <li>Team management<ul> <li>1:1 with Rajat</li> <li>Quick Matrix checkins with team members</li> <li>Sent out email for tomorrow\u2019s meeting</li> </ul> </li> <li>Product<ul> <li>Did a bunch more work on product strategy</li> <li>Followed up with Mukesh about installation work</li> <li>Call with Mukesh where we worked through the installation outline and plan for the next meeting</li> <li>Call with Ghislaine to go over product strategy work and discuss tomorrow\u2019s call</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/kriti/#2023-07-24-mon","title":"2023-07-24 (Mon)","text":"<ul> <li>Comms<ul> <li>Caught up on GitHub / email / Matrix correspondence</li> <li>Read project updates</li> <li>Read through worklogs and followed up with team members about out of date worklogs</li> </ul> </li> <li>Product<ul> <li>Thought a bunch about product strategy</li> <li>Product strategy discussion and next steps call with Ghislaine</li> <li>Worked on product strategy draft</li> </ul> </li> <li>Tooling<ul> <li>Followed up on 1Password Open Source program approval </li> <li>Re-enabled accounts now that our team has more seats</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/kriti/#2023-07-21-fri","title":"2023-07-21 (Fri)","text":"<ul> <li>Did a big internal reorganization of my work and priorities</li> <li>Brief discussion with Ghislaine (on chat) about product strategy work</li> <li>Responded to Transifex rep \u2013 we\u2019re all set for the open source plan now.</li> <li>Attended community team event</li> <li>Caught up on GitHub, Matrix, email</li> <li>How to Raise Money workshop session (6/11)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/kriti/#2023-07-20-thu","title":"2023-07-20 (Thu)","text":"<p>Partial day, sick</p> <ul> <li>Product<ul> <li>Call with Ghislaine: product-strategy check in &amp; next steps</li> </ul> </li> <li>Project management<ul> <li>Marked installation improvements project as approved</li> <li>Responded to Aritra\u2019s project thread.</li> </ul> </li> <li>Release management<ul> <li>Followed up on a few GitHub issues</li> </ul> </li> <li>Tools<ul> <li>Spent some time trying to debug wiki syncing issues</li> <li>Did some manual fixes, sent an email to the team with next steps</li> </ul> </li> <li>Comms<ul> <li>Caught up with email, GitHub, Matrix inboxes</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/kriti/#2023-07-19-wed","title":"2023-07-19 (Wed)","text":"<ul> <li>Team management<ul> <li>Ran the weekly meeting</li> <li>Posted meeting notes on the wiki</li> </ul> </li> <li>Project management<ul> <li>Discussion with Mukesh about:<ul> <li>changes to the installation project to address Pavish\u2019s feedback</li> <li>Next steps before scheduling an installation related meeting</li> </ul> </li> <li>Followed up on Aritra\u2019s project idea</li> <li>Discussion about deploying internal server automatically</li> </ul> </li> <li>Tools<ul> <li>Spent some time trying to debug wiki syncing issues</li> </ul> </li> <li>Release management<ul> <li>Followed up on Rajat\u2019s thread with next steps to managing the release</li> <li>Responded to and followed up on a few new tickets created by users<ul> <li>Does not work on windows (followed up with Brent)</li> <li>Support for column descriptions/comments (commented)</li> <li>Not really possible to override settings (commented)</li> <li>The requirement of superuser postgresql access is problematic #2990 (followed up with Mukesh)</li> </ul> </li> <li>Put a couple of bugs opened by Dom into the \u201cnext release milestone\u201d<ul> <li>500 when adding unique constraint on point column</li> <li>Able to order on an unorderable field</li> </ul> </li> </ul> </li> <li>Fundraising<ul> <li>How to Raise Money workshop session (5/11)</li> </ul> </li> <li>Comms<ul> <li>Various discussions on Matrix</li> <li>Caught up on email and GitHub</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/kriti/#2023-07-18-tue","title":"2023-07-18 (Tue)","text":"<ul> <li>Project management<ul> <li>Reviewed and marked the following projects as approved:<ul> <li>2023-07 frontend fixes</li> <li>Shareable links</li> <li>Move DDL operations to SQL functions</li> <li>2023-07 backend fixes</li> <li>Internationalization</li> <li>Product strategy</li> </ul> </li> </ul> </li> <li>Reviewed and followed up on installation project</li> <li>Updated projects page with a bit more detail on our workflow.</li> <li>Simplified project template to be more in line with the new workflow.</li> <li>Followed up on Shrey\u2019s project.</li> <li>Reviewed and followed up on Aritra\u2019s project idea.</li> <li>Followed up on Varsha\u2019s email.</li> <li>Regular comms<ul> <li>Followed up on various GitHub issues</li> <li>Caught up with email</li> </ul> </li> <li>Team management<ul> <li>Cleaned up and expanded agenda for tomorrow\u2019s weekly meeting.</li> <li>Updated meeting agenda item template.</li> </ul> </li> <li>Fundraising<ul> <li>1:1 with Geoffrey to get advice on the upcoming meeting</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/kriti/#2023-07-17-mon","title":"2023-07-17 (Mon)","text":"<ul> <li>Management &amp; administration<ul> <li>Confirmed 1Password renewal, signed up for open source program</li> <li>Followed up with Transifex support</li> <li>Triaged GitHub and email</li> <li>Followed up on UCB Product Design Studio collaboration request</li> <li>Reviewed work logs and sent reminder to team members who haven\u2019t been keeping them updated</li> </ul> </li> <li>Product<ul> <li>Call with Mukesh to iron out details of the installation improvements project.</li> <li>Product strategy check in with Ghislaine, decided next steps.</li> <li>Reviewed skipping inference UI proposal with Ghislaine.</li> </ul> </li> <li>Fundraising<ul> <li>Scheduled prep call with Geoffrey</li> <li>Scheduled practice call with Ian</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/kriti/#2023-07-14-fri","title":"2023-07-14 (Fri)","text":"<p>Partial day, sick</p> <ul> <li>Management &amp; administration</li> <li>Caught up on email and chat, some follow ups</li> <li>1Password cleanup and followup</li> <li>Fundraising</li> <li>How to Raise Money workshop session (4/11)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/kriti/#2023-07-13-thu","title":"2023-07-13 (Thu)","text":"<p>Partial day, sick</p> <ul> <li>Management &amp; administration</li> <li>Rescheduled 1:1s to be more manageable</li> <li>Cancelled team meeting</li> <li>Checked in on Matrix with: Sean, Ghislaine, Pavish, Brent, Anish, Rajat, Mukesh, Dom</li> <li>Posted installation meeting notes</li> <li>Followed up on some meeting scheduling and accounting stuff.</li> <li>Followed up with Transifex support re: open source status</li> <li>Created a new Transifex project and invited Mukesh and Rajat</li> <li>Followed up on 1Password renewal</li> <li>Product</li> <li>Kicked off project approval discussions</li> <li>Reviewed projects:<ul> <li>2023-07 frontend fixes</li> <li>Shareable links</li> <li>Move DDL operations to SQL functions</li> <li>2023-07 backend fixes</li> <li>Internationalization</li> <li>Installation improvements</li> </ul> </li> <li>Product strategy project check in with Ghislaine</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/kriti/#2023-07-12-wed","title":"2023-07-12 (Wed)","text":"<ul> <li>Management &amp; administration</li> <li>Caught up on email, GitHub, Matrix</li> <li>Re-organized projects and responsibilities pages.</li> <li>Product<ul> <li>Wrote up 2023-07 product strategy project</li> </ul> </li> <li>Fundraising</li> <li>How to Raise Money workshop session (3/11)</li> <li>Other<ul> <li>External meeting for networking/advice + pre-prep</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/kriti/#2023-07-11-tue","title":"2023-07-11 (Tue)","text":"<ul> <li>Management &amp; administration</li> <li>Caught up on email</li> <li>Reviewed worklogs</li> <li>Reviewed 1Password options and decided on next steps; followed up with Ondrej</li> <li>Product</li> <li>Installation related meeting and follow up discussion</li> <li>Caught up on GitHub issues and followed up on a few of them</li> <li>Discussion with Ghislaine about next steps for strategy / user research project</li> <li>Contacted Transifex about open source plan</li> <li>Fundraising</li> <li>1:1 with Geoffrey</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/kriti/#2023-07-10-mon","title":"2023-07-10 (Mon)","text":"<p>Day off.</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/kriti/#2023-07-07-fri","title":"2023-07-07 (Fri)","text":"<ul> <li>Management &amp; administration</li> <li>Caught up with email, Matrix, and GitHub (various responses and follow ups)</li> <li>Product</li> <li>Planning meeting with Ghislaine for strategy / user research work </li> <li>Reviewed the spec for shareable links and sent some feedback via email</li> <li>Read through and responded to forms research</li> <li>Looked through Aritra\u2019s blog post and associated PR</li> <li>Fundraising</li> <li>Attended How to Raise Money workshop session (2/11)</li> <li>Team building &amp; community</li> <li>Attended core team event</li> <li>Nominated a couple of people for a GSoC-related leadership program</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/kriti/#2023-07-06-thu","title":"2023-07-06 (Thu)","text":"<ul> <li>Management &amp; administration</li> <li>Caught up with email and GitHub</li> <li>Prepped for and ran the team planning meeting</li> <li>Scheduled next team, installation, and user research planning meetings</li> <li>1:1s with Sean and Pavish</li> <li>Set up worklog pages on wiki</li> <li>Followed up on async planning emails</li> <li>Posted a bunch of meeting notes from this week\u2019s meetings on the wiki</li> <li>Product</li> <li>Prepped for and ran the installation planning meeting</li> <li>Prioritized issues for Sean and Dom and sent an email</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/pavish/","title":"Pavish\u2019s work log archive: 2023-07","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-07/pavish/#2023-07-31","title":"2023-07-31","text":"<ul> <li>Raised PR for viewing shared queries: #3133</li> <li>Started figuring out UX and implementation for \u2018user sharing an entity\u2019 flow</li> <li>Matrix discussion on users who don\u2019t want schemas installed on their DB</li> <li>Spent a bit of time trying to reduce connections in tests and fix failing ones</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/pavish/#2023-07-28","title":"2023-07-28","text":"<ul> <li>Took a sick day off</li> <li>Pondered a bit on users who do not want to install Mathesar schemas on their DB</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/pavish/#2023-07-27","title":"2023-07-27","text":"<ul> <li>Built and pushed an one-off docker build for a user request</li> <li>Continued backend work on query sharing</li> <li>Started implementing frontend for viewing shared query</li> <li>Had a partial work day, as I was sick</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/pavish/#2023-07-26","title":"2023-07-26","text":"<ul> <li>Team meeting</li> <li>Long call with Mukesh on permissions</li> <li>Updated PRs based on review comments and got the initial PRs for Shareable links merged.</li> <li>Shareable links frontend - shared table consumer view<ul> <li>Shareable links backend - Models, APIs, bypass auth for table requests</li> </ul> </li> <li>Started work on query sharing</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/pavish/#2023-07-25","title":"2023-07-25","text":"<ul> <li>Pondered a bit on how to handle related entities in shared pages, mainly filtering linked records and the record selector</li> <li>Discussions</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/pavish/#2023-07-24","title":"2023-07-24","text":"<ul> <li>Started and completed implementing a workaround for separating app context of shared routes and normal authenticated routes on the frontend</li> <li>Split the large Shared tables PR into two, and requested review for both<ul> <li>Shareable links frontend - shared table consumer view</li> <li>Shareable links backend - Models, APIs, bypass auth for table requests</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/pavish/#2023-07-21","title":"2023-07-21","text":"<ul> <li>Pondered on how to separate context on frontend for shared routes and normal authenticated routes</li> <li>Community Team event</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/pavish/#2023-07-20","title":"2023-07-20","text":"<ul> <li>Reviewed Auto-focus input when editing number/money cells</li> <li>Reviewed Improve cell focus behavior</li> <li>Got end-to-end flow working for viewing shared tables</li> <li>Comms and discussions</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/pavish/#2023-07-19","title":"2023-07-19","text":"<ul> <li>Reviewed installation improvements project and raised some questions.</li> <li>Responded to barriers to adoption email</li> <li>Weekly meeting</li> <li>Continued work on Shared tables:<ul> <li>Frontend work on displaying the shared page</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/pavish/#2023-07-18","title":"2023-07-18","text":"<ul> <li>Raised draft PR with models, APIs, and access control for shares</li> <li>Needed to figure out if I might hit snags while building frontend, so decided to work on a minimal frontend simultaneously:<ul> <li>Added view for page when user views shared entity</li> </ul> </li> <li>Added auth bypass for tables, columns, and constraints</li> <li>Work on figuring out passing slug in request header</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/pavish/#2023-07-17","title":"2023-07-17","text":"<ul> <li>Continued work on implementing APIs for Shares</li> <li>Work on figuring out auth bypass for tables</li> <li>Reviewed approach in Refactor CellSelection data structure and store</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/pavish/#2023-07-14","title":"2023-07-14","text":"<ul> <li>Continued work on implementing APIs for Shares</li> <li>Had to fight with the framework for simplifying access control<ul> <li>Got to read up on a bunch of DRF and drf-access-policy internals</li> </ul> </li> <li>Continued thinking on auth bypass &amp; access control for table requests</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/pavish/#2023-07-13","title":"2023-07-13","text":"<ul> <li>Go through backend codebase to understand access controls</li> <li>Put some more thought on access control for bypassing table requests</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/pavish/#2023-07-12","title":"2023-07-12","text":"<ul> <li>Write up Shares implementation project</li> <li>Update product spec with API structure details</li> <li>Continued work on implementing APIs for Shares</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/pavish/#2023-07-11","title":"2023-07-11","text":"<ul> <li>Installation planning meeting</li> <li>Chat with Kriti on shareable links API structure</li> <li>Work on figuring out API structure needed for shareable links</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/pavish/#2023-07-10","title":"2023-07-10","text":"<ul> <li>Started work on models and APIs needed for shareable links project</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/pavish/#2023-07-07","title":"2023-07-07","text":"<ul> <li>Core team event</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/pavish/#2023-07-06","title":"2023-07-06","text":"<ul> <li>Frontend team meeting</li> <li>Weekly meeting</li> <li>1:1 with Kriti</li> <li>Installation planning meeting</li> <li>Prepped for frontend team meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/","title":"Rajat\u2019s work log archive 2023-07","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#2023-07-31","title":"2023-07-31","text":"<p>TODO</p> <ul> <li>PR for import/export</li> <li>AIs from \u201cNext Release\u201d milestone email.</li> <li>Replacing more translations strings in the FE codebase.</li> </ul> <p>Active</p> <ul> <li>v0.1.3 milestone health check</li> <li>Follow up with i18n PRs review</li> </ul> <p>Completed</p> <ul> <li>Repo admin</li> <li>Updated pending worklogs</li> <li>Email for initiating discussion about storing transifex keys</li> <li>Weekly Project update email</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#2023-07-28","title":"2023-07-28","text":"<p>Active</p> <ul> <li>PR for pushing translations from FE and BE to transifex. (Stuck on missing GNU\u2019s gettext issue).</li> <li>Replacing more translations strings in the FE codebase.</li> </ul> <p>Completed</p> <ul> <li>Repo admin work</li> <li>Tackling Sean\u2019s review on [i18n] Install typesafe-i18n &amp; translates one component #3099</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#2023-07-27","title":"2023-07-27","text":"<p>Active Work</p> <ul> <li>More PRs for i18n work</li> </ul> <p>Completed</p> <ul> <li>Created 5 separate PRs for i18n work</li> <li>[i18n] Install typesafe-i18n &amp; translates one component #3099</li> <li>[i18n] RichText component #3100</li> <li>[i18n] Django templates translatable #3101</li> <li>[i18n] Load \u201cen\u201d translations parallely #3102</li> <li>[i18n] Save preferred_language for auth user in db #3103</li> <li>[i18n] Language switcher for anon users #3104 </li> <li>Repo Admin work</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#2023-07-26","title":"2023-07-26","text":"<p>Active</p> <ul> <li>Breaking PR for i18n into smaller chunks</li> </ul> <p>Completed</p> <ul> <li>ESLint rule for finding un-translated strings in svelte template.</li> <li>Repo admin work</li> <li>Release e-mail</li> <li>Team meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#2023-07-25","title":"2023-07-25","text":"<ul> <li>Translate the application when the user changes language from the profile page</li> <li>Load translations file parallel to the FE code\u2019s first chunk</li> <li>Repo admin tasks</li> <li>1-on-1 with Kriti</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#2023-07-24","title":"2023-07-24","text":"<ul> <li>Language selector on the profile page</li> <li>Set up a translation management service.</li> <li>i18n PR for initial review</li> <li>Repo admin tasks</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#2023-07-21","title":"2023-07-21","text":"<ul> <li>Let anon users choose language from un-auth pages</li> <li>Create a system for exporting translations to the translations management service.</li> <li>Repo admin tasks</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#2023-07-20","title":"2023-07-20","text":"<ul> <li>Internationalize templates on the BE.</li> <li>Let authorized users choose the preferred language from the profile page &amp; save it in the DB</li> <li>Repo admin tasks</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#2023-07-19","title":"2023-07-19","text":"<ul> <li>Enabled i18n for remaining of the components inside the src/systems directory of the FE codebase</li> <li>Enabling Django and DRF translations</li> <li>Repo admin tasks</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#2023-07-18","title":"2023-07-18","text":"<ul> <li>Enabled i18n for half of the components inside the src/systems directory of the FE codebase</li> <li>Repo admin tasks</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#2023-07-17","title":"2023-07-17","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#completed","title":"Completed","text":"<ul> <li>Enabled i18n for all of the components inside the src/pages directory of the FE codebase</li> <li>Repo admin tasks</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#active","title":"Active","text":"<ul> <li>Reading the release responsibility page figuring out actions items for me.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#2023-07-14","title":"2023-07-14","text":"<p>Worked half day of 2023-07-14 &amp; half day of 2023-07-16</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#completed_1","title":"Completed","text":"<ul> <li>Enabled i18n for all of the components inside the src/routes directory of the FE codebase</li> <li>Repo admin tasks</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#2023-07-13","title":"2023-07-13","text":"<p>Updating the format a little bit, going back to completed &amp; active format</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#completed_2","title":"Completed","text":"<ul> <li>RichText component for translating strings that has component embedded inside them</li> <li>Repo admin tasks</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#2023-07-12","title":"2023-07-12","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#ongoing-responsibility","title":"Ongoing responsibility","text":"<ul> <li>Repo admin</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#i18n-project","title":"i18n project","text":"<ul> <li>Internationalize access control modals.</li> <li>Load the translations file with first FE chunk (on-going)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#2023-07-11","title":"2023-07-11","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#i18n-project_1","title":"i18n project","text":"<ul> <li>Internationalize access control modals. (on-going)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#ongoing-responsibility_1","title":"Ongoing responsibility","text":"<ul> <li>Repo admin</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#meetings","title":"Meetings","text":"<ul> <li>Installations planning meeting.</li> <li>Meeting with Mukesh to plan BE related work for i18n project.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#2023-07-10","title":"2023-07-10","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#i18n-project_2","title":"i18n project","text":"<ul> <li>Internationalize Data import page.</li> <li>Internationalize record page.</li> <li>Internationalize profile page.</li> <li>Sent e-mail to Kriti to get Transifex access.</li> <li>Sent invite to Mukesh to chat about specific BE changes - planning to do it myself.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-07/rajat/#ongoing-responsibility_2","title":"Ongoing responsibility","text":"<ul> <li>Repo admin</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/anish/","title":"Anish\u2019s work log archive: 2023-08","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-08/anish/#2023-08-31","title":"2023-08-31","text":"<p>Did nothing</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/anish/#2023-08-30","title":"2023-08-30","text":"<ul> <li>Demo mode fixed for #3170</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/anish/#2023-08-29","title":"2023-08-29","text":"<ul> <li> <p>Worked on #3170 &amp; made it ready for review</p> </li> <li> <p>Fixed #3158</p> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/anish/#2023-08-28","title":"2023-08-28","text":"<ul> <li>Worked on #3170</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/anish/#2023-08-25","title":"2023-08-25","text":"<ul> <li>Worked on #3170</li> <li>Sync with Anshuman(GSoC)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/anish/#2023-08-24","title":"2023-08-24","text":"<ul> <li>Worked on #3170</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/anish/#2023-08-23","title":"2023-08-23","text":"<ul> <li>Worked on #3170</li> <li>Weekly meet</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/anish/#2023-08-22","title":"2023-08-22","text":"<ul> <li>Worked on #3170</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/anish/#2023-08-21","title":"2023-08-21","text":"<ul> <li>Worked on #3170</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/anish/#2023-08-18","title":"2023-08-18","text":"<ul> <li>Sync with Mukesh about installation improvements</li> <li>Sync with Anshuman(GSoC)</li> <li>Weekly meet</li> <li>Re-reviewed #3132 &amp; #3083</li> <li>Caught up on emails</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/anish/#2023-08-17","title":"2023-08-17","text":"<p>Did nothing</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/anish/#2023-08-16","title":"2023-08-16","text":"<ul> <li>Sync with Brent</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/anish/#2023-08-15","title":"2023-08-15","text":"<ul> <li>Sync with Ghislaine</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/anish/#2023-08-14","title":"2023-08-14","text":"<p>Did nothing</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/anish/#2023-08-11","title":"2023-08-11","text":"<ul> <li>Sync with Anshuman</li> <li>Reviewed PRs #3132 &amp; #3083</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/anish/#2023-08-10","title":"2023-08-10","text":"<ul> <li>SQL tests for alter table #3139</li> <li>Sync with Brent</li> <li>Team meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/anish/#2023-08-09","title":"2023-08-09","text":"<ul> <li>Weekly meet</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/anish/#2023-08-08","title":"2023-08-08","text":"<p>Did nothing</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/anish/#2023-08-07","title":"2023-08-07","text":"<ul> <li>Minor requested changes for #3130</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/anish/#2023-08-04","title":"2023-08-04","text":"<ul> <li>Fixed failing tests in #3130</li> <li>Sync with Anshuman</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/anish/#2023-08-03","title":"2023-08-03","text":"<ul> <li>Sync with Brent</li> <li>Wiring of SQL funcs for links &amp; tables #3130</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/anish/#2023-08-02","title":"2023-08-02","text":"<ul> <li>Added SQL and python tests for constraints DDL #3120</li> <li>Mathesar weekly meet</li> <li>Opened #3124 &amp; discussed with Brent</li> <li>Reviewed #3125</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/anish/#2023-08-01","title":"2023-08-01","text":"<ul> <li>Added SQL and python tests for links DDL #3120</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/anish/#archive","title":"Archive","text":"<ul> <li>July 2023 work logs</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/","title":"Brent\u2019s work log archive: 2023-08","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#2023-08-31","title":"2023-08-31","text":"<p>I\u2019ve been lax about filling these in for a few days. My work has involved </p> <ul> <li>the release, </li> <li>hunting related bugs, and </li> <li>deployment of the release. </li> </ul> <p>I\u2019m resetting to get back on track.</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#meetings","title":"Meetings","text":"<ul> <li>Met with Ghislaine to discuss user niche</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#deployment","title":"Deployment","text":"<ul> <li>Deployed new version to mathesar.ito.com</li> <li>Deployed new version to cci.mathesar.org</li> <li>Double-checked staging.mathesar.org</li> <li>Worked on demo deployment</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#2023-08-23","title":"2023-08-23","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#meetings_1","title":"Meetings","text":"<ul> <li>Team meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#email","title":"Email","text":"<ul> <li>yet another round of communication on various threads</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#rsqla1","title":"RSQLA1","text":"<ul> <li>Started RSQLA1 email thread</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#preexisting-db-compatibility","title":"Preexisting DB compatibility","text":"<ul> <li>followed leads from Sean, also found other sample DBs to test against</li> <li>Chatted with Kriti about hosting test DBs</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#2023-08-22","title":"2023-08-22","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#email_1","title":"Email","text":"<ul> <li>Another round of discussion participation</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#rsqla1_1","title":"RSQLA1","text":"<ul> <li>Worked on composing retrospective email</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#preexisting-db-compatibility_1","title":"Preexisting DB compatibility","text":"<ul> <li>Minor change to project organization</li> <li>Going through Sean\u2019s feedback email w.r.t. realistic DB examples, trying to find others</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#2023-08-22_1","title":"2023-08-22","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#email_2","title":"Email","text":"<ul> <li>More participation in massive email threads</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#bugfixes","title":"Bugfixes","text":"<ul> <li>Fixed bug occurring due to upstream testing suite change.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#2023-08-21","title":"2023-08-21","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#meetings_2","title":"Meetings","text":"<ul> <li>1:1 with Dom</li> <li>make-up meeting with Aritra</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#preexisting-db-compatibility_2","title":"Preexisting DB compatibility","text":"<ul> <li>Planning/looking through GH issues</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#email_3","title":"Email","text":"<ul> <li>went through email, thinking and contributing to massive email threads</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#2023-08-18","title":"2023-08-18","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#rsqla1_2","title":"RSQLA1","text":"<ul> <li>Finished clean up of meta issue</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#preexisting-db-compatibility_3","title":"Preexisting DB compatibility","text":"<ul> <li>incorporated feedback from discussion into project</li> <li>started basic going through GH looking for related issues</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#2023-08-16","title":"2023-08-16","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#rsqla1_3","title":"RSQLA1","text":"<ul> <li>Partial clean up of RSQLA1 meta issue</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#meetings_3","title":"Meetings","text":"<ul> <li>Niche research discussion</li> <li>1:1 with Anish</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#2023-08-15","title":"2023-08-15","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#projects","title":"Projects","text":"<ul> <li>Finished first draft of DB compatibility investigation project.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#pr-reviews","title":"PR reviews","text":"<ul> <li>Fix NaN:NaN error while aggregating duration column #3136 (merged)</li> <li>Tests for alter table #3139</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#sql-code-update-functionality","title":"SQL code update functionality","text":"<ul> <li>Tested to make sure there are no problems updating from v0.1.2 to current develop w.r.t. SQL code changes.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#comms","title":"Comms","text":"<ul> <li>Wrote email about managing package versions</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#2023-08-14","title":"2023-08-14","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#meetings_4","title":"Meetings","text":"<ul> <li>(very long) 1:1 with Dom</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#projects_1","title":"Projects","text":"<ul> <li>asynced with Ghislaine to set up meeting for niche research project</li> <li>Started draft of \u201cPostgres DB compatibility investigation\u201d project</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#2023-08-11","title":"2023-08-11","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#misc-research","title":"Misc research","text":"<ul> <li>Deep dive into ramifications of installing things on the DB, or avoiding it.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#comms_1","title":"Comms","text":"<ul> <li>Start email thread on dev mailing list for \u201cShould we install things on the DB?\u201d discussion</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#2023-08-10","title":"2023-08-10","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#meetings_5","title":"Meetings","text":"<ul> <li>1:1 with Anish</li> <li>Team meeting</li> <li>Summarization project meeting with Aritra</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#comms_2","title":"Comms","text":"<ul> <li>Wrote up thoughts about whether we should install things on the DB</li> <li>Wrote up thoughts about Column moving project</li> <li>Other meeting prep</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#2023-08-09","title":"2023-08-09","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#meetings_6","title":"Meetings","text":"<ul> <li>1:1 with Dom</li> <li>Weekly meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#projects_2","title":"Projects","text":"<ul> <li>Wrote up project proposal draft for finishing and improving column extraction/moving and table merging logic</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#sql-updating","title":"SQL updating","text":"<ul> <li>Made a prototype to experiment with dropping old SQL functions with manual cascade for safety</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#2023-08-08","title":"2023-08-08","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#meetings_7","title":"Meetings","text":"<ul> <li>Long catch up with Mukesh about his open PRs, and column moving logic</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#comms_3","title":"Comms","text":"<ul> <li>Cleared out email inbox</li> <li>Cleared out GH inbox</li> <li>Wrote/sent update for RSQLA1</li> <li>Wrote long email about project ideas</li> <li>Async discussion with Anish about what he could work on during the cool down</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#2023-08-07","title":"2023-08-07","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#meetings_8","title":"Meetings","text":"<ul> <li>Met with Ghislaine about use cases</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#pr-reviews_1","title":"PR reviews","text":"<ul> <li>Remove db superuser requirement #3117 (approved; awating product approval)</li> <li>Wiring sql functions for links and tables #3130 (merged)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#2023-08-04","title":"2023-08-04","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#meetings_9","title":"Meetings","text":"<ul> <li>1:1 with Dom w.r.t. dynamic defaults</li> <li>1:1 with Mukesh</li> <li>Core team event</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#rsqla1_4","title":"RSQLA1","text":"<ul> <li>Fixed an issue with column altering for Anish\u2019s PR</li> <li>Added comments and merged Move table splitting logic to SQL #3119</li> <li>Did a deep dive into column merging logic; determined that moving it to SQL is a bad idea at this juncture.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#2023-08-03","title":"2023-08-03","text":"<p>This was a short day for me</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#pr-reviews_2","title":"PR reviews","text":"<ul> <li>Add pldebugger to dev db #3126</li> <li>Add Postgres to Mathesar docker image #3121</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#meetings_10","title":"Meetings","text":"<ul> <li>1:1 with Anish</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#2023-08-02","title":"2023-08-02","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#meetings_11","title":"Meetings","text":"<ul> <li>ad-hoc catch up with Mukesh to discuss data losing bug in column merging logic</li> <li>Team meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#pr-reviews_3","title":"PR reviews","text":"<ul> <li>Tests for links &amp; constraints ddl #3120 (merged)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#rsqla1-project-work","title":"RSQLA1 project work","text":"<ul> <li>Found bug in column moving logic, discussed with Mukesh, made plan for proceeding</li> <li>Fixed another bug with PR: Properly detect identity columns #3125</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#bugfixes_1","title":"Bugfixes","text":"<ul> <li>PR Repeat failed tests #3118 is merged after some changes</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#ad-hoc","title":"Ad-hoc","text":"<ul> <li>Helped Rajat with how to install <code>gettext</code> in containers for his translations project.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#2023-08-01","title":"2023-08-01","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#meetings_12","title":"Meetings","text":"<ul> <li>1:1 with Kriti</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#misc-bugfixes","title":"Misc. Bugfixes","text":"<ul> <li>Started PR Repeat failed tests #3118 to sort out intermittent test failures</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#pr-reviews_4","title":"PR Reviews","text":"<ul> <li>Remove db superuser requirement #3117</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/brent/#rsqla1_5","title":"RSQLA1","text":"<ul> <li>Submitted PR Move table splitting logic to SQL #3119</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/ghislaine/","title":"Ghislaine\u2019s work log","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-08/ghislaine/#2023-08-31","title":"2023-08-31","text":"<ul> <li>Niche Research</li> <li>Database credentials design</li> <li>Survey edits</li> <li>Niche discussion w Brent</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/ghislaine/#2023-08-30","title":"2023-08-30","text":"<ul> <li>Write down notes from meeting w Sean</li> <li>Database credentials design</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/ghislaine/#2023-08-29","title":"2023-08-29","text":"<ul> <li>Niche research</li> <li>Niche discussion w Sean</li> <li>Review github mentions / other discussions</li> </ul> <p>Current Focus - Niche research</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/ghislaine/#2023-08-28","title":"2023-08-28","text":"<ul> <li>Setting up meetings to discuss niche research.</li> <li>Niche research.</li> <li>Preparing notes to share during calls with team.</li> </ul> <p>Current Focus: - Prepare my notes for sharing with the team and getting feedback.</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/ghislaine/#2023-08-25","title":"2023-08-25","text":"<ul> <li>Check-in with Kriti.</li> <li>Updated the survey.</li> <li>Worked on the niche research.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/ghislaine/#2023-08-23","title":"2023-08-23","text":"<ul> <li>Niche research into Small Businesses using PostgreSQL.</li> <li>Team meeting.</li> </ul> <p>Current Focus: - Survey Banner - Niche Research (Market and Needs of Small Businesses using PostgreSQL)</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/ghislaine/#2023-08-22","title":"2023-08-22","text":"<ul> <li>Added the survey banner to the website and opened a draft PR.</li> <li>Making some final changes to the survey and getting ready to publish it.</li> <li>Niche research into Small Businesses using PostgreSQL.</li> <li>Collecting more data and preparing the different sections of the report.</li> </ul> <p>Current Focus: - Survey Banner - Niche Research (Market and Needs of Small Businesses using PostgreSQL)</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/ghislaine/#2023-08-21","title":"2023-08-21","text":"<ul> <li>Started organizing for research, finding different sources.</li> <li>Made changes to the survey for publishing.</li> <li>Caught up on emails and discussions.</li> </ul> <p>Current Focus:</p> <ul> <li>Publishing the survey.</li> <li>Listing out all the sources for the Niche research and organizing them.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/ghislaine/#2023-08-18","title":"2023-08-18","text":"<ul> <li>Prepared and updated the Niche Research project document.</li> <li>Prepared for the team weekly meeting.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/ghislaine/#2023-08-17","title":"2023-08-17","text":"<ul> <li>Reviewed the installation plan.</li> <li>Had a feedback call with Mukesh.</li> <li>Updated the niche research document based on talks with Brent and Pavish.</li> </ul> <p>Current Focus</p> <ul> <li>Update the survey and request feedback.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/ghislaine/#2023-08-16","title":"2023-08-16","text":"<ul> <li>Had calls discussing use cases with team members.</li> <li>Talked with Brent and Pavish about niche research.</li> <li>Checked in with Kriti on team use cases feedback.</li> </ul> <p>Current Focus Update the niche research document.</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/ghislaine/#2023-08-15","title":"2023-08-15","text":"<ul> <li>Niche research document</li> <li>Had calls discussing use cases with team members.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/ghislaine/#2023-08-14","title":"2023-08-14","text":"<p>I spent a significant portion of the day scheduling calls with various team members. Also organizing additional time to discuss installation design requirements. I also planned specific times to discuss niche research with both Brent and Pavish. </p> <p>To make the upcoming feedback meetings more structured, I prepared a set of questions focusing on discussing the use cases feedback, especially targeting those team members who missed the first round of calls. I\u2019ve updated the call plan to integrate our niche research focus, given that we have already narrowed down to a particular niche.</p> <p>Current Focus:</p> <ul> <li>Request feedback on the form survey.</li> <li>Conducting feedback sessions.</li> <li>Preparing an update for my scheduled call with Kriti tomorrow.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/ghislaine/#2023-08-11","title":"2023-08-11","text":"<p>Today and yesterday were slow days due to some personal matters I had to attend to. However, I did manage to initiate some research on potential niche sources. Additionally, I started to simplify our survey, aiming to make it concise enough for adding a link on our website. </p> <p>Current Focus:</p> <ul> <li>Building out the survey form using tools like Google Forms or similar platforms.</li> <li>Continuing with niche research project research.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/ghislaine/#2023-08-09","title":"2023-08-09","text":"<p>Worked on the initial draft for our Niche Research project. Began exploring methods to shape our personas. We also had our weekly team catch-up.</p> <p>Current Focus:</p> <ul> <li>Organize meetings with team members who missed the initial one-on-ones.</li> <li>Get feedback on the Niche Research project draft.</li> <li>Start the groundwork for the project.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/ghislaine/#2023-08-08","title":"2023-08-08","text":"<p>Wrapped up my notes on use cases feedback from team members. Also made necessary updates to our survey to make it more goal oriented. Kriti and I discussed upcoming tasks and I put together a simple plan for Niche Research.</p> <p>Current Focus:</p> <ul> <li>Start draft for Niche Research project.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/ghislaine/#2023-08-07","title":"2023-08-07","text":"<p>Today, I had further conversations with several team members to gather their thoughts and perspectives. Following these discussions, I spent time organizing the notes. I aim to review these with Kriti to validate the findings and ensure we\u2019re moving in the right direction.</p> <p>Current Focus:</p> <ul> <li>Finalizing notes from team discussions for review.</li> <li>Finalizing the updates to the survey based on team feedback and insights.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/ghislaine/#2023-08-04","title":"2023-08-04","text":"<p>Today was a slower-paced day. I reviewed the notes taken from team discussions during the week. I also continued adjusting the survey based on the current goals.</p> <p>Current Focus:</p> <ul> <li>Reviewing and adjusting the survey to learn more about niches.</li> <li>Continuing to research and understand our identified niches.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/ghislaine/#2023-08-03","title":"2023-08-03","text":"<p>Today, I engaged in multiple conversations with team members about the use cases we\u2019ve identified, the data we\u2019re capturing, and the insights we\u2019ve gathered so far.</p> <p>I\u2019m currently working on preparing the surveys for our niche research. Additionally, I\u2019m planning to have more conversations with other team members to gain their perspectives and insights on our work so far.</p> <p>Additionally, I worked on updating the design for creating the admin user.</p> <p>Current Focus:</p> <ul> <li>Updating the surveys for niche research.</li> <li>Continuing discussions with team members for feedback and insights.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/ghislaine/#2023-08-02","title":"2023-08-02","text":"<p>Yesterday, my focus was on refining the niche research we\u2019ve started. This process involved examining existing surveys and considering how we might modify them to better understand our identified niches. The goal is to collect insights into these niches and evaluate their suitability for our project.</p> <p>During our weekly meeting, several important points were raised. I revisited the niche research document to reflect these discussion points and ensured that it accurately represented our current understanding and future plans.</p> <p>Current Focus:</p> <ul> <li>Continuing to refine the niche research and surveys.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/ghislaine/#2023-08-01","title":"2023-08-01","text":"<p>Today, I kept working on understanding the various niches we\u2019ve identified. The goal is to find use cases that match our project\u2019s goals and consider the needs of different user personas. I also added new data to our user research database and have been looking at products that already exist in each category. This helps us identify new use cases and get a better understanding of each category.</p> <p>I had a chat with Kriti today about how the research is going. We talked about what I\u2019ve found so far, how I\u2019m doing the research, and how we might improve. We\u2019re also planning to talk to other team members to get their thoughts on the user research and the use cases we\u2019ve found.</p> <p>Current Focus:</p> <ul> <li>Digging deeper into the niches and their use cases.</li> <li>Adding more data to our user research database.</li> <li>Getting feedback from the team on our research and use cases.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/kriti/","title":"Kriti\u2019s work log archive: 2023-08","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-08/kriti/#2023-08-26-to-2023-08-31","title":"2023-08-26 to 2023-08-31","text":"<p>Out of office</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/kriti/#2023-08-25-fri","title":"2023-08-25 (Fri)","text":"<ul> <li>Prepped for time off<ul> <li>Documented my responsibilities that I\u2019m handing off on the wiki</li> <li>Hand off calls with Brent &amp; Pavish</li> <li>1:1 with Ghislaine + niche research project discussion</li> <li>1:1 with Mukesh + installation project discussion</li> <li>Pre-approved invoices</li> <li>Set Brent up with admin access to a whole bunch of things</li> <li>Set up vacation status on:<ul> <li>GitHub</li> <li>Slack</li> <li>calendar</li> <li>Matrix</li> <li>email</li> </ul> </li> <li>Sent vacation FYI email to team</li> </ul> </li> <li>Administrative<ul> <li>Kicked off email thread for contract renewal</li> <li>Gusto benefits survey</li> <li>Followed up on some benefits stuff</li> </ul> </li> <li>Project management <ul> <li>Reviewed installation project</li> </ul> </li> <li>Fundraising<ul> <li>Sent internal funding update</li> <li>Sent a couple thank you emails</li> </ul> </li> <li>Comms<ul> <li>GitHub, email, Matrix triage and responses</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/kriti/#2023-08-24-thu","title":"2023-08-24 (Thu)","text":"<ul> <li>Comms<ul> <li>Caught up on email and GitHub</li> <li>Followed up on demo fix deployment / release discussion</li> <li>Call with Sean about vacation handoff and benefits</li> </ul> </li> <li>Administrative<ul> <li>Meeting with Ian about funding logistics</li> <li>Meeting with Sam &amp; Adam about funding logistics and administrative next steps</li> <li>Followed up on funding logistics</li> </ul> </li> <li>Code<ul> <li>Re-reviewed wiki PR</li> <li>Helped with wiki deployment issues</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/kriti/#2023-08-23-wed","title":"2023-08-23 (Wed)","text":"<ul> <li>Team management<ul> <li>Ran weekly meeting</li> <li>Posted meeting notes on wiki</li> <li>Made calendar events for next cycle, break, and release</li> </ul> </li> <li>Comms<ul> <li>Caught up on email, responded to a bunch of threads</li> <li>Caught up with GitHub inbox</li> </ul> </li> <li>Administrative<ul> <li>Meeting with Sam &amp; Adam about next steps for Mathesar organization</li> </ul> </li> <li>Code<ul> <li>Reviewed wiki PR, updated admonition markup</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/kriti/#2023-08-22-tue","title":"2023-08-22 (Tue)","text":"<p>Partial day (sick)</p> <ul> <li>Some comms &amp; emails</li> <li>Prepped for weekly meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/kriti/#2023-08-21-mon","title":"2023-08-21 (Mon)","text":"<p>Out sick</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/kriti/#2023-08-18-fri","title":"2023-08-18 (Fri)","text":"<p>Partial day (sick)</p> <ul> <li>Ran weekly team meeting.</li> <li>Attended team event.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/kriti/#2023-08-17-thu","title":"2023-08-17 (Thu)","text":"<ul> <li>Team &amp; project management<ul> <li>Responded to thread about Aritra\u2019s GSoC project</li> <li>Responded to release thread with some thoughts</li> <li>Responded to email discussions thread with decision</li> <li>Responded to Postgres compatibility project discussion with some ideas</li> <li>Followed up on the \u201ccriteria for closing user opened tickets\u201d thread</li> <li>Responded to \u201cshould we install things on the Postgres DBs\u201d thread with some thoughts</li> <li>Responded to Pavish\u2019s feedback discussion with some thoughts.</li> <li>Reviewed installation project and sent email.</li> <li>Reviewed niche research project and sent email.</li> <li>Updated product strategy project and projects page on wiki</li> <li>Set up agenda for tomorrow\u2019s meeting</li> </ul> </li> <li>Comms<ul> <li>Triaged email &amp; GitHub</li> <li>Handled Matrix comms</li> </ul> </li> <li>Self organization<ul> <li>Intro consultation with a work coach</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/kriti/#2023-08-16-wed","title":"2023-08-16 (Wed)","text":"<ul> <li>Team &amp; project management<ul> <li>1:1 with Ghislaine</li> <li>Followed up on installation project</li> <li>Followed up on ad-hoc issues</li> <li>Followed up on release thread with questions and next steps</li> <li>Followed up on next steps with projects from 0.1.3 that aren\u2019t part of the release</li> <li>Reviewed Postgres compatibility project</li> <li>Followed up on email discussions which haven\u2019t been started yet</li> </ul> </li> <li>Comms<ul> <li>Triaged email &amp; GitHub</li> <li>Responded to email and GitHub issues as needed </li> <li>Handled Matrix comms</li> </ul> </li> <li>Fundraising<ul> <li>Followed up with funder</li> <li>Followed up on fundraising workshop scheduling</li> <li>Other fundraising related correspondence</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/kriti/#2023-08-11-to-2023-08-15-fri-tue","title":"2023-08-11 to 2023-08-15 (Fri - Tue)","text":"<p>Out of office for various reasons</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/kriti/#2023-08-10-thu","title":"2023-08-10 (Thu)","text":"<ul> <li>Team &amp; project management<ul> <li>Ran today\u2019s team meeting</li> <li>1:1 with Pavish</li> <li>Augmented and posted team meeting notes on the wiki </li> <li>Sent a summary with action items out to the team</li> </ul> </li> <li>Comms<ul> <li>Triaged GitHub and email</li> <li>Responded to pending emails</li> <li>Cleared out GitHub inbox and sent some follow ups about user reported issues</li> <li>Follow up conversation about backlog organization with Sean and Dom (on Matrix)</li> </ul> </li> <li>Product<ul> <li>Figured out next steps for remove DB superuser requirement PR</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/kriti/#2023-08-09-wed","title":"2023-08-09 (Wed)","text":"<ul> <li>Team &amp; project management<ul> <li>Ran today\u2019s team meeting</li> <li>Added more notes after the meeting and posted notes to the wiki</li> <li>Planned out tomorrow\u2019s weekly meeting</li> </ul> </li> <li>Comms<ul> <li>Triaged GitHub and email</li> <li>Some responses</li> </ul> </li> <li>Fundraising<ul> <li>How to Raise Money workshop session (9/11)</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/kriti/#2023-08-08-tue","title":"2023-08-08 (Tue)","text":"<ul> <li>Product<ul> <li>Product strategy discussion &amp; next steps with Ghislaine</li> <li>Commented on copy changes in optional inference PR</li> <li>Reviewed product question in DB privilege update PR</li> <li>Made some updates to the docs in the superuser creation docs update PR</li> <li>Made some updates to the docs and reviewed the Postgres Docker image PR</li> <li>Reviewed the UI for creating &amp; managing shares for tables and explorations</li> </ul> </li> <li>Team<ul> <li>(Long) 1:1 with Dom</li> <li>Wrote up and sent out agenda for tomorrow\u2019s weekly meeting</li> </ul> </li> <li>Fundraising<ul> <li>1:1 with Geoffrey to do funder call post-mortem</li> </ul> </li> <li>Comms<ul> <li>Triaged GitHub and email</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/kriti/#2023-08-07-mon","title":"2023-08-07 (Mon)","text":"<ul> <li>Comms<ul> <li>Triaged email and GitHub</li> <li>Rescheduled some meetings</li> <li>Call with Zack from Openverse</li> </ul> </li> <li>Release management<ul> <li>Caught up on current state of projects and next steps for release</li> <li>Followed up on various project threads</li> <li>Made decisions on release cut off date and issue prioritization</li> </ul> </li> <li>Product<ul> <li>Reviewed i18n switcher PR</li> <li>Updated superuser creation copy in this PR</li> </ul> </li> <li>Team<ul> <li>1:1 with Sean</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/kriti/#2023-08-04-fri","title":"2023-08-04 (Fri)","text":"<ul> <li>Fundraising<ul> <li>Made adjustments to fundraising script and slides based on feedback from practice sessions</li> <li>Practiced fundraising presentation</li> <li>Meeting with funder </li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/kriti/#2023-08-03-thu","title":"2023-08-03 (Thu)","text":"<p>Day off</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/kriti/#2023-08-02-wed","title":"2023-08-02 (Wed)","text":"<p>Out sick for most of the day</p> <ul> <li>Weekly meeting</li> <li>Followed up on weekly meeting with async discussion emails</li> <li>Caught up on GitHub / Matrix / email + related action items</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/kriti/#2023-08-01-tue","title":"2023-08-01 (Tue)","text":"<ul> <li>Comms<ul> <li>Caught up on GitHub / Matrix / email + related action items</li> <li>Set up agenda for tomorrow\u2019s weekly meeting, sent email</li> </ul> </li> <li>Team management<ul> <li>(Long) 1:1 with Brent</li> </ul> </li> <li>Product<ul> <li>Product strategy discussion with Ghislaine</li> </ul> </li> <li>Fundraising<ul> <li>(Long) fundraising prep + practice meeting</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/pavish/","title":"Pavish\u2019s work log archive: 2023-08","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-08/pavish/#2023-08-31","title":"2023-08-31","text":"<ul> <li>Started reviewing Load \u201cen\u201d translations parallely </li> <li>Spent time finding issues/features to work on, when I\u2019m not actively assisting on the projects</li> <li>Chat with Brent and Ghislaine on further tasks for Postgres DB compatibility and Niche research projects</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/pavish/#2023-08-28-to-2023-08-30","title":"2023-08-28 to 2023-08-30","text":"<ul> <li>Assisted with the release</li> <li>Spent time thinking/researching/taking-notes on:</li> <li>improvements to our permissions system</li> <li>performance improvements by simplifying the cell component</li> <li>an approach towards e2e tests</li> <li>steps to improve our routing approach</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/pavish/#2023-08-25","title":"2023-08-25","text":"<ul> <li>Fixed regression and raised PR: Move UserProfile to the App level context from Route level context</li> <li>1-1 with Kriti</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/pavish/#2023-08-24","title":"2023-08-24","text":"<ul> <li>Assisting manual QA for release</li> <li>Added DB list demo mode PR in the release</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/pavish/#2023-08-23","title":"2023-08-23","text":"<ul> <li>Sent mail on Product level permissions to account for related entities</li> <li>Reviewed and merged Make column type inference optional</li> <li>Weekly meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/pavish/#2023-08-22","title":"2023-08-22","text":"<ul> <li>Thought more about Product level permissions to account for related entities</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/pavish/#2023-08-21","title":"2023-08-21","text":"<ul> <li>Skimmed through Make column type inference optional</li> <li>Placed it in to-do for more thorough review</li> <li>Responded to some discussions</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/pavish/#2023-08-18","title":"2023-08-18","text":"<ul> <li>Weekly meeting</li> <li>Community event</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/pavish/#2023-08-17","title":"2023-08-17","text":"<ul> <li>Started email thread on handling user feedback (XY problem)</li> <li>Responded to Brent\u2019s mail on compatibility with preexisting DBs</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/pavish/#2023-08-16","title":"2023-08-16","text":"<ul> <li>Responded to \u2018users who do not want anything installed on the DB\u2019 mail</li> <li>Niche meeting with Ghislaine and Brent</li> <li>Reviewed Create superuser page\u2019s stylings</li> <li>Responded to a number of smaller discussions</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/pavish/#2023-08-14-to-2023-08-15","title":"2023-08-14 to 2023-08-15","text":"<ul> <li>I was away on both days</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/pavish/#2023-08-08-to-2023-08-11","title":"2023-08-08 to 2023-08-11","text":"<ul> <li>Resolved reviews and got all 3 PRs for the \u2018Shares\u2019 project merged.</li> <li>Team meetings and discussions.</li> <li>1/1s and catch ups.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/pavish/#2023-08-07","title":"2023-08-07","text":"<ul> <li>Raised PR to finish up \u2018Shares\u2019 project.</li> <li>#3133 Shares - regenerate link, general fixes</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/pavish/#2023-08-04","title":"2023-08-04","text":"<ul> <li>Core team event</li> <li>Continued work on finishing up \u2018Shares\u2019 project.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/pavish/#2023-08-03","title":"2023-08-03","text":"<ul> <li>Usecase feedback meeting with Ghislaine</li> <li>Started work on addressing smaller issues in \u2018Shares\u2019</li> <li>Endpoint to regenerate link</li> <li>Hiding linked entities in shared table consumer page</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/pavish/#2023-08-02","title":"2023-08-02","text":"<ul> <li>Raised PR for UI for creating &amp; managing shares for tables and explorations</li> <li>Team meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/pavish/#2023-08-01","title":"2023-08-01","text":"<ul> <li>Continued working on UI for creating &amp; managing shares for tables and explorations</li> <li>Got PR for viewing shared queries ready</li> <li>Helped fix pipeline for intermittent failing tests</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/rajat/","title":"Rajat\u2019s work log archive 2023-08","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-08/rajat/#2023-08-29-2023-08-30-2023-08-31","title":"2023-08-29, 2023-08-30, 2023-08-31","text":"<p>Partially available</p> <p>Active</p> <ul> <li>i18n documentation for developers. This is blocking the review of [i18n] Export &amp; import translations</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/rajat/#2023-08-28","title":"2023-08-28","text":"<p>Active</p> <ul> <li>i18n documentation for developers. This is blocking the review of [i18n] Export &amp; import translations</li> </ul> <p>Completed</p> <ul> <li>Chat with Sean about adhoc issues in the cycle that needs to be assigned to me</li> <li>Repo admin</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/rajat/#2023-08-25","title":"2023-08-25","text":"<p>On leave from 2023-08-21 half day to 2023-08-25 half day</p> <p>Active</p> <ul> <li>i18n documentation for developers. This is blocking the review of [i18n] Export &amp; import translations</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/rajat/#2023-08-21","title":"2023-08-21","text":"<p>Half day</p> <p>Completed</p> <ul> <li>Repo-admin</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/rajat/#2023-08-17","title":"2023-08-17","text":"<p>Completed</p> <ul> <li>Repo-admin</li> <li>Prepare &amp; do use-cases meetings with Ghislaine.</li> <li>Get v0.1.3 out</li> <li>Including super user creation page items from the Installations improvements project.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/rajat/#2023-08-16","title":"2023-08-16","text":"<ul> <li>2023-08-11 - Planned leave</li> <li>2023-08-14 - Sick leave</li> <li>2023-08-15 - Sick leave</li> </ul> <p>TODO</p> <ul> <li>Prepare &amp; do use-cases meetings with Ghislaine.</li> <li>Start an email thread on the dev mailing list for the i18n retrospective</li> <li>Address review feedback in [i18n] Load \u201cen\u201d translations parallely</li> <li>Address review feedback in [i18n] Save preferred_language for auth user in db</li> <li>Address review feedback in [i18n] Language switcher for anon users</li> <li>i18n Other documentation-related tasks</li> <li>i18n PR for making all strings in the FE codebase translatable. The work here is done, just need to update as per the review comments on other PRs.</li> <li>ESLint rule for i18n</li> <li>i18n testing</li> <li>AIs from the \u201cNext Release\u201d milestone email.</li> <li>Turn off the Stale Issues Bot</li> <li>Check-in for next cycle\u2019s FE ad-hoc tasks.</li> <li>Sync with Mukesh about the next cycle\u2019s installation work. (Mukesh will be sending out an invite for Friday once he has the project write-up ready.)</li> <li>Update the i18n project\u2019s wiki page.</li> </ul> <p>Active</p> <ul> <li>Get v0.1.3 out</li> <li>Send out project updates e-mail for i18n.</li> <li>i18n documentation for developers. This is blocking the review of [i18n] Export &amp; import translations</li> </ul> <p>Completed</p> <ul> <li>Check e-mails.</li> <li>Repo admin (pending items from the last 3 days)</li> <li>Update work-logs</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/rajat/#2023-08-10","title":"2023-08-10","text":"<p>TODO</p> <ul> <li>AIs from the \u201cNext Release\u201d milestone email.</li> </ul> <p>Active</p> <ul> <li>i18n documentation for developers</li> </ul> <p>Completed</p> <ul> <li>Review Pavish\u2019s PR for shareable links</li> <li>Follow up with i18n PRs review (all of the PRs are now reviewed at least once)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/rajat/#2023-08-09","title":"2023-08-09","text":"<p>TODO</p> <ul> <li>AIs from the \u201cNext Release\u201d milestone email.</li> </ul> <p>Active</p> <ul> <li>Review Pavish\u2019s PR for shareable links</li> <li>Follow up with i18n PRs review</li> </ul> <p>Completed</p> <ul> <li>Replacing more translation strings in the FE codebase. (Might need a little more work depending on the current open PRs review feedback)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/rajat/#2023-08-08","title":"2023-08-08","text":"<p>TODO</p> <ul> <li>AIs from the \u201cNext Release\u201d milestone email.</li> </ul> <p>Active</p> <ul> <li>Replacing more translation strings in the FE codebase.</li> <li>Follow up with i18n PRs review</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/rajat/#2023-08-07","title":"2023-08-07","text":"<p>TODO</p> <ul> <li>AIs from the \u201cNext Release\u201d milestone email.</li> </ul> <p>Active</p> <ul> <li>Replacing more translation strings in the FE codebase.</li> <li>Follow up with i18n PRs review</li> </ul> <p>Completed</p> <ul> <li>Check-in for v0.1.3 release progress</li> <li>Progress report for the i18n project.</li> <li>Update pending worklogs</li> <li>Send e-mail for i18n ESlint rule current state</li> <li>Repo admin work</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/rajat/#2023-08-04","title":"2023-08-04","text":"<p>TODO</p> <ul> <li>AIs from the \u201cNext Release\u201d milestone email.</li> <li>Check-in for the v0.1.3 release progress</li> </ul> <p>Active</p> <ul> <li>Replacing more translation strings in the FE codebase.</li> <li>Follow up with i18n PRs review</li> </ul> <p>Completed</p> <ul> <li>Update the Mathesar superuser creation screen Django templates</li> <li>Repo admin work</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/rajat/#2023-08-03","title":"2023-08-03","text":"<p>TODO</p> <ul> <li>AIs from the \u201cNext Release\u201d milestone email.</li> </ul> <p>Active</p> <ul> <li>Update the Mathesar superuser creation screen Django templates</li> <li>Replacing more translation strings in the FE codebase.</li> <li>Follow up with i18n PRs review</li> </ul> <p>Completed</p> <ul> <li>Repo admin work</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/rajat/#2023-08-02","title":"2023-08-02","text":"<p>TODO</p> <ul> <li>Update the Mathesar superuser creation screen Django templates</li> <li>AIs from the \u201cNext Release\u201d milestone email.</li> </ul> <p>Active</p> <ul> <li>Replacing more translation strings in the FE codebase.</li> <li>Follow up with i18n PRs review</li> </ul> <p>Completed</p> <ul> <li>PR for import/export</li> <li>Repo admin work</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-08/rajat/#2023-08-01","title":"2023-08-01","text":"<p>TODO</p> <ul> <li>PR for import/export</li> <li>AIs from the \u201cNext Release\u201d milestone email.</li> </ul> <p>Active</p> <ul> <li>Replacing more translation strings in the FE codebase.</li> <li>Follow up with i18n PRs review</li> </ul> <p>Completed</p> <ul> <li>v0.1.3 milestone health check</li> <li>Repo admin work</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/anish/","title":"Anish\u2019s work log archive: 2023-09","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-09/anish/#2023-09-29","title":"2023-09-29","text":"<ul> <li>Sick Day</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/anish/#2023-09-28","title":"2023-09-28","text":"<ul> <li>Sync with Brent</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/anish/#2023-09-27","title":"2023-09-27","text":"<ul> <li>Weekly meet</li> <li>Sync with Mukesh</li> <li>Discussions with Rajat &amp; Mukesh about #3170</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/anish/#2023-09-26","title":"2023-09-26","text":"<ul> <li>Didn\u2019t find any bugs for #3170, so a light day</li> <li>Did some profiling on mathesar</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/anish/#2023-09-25","title":"2023-09-25","text":"<ul> <li>Bug fixes for #3170</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/anish/#2023-09-22","title":"2023-09-22","text":"<ul> <li>Got to know some more preexisting &amp; new bugs with the current setup of #3170</li> <li>Discussed the same with Rajat &amp; Mukesh</li> <li>Sync with Anshuman(GSoC).</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/anish/#2023-09-21","title":"2023-09-21","text":"<ul> <li>Troubleshooting debian build script.(ran into multiple errors during the process)</li> <li>Fixed merge conflicts for #3170 &amp; it\u2019s migrations so that the encrypted fields are initialized with a default username and password during migrations instead of a empty string</li> <li>Helped Anshuman with async with #3030.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/anish/#2023-09-20","title":"2023-09-20","text":"<ul> <li>Tried running Supabase with Mathesar</li> <li>Discussed #3109 with Dom &amp; Brent, &amp; will hopefully be fixed once #3170 gets merged </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/anish/#2023-09-19","title":"2023-09-19","text":"<ul> <li>Sync with Dom</li> <li>Sync with Mukesh</li> <li>Fixed a bug in #3203 so that the migrations won\u2019t fail for someone running previous versions of Mathesar</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/anish/#2023-09-18","title":"2023-09-18","text":"<ul> <li>Did nothing (Cause I ran out of work to do)</li> <li>Waiting on the review for #3055</li> <li>Asked Dom if I can be of help with his ongoing project</li> <li>Will start working on the documentation for Debian install #3165 once a PR for docker installation is created as #3165 should follow the same template</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/anish/#2023-09-15","title":"2023-09-15","text":"<ul> <li>Sync with Anshuman(GSoC)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/anish/#2023-09-14","title":"2023-09-14","text":"<ul> <li>Addressed requested changes for #3055</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/anish/#2023-09-13","title":"2023-09-13","text":"<ul> <li>Sync with Mukesh</li> <li>Addressed requested changes for #3170</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/anish/#2023-09-12","title":"2023-09-12","text":"<ul> <li>Worked on #3203</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/anish/#2023-09-11","title":"2023-09-11","text":"<ul> <li>Worked on #3055 &amp; opened #3203 for fixing the same</li> <li>Addressed requested changes for #3170</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/anish/#2023-09-08","title":"2023-09-08","text":"<ul> <li>Sync with Anshuman(GSoC)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/anish/#2023-09-07","title":"2023-09-07","text":"<ul> <li>Sync with Mukesh</li> <li>Sync with Brent</li> <li>Sync with Sean</li> <li>Worked on #3055</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/anish/#2023-09-06","title":"2023-09-06","text":"<ul> <li>Weekly meet</li> <li>Worked on #3055</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/anish/#2023-09-05","title":"2023-09-05","text":"<ul> <li>Worked on #3198 and testing it</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/anish/#2023-09-04","title":"2023-09-04","text":"<ul> <li>Worked on github action for uploading static assets to release #3198</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/anish/#2023-09-01","title":"2023-09-01","text":"<ul> <li>Reviewed #3195</li> <li>Sync with Anshuman(GSoC)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/anish/#archive","title":"Archive","text":"<ul> <li>August 2023 work logs</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/","title":"Brent\u2019s work log archive: 2023-09","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#2023-09-29","title":"2023-09-29","text":"<p>Still moving boxes around; not much desk time. </p>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#infrastructure","title":"Infrastructure","text":"<ul> <li>Checked status of internal Mathesar installation; no update required</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#marketing","title":"Marketing","text":"<ul> <li>Cleared out Syften notifications</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#architecture","title":"Architecture","text":"<ul> <li>Did some thinking about a \u201cdream architecture\u201d for Mathesar while moving boxes</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#2023-09-28","title":"2023-09-28","text":"<p>Still moving boxes around; not much desk time. </p>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#meetings","title":"Meetings","text":"<ul> <li>1:1 with Anish; discussed architecture plans</li> <li>1:1 with Pavish; talked about E2E testing project.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#2023-09-27","title":"2023-09-27","text":"<p>Today was moving day. Attended meetings and did some thinking while carrying boxes.</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#2023-09-26","title":"2023-09-26","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#messaging-admin","title":"Messaging, admin","text":"<ul> <li>Brought Kriti\u2019s attention to domain renewal notice when she returns (probable phishing attempt).</li> <li>Participated in email threads</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#architecture_1","title":"Architecture","text":"<ul> <li>Worked out more details of new architecture proposal</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#2023-09-25","title":"2023-09-25","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#misc-projects","title":"Misc. projects","text":"<ul> <li>Wrote up stub project for avoiding regressions</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#emailmessages","title":"Email/messages","text":"<ul> <li>Started conversation about handling permissions issues</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#marketing_1","title":"Marketing","text":"<ul> <li>Went through Syften notifications</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#infrastructure_1","title":"Infrastructure","text":"<ul> <li>Updated internal.mathesar.org</li> <li>Wrote meeting agenda item about setting up an infrastructure ongoing responsibility</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#2023-09-22","title":"2023-09-22","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#infrastructure_2","title":"Infrastructure","text":"<ul> <li>updated internal Mathesar installation</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#meetings_1","title":"Meetings","text":"<ul> <li>1:1 with Mukesh</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#preexisting-db-compatibility","title":"Preexisting DB compatibility","text":"<ul> <li>Worked on splitting into themed projects</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#pr-reviews","title":"PR reviews","text":"<ul> <li>https://github.com/centerofci/mathesar/pull/3121 (approved; merged)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#2023-09-21","title":"2023-09-21","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#meetings_2","title":"Meetings","text":"<ul> <li>1:1 with Sean</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#pr-reviews_1","title":"PR reviews","text":"<ul> <li>https://github.com/centerofci/mathesar/pull/3121 (requested changes)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#infrastructure_3","title":"Infrastructure","text":"<ul> <li>Updated internal Mathesar installation</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#marketing_2","title":"Marketing","text":"<ul> <li>Looked through Syften notifications</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#preexisting-db-compatibility_1","title":"Preexisting DB compatibility","text":"<ul> <li>Worked on themed projects.</li> <li>Created local method for testing Mathesar performance under different network latency assumptions.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#2023-09-20","title":"2023-09-20","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#infrastructure_4","title":"Infrastructure","text":"<ul> <li>Updated internal Mathesar installation</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#preexisting-db-compatibility_2","title":"Preexisting DB compatibility","text":"<ul> <li>Sent email with instructions for when https://github.com/centerofci/mathesar/pull/3206 gets merged</li> <li>Sent project update email</li> <li>Worked on performance testing, </li> <li>Worked on splitting findings into themed projects</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#marketing_3","title":"Marketing","text":"<ul> <li>Cleared out Syften notifications, noted a pattern on the marketing channel</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#2023-09-19","title":"2023-09-19","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#marketing_4","title":"Marketing","text":"<ul> <li>Kept an eye on Syften notifications, cleared out inbox</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#infrastructure_5","title":"Infrastructure","text":"<ul> <li>Updated internal Mathesar installation</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#preexisting-db-compatibility_3","title":"Preexisting DB compatibility","text":"<ul> <li>Looked into performance when Mathesar\u2019s web service is not colocated with the DB</li> <li>Terribly slow progress, because performance testing on the slow app took time</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#2023-09-18","title":"2023-09-18","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#infrastructure_6","title":"Infrastructure","text":"<ul> <li>Updated internal Mathesar installation</li> <li>Reset demo load balancer</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#pr-reviews_2","title":"PR reviews","text":"<ul> <li>https://github.com/centerofci/mathesar/pull/3189 (approved)</li> <li>This was extremely laborious, and took most of the day.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#2023-09-15","title":"2023-09-15","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#pr-reviews_3","title":"PR reviews","text":"<ul> <li>https://github.com/centerofci/mathesar/pull/3186 (approved, merged)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#preexisting-db-compatibility_4","title":"Preexisting DB compatibility","text":"<ul> <li>Submitted PR to test compatibility with PG versions 13, 14, 15   https://github.com/centerofci/mathesar/pull/3206</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#2023-09-14","title":"2023-09-14","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#pr-reviews_4","title":"PR reviews","text":"<ul> <li>Initial look through https://github.com/centerofci/mathesar/pull/3121</li> <li>Initial look through https://github.com/centerofci/mathesar/pull/3189</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#preexisting-db-compatibility_5","title":"Preexisting DB compatibility","text":"<ul> <li>Completed scale testing, recorded results</li> <li>Verified composite type support, recorded results</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#2023-09-13","title":"2023-09-13","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#preexisting-db-compatibility_6","title":"Preexisting DB compatibility","text":"<ul> <li>Asynced with Pavish about status</li> <li>Worked on scale testing</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#marketing_5","title":"Marketing","text":"<ul> <li>Cleared out inbox of Syften notifications</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#infrastructure_7","title":"Infrastructure","text":"<ul> <li>Investigated domain renewal notice</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#2023-09-12","title":"2023-09-12","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#pr-reviews_5","title":"PR reviews","text":"<ul> <li>https://github.com/centerofci/mathesar-wiki/pull/105 (approved)</li> <li>https://github.com/centerofci/mathesar-ansible/pull/42 (approved)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#emailmessaging","title":"Email/messaging","text":"<ul> <li>Went through Dom\u2019s helpful feedback w.r.t. the SQL codebase from his project update</li> <li>Cleared out other notifications from social media</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#2023-09-11","title":"2023-09-11","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#meetings_3","title":"Meetings","text":"<ul> <li>1:1 with Dom</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#pr-reviews_6","title":"PR reviews","text":"<ul> <li>https://github.com/centerofci/mathesar/pull/3186 (requested changes)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#bug-hunt","title":"Bug hunt","text":"<ul> <li>Found problem with FE, raised in FE channel, determined it\u2019s already known.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#marketing_6","title":"Marketing","text":"<ul> <li>Looked through Syften notifications, nothing interesting this round</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#preexisting-db-compatibility_7","title":"Preexisting DB compatibility","text":"<ul> <li>Sent update email</li> <li>Started looking into composite type support (or lack of it)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#2023-09-08","title":"2023-09-08","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#meetings_4","title":"Meetings","text":"<ul> <li>1:1 with Mukesh</li> <li>Catch up with Dom w.r.t. his PR #3186</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#pr-reviews_7","title":"PR reviews","text":"<ul> <li>Follow up on https://github.com/centerofci/mathesar/pull/3186</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#preexisting-db-compatibility_8","title":"Preexisting DB compatibility","text":"<ul> <li>Continued testing of problems, added to the meta issue</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#2023-09-07","title":"2023-09-07","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#meetings_5","title":"Meetings","text":"<ul> <li>1:1 with Anish</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#pr-reviews_8","title":"PR reviews","text":"<ul> <li>https://github.com/centerofci/mathesar/pull/3186 (requested changes)</li> <li>https://github.com/centerofci/mathesar/pull/3121 (requested changes)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#preexisting-db-compatibility_9","title":"Preexisting DB compatibility","text":"<ul> <li>Continued testing of problems, added to the meta issue</li> <li>Decided not to host test data; we determined it\u2019s not useful at the moment.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#2023-09-06","title":"2023-09-06","text":"<p>Short day due to sick family</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#meetings_6","title":"Meetings","text":"<ul> <li>Team meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#email-messaging","title":"Email / messaging","text":"<ul> <li>Replied to DB access email thread</li> <li>First, I re-read the PostgreSQL docs about permissions, roles and <code>GRANT</code></li> <li>Replied to E2E testing thread</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#2023-09-05","title":"2023-09-05","text":"<p>Short day due to sick family</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#marketing_7","title":"Marketing","text":"<ul> <li>Cleared out inbox of Syften notifications, flagged interesting ones</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#preexisting-db-compatibility_10","title":"Preexisting DB compatibility","text":"<ul> <li>Worked on organizing thinking for known problems</li> <li>Started Meta issue, tested DB versions</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#2023-09-04","title":"2023-09-04","text":"<p>Short day due to sick family.</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#meetings_7","title":"Meetings","text":"<ul> <li>1:1 with Pavish about preexisting DB project</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#preexisting-db-compatibility_11","title":"Preexisting DB compatibility","text":"<ul> <li>Worked on organizing thinking for known problems</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#2023-09-01","title":"2023-09-01","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#meetings_8","title":"Meetings","text":"<ul> <li>meeting with Mukesh about demo deployment</li> <li>1:1 with Mukesh</li> <li>Core team event</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/brent/#release-013","title":"Release 0.1.3","text":"<ul> <li>Successfully got the prod deployments deployed</li> <li>Spent most of the day fighting with demo setup</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/ghislaine/","title":"Ghislaine\u2019s work log","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-09/ghislaine/#2023-09-28","title":"2023-09-28","text":"<ul> <li>Research userbase in Github</li> <li>Planning meeting with Sean and Pavish</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/ghislaine/#2023-09-27","title":"2023-09-27","text":"<ul> <li>Weekly Meeting</li> <li>General research on how to use the user CRM and planning</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/ghislaine/#2023-09-26","title":"2023-09-26","text":"<p>Didn\u2019t had much work to do after closing up the research - Check-in with Kriti</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/ghislaine/#2023-09-25","title":"2023-09-25","text":"<ul> <li>Design session with Rajat</li> <li>Modify Database Credentials design</li> <li>Rewrite Niche Research conclussions based on review with Sean and Pavish</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/ghislaine/#2023-09-22","title":"2023-09-22","text":"<ul> <li>Additional research for the conclussion</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/ghislaine/#2023-09-21","title":"2023-09-21","text":"<ul> <li>Niche Research: Review current status w Sean and Pavish</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/ghislaine/#2023-09-20","title":"2023-09-20","text":"<ul> <li>Niche research: Prepare presentation</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/ghislaine/#2023-09-19","title":"2023-09-19","text":"<ul> <li>Niche research: Look into competitors and personas</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/ghislaine/#2023-09-18","title":"2023-09-18","text":"<ul> <li>Review issue for Grouped columns</li> <li>Niche research</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/ghislaine/#2023-09-14","title":"2023-09-14","text":"<ul> <li>Day off</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/ghislaine/#2023-09-14_1","title":"2023-09-14","text":"<ul> <li>Niche research</li> <li>Review session w/ Sean</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/ghislaine/#2023-09-13","title":"2023-09-13","text":"<ul> <li>Niche research</li> <li>Quick work session w Pavish and Mukesh for Database Credentials</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/ghislaine/#2023-09-12","title":"2023-09-12","text":"<ul> <li>Niche research: Product vision for Mathesar</li> <li>Database credentials update</li> <li>Survey updates</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/ghislaine/#2023-09-11","title":"2023-09-11","text":"<ul> <li>Niche research: Collect data</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/ghislaine/#2023-09-08","title":"2023-09-08","text":"<ul> <li>Niche research: Collect data</li> <li>Review niche research with Sean</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/ghislaine/#2023-09-07","title":"2023-09-07","text":"<ul> <li>Niche Research: Collect Use Cases</li> <li>Review Round: Database Credentials</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/ghislaine/#2023-09-06","title":"2023-09-06","text":"<ul> <li>Niche Research</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/ghislaine/#2023-09-05","title":"2023-09-05","text":"<ul> <li>Niche research</li> <li>Work on presentation of niche research for team meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/ghislaine/#2023-09-04","title":"2023-09-04","text":"<p>Didn\u2019t work a full day due to medical reasons - Survey Updates</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/ghislaine/#2023-09-01","title":"2023-09-01","text":"<ul> <li>Niche research</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/kriti/","title":"Kriti\u2019s work log archive: 2023-09","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-09/kriti/#2023-09-29-fri","title":"2023-09-29 (Fri)","text":"<p>Partial day, migraine</p> <ul> <li>Team event</li> <li>Conversations and follow ups related to the \u201ctalking to users\u201d project</li> <li>A bunch of small administrative tasks and comms</li> <li>Email + GitHub + Matrix catch up</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/kriti/#2023-09-28-thu","title":"2023-09-28 (Thu)","text":"<ul> <li>Created large Google Doc to organize and track org transition tasks with Sam and Adam</li> <li>1:1 with Sean</li> <li>Read through user research meeting notes and followed up with feedback</li> <li>Set up / followed up on 7 different meetings</li> <li>Email + GitHub + Matrix catch up</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/kriti/#2023-09-27-wed","title":"2023-09-27 (Wed)","text":"<ul> <li>Spent a bunch of time organizing / planning upcoming priorities &amp; work</li> <li>Call with Sam and Adam</li> <li>Weekly meeting<ul> <li>Also cleaned up and posted weekly meeting notes</li> </ul> </li> <li>Email + GitHub + Matrix catch up</li> <li>Some administrative related follow ups</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/kriti/#2023-09-26-tue","title":"2023-09-26 (Tue)","text":"<ul> <li>Email + GitHub + Matrix catch up</li> <li>1:1 with Brent</li> <li>1:1 with Pavish</li> <li>1:1 with Ghislaine + catch up about niche research</li> <li>Updated weekly meeting agenda</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/kriti/#2023-09-25-mon","title":"2023-09-25 (Mon)","text":"<ul> <li>Call with Sean about current state of projects and how the cycle went</li> <li>Caught up on (LOTS OF) email and responses</li> <li>Skimmed through Matrix and GitHub, responded to some things, marked everything as read</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/kriti/#2023-09-01-to-2023-09-24","title":"2023-09-01 to 2023-09-24","text":"<p>Out of office</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/pavish/","title":"Pavish\u2019s work log archive: 2023-09","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-09/pavish/#2023-09-29","title":"2023-09-29","text":"<ul> <li>Pondered more on user flows for E2E tests</li> <li>Responded to user raised GH ticket: How to disable schema modifications #3228</li> <li>Core team event</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/pavish/#2023-09-28","title":"2023-09-28","text":"<ul> <li>Call with Brent on E2E testing and dealing with regressions</li> <li>Call with Sean and Ghislaine on User interviews and CRM</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/pavish/#2023-09-27","title":"2023-09-27","text":"<ul> <li>Weekly meeting</li> <li>Researched more on E2E testing strategy</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/pavish/#2023-09-26","title":"2023-09-26","text":"<ul> <li>Debugged setup issue in PR and resolved conflict in Upgrade node version, remove Storybook</li> <li>1-1 with Kriti</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/pavish/#2023-09-25","title":"2023-09-25","text":"<ul> <li>Read through breaking changes in Svelte 4 and started figuring out approach to migrate</li> <li>1-1 with Sean</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/pavish/#2023-09-22","title":"2023-09-22","text":"<ul> <li>Pondered on Niche research outcome and product level questions to raise</li> <li>Collected some more thoughts on Permission handling in Mathesar</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/pavish/#2023-09-21","title":"2023-09-21","text":"<ul> <li>Re-reviewed Load \u201cen\u201d translations parallely</li> <li>Thought about ways to deal with workarounds</li> <li>Call with Rajat to discuss approaches and finalize all changes in this review round</li> <li>Reviewed and merged Survey banner PR</li> <li>Niche research meeting with Ghislaine and Sean</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/pavish/#2023-09-20","title":"2023-09-20","text":"<ul> <li>Raised PR to Add description to column properties, frontend impl</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/pavish/#2023-09-19","title":"2023-09-19","text":"<ul> <li>Raised PR to upgrade Node</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/pavish/#2023-09-18","title":"2023-09-18","text":"<ul> <li>Call with Rajat to discuss approach in (Load \u201cen\u201d translations parallely)[https://github.com/centerofci/mathesar/pull/3102]</li> <li>Pondered about various possible ways to split i18n files cleanly, after the call</li> <li>Started upgrading Node version</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/pavish/#2023-09-15","title":"2023-09-15","text":"<ul> <li>Call with Brent to discuss results of effects of different PG permissions in Mathesar</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/pavish/#2023-09-14","title":"2023-09-14","text":"<ul> <li>Continued testing effects of varying PG permissions in Mathesar</li> <li>Identified one critical issue and some potential issues</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/pavish/#2023-09-13","title":"2023-09-13","text":"<ul> <li>Had review call and approved Design spec for adding user database credentials using the UI</li> <li>Continued testing effects of varying PG permissions in Mathesar</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/pavish/#2023-09-12","title":"2023-09-12","text":"<ul> <li>Survey work session with Ghislaine and Sean</li> <li>Continued testing effect of varying PG permissions in Mathesar</li> <li>Continued working on Support for column descriptions/comments</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/pavish/#2023-09-11","title":"2023-09-11","text":"<ul> <li>I had a day off work</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/pavish/#2023-09-08","title":"2023-09-08","text":"<ul> <li>Finished testing PG versions 9 and 10 for compatibility</li> <li>Started looking through PG permissions to test effect of different permission levels on Mathesar</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/pavish/#2023-09-07","title":"2023-09-07","text":"<ul> <li>Call with Mukesh on static file location</li> <li>Reviewed [i18n] Load \u201cen\u201d translations parallely</li> <li>Reviewed Design spec for adding user database credentials using the UI</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/pavish/#2023-09-06","title":"2023-09-06","text":"<ul> <li>Weekly meeting</li> <li>1:1 with Sean</li> <li>Took a look at the form for survey</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/pavish/#2023-09-05","title":"2023-09-05","text":"<ul> <li>Started testing PG versions to test compatibility</li> <li>Had a partial work day</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/pavish/#2023-09-04","title":"2023-09-04","text":"<ul> <li>Reviewed, added commits, and merged Fix URL cell focus loss when clicking on its contained hyperlink</li> <li>Call with Brent on Preexisting DB compatibility project</li> <li>Responded to mails</li> <li>Started work on Support for column descriptions/comments</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/pavish/#2023-09-01","title":"2023-09-01","text":"<ul> <li>Core team event</li> <li>Spent time testing to find breaking features with preexisting postgres DB</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/rajat/","title":"Rajat\u2019s work log archive: 2023-09","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-09/rajat/#2023-09-29","title":"2023-09-29","text":"<ul> <li>Db connection UI</li> <li>Errors section when not able to connect to the DB (active)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/rajat/#2023-09-28","title":"2023-09-28","text":"<ul> <li>Db connection UI</li> <li>Errors section when not able to connect to the DB (active)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/rajat/#2023-09-27","title":"2023-09-27","text":"<ul> <li>Db connection UI</li> <li>No database found component</li> <li>Errors section when not able to connect to the DB (active)</li> <li>Repo-admin work</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/rajat/#2023-09-26","title":"2023-09-26","text":"<ul> <li>Db connection UI</li> <li>Created a new listing page with search designs</li> <li>Repo-admin work</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/rajat/#2023-09-25","title":"2023-09-25","text":"<ul> <li>Db connection UI</li> <li>Update routing as per the designs &amp; code cleanup</li> <li>Repo-admin work</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/rajat/#2023-09-22","title":"2023-09-22","text":"<ul> <li>Draft PR for Db connection UI which fixes UI for adding/modifying user database credentials in Mathesar.</li> <li> Add DB connection Form</li> <li> Edit DB connection Form</li> <li> Delete DB connection</li> <li>Repo admin work</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/rajat/#2023-09-21","title":"2023-09-21","text":"<ul> <li>Integrated add db connection post api. UI for adding/modifying user database credentials in Mathesar</li> <li>Repo admin work</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/rajat/#2023-09-20","title":"2023-09-20","text":"<ul> <li>Made progress on the UI states for UI for adding/modifying user database credentials in Mathesar</li> <li>Repo admin work</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/rajat/#2023-09-19","title":"2023-09-19","text":"<ul> <li>Push &amp; pull translations PR update. [i18n] Export &amp; import translations</li> <li>Submitted review for community PR #2829</li> <li>Repo admin work</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/rajat/#2023-09-18","title":"2023-09-18","text":"<ul> <li>Made all the requested changed for [i18n] Load \u201cen\u201d translations parallely.</li> <li>Repo admin work</li> <li>1-on-1 with Sean</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/rajat/#2023-09-15","title":"2023-09-15","text":"<ul> <li>Addressing review feedback of [i18n] Load \u201cen\u201d translations parallely. Landed on a roadblock related to bundling translations files.</li> <li>Repo admin work</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/rajat/#2023-09-14","title":"2023-09-14","text":"<p>Partially out, was not able to get much done</p> <ul> <li>Review Installation project designs</li> <li>Repo admin work</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/rajat/#2023-09-13","title":"2023-09-13","text":"<ul> <li>Addressing review feedback of [i18n] Load \u201cen\u201d translations parallely</li> <li>Repo admin work</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/rajat/#2023-09-12","title":"2023-09-12","text":"<ul> <li>Addressing review feedback of [i18n] Load \u201cen\u201d translations parallely</li> <li>Repo admin work</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/rajat/#2023-09-11","title":"2023-09-11","text":"<ul> <li>1-on-1 with Sean</li> <li>Repo admin work</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/rajat/#2023-09-08","title":"2023-09-08","text":"<ul> <li>Worked on i18n documentation for developers. This is blocking the review of [i18n] Export &amp; import translations</li> <li>Repo admin work</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/rajat/#2023-09-07","title":"2023-09-07","text":"<ul> <li>Worked on i18n documentation for developers. This is blocking the review of [i18n] Export &amp; import translations</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/rajat/#2023-09-06","title":"2023-09-06","text":"<ul> <li>Address review feedback in [i18n] Language switcher for anon users</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/rajat/#2023-09-05","title":"2023-09-05","text":"<ul> <li>Address review feedback in [i18n] Save preferred_language for auth user in db</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/rajat/#2023-09-04","title":"2023-09-04","text":"<ul> <li>Address review feedback in [i18n] Load \u201cen\u201d translations parallely</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-09/rajat/#2023-09-01","title":"2023-09-01","text":"<p>OOO</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/anish/","title":"Anish\u2019s work log archive: 2023-10","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-10/anish/#2023-10-31","title":"2023-10-31","text":"<ul> <li>Reviewed #3252</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/anish/#2023-10-30","title":"2023-10-30","text":"<ul> <li>Wrote a reply for #3109</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/anish/#2023-10-27","title":"2023-10-27","text":"<ul> <li>Async discussion with Brent</li> <li>Core team event</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/anish/#2023-10-26","title":"2023-10-26","text":"<ul> <li>Sync with Brent</li> <li>Discussed about what to work on next</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/anish/#2023-10-25","title":"2023-10-25","text":"<ul> <li>Did Nothing</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/anish/#2023-10-24","title":"2023-10-24","text":"<ul> <li>Did Nothing</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/anish/#2023-10-23","title":"2023-10-23","text":"<ul> <li>Did Nothing</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/anish/#2023-10-20","title":"2023-10-20","text":"<ul> <li>Follow up with Brent about #3243 not getting merged due to the CI pipeline.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/anish/#2023-10-19","title":"2023-10-19","text":"<ul> <li>Fixed failing pytest GH action for backend PRs</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/anish/#2023-10-18","title":"2023-10-18","text":"<ul> <li>Async product related discussions with Kriti</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/anish/#2023-10-17","title":"2023-10-17","text":"<ul> <li>Found some bugs and opened issues for the same #3247, #3248 </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/anish/#2023-10-16","title":"2023-10-16","text":"<ul> <li>Did Nothing</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/anish/#2023-10-13","title":"2023-10-13","text":"<ul> <li>Did Nothing</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/anish/#2023-10-12","title":"2023-10-12","text":"<ul> <li>Worked on fixing #3109 &amp; opened #3243 for the same</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/anish/#2023-10-11","title":"2023-10-11","text":"<ul> <li>Did Nothing</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/anish/#2023-10-10","title":"2023-10-10","text":"<ul> <li>Sync with pavish about walkthrough of the frontend codebase</li> <li>Worked on #3232 &amp; opened #3239 for the same</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/anish/#2023-10-09","title":"2023-10-09","text":"<ul> <li>Worked on #3232</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/anish/#2023-10-06","title":"2023-10-06","text":"<ul> <li>UX for db connections sync </li> <li>Worked on #3232</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/anish/#2023-10-05","title":"2023-10-05","text":"<ul> <li>Sync with Brent</li> <li>Weekly team meet</li> <li>Respond on #3230</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/anish/#2023-10-04","title":"2023-10-04","text":"<ul> <li>got #3232 assigned</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/anish/#2023-10-03","title":"2023-10-03","text":"<ul> <li>Sick Day</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/anish/#2023-10-02","title":"2023-10-02","text":"<ul> <li>Sick Day</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/anish/#archive","title":"Archive","text":"<ul> <li>September 2023 work logs</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/","title":"Brent\u2019s work log archive: 2023-10","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#2023-10-31","title":"2023-10-31","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#meetings","title":"Meetings","text":"<ul> <li>1:1 with Kriti about AWS setup and other things</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#user-help-marketing","title":"User help / marketing","text":"<ul> <li>worked on AWS setups for Mathesar</li> <li>set up root account</li> <li>read docs for account management</li> <li>set up non-root developer account for myself</li> <li>Caught up a bit in Freshdesk</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#2023-10-30","title":"2023-10-30","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#infrastructure","title":"Infrastructure","text":"<ul> <li>Updated internal Mathesar installation</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#hand-off","title":"Hand off","text":"<ul> <li>catching up on various last-minute info and organization from Dom and Mukesh</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#2023-10-27","title":"2023-10-27","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#meetings_1","title":"Meetings","text":"<ul> <li>1:1 with Mukesh</li> <li>User call: https://mathesar.freshdesk.com/a/tickets/1492</li> <li>Core team event</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#pr-reviews","title":"PR reviews","text":"<ul> <li>https://github.com/centerofci/mathesar/pull/3243 (merged)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#infrastructure_1","title":"Infrastructure","text":"<ul> <li>Keeping an eye on new pipeline setup</li> <li>Updated internal Mathesar installation</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#2023-10-26","title":"2023-10-26","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#meetings_2","title":"Meetings","text":"<ul> <li>1:1 with Anish</li> <li>User call prep meeting with Pavish and Kriti</li> <li>1:1 with Kriti</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#infrastructure_2","title":"Infrastructure","text":"<ul> <li>Finished pipeline fix</li> <li>Set up completely new branch protection rules</li> <li>Emailed dev list about necessary steps to get everyone\u2019s PRs passing the CI pipeline.</li> <li>ad-hoc syncing with Pavish about front end concerns w.r.t. the fix</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#marketing","title":"Marketing","text":"<ul> <li>Caught up on various user help threads</li> <li>Cleared out Syften notifications</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#2023-10-25","title":"2023-10-25","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#infrastructure_3","title":"Infrastructure","text":"<ul> <li>Continued work on pipeline issue.</li> <li>Checked on internal server</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#meetings_3","title":"Meetings","text":"<ul> <li>Handoff meeting with Dom</li> <li>1:1 with Kriti</li> <li>User call with AJP about setup of Mathesar on AWS</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#marketing_1","title":"Marketing","text":"<ul> <li>Cleared out Syften notifications</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#2023-10-24","title":"2023-10-24","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#infrastructure_4","title":"Infrastructure","text":"<ul> <li>Worked on solution to pipeline breakage,</li> <li>Monitored matrix server</li> <li>Checked on internal server (no action needed)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#meetings_4","title":"Meetings","text":"<ul> <li>1:1 with Kriti</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#2023-10-23","title":"2023-10-23","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#meetings_5","title":"Meetings","text":"<ul> <li>1:1 with Dom</li> <li>Ad-hoc catch-up with Kriti about pipeline situation</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#infrastructure_5","title":"Infrastructure","text":"<ul> <li>Finished fixing Matrix server</li> <li>Monitored the same Matrix server to make sure it was behaving</li> <li>Checked on internal.mathesar.org ; no action needed</li> <li>Noticed and started work on fixing major problem preventing some backend PRs from merging, and others from being properly tested.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#2023-10-20","title":"2023-10-20","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#meetings_6","title":"Meetings","text":"<ul> <li>1:1 with Mukesh</li> <li>call with Kriti and AJP about Mathesar use cases</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#infrastructure_6","title":"Infrastructure","text":"<p>The entire day was consumed by trying to figure out what was broken with our Matrix server, and working on a fix.</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#2023-10-19","title":"2023-10-19","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#marketing_2","title":"Marketing","text":"<ul> <li>Cleared out Syften notifications</li> <li>Sent follow up email to potential user via Freshdesk</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#architecture","title":"Architecture","text":"<ul> <li>Compiling notes, thoughts, and results from Users and permissions II</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#2023-10-18","title":"2023-10-18","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#meetings_7","title":"Meetings","text":"<ul> <li>Users and Permissions II</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#architecture_1","title":"Architecture","text":"<ul> <li>Continued working on putting notes together into something coherent and consumable by others</li> <li>Prepped for users and permissions meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#2023-10-17","title":"2023-10-17","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#meetings_8","title":"Meetings","text":"<ul> <li>1:1 with Sean about connections UI</li> <li>Meeting about permissions concepts and UX</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#architecture_2","title":"Architecture","text":"<ul> <li>Wrote wiki page about new vision for permissions architecture.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#preexisting-db-compatibility","title":"Preexisting DB compatibility","text":"<ul> <li>Put together a quick issue in this space for a GSoC hopeful</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#marketing_3","title":"Marketing","text":"<ul> <li>Cleared Syften notificatoins</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#2023-10-16","title":"2023-10-16","text":"<p>More architecture writing!</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#architecture_3","title":"Architecture","text":"<ul> <li>Worked through model exposition cleanup</li> <li>Some messaging and emailing about various details</li> <li>Started email chain about permissions concepts</li> <li>Scheduled meetings for next day</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#marketing_4","title":"Marketing","text":"<ul> <li>Cleared out Syften notifications</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#meetings_9","title":"Meetings","text":"<ul> <li>Synced with Kriti</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#2023-10-13","title":"2023-10-13","text":"<p>Most of this day was heads-down working on architecture write-up.</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#architecture_4","title":"Architecture","text":"<ul> <li>Initial pages of architecture write-up done, published in branch on wiki</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#meetings_10","title":"Meetings","text":"<ul> <li>1:1 with Mukesh</li> <li>Mathesar community event</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#2023-10-12","title":"2023-10-12","text":"<p>Most of this day was heads-down working on architecture write-up and reading <code>psycopg</code> docs.</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#architecture_5","title":"Architecture","text":"<ul> <li>Worked on compiling various notes into something coherent and publishable.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#infrastructure_7","title":"Infrastructure","text":"<ul> <li>Helped user with questions about AWS setup</li> <li>Updated internal Mathesar installation</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#2023-10-11","title":"2023-10-11","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#marketing_5","title":"Marketing","text":"<ul> <li>Cleared out Syften notifications</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#self-improvement","title":"Self-improvement","text":"<ul> <li>Read CRM docs</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#architecture_6","title":"Architecture","text":"<ul> <li>Asynced with Mukesh about Serializers and access control in our app</li> <li>Did some more investiation and note-taking about current status of code base, changes</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#2023-10-10","title":"2023-10-10","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#architecture_7","title":"Architecture","text":"<ul> <li>Asynced with Mukesh about python versions we need to support, and the implications of that</li> <li>Experimented with async options, looked at where it would be useful; ultimately decided it\u2019s not needed/useful (yet)</li> <li>Finished cataloging model data, redesigning model setup</li> <li>Looked into whether serializers will remain useful (a bit, in some cases)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#infrastructure_8","title":"Infrastructure","text":"<ul> <li>Checked internal installation; no update needed</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#2023-10-09","title":"2023-10-09","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#marketing_6","title":"Marketing","text":"<ul> <li>Looked through posts about setting Mathesar up on AWS</li> <li>cleared out Syften notifications</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#architecture_8","title":"Architecture","text":"<ul> <li>I\u2019m confident at this point that the team supports having a tech architecture, minimizing state</li> <li>Talked with Dom about Connections, storing them, caching engines</li> <li>SQLAlchemy engines are overcomplicated</li> <li>Psycopg3 ones are simpler</li> <li>Incorporated ideas from other backend devs into architecture designs somewhat (ongoing)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#2023-10-06","title":"2023-10-06","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#meetings_11","title":"Meetings","text":"<ul> <li>1:1 with Pavish</li> <li>1:1 with Mukesh</li> <li>user call with Kriti</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#infrastructure_9","title":"Infrastructure","text":"<ul> <li>Updated internal Mathesar installation</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#architecture_9","title":"Architecture","text":"<ul> <li>Modified architecture ideas according to conversations with Mukesh and Pavish</li> <li>Took notes on</li> <li>Ideas for more RPC-style setup for some endpoints</li> <li>Ideas for DB connection handling</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#2023-10-05","title":"2023-10-05","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#marketing_7","title":"Marketing","text":"<ul> <li>Cleared out Syften notifications</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#infrastructure_10","title":"Infrastructure","text":"<ul> <li>Updated internal Mathesar installation</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#architecture_10","title":"Architecture","text":"<ul> <li>Started comprehensive catalog of all metadata stored in models, notes on simplifications and modifications.</li> <li>Minor async discussions with team members to clarify my understanding of some parts of code base.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#meetings_12","title":"Meetings","text":"<ul> <li>1:1 with Anish</li> <li>Team meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#2023-10-04","title":"2023-10-04","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#infrastructure_11","title":"Infrastructure","text":"<ul> <li>Quick one-off work to let Sean access the matrix DB</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#architecture_11","title":"Architecture","text":"<ul> <li>Looked through serializers and viewsets, determining how we can simplify</li> <li>Async conversations to clarify my understanding of some complex software design choices.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#emailmessages","title":"Email/messages","text":"<ul> <li>Caught up on some developer conversations</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#2023-10-03","title":"2023-10-03","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#architecture_12","title":"Architecture","text":"<ul> <li>Spent most of the day going through models, noting what we store vs. get from DB</li> <li>Took a \u201cbig picture\u201d look at how requests move from the API down to the user DB(s) and back</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#meetings_13","title":"Meetings","text":"<ul> <li>1:1 with Kriti</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#marketing_8","title":"Marketing","text":"<ul> <li>Cleared out Syften notifications</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#2023-10-02","title":"2023-10-02","text":"<p>Still dealing with tail end of moving disruption. Should be more productive, but still not 100%.</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#meetings_14","title":"Meetings","text":"<ul> <li>1:1 with Dom</li> <li>Asyced (a bit) with Mukesh</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#emailmessages_1","title":"Email/messages","text":"<ul> <li>Responded to cycle retrospective</li> <li>Responded to question about installation</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#user-help","title":"User help","text":"<ul> <li>Looked at installation request submission, messaged Kriti with recommendations</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/brent/#marketing_9","title":"Marketing","text":"<ul> <li>Cleared out Syften notifications</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/ghislaine/","title":"Ghislaine\u2019s work log","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-10/ghislaine/#2023-10-26","title":"2023-10-26","text":"<ul> <li>Design for database page updates</li> </ul> <p>Current Focus: - My current focus is on coordinating with Sean to discuss the proposed design and prepare the final design for a round of feedback.</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/ghislaine/#2023-10-25","title":"2023-10-25","text":"<ul> <li>Send user feedback emails</li> <li>Design for database page updates</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/ghislaine/#2023-10-16","title":"2023-10-16","text":"<ul> <li>Database Users Discussion</li> <li>Test Mathesar installation to uncover usability issues and for a better understanding of the problem</li> <li>Design exploration for database page updates</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/ghislaine/#2023-10-13","title":"2023-10-13","text":"<ul> <li>Discussion with Sean regarding database page</li> <li>Create Github issue for database page updates</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/ghislaine/#2023-10-12","title":"2023-10-12","text":"<p>Day off</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/ghislaine/#2023-10-11","title":"2023-10-11","text":"<ul> <li>Usability Issues: Add more detail and create Github Issues</li> <li>Exploratory design for record selector and inline record editing </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/ghislaine/#2023-10-10","title":"2023-10-10","text":"<ul> <li>Usability issues discussion and collaboration request</li> <li>User feedback meeting</li> <li>Update CRM entries</li> <li>Meeting with Sean to discuss usability issues</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/ghislaine/#2023-10-09","title":"2023-10-09","text":"<ul> <li>Usability issues</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/ghislaine/#2023-10-06","title":"2023-10-06","text":"<ul> <li>Usability issues</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/ghislaine/#2023-10-05","title":"2023-10-05","text":"<ul> <li>Check-in with Kriti</li> <li>Tasks planning</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/ghislaine/#2023-10-04","title":"2023-10-04","text":"<p>Worked a partial day due to personal reasons - Internal CRM Planning</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/ghislaine/#2023-10-03","title":"2023-10-03","text":"<ul> <li>Internal CRM Planning</li> <li>Create CRM entries</li> <li>Meeting with Pavish and Sean</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/ghislaine/#2023-10-02","title":"2023-10-02","text":"<ul> <li>Internal CRM Planning</li> <li>Update/Research contact information</li> <li>Email/Discussions</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/kriti/","title":"Kriti\u2019s work log archive: 2023-10","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-10/kriti/#2023-10-31-tue","title":"2023-10-31 (Tue)","text":"<p>Partial day due to various medical issues</p> <ul> <li>1:1 with Sean</li> <li>1:1 with Mukesh</li> <li>1:1 with Adam</li> <li>Sent out email about grant</li> <li>Prepped for call with Ian (Wednesday)</li> <li>Prepped for tomorrow\u2019s weekly meeting</li> <li>Email + Matrix catch up</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/kriti/#2023-10-30-mon","title":"2023-10-30 (Mon)","text":"<ul> <li>Long call with Dom about feedback etc.</li> <li>Call with Adam and Sam to figure out next steps for org transition</li> <li>Email + Matrix catch up</li> <li>A bunch of minor tasks<ul> <li>Reviewed Pavish\u2019s user email</li> <li>Wrote a draft of another email</li> </ul> </li> <li>Call with user (with Brent)</li> <li>Set up AWS account so Brent can help a couple of users</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/kriti/#2023-10-27-fri","title":"2023-10-27 (Fri)","text":"<ul> <li>Team event</li> <li>1:1 with Ghislaine</li> <li>Discussion with Pavish &amp; Sean about following up after user research call</li> <li>Figured out a platform for sending rewards to international users (took WAY too much time)</li> <li>Email + GitHub + Matrix catch up<ul> <li>plus responses + small action items</li> <li>caught up on some overdue replies</li> </ul> </li> <li>Call with Ian</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/kriti/#2023-10-26-thu","title":"2023-10-26 (Thu)","text":"<ul> <li>Prep for user call on Friday w/ Pavish and Brent</li> <li>Call with Brent to walk through new GitHub Actions job strategy + general prioritization</li> <li>2 x catch-up calls with past colleagues</li> <li>1:1 with Pavish (originally supposed to be call with SJ)</li> <li>Email + GitHub + Matrix catch up<ul> <li>plus responses + small action items</li> </ul> </li> <li>Figured out offboarding tasks for Dom, Rajat, Mukesh<ul> <li>Sent some emails</li> </ul> </li> <li>Merged website PR https://github.com/centerofci/mathesar-website/pull/95</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/kriti/#2023-10-25-wed","title":"2023-10-25 (Wed)","text":"<p>Partial day, doctor\u2019s appointment</p> <ul> <li>Short call with Sean to discuss priorities</li> <li>Reviewed DB connections spec from Sean</li> <li>Call with Pavish (and briefly Brent) to discuss how Mathesar could help with WMF ecosystem</li> <li>Call with IP lawyer about org / project name</li> <li>Call with lawyer about next steps for org transition</li> <li>Email + GitHub + Matrix catch up<ul> <li>plus responses + small action items</li> </ul> </li> <li>Debugged Maubot failure, turned GitHub bot back on.</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/kriti/#2023-10-24-tue","title":"2023-10-24 (Tue)","text":"<ul> <li>Calls with most people on the team</li> <li>\u201cHow to Raise Money\u201d final workshop session</li> <li>Email + GitHub + Matrix catch up + responses</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/kriti/#2023-10-23-mon","title":"2023-10-23 (Mon)","text":"<ul> <li>Call with Pavish</li> <li>Call with Brent</li> <li>Call with Sean</li> <li>Call with Sam</li> <li>Agenda for upcoming lawyer call</li> <li>A bunch of other administrative work</li> <li>Email + GitHub + Matrix catch up + responses</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/kriti/#2023-10-20-fri","title":"2023-10-20 (Fri)","text":"<ul> <li>Call with AJP re: Mathesar use cases etc.</li> <li>External call re: funding and board logistics</li> <li>External call re: some admin stuff and board logistics</li> <li>A couple of calls with Adam and Sam to talk through some admin stuff</li> <li>Email + GitHub + Matrix catch up + responses<ul> <li>Various admin follow ups</li> <li>Followed up on Matrix issues</li> </ul> </li> <li>Worked on some admin related comms</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/kriti/#2023-10-19-thu","title":"2023-10-19 (Thu)","text":"<ul> <li>Call with Ghislaine to work through user research comms</li> <li>Brainstorming discussion with Brent</li> <li>1:1 with Adam</li> <li>Meeting with potential work coach</li> <li>Worked on strategy and org structure writeups</li> <li>Picked remaining benefits</li> <li>Matrix homeserver debugging</li> <li>Email + GitHub + Matrix catch up + responses<ul> <li>Various admin follow ups</li> </ul> </li> <li>Research into Technology Errors &amp; Omissions insurance</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/kriti/#2023-10-18-wed","title":"2023-10-18 (Wed)","text":"<ul> <li>DB &amp; permissions UX meeting part 2</li> <li>Email + GitHub + Matrix catch up + responses</li> <li>Various administrative follow ups (legal, accounting, meeting scheduling, etc.)</li> <li>A bunch of thinking / brainstorming about<ul> <li>org structure</li> <li>product strategy</li> <li>fundraising</li> <li>hiring</li> </ul> </li> <li>Quick call with Pavish to finalize email template for survey respondent outreach</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/kriti/#2023-10-17-tue","title":"2023-10-17 (Tue)","text":"<ul> <li>Email + GitHub + Matrix catch up + responses</li> <li>Meeting re: databases &amp; permission UX brainstorming</li> <li>Checked in on benefits</li> <li>Checked in with GSoC contributors / interns about their experience</li> <li>Lots of admin / comms / follow ups</li> <li>Meeting with mentor to figure out next steps for fundraising</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/kriti/#2023-10-16-mon","title":"2023-10-16 (Mon)","text":"<ul> <li>Administrative<ul> <li>Read through new by-law templates and sent comments to lawyer</li> <li>Followed up with lawyer re: board roster</li> <li>Followed up with lawyer re: org structure stuff</li> <li>Checked on benefits updates (none yet)</li> <li>Call with Trinet (potential payroll provider)</li> </ul> </li> <li>User research<ul> <li>Reached out to AJP</li> <li>Updated CRM entries</li> <li>SavvyCal account clean up</li> </ul> </li> <li>Community<ul> <li>Signed up for GitHub Open Source Friday event</li> <li>Looked through backend issues for new contributor</li> </ul> </li> <li>Internal meetings<ul> <li>1:1 with Brent</li> <li>1:1 with Sean</li> </ul> </li> <li>Email + GitHub + Matrix catch up + responses</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/kriti/#2023-10-13-fri","title":"2023-10-13 (Fri)","text":"<ul> <li>Team event</li> <li>1:1 with Ghislaine</li> <li>Call with Adam about operations / finance stuff</li> <li>Bunch of follow ups and comms related to: funding, legal, operations</li> <li>Email + GitHub + Matrix catch up<ul> <li>Bunch of replies</li> <li>Scheduled meetings</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/kriti/#2023-10-12-thu","title":"2023-10-12 (Thu)","text":"<ul> <li>Call with Sean re: user research &amp; installation work for release 0.1.4</li> <li>Call with SJ &amp; Pavish re: Mathesar use cases for WMF ecosystem and next steps</li> <li>Call with Insperity about their services</li> <li>Call with Mukesh about installation work for release 0.1.4</li> <li>Did some research into team event activities</li> <li>Email + GitHub + Matrix catch up<ul> <li>Bunch of replies</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/kriti/#2023-10-11-wed","title":"2023-10-11 (Wed)","text":"<p>Partial day due to some medical stuff.</p> <ul> <li>Call with Adam &amp; Sam re: org transition</li> <li>Call with just Sam about org transiiton</li> <li>Picked medical benefits</li> <li>A whole bunch of legal follow ups</li> <li>Email + GitHub + Matrix catch up<ul> <li>Bunch of replies</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/kriti/#2023-10-10-tue","title":"2023-10-10 (Tue)","text":"<p>Partial day due to doctor appointment.</p> <ul> <li>Call with Ghislaine, Pavish, Sean re: user research next steps</li> <li>Call with Adam &amp; Sam re: org transition</li> <li>Call with Ian re: funding and board</li> <li>Email + GitHub + Matrix catch up</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/kriti/#2023-10-09-mon","title":"2023-10-09 (Mon)","text":"<p>Out of office for US holiday.</p>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/kriti/#2023-10-06-fri","title":"2023-10-06 (Fri)","text":"<ul> <li>(Very long) call with potential Mathesar user, helped with installation<ul> <li>Cleaned up and posted notes in our user CRM</li> </ul> </li> <li>Wrote up questions about org by-laws and sent to lawyer</li> <li>Email + GitHub + Matrix catch up<ul> <li>Lots of related follow-ups &amp; responses</li> </ul> </li> <li>Followed up on and updated CCI org transition / admin tasks document</li> <li>Figured out next team event organizer (me)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/kriti/#2023-10-05-thu","title":"2023-10-05 (Thu)","text":"<ul> <li>Team meeting<ul> <li>Posted weekly meeting notes</li> </ul> </li> <li>1:1 with Ghislaine</li> <li>Reviewed new draft of user email</li> <li>Email + GitHub + Matrix catch up<ul> <li>Lots of related follow-ups &amp; responses</li> </ul> </li> <li>Read through and took notes on organization by-laws</li> <li>Reviewed all of Gusto benefits renewal options</li> <li>Called Gusto to ask them for new packages</li> <li>Wrote up blurb about Mathesar and planned activities for insurance</li> <li>Read through and followed up on team work logs</li> <li>Wrote script for user call tomorrow</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/kriti/#2023-10-04-wed","title":"2023-10-04 (Wed)","text":"<ul> <li>Mathesar-related:<ul> <li>Set up for new GitHub repo<ul> <li>Also documented the process</li> </ul> </li> <li>Discussed agenda for tomorrow\u2019s meeting with Sean</li> <li>Continued organizing / planning upcoming priorities &amp; work</li> </ul> </li> <li>Administrative and org-related:<ul> <li>Call with accountant</li> </ul> </li> <li>Email + GitHub + Matrix catch up<ul> <li>Lots of related follow-ups</li> <li>Scheduled some calls</li> </ul> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/kriti/#2023-10-03-tue","title":"2023-10-03 (Tue)","text":"<ul> <li>(Long) 1:1 with Brent</li> <li>Call with Gusto re: next year\u2019s benefits<ul> <li>Read through and researched benefits options to prep</li> </ul> </li> <li>Check in with Sam &amp; Adam about various transition-related issues</li> <li>Email + GitHub + Matrix catch up</li> <li>Call with organizational insurance provider</li> <li>Various follow ups with companies, lawyers etc.</li> <li>Initial review of DB setup UI pull request</li> <li>Initial review of user contact email + some suggested changes</li> <li>Set up SavvyCal team</li> <li>Moved weekly meeting</li> <li>Followed up on a bunch of other emails</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/kriti/#2023-10-02-mon","title":"2023-10-02 (Mon)","text":"<p>Partial day, migraine</p> <ul> <li>Call with new lawyer about various legal issues and next steps</li> <li>Caught up with email, some responses</li> <li>Some small administrative tasks and follow ups</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/pavish/","title":"Pavish\u2019s work log archive: 2023-10","text":""},{"location":"archive/team/workflow/worklogs/archive/2023-10/pavish/#2023-10-31-tuesday","title":"2023-10-31 Tuesday","text":"<ul> <li>Continued testing Cypress</li> <li>Attempted a basic setup with our dev environment</li> <li>User interviews check-in</li> <li>Responded to Dave from Kubeworkz</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/pavish/#2023-10-30-monday","title":"2023-10-30 Monday","text":"<ul> <li>Call with Sean on Database connections UX</li> <li>Sent mail on workspaces</li> <li>Responded to Dave from Kubeworkz</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/pavish/#2023-10-27-friday","title":"2023-10-27 Friday","text":"<ul> <li>User call with Alexander and Brent</li> <li>Team event</li> <li>Call with Kriti &amp; Sean for user interview followup</li> <li>Call with Rajat</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/pavish/#2023-10-26-thursday","title":"2023-10-26 Thursday","text":"<ul> <li>Chat with Brent on GH actions &amp; workflows</li> <li>Respond to the DB connection UI mail</li> <li>User call preparation meeting with Kriti &amp; Brent</li> <li>WMF call with Kriti &amp; SJ</li> <li>SJ wasn\u2019t able to join, Kriti and I had a 1:1</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/pavish/#2023-10-25-wednesday","title":"2023-10-25 Wednesday","text":"<ul> <li>Continued testing Wikibase, Wikidata, and Commons:Structured_Data</li> <li>Prepared a set of questions to ask SJ for WMF integration</li> <li>Call with Kriti on WMF questions</li> <li>Call with Dom</li> <li>Call with Mukesh</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/pavish/#2023-10-24-tuesday","title":"2023-10-24 Tuesday","text":"<ul> <li>Spent time filling out CRM by finding user details</li> <li>Prepared drafts to send out to some of the users, got it reviewed, and sent the mails</li> <li>Reviewed, added a commit to fix types, and merged Use cell value for fk referenced columns</li> <li>Installed Wikibase locally to test it out</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/pavish/#2023-10-23-monday","title":"2023-10-23 Monday","text":"<ul> <li>Continued reading more about Wikidata, Wikimedia Commons:Structured Data and tested OpenRefine</li> <li>Call with Kriti</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/pavish/#2023-10-20-friday","title":"2023-10-20 Friday","text":"<ul> <li>Debugged Matrix, call with Brent</li> <li>Call with Sean on DB connections</li> <li>Took an initial look at Wikibase for upcoming call with SJ</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/pavish/#2023-10-19-thursday","title":"2023-10-19 Thursday","text":"<ul> <li>Started writing a initial set of E2E tests with Cypress as a POC</li> <li>This is to test speed of writing tests vs Playwright</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/pavish/#2023-10-18-wednesday","title":"2023-10-18 Wednesday","text":"<ul> <li>Call on Permissions UX</li> <li>Added leads from survey to CRM</li> <li>Drafted email template for survey leads</li> <li>Sent out emails to two survey leads</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/pavish/#2023-10-17-tuesday","title":"2023-10-17 Tuesday","text":"<ul> <li>Responded to Sean\u2019s mail on DB connections</li> <li>Responded to Brent\u2019s mail on Permissions UX</li> <li>User interview feedback project meeting</li> <li>Call on Permissions UX</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/pavish/#2023-10-16-monday","title":"2023-10-16 Monday","text":"<ul> <li>Re-reviewed and approved [i18n] Load \u201cen\u201d translations parallely</li> <li>Reviewed and suggested changes [i18n] Export &amp; import translations</li> <li>Took initial look at Use cell value for fk referenced columns</li> <li>Continued testing Cypress</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/pavish/#2023-10-13","title":"2023-10-13","text":"<ul> <li>Started re-reviewing [i18n] Load \u201cen\u201d translations parallely</li> <li>Started testing Cypress</li> <li>Community team meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/pavish/#2023-10-12","title":"2023-10-12","text":"<ul> <li>Looked into Cypress as a potential E2E testing solution</li> <li>User interview call with SJ and Kriti</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/pavish/#2023-10-11","title":"2023-10-11","text":"<ul> <li>(Had a day off due to family emergency)</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/pavish/#2023-10-10","title":"2023-10-10","text":"<ul> <li>Frontend walk through call with Anish</li> <li>User feedback meeting call</li> <li>Call for User Interview Phase 1 plan finalization</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/pavish/#2023-10-09","title":"2023-10-09","text":"<ul> <li>(Had a partial workday due to family commitments)</li> <li>Started writing up project for E2E testing strategy</li> <li>Re-reviewed and approved Db connection UI #3223</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/pavish/#2023-10-06","title":"2023-10-06","text":"<ul> <li>Architecture call with Brent</li> <li>Figured out steps to schedule calls in SavvyCal with common account</li> <li>Call to discuss UX for database connections</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/pavish/#2023-10-05","title":"2023-10-05","text":"<ul> <li>Reviewed and suggested changes in Db connection UI #3223</li> <li>Multiple calls with Rajat</li> <li>Reviewed and merged fix: read-only css for input</li> <li>Reviewed and closed Fix visual regression of input appreaing disabled</li> <li>Mathesar weekly meeting</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/pavish/#2023-10-04","title":"2023-10-04","text":"<ul> <li>Continued reviewing Db connection UI #3223</li> <li>Sync with Mukesh</li> <li>Tried to find more options in SavvyCal for scheduling calls under a team email</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/pavish/#2023-10-03","title":"2023-10-03","text":"<ul> <li>Reviewed Add user outreach email template</li> <li>Call with Sean and Ghislaine on User interviews and CRM</li> <li>Replied to cycle retrospective mail</li> <li>Started reviewing Db connection UI #3223</li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/pavish/#2023-10-02","title":"2023-10-02","text":"<ul> <li>Checked out Calendly and SavvyCal features for team wide round-robin meetings</li> <li>Responded to Kriti\u2019s mail on User interviews</li> <li>Conversations in user raised GH ticket: How to disable schema modifications #3228</li> <li>Took a look at Fix visual regression of input appreaing disabled #3196 and fix: read-only css for input #3197</li> <li> </li> </ul>"},{"location":"archive/team/workflow/worklogs/archive/2023-10/pavish/#3197-is-better-but-it-needs-additional-changes-before-merging-ill-be-making-the-changes-myself-and-merge-it-in","title":"3197 is better but it needs additional changes before merging. I\u2019ll be making the changes myself and merge it in.","text":""},{"location":"community/","title":"Mathesar Community","text":"<p>Welcome to the Mathesar community! We\u2019d love to have you involved in our project, as a contributor, a user or both! Please join our community forums and talk to us there.</p> <p>If you\u2019re interesting in contributing, see Contributing.</p>"},{"location":"community/#community-channels","title":"Community Channels","text":"<p>The Mathesar team does most of our work in public communication channels, which also serve as the place we interact with our community. We also sometimes attend events.</p> Channel Purpose GitHub Code, issue tracking, and asynchronous discussions Mailing Lists Email lists for users and developers Matrix Primary real-time chat Discord Alternate chat (limited rooms)"},{"location":"community/#google-summer-of-code","title":"Google Summer of Code","text":"<p>See GSoC for information about Mathesar\u2019s participation in GSoC.</p>"},{"location":"community/#future-plans","title":"Future Plans","text":"<p>Some ideas we\u2019re considering in the future to grow the community:</p> <ul> <li>Setting up events, such as office hours, pair programming sessions, or even livestreaming our work.</li> <li>An end-user focused Matrix channel</li> <li>A way for users to vote on Roadmap items.</li> </ul> <p>Let us know if you have more ideas!</p>"},{"location":"community/#resources","title":"Resources","text":"<ul> <li>The GitLab Community Relations handbook might be useful reading for how to approach growing our community.</li> </ul>"},{"location":"community/discord/","title":"Mathesar on Discord","text":"<p>We primarily use Matrix for real-time chat. However, we\u2019ve set up a Discord server that bridges Matrix to Discord to make our community more accessible for those with Discord accounts.</p> <p>Join our Discord server here.</p>"},{"location":"community/github/","title":"Mathesar on GitHub","text":"<p>The Mathesar team uses GitHub for code, issue tracking, and long form (asynchronous) discussions. We also have our roadmap here.</p>"},{"location":"community/github/#repositories","title":"Repositories","text":"<ul> <li>The Mathesar code is our main repository.</li> <li>The Mathesar wiki repository is the content for this wiki. Content can either be edited directly in the repository or through the wiki\u2019s web interface.</li> <li>The Mathesar website repository is the repository for <code>mathesar.org</code>. It uses Jekyll and is deployed on GitHub Pages.</li> <li>The Mathesar data playground repository is used for data sets and other data related projects.</li> <li>The Mathesar design prototype repository is used by the design team to prototype upcoming feature designs for Mathesar. We don\u2019t actively use this, as of Aug 2022.</li> <li>We have forked sqlalchemy-filters to add some functionality.</li> </ul>"},{"location":"community/github/#issue-tracking-roadmap","title":"Issue Tracking &amp; Roadmap","text":"<ul> <li>Mathesar repo milestones:  we track our roadmap using GitHub milestones</li> <li>We use GitHub issues across all our repositories to track work. Most of our issues are located on our main repo.</li> </ul>"},{"location":"community/github/#github-discussions","title":"GitHub Discussions","text":"<p>We use GitHub Discussions for asynchronous conversations. We discuss code, design, and plan work here.</p> <p>Please introduce yourself in our introductions thread and don\u2019t hesitate to participate in or start a discussion.</p>"},{"location":"community/mailing-lists/","title":"Mathesar\u2019s mailing Lists","text":""},{"location":"community/mailing-lists/#discussion","title":"Discussion","text":"<p>We have two official Mathesar mailing lists. Anyone is welcome to join!</p> <ul> <li>Mathesar Developers - For Mathesar contributors. Conversations about current work happen here.</li> <li>Mathesar Users - For anyone using or wanting to use Mathesar</li> </ul>"},{"location":"community/mailing-lists/#announcements","title":"Announcements","text":"<p>We have an announcements mailing list for occasional updates about the project. You can join it here.</p>"},{"location":"community/matrix/","title":"Mathesar on Matrix","text":"<p>For realtime chat, we use Matrix (similar to Slack, Discord, Mattermost, Zulip, etc).</p>"},{"location":"community/matrix/#joining","title":"Joining","text":"<ol> <li>To start, join our \u201cGeneral\u201d Matrix channel.<ul> <li>When prompted to \u201cChoose an app to continue\u201d, select \u201cElement\u201d.</li> <li>If you\u2019re new to Matrix, you\u2019ll need to create an account. If you already have a Matrix account, you can use it here, even if that account is hosted on a different Matrix homeserver.</li> </ul> </li> <li>If you want to use a desktop or mobile app, we recommend installing Element. There are other clients too.</li> <li>The \u201cGeneral\u201d channel that you\u2019ve just joined is for high-level discussion and announcements about the project. Most of our day to day discussion happens in other channels. Look through the list of rooms below and join the ones for topics you\u2019re interested.</li> </ol> <p>Information</p> <p>Note: If you\u2019re a GSoC aspirant, join our \u201cMathesar - Mentoring Programs\u201d Matrix channel and introduce yourself there instead of in the \u201cGeneral\u201d channel.</p>"},{"location":"community/matrix/#chat-rooms","title":"Chat rooms","text":"<p>A list of Mathesar related chat rooms is below. You\u2019ll need to individually join whichever chat rooms interest you. Click the link under \u201cAddress\u201d to join the room, follow the same instructions as above.</p> <p>You may also want to join our Matrix Space to keep Mathesar related chats organized. If you don\u2019t know what a Matrix Space is, here\u2019s an overview.</p>"},{"location":"community/matrix/#general-discussion","title":"General discussion","text":"Name Address Purpose Mathesar - General <code>#mathesar:matrix.mathesar.org</code> High-level discussion and announcements about Mathesar. Mathesar - Users <code>#users:matrix.mathesar.org</code> Discussion for Mathesar users (as opposed to Mathesar developers/contributors). Mathesar - Off Topic <code>#offtopic:matrix.mathesar.org</code> Discussion about random topics, not necessarily related to Mathesar."},{"location":"community/matrix/#code","title":"Code","text":"<p>These channels focus on day-to-day engineering work.</p> Name Address Purpose Mathesar - Code <code>#code:matrix.mathesar.org</code> Technical or code-related discussion. Mathesar - Backend <code>#backend:matrix.mathesar.org</code> Discussions related to backend code specifically Mathesar - Frontend <code>#frontend:matrix.mathesar.org</code> Discussions related to frontend code specifically Mathesar - Code Review <code>#code-review:matrix.mathesar.org</code> Requests for code review. See Code Review Guidelines Mathesar - Infrastructure <code>#infrastructure:matrix.mathesar.org</code> Discussions related to Mathesar installation, setup and other infrastructure Mathesar - i18n <code>#i18n:matrix.mathesar.org</code> Discussions related to Mathesar imternationalization"},{"location":"community/matrix/#design-product","title":"Design &amp; Product","text":"<p>These channels focus on day-to-day design and product work.</p> Name Address Purpose Mathesar - Design <code>#design:matrix.mathesar.org</code> Design-related discussion. Mathesar - Product <code>#product:matrix.mathesar.org</code> Product-related discussion. Mathesar - Design Review <code>#design-review:matrix.mathesar.org</code> Requests for design review. See Design Review Guidelines Mathesar - Documentation <code>#documentation:matrix.mathesar.org</code> Discussion about our documentation"},{"location":"community/matrix/#projects","title":"Projects","text":"<p>These channels focus on specific projects.</p> Name Address Purpose Mathesar - Data Modeling <code>#data-modeling.mathesar.org</code> Discussions related to data modeling projects"},{"location":"community/matrix/#community","title":"Community","text":"<p>These channels focus on community building activities.</p> Name Address Purpose Mathesar - Marketing <code>#marketing.mathesar.org</code> Discussions related to promoting Mathesar Mathesar - Mentoring Programs <code>#mentoring.mathesar.org</code> Discussions related to mentoring programs such as GSoC Mathesar - Code for Japan <code>#code-for-japan:matrix.mathesar.org</code> Bridge to the <code>#proj-mathesar</code> channel on the Code for Japan Slack"},{"location":"community/matrix/#maintainers-workflow","title":"Maintainers workflow","text":"<p>These channels assist the Mathesar maintainers in our workflow.</p> Name Address Purpose Mathesar - Internal <code>#internal:matrix.mathesar.org</code> Used for conversations about day-to-day work. Mathesar - Standup <code>#standup:matrix.mathesar.org</code> The Mathesar team\u2019s daily standup. Mathesar - Wiki Review <code>#wiki-review:matrix.mathesar.org</code> Requests for wiki page review and associated discussion. Mathesar - GitHub Updates <code>#github:matrix.mathesar.org</code> Automated notifications of new GitHub activity. Mathesar - Wiki Updates <code>#wiki-updates:matrix.mathesar.org</code> Automated notifications of new GitHub activity ONLY on the wiki repo."},{"location":"community/events/2022-01-22/","title":"2022-01-02 Code for Japan Social Hack Day","text":""},{"location":"community/events/2022-01-22/#about","title":"About","text":"<p>Brent, Joi, Mukesh, and Pavish represented Mathesar at the January 2022 iteration of Code for Japan\u2019s Social Hack Day. Notes from them about the event have been combined below.</p>"},{"location":"community/events/2022-01-22/#notes","title":"Notes","text":"<p>Most of the event involved. discussions with other groups and a number of interesting points came up.</p>"},{"location":"community/events/2022-01-22/#use-cases","title":"Use Cases","text":"<ul> <li>Mathesar has applicability in \u201csometimes available DBA\u201d situations. The example use case was tracking disaster supplies. During non-disaster times, it\u2019s likely a DBA could manage the DB and set things up. However, in a disaster it might become necessary for a non-expert to both work with the data and potentially modify the data model. We\u2019ve previously been mostly considering scenarios where the DB management would be through Mathesar except when some functionality wasn\u2019t available, using psql as a fallback. I thought the scenario of a \u201creal\u201d DBA managing the database how they want (e.g., through psql) under normal conditions, but the users being empowered to take control of the DB through Mathesar in an emergency quite compelling.</li> <li>Real life usecases of participants which Mathesar can help solve:<ul> <li>Mapping disater recovery stockpiles</li> <li>Conducting public surveys and sharing datasets</li> </ul> </li> <li>Listing public restrooms</li> <li>Listing Sake related places, they have their own storage based out of MongoDB.</li> </ul>"},{"location":"community/events/2022-01-22/#feature-requests","title":"Feature Requests","text":"<ul> <li>We came across a scenario where the ability to import a database scheme that enforces some data model would be quite useful. I.e., you would be able to distribute a data model for individual admins to import into their installation and use. It might be worth setting up a user flow for that.</li> <li>Being able to export and import schemas</li> <li>Being able to create users that own a specific set of rows, essentially using Mathesar as a user login &amp; data access portal for higher level applications</li> <li>Being able to detect and maintain consistent Japanese language encoding</li> <li>Maintain consistency of the data, for example date format, preventing null values</li> <li>Granular permissioning</li> </ul>"},{"location":"community/events/2022-01-22/#action-items","title":"Action Items","text":"<ul> <li>Set up a bridge between the new <code>#proj-mathesar</code> channel in the Code for Japan Slack and our Matrix server.</li> <li>Set up a section in our wiki for notes on events</li> <li>Set up a team email address for people to contact us</li> </ul>"},{"location":"community/events/2022-01-22/#other-notes","title":"Other Notes","text":"<ul> <li>People found Mathesar really hard to pronounce</li> <li>We had new contributors who helped &amp; expressed interest in translating our wiki. The About page is already translated to Japanese.</li> </ul>"},{"location":"community/events/2022-03-21-to-2022-03-25/","title":"Office Hours (2022-03-21 to 2022-03-25)","text":""},{"location":"community/events/2022-03-21-to-2022-03-25/#about","title":"About","text":"<p>During our office hours, a member (or members) of the Mathesar core team will be available during on a video call to answer any questions about the project or help you contribute to an issue. </p> <p>Anyone is welcome to join the call.</p>"},{"location":"community/events/2022-03-21-to-2022-03-25/#schedule","title":"Schedule","text":"Date Time Focus Video Call Link Calendar Link 2022-03-21 12:30 PM UTC Backend &amp; Frontend Google Meet Link 2022-03-22 10:30 AM UTC Backend &amp; Frontend Google Meet Link"},{"location":"community/events/2022-03-28-to-2022-03-31/","title":"Office Hours (2022-03-28 to 2022-03-31)","text":""},{"location":"community/events/2022-03-28-to-2022-03-31/#about","title":"About","text":"<p>During our office hours, a member (or members) of the Mathesar core team will be available during on a video call to answer any questions about the project or help you contribute to an issue. </p> <p>Anyone is welcome to join the call.</p>"},{"location":"community/events/2022-03-28-to-2022-03-31/#schedule","title":"Schedule","text":"Date Time Focus Video Call Link Calendar Link 2022-03-28 12:30 PM UTC Backend &amp; Frontend Google Meet Link 2022-03-29 11:30 AM UTC Backend &amp; Frontend Google Meet Link 2022-03-30 14:00 PM UTC Backend &amp; Frontend Google Meet Link"},{"location":"community/events/2022-04-04-to-2022-04-08/","title":"Office Hours (2022-04-04 to 2022-04-08)","text":""},{"location":"community/events/2022-04-04-to-2022-04-08/#about","title":"About","text":"<p>During our office hours, a member (or members) of the Mathesar core team will be available during on a video call to answer any questions about the project or help you contribute to an issue. </p> <p>Anyone is welcome to join the call.</p>"},{"location":"community/events/2022-04-04-to-2022-04-08/#schedule","title":"Schedule","text":"Date Time Focus Video Call Link Calendar Link 2022-04-06 15:00 UTC Backend &amp; Frontend Google Meet Link"},{"location":"community/events/2022-04-12-to-2022-04-15/","title":"Office Hours (2022-04-12 to 2022-04-15)","text":""},{"location":"community/events/2022-04-12-to-2022-04-15/#about","title":"About","text":"<p>During our office hours, a member (or members) of the Mathesar core team will be available during on a video call to answer any questions about the project or help you contribute to an issue. </p> <p>Anyone is welcome to join the call.</p>"},{"location":"community/events/2022-04-12-to-2022-04-15/#schedule","title":"Schedule","text":"Date Time Focus Video Call Link Calendar Link 2022-04-13 14:30 UTC Backend &amp; Frontend Google Meet Link 2022-04-15 14:00 UTC Backend &amp; Frontend Google Meet Link"},{"location":"community/events/2023-03-27-to-2023-03-29/","title":"Office Hours (2023-03-27 to 2023-03-29)","text":""},{"location":"community/events/2023-03-27-to-2023-03-29/#about","title":"About","text":"<p>During our office hours, a member (or members) of the Mathesar core team will be available during on a video call to answer any questions about the project or help you contribute to an issue. </p> <p>Anyone is welcome to join the call.</p>"},{"location":"community/events/2023-03-27-to-2023-03-29/#schedule","title":"Schedule","text":"Date Time Focus Video Call Link Join by Phone Link Calendar Link 2023-03-27 8:00-9:00 UTC GSoC 2023-03-29 14:00-15:00 UTC GSoC Google Meet Link Join by Phone Link"},{"location":"community/gsoc/","title":"Google Summer of Code (GSoC)","text":"<p>Welcome, and thanks for your interest in contributing to Mathesar! </p> <p>GSoC 2024 will not have Mathesar</p> <p>Mathesar will not be participating in Google Summer of Code (GSoC) 2024 due to lack of maintainer capacity. We hope to resume participation in 2025. </p>"},{"location":"community/gsoc/#gsoc-2023-guides","title":"GSoC 2023 Guides","text":"<ul> <li>Project Ideas - Current list of project ideas for our mentorship programs.</li> <li>Applicant Guide - Guide for anyone applying to a mentorship program.</li> <li>Project Proposal Template - Template to use for program applications.</li> </ul>"},{"location":"community/gsoc/#for-mentees","title":"For Mentees","text":"<ul> <li>Mentee Guide - Guide for accepted mentees.</li> </ul>"},{"location":"community/gsoc/#for-mentors","title":"For Mentors","text":"<ul> <li>Mentor Guide - Instructions for mentors</li> <li>Project Idea Template - Template to use when writing up project ideas</li> <li>Notes on the proposal phase from \u201823 GSoC summit - Insights that might help improve the proposal phase</li> </ul>"},{"location":"community/gsoc/applicant-guide/","title":"Applicant Guide","text":"<p>GSoC 2024 will not have Mathesar</p> <p>Mathesar will not be participating in Google Summer of Code (GSoC) 2024 due to lack of maintainer capacity. We hope to resume participation in 2025.</p> <p>This guide was for GSoC 2023.</p>"},{"location":"community/gsoc/applicant-guide/#getting-started","title":"Getting Started","text":"<p>If you\u2019re interested in applying to be a GSoC Contributor for the Mathesar project, please follow this guide. Thank you in advance for your interest, time, and any contributions you make!</p>"},{"location":"community/gsoc/applicant-guide/#step-0-figure-out-if-mathesar-is-the-right-organization-for-you","title":"Step 0: Figure out if Mathesar is the right organization for you","text":"<p>Some things you should know about Mathesar:</p> <ul> <li>Mathesar is a fairly new project and we don\u2019t have documentation aimed at helping new contributors understand our codebase.</li> <li>The Mathesar maintainer team doesn\u2019t have time to help each individual contributor understand our codebase or how to solve a particular issue during the GSoC application process. We get a lot of applicants, and it would be infeasible to answer everyone\u2019s questions in detail.</li> </ul> <p>Successful applicants will read all available information about Mathesar, be able to understand our codebase without much help, and ask good questions when they do need help. If this doesn\u2019t sound like you, Mathesar may not be the right organization for you.</p>"},{"location":"community/gsoc/applicant-guide/#step-1-read-the-program-guide","title":"Step 1: Read the Program Guide","text":"<p>The Google Summer of Code contributor guide is a great introduction to what goes into being a GSoC Contributor. The rest of this document assumes you\u2019re familiar with its contents.</p>"},{"location":"community/gsoc/applicant-guide/#step-2-learn-about-mathesar","title":"Step 2: Learn about Mathesar","text":"<p>You\u2019ll need to understand Mathesar well in order to submit a successful application. </p> <p>Mathesar is a new project and we\u2019re still working towards releasing our first version. The best ways to learn about us is to:</p> <ul> <li>Install Mathesar locally, following the instructions in our README.</li> <li>Read about Mathesar on our main website.</li> </ul>"},{"location":"community/gsoc/applicant-guide/#step-3-join-matrix-and-the-developer-mailing-list","title":"Step 3: Join Matrix and the developer mailing list","text":"<p>Join the \u201cMentoring Programs\u201d Matrix channel or the developer mailing list as early as possible to introduce yourself and get feedback on your ideas.</p> <p>Feel free to ask questions about project ideas, Mathesar, or anything else! Post questions in the main channel - do not contact mentors individually. </p>"},{"location":"community/gsoc/applicant-guide/#step-4-contribute-to-open-issues","title":"Step 4: Contribute to Open Issues","text":"<p>You need to make at least one contribution to Mathesar as part of the application process. Your contribution will give us more information about your work/skills and help us evaluate your application. It will also help you learn more about Mathesar and have more information to pick a project idea.</p> <p>Please see our Contribution Guidelines to learn more about how to contribute.</p>"},{"location":"community/gsoc/applicant-guide/#the-application-process","title":"The Application Process","text":"<p>Once you\u2019re comfortable with Mathesar and the community, it\u2019s time to start the application process.</p>"},{"location":"community/gsoc/applicant-guide/#step-1-pick-a-project-idea","title":"Step 1: Pick a project idea","text":"<p>You\u2019ll need to pick a project that you\u2019re interested in working on. Please see our Project Ideas page for a list of ideas we\u2019ve come up with.</p> <p>Once you pick a project, make sure you understand what the work entails so that you can plan the work out ahead of time and submit a strong application. The mentors are here to help you. We expect you to have a lot of questions and we\u2019re happy to answer them.</p>"},{"location":"community/gsoc/applicant-guide/#step-2-write-a-draft-proposal","title":"Step 2: Write a draft proposal","text":"<p>You\u2019ll now need to write a draft proposal for the idea you\u2019ve chosen to work on. You\u2019ll need to use our Project Proposal Template for this.</p> <p>We expect you to do a significant amount of work on creating your proposal. You\u2019ll need to demonstrate that you understand exactly how to make the changes you\u2019re proposing to the codebase and that you can split the project into smaller deliverables that keep you on track.</p> <p>This is not something you should be working on in isolation. We expect you to have a lot of questions for the mentors along the way as you try and understand the project, come up with ideas, evaluate feasibility, etc. Please ask these in Matrix or the mailing list. Do not contact mentors individually.</p> <p>We suggest reading some articles on writing good Google Summer of Code proposals. Here are some examples:</p> <ul> <li>5 Tips to get your Google Summer of Code proposal accepted</li> <li>Writing a solid Google Summer of Code Proposal</li> </ul>"},{"location":"community/gsoc/applicant-guide/#step-3-get-feedback-from-mentors","title":"Step 3: Get feedback from mentors","text":"<ol> <li>Create a draft proposal in Google Docs.</li> <li>Make sure that mentors have permission to add comments to the document.</li> <li>Submit it via this form for feedback: https://forms.gle/rZ5eYHwcKdbw2X4H6</li> </ol> <p>Do not wait until the last minute to work on your application. You should ideally get at least two rounds of feedback from the mentors before you submit your final application and each round of feedback could take a week or so.</p>"},{"location":"community/gsoc/applicant-guide/#re-submitting-after-feedback","title":"Re-submitting after feedback","text":"<p>Once you\u2019ve received feedback from mentors and made changes to your proposal, you may want to re-submit it for another round of review. You can do that via the same form: https://forms.gle/rZ5eYHwcKdbw2X4H6</p>"},{"location":"community/gsoc/applicant-guide/#step-4-submit-your-final-application","title":"Step 4: Submit your final application","text":"<p>Once you\u2019ve received feedback from your mentors and you\u2019re happy with your proposal, submit your final proposal via the Google Summer of Code website.</p>"},{"location":"community/gsoc/applicant-guide/#communication-tips","title":"Communication Tips","text":"<ul> <li>Ask good questions. Here\u2019s a good guide on Getting Answers.</li> <li>Provide as much information as possible when asking questions. People come from a variety of experiences and backgrounds and the things you may be confused about may be totally different than the things that someone else has questions about. Please give us as much information as possible, the more you tell us, the better we can help you.</li> <li>Communicate in public channels \u2013 GitHub, the mailing list, or public channels on Matrix. Our mentors don\u2019t have the bandwidth to respond to private communication.</li> <li>Help other applicants. Mathesar participates in GSoC to help build our community. We\u2019d like community members to help each other. Your GSoC application will only be helped if you answer questions and support others in the community.</li> <li>Wait a couple of days before following up. Remember that the mentors are busy \u2013 we\u2019ve got full-time jobs.</li> </ul>"},{"location":"community/gsoc/applicant-guide/#selection-criteria","title":"Selection Criteria","text":"<p>Here are a few things we consider when selecting which applications to accept:</p> <ul> <li>Quality of the proposal: This is the most important thing. A good proposal includes attention to detail, externally measurable milestones, consideration for future maintainability and community involvement, and a demonstration of your skills.</li> <li>Community involvement: One of our major goals is to build an active development community and attract long-term contributors. We see engaging in the community, whether it\u2019s asking questions, helping other contributors, contributing code, filing bugs, or whatever else, as a sign that you\u2019re genuinely interested in our work.</li> <li>Contributions: We appreciate seeing your contributions, they help us gauge your ability to orient yourself to a new codebase, or the quality of your writing. Contribution quality is instrumental in giving us the confidence that you have the skills necessary to implement your proposal.</li> <li>Communication skills and initiative: These are essential to completing a successful project. Things we look for (among others): asking specific and detailed questions, following up on conversations, making sure to read available resources before asking questions, being patient and responding to critical feedback well.</li> </ul>"},{"location":"community/gsoc/applicant-guide/#number-of-applications-accepted","title":"Number of Applications Accepted","text":"<p>Please note that we will not be able to select a mentee for every project idea that we have listed. Our organization will be allocated a limited number of project slots by GSoC and we can only accept the number of mentees that we have slots for.</p>"},{"location":"community/gsoc/mentee-guide/","title":"Mentee Guide","text":"<p>GSoC 2024 will not have Mathesar</p> <p>Mathesar will not be participating in Google Summer of Code (GSoC) 2024 due to lack of maintainer capacity. We hope to resume participation in 2025.</p> <p>This guide was for GSoC 2023.</p> <p>This guide is for accepted mentees. If you are an applicant, read our Applicant Guide.</p>"},{"location":"community/gsoc/mentee-guide/#post-announcement","title":"Post-Announcement","text":"<p>Program acceptance announcements have been made and you\u2019ve been selected! Congratulations! Here\u2019s what we expect you to do before the program period officially starts:</p> <ul> <li>Continue to refine your project plan and timeline with your mentors.</li> <li>Define communication channels and set up a weekly check-in with your mentor.</li> <li>Set up your computer and development environment.</li> <li>Read through our Team Guide and familiarize yourself with our workflow and development process.</li> <li>Introduce yourself to the maintainers.</li> </ul>"},{"location":"community/gsoc/mentee-guide/#program-period","title":"Program Period","text":"<p>Once the program starts, here\u2019s what we expect of you:</p> <ul> <li>Work 30-40 hours per week (or agree on a different plan with your mentor ahead of time).</li> <li>Push code to GitHub frequently. Commit early and often.</li> <li>Be available on Matrix whenever you are working.</li> <li>Attend your weekly check-in with your mentor and any other meetings.</li> <li>Be proactive about asking for help, especially when you\u2019re stuck.</li> <li>Ensure that you\u2019re on track to delivering your project at the end of the work period. If you\u2019re not on track, talk with your mentor to come up with a new plan for the project well before the deadline.</li> <li>Let your mentor and the organization admins know when you are going to be unavailable. If something sudden comes up, let us know.</li> </ul>"},{"location":"community/gsoc/mentor-guide/","title":"Mentor Guide","text":"<p>GSoC 2024 will not have Mathesar</p> <p>Mathesar will not be participating in Google Summer of Code (GSoC) 2024 due to lack of maintainer capacity. We hope to resume participation in 2025.</p> <p>This guide was for GSoC 2023.</p> <p>This guide only covers Mathesar-specific processes and guidelines. For a more general overview of what mentorship entails, please read the Google Summer of Code Mentor Guide.</p> <p>Mentoring programs are usually structured into the following stages: 1. Preparing project ideas 2. Applying for the mentoring program 3. Accepting contributions from applicants 4. Reviewing proposals from applicants 5. Choosing mentees 6. Planning with mentees 7. Working with mentees</p>"},{"location":"community/gsoc/mentor-guide/#preparing-project-ideas","title":"Preparing project ideas","text":"<p>We need a list of potential project ideas that applicants can submit a proposal to implement. </p> <p>Project ideas should be:</p> <ul> <li>a self-contained feature or improvement for Mathesar</li> <li>scoped so that a single person can reasonably implement it in the timeframe of the mentoring program<ul> <li>For GSoC, this is either 350 hours or 175 hours</li> </ul> </li> <li>not time-sensitive or critical (there is no guarantee that the project will ship)</li> <li>compatible with our existing product roadmap</li> </ul> <p>Once you\u2019ve come up with a project idea, please: 1. Flesh it out using our Project Idea Template. 2. Add it to the Project Ideas page.</p> <p>If you\u2019re wondering if your project idea makes sense, discuss it on Matrix with other team members first before writing it down.</p> <p>See also: The \u201cDefining a Project (Ideas List)\u201d page of the GSoC mentor guide</p>"},{"location":"community/gsoc/mentor-guide/#applying-for-the-mentoring-program","title":"Applying for the mentoring program","text":"<p>Once we have fleshed our our project ideas, Kriti will submit Mathesar\u2019s application to the mentoring program. While we wait to hear back, you should:</p> <ul> <li>create a set of <code>good first issue</code> tasks suitable for first-time contributors to the codebase.</li> <li>mentally prepare to deal with increased communication work.</li> </ul>"},{"location":"community/gsoc/mentor-guide/#accepting-contributions-from-applicants","title":"Accepting contributions from applicants","text":"<p>Once the mentoring program (e.g. Google) announces the organizations participating in the program, potential applicants will start communicating with us. This stage of the program is the most intense.</p> <p>You should:</p> <ul> <li>welcome new contributors and help them get started with:<ul> <li>applicant information</li> <li>local project setup</li> <li>finding issues to contribute to</li> </ul> </li> <li>review PRs quickly</li> <li>answer questions about the project ideas and the product.</li> </ul>"},{"location":"community/gsoc/mentor-guide/#communication-tips","title":"Communication Tips","text":"<ul> <li>Point people to public channels and away from email and DMs so that others can answer questions too.</li> <li>You may get low effort questions like \u201chow do I get started?\u201d. Don\u2019t try to guess what people mean, ask for more specific questions.<ul> <li>In general, the effort involved in helping someone should be proportional to the effort they put in.</li> </ul> </li> <li>If you find yourself answering the same questions often, update the relevant documentation so you can point people to it instead.</li> <li>Do not give individual applicants information about competing applications (e.g. how many proposals we got for a particular project idea).</li> </ul>"},{"location":"community/gsoc/mentor-guide/#reviewing-proposals-from-applicants","title":"Reviewing proposals from applicants","text":"<p>Applicants will start working on draft proposals and sharing them with you a few weeks before the deadline. You are responsible for reviewing all proposals for which you are the primary mentor.</p> <p>You should:</p> <ul> <li>track draft proposals and review status in our our internal spreadsheet</li> <li>ask applicants to submit draft proposals directly to you via Matrix and add them to the spreadsheet when you get them.</li> <li>review proposals in 1-2 days if possible.</li> <li>ask for review from other team members if you think it would be useful. </li> </ul>"},{"location":"community/gsoc/mentor-guide/#what-does-reviewing-involve","title":"What does reviewing involve?","text":"<ul> <li>Reviewing involves leaving comments on the proposal to help the applicant improve the proposal before final submission.</li> <li>Review comments should focus on finding problems with the proposal, not suggesting specific solutions.</li> <li>Comments should mostly be in the form of:<ul> <li>Questions about something unclear.</li> <li>1-2 sentence explanations about why something doesn\u2019t make sense.</li> <li>1-2 sentence statements describing what\u2019s missing in a section.</li> <li>Suggestions for areas of the codebase to contribute code to (to strengthen confidence in the proposal).</li> </ul> </li> <li>Questions to ask yourself during review:<ul> <li>Does the applicant understand the project idea?</li> <li>Is the implementation plan:<ul> <li>technically feasible?</li> <li>technically desirable?</li> </ul> </li> <li>Is the implementation timeline realistic (including time needed to learn new skills and get familiar with the codebase?</li> <li>Does the timeline include concrete deliverables?</li> <li>Has the applicant thought through design and UX issues?</li> <li>Are the applicant\u2019s code contributions strong enough that you feel confident that they can follow through on their plan?</li> </ul> </li> </ul>"},{"location":"community/gsoc/mentor-guide/#choosing-mentees","title":"Choosing mentees","text":"<p>After the final proposals are in, you\u2019ll meet with the rest of the Mathesar team and decide which proposals are strong enough to accept. </p> <p>This is an internal decision, we do not communicate with applicants about their proposals at this point.</p> <p>During this period, you should: 1. finalize mentorship for each project 2. alk to co-mentors to create a plan for how to collaborate on each project, e.g.      1. Will one of you be the primary mentor or will all of you be equally involved?      2. How will checkins and notes be shared?</p>"},{"location":"community/gsoc/mentor-guide/#working-with-the-mentees","title":"Working with the mentees","text":"<p>At this point, 1. We\u2019ve decided which applications to accept 2. The mentoring program has approved our selection 3. The accepted mentees have been announced</p>"},{"location":"community/gsoc/mentor-guide/#welcoming-the-mentee","title":"Welcoming the mentee","text":"<ul> <li>Reach out to your mentee ASAP and welcome them to the project.</li> <li>Have an introductory call with the mentee and get to know each other. <ul> <li>Ask them questions about themselves and talk about yourself too.</li> </ul> </li> <li>Ensure that the mentee is added to our Team Members and has the correct GitHub and wiki permissions.</li> </ul>"},{"location":"community/gsoc/mentor-guide/#finalizing-the-project-plan-and-workflow","title":"Finalizing the project plan and workflow","text":"<p>Before work on the project gets underway, you should:</p> <ul> <li>collaborate with your mentee to finalize the implementation details and weekly deliverables for the project</li> <li>create a document to keep any project information and notes, include:</li> <li>an up-to-date implementation plan and weekly milestones</li> <li>the mentee\u2019s contact information and emergency contact</li> <li>all meeting notes</li> <li>any other project-relevant information.</li> <li>share the project document with co-mentors and the organization admin</li> <li>set up regular meetings: </li> <li>a weekly video call for the mentors to check-in with the mentee</li> <li>a monthly call with the Mathesar organization admin to check in with the mentee.</li> <li>decide with the mentee on the workflow the project will follow. e.g.</li> <li>Does the mentee understand regular git workflow (e.g. pull requests, branches, reviews)?</li> <li>Does the mentee understand the code review process?</li> <li>How often should code be committed?</li> <li>How often should your mentee give you progress reports?</li> <li>What is the best way for the mentee to get your attention when they are stuck?</li> </ul>"},{"location":"community/gsoc/mentor-guide/#mentoring-period","title":"Mentoring Period","text":"<p>You\u2019re now ready to mentor!</p>"},{"location":"community/gsoc/mentor-guide/#weekly-check-ins","title":"Weekly check-ins","text":"<ul> <li>Take good notes so that your backup mentor can pick up where you left off easily if you\u2019re unavailable.</li> <li>Make sure the mentee is on-track with their weekly milestones and if not, work with them to figure out why and come up with a plan.</li> <li>Ask how the mentee is doing generally.</li> <li>Praise things they are doing well and provide constructive criticism on the things they could improve on. Both of these are important.</li> </ul>"},{"location":"community/gsoc/mentor-guide/#ongoing-work","title":"Ongoing work","text":"<ul> <li>Review all work/code promptly. You should aim to review within 1 business day.</li> <li>If your mentee is blocked on their work for some other reason, help them become unblocked as soon as possible.</li> <li>Check in on Matrix with the mentee once every day or two. <ul> <li>Remember that mentees are inexperienced and may not know they are stuck, when to ask for help, and/or how to articulate problems well.</li> </ul> </li> </ul>"},{"location":"community/gsoc/mentor-guide/#feedback","title":"Feedback","text":"<ul> <li>Submit your required program evaluations on time.</li> <li>Ask for feedback on your mentorship every few weeks.</li> <li>Your mentee might like to present their work at a CCI research meeting and get some feedback. It\u2019s up to you to facilitate this.</li> </ul>"},{"location":"community/gsoc/mentor-guide/#troubleshooting","title":"Troubleshooting","text":"<p>Talk to the program coordinator proactively if you\u2019re not sure what to do. Some things to pay attention to:</p> <ul> <li>Your mentee is not active and engaged regularly.</li> <li>Your mentee is not communicating enough or misses a check-in.</li> <li>You have concerns or even just a bad feeling about something.</li> <li>You have feedback or questions about any part of the program process.</li> <li>You\u2019d like feedback about how your mentoring is going</li> </ul>"},{"location":"community/gsoc/project-idea-template/","title":"Project Idea Template","text":"<p>GSoC 2024 will not have Mathesar</p> <p>Mathesar will not be participating in Google Summer of Code (GSoC) 2024 due to lack of maintainer capacity. We hope to resume participation in 2025.</p> <p>This guide was for GSoC 2023.</p> <p>Information</p> <p>Please use this template while adding new project ideas to Project Ideas.</p>"},{"location":"community/gsoc/project-idea-template/#classification","title":"Classification","text":"<ul> <li>Difficulty: Low/Medium/High</li> <li>Skills needed: List of technologies or other skills needed</li> <li>Length: Medium (~175 hours) / Long (~350 hours)</li> </ul>"},{"location":"community/gsoc/project-idea-template/#the-problem","title":"The Problem","text":"<p>Describe the problem that the project is expected to solve.</p>"},{"location":"community/gsoc/project-idea-template/#feature-description","title":"Feature Description","text":"<p>How this feature will work.</p>"},{"location":"community/gsoc/project-idea-template/#ux-design-problems","title":"UX Design Problems","text":"<p>Describe the UX design problems we need to solve as part of implementing this feature.</p> <p>Remove this section if there\u2019s no UX design needed. Or replace with another section e.g. Architectural Problems if the problems are best described using another label.</p>"},{"location":"community/gsoc/project-idea-template/#tasks","title":"Tasks","text":"<p>A list of tasks that the intern is expected to complete as part of their work. Be specific about research, code, etc.</p>"},{"location":"community/gsoc/project-idea-template/#expected-outcome","title":"Expected Outcome","text":"<p>Describe the expected outcome of the project.</p>"},{"location":"community/gsoc/project-idea-template/#application-tips","title":"Application Tips","text":"<p>Tips for writing a successful proposal to complete this project. This could include what specific questions to answer or what details could help the application stand out.</p>"},{"location":"community/gsoc/project-idea-template/#out-of-scope","title":"Out of Scope","text":"<p>Describe any tasks that are out of scope.</p>"},{"location":"community/gsoc/project-idea-template/#resources","title":"Resources","text":"<p>A list of links to documentation/code/wiki pages, etc. relevant to the project idea.</p>"},{"location":"community/gsoc/project-idea-template/#mentors","title":"Mentors","text":"<p>Primary Mentor: Person Secondary Mentor(s): List of people</p>"},{"location":"community/gsoc/project-proposal-template/","title":"Project Proposal Template","text":"<p>GSoC 2024 will not have Mathesar</p> <p>Mathesar will not be participating in Google Summer of Code (GSoC) 2024 due to lack of maintainer capacity. We hope to resume participation in 2025.</p> <p>This guide was for GSoC 2023.</p> <p>This is the proposal template for applications to any mentorship programs that we participate in. Proposals that do not follow this template will not be considered for GSoC.</p> <p>We recommend creating a Google Doc that follows this structure and sharing it with the mentors. Please make sure that all mentors have commenting permissions.</p> <p>Information</p> <p>The template starts below this box. Instructions for each section are provided in infoboxes like this one.</p>"},{"location":"community/gsoc/project-proposal-template/#project-title","title":"Project Title","text":""},{"location":"community/gsoc/project-proposal-template/#synopsis","title":"Synopsis","text":"<p>In your own words, provide a one paragraph synopsis of the project and outcomes you are proposing in this section.</p>"},{"location":"community/gsoc/project-proposal-template/#implementation","title":"Implementation","text":"<p>Describe how your solution will be implemented in Mathesar. Provide as many technical details as possible with references to how your solution will fit into the current code, APIs, and UI.</p>"},{"location":"community/gsoc/project-proposal-template/#api-spec","title":"API spec","text":"<p>If your project involves APIs, please propose an API spec here. API specs should include URLs and exanple JSON requests and responses.</p>"},{"location":"community/gsoc/project-proposal-template/#ux-design","title":"UX design","text":"<p>If your project involves UI changes, describe the UI changes that will be needed. Be specific about which screens need to change. Also include wireframes / mockups.</p>"},{"location":"community/gsoc/project-proposal-template/#architectural-ux-problems","title":"Architectural / UX problems","text":"<p>Describe the architectural and/or UX problems in this project and explain how you plan to solve them.</p>"},{"location":"community/gsoc/project-proposal-template/#external-dependencies","title":"External Dependencies","text":"<p>If your solution involves adding external libraries to use, provide details about your choices and the reasons behind those choices.</p>"},{"location":"community/gsoc/project-proposal-template/#research-references","title":"Research &amp; References","text":"<p>Include any research you\u2019ve done or references that you\u2019ve found related to your solution here.</p>"},{"location":"community/gsoc/project-proposal-template/#timeline-deliverables","title":"Timeline &amp; Deliverables","text":"<p>Include a timeline of the deliverables you aim to accomplish each week. Add one row per 1-2 weeks. We use this section to determine whether you can plan your project out properly, so please choose your deliverables well.</p> <p>Deliverables should be measurable and as specific as possible.</p> <ul> <li>\u201cComplete API for cancelling orders\u201d is a good deliverable. It\u2019s easy to tell whether it\u2019s been completed.</li> <li>\u201cWork on APIs\u201d is a bad deliverable. It\u2019s not measurable.</li> </ul> <p>The GSoC timeline should be helpful in determining dates.</p> <p>Timeline of deliverables | Timeframe | Deliverable | |-|-| | Community Bonding period | Plan for getting up to speed | | Week 1: Dates go here | Deliverable details go here | | \u2026 | \u2026 |</p>"},{"location":"community/gsoc/project-proposal-template/#questionnaire","title":"Questionnaire","text":"<p>Information</p> <p>Please answer the following questions.</p> <ul> <li>Why are you interested in working on Mathesar?</li> <li>Why are you interested in working on this project idea?</li> <li>What about your skills and experience makes you well-suited to take on this project?</li> <li>Do you have any other commitments during the program period? Provide dates, such as holidays, when you will not be available.</li> <li>If your native language is not English, are you comfortable working closely with a mentor in English?</li> <li>Have you worked on a project remotely and/or with people in other timezones before? If you have, please provide details.</li> <li>Are you interested in contributing to Mathesar after the program is complete?</li> </ul>"},{"location":"community/gsoc/project-proposal-template/#general-information","title":"General Information","text":"<p>This section provides general information about you.</p> <p>Use the sub-sections provided below. You may add more if needed, but do not remove any sections.</p>"},{"location":"community/gsoc/project-proposal-template/#about-me","title":"About Me","text":"<p>Please provide a short bio.</p>"},{"location":"community/gsoc/project-proposal-template/#contact-information","title":"Contact Information","text":"<p>Please provide the following information.</p> <ul> <li>Full name</li> <li>Email address</li> <li>Matrix username</li> <li>GitHub username</li> <li>Personal website (if you have one)</li> <li>Phone number</li> <li>Emergency contact information</li> </ul>"},{"location":"community/gsoc/project-proposal-template/#education","title":"Education","text":"<p>If you went to university, please provide:</p> <ul> <li>Institute</li> <li>Degree</li> <li>Major</li> <li>Graduation year</li> <li>Courses taken</li> </ul>"},{"location":"community/gsoc/project-proposal-template/#skills","title":"Skills","text":"<p>List your skills below in the format provided. Skills can be technical (programming languages, frameworks, tools, version control systems, etc.) or non-technical (writing, research, etc.). Prioritize skills that are relevant to the project you\u2019re applying for.</p> <p>Feel free to add as many rows as you need.</p> Skill name Proficiency (1-5) Where you\u2019ve used this skill Example skill 5 As part of college coursework"},{"location":"community/gsoc/project-proposal-template/#experience","title":"Experience","text":"<p>List your previous experience that\u2019s relevant to this project. This can be previous work or internship experiences, side projects, or open source contributions.</p> <p>Feel free to add as many rows as you need.</p> Brief description Relevant links Additional notes Example #1 - PR merged to open source project X Link to PR - Example #2 - Side project Link to project repo and website Worked on this project for X time period"},{"location":"community/gsoc/project-proposal-template/#contributions-to-mathesar","title":"Contributions to Mathesar","text":"<p>Please list your contributions to Mathesar here \u2013 one line per issue/pull request you\u2019ve worked on. You should have at least one of these.</p> <p>Feel free to add as many rows as you need.</p> Issue title Links to issue and/or PR Additional notes Solved issue #23: \u201cExample issue name\u201d Link to issue, Link to PR -"},{"location":"community/gsoc/mentor-summit-notes/proposal-phase-gsoc-summit-session-minutes/","title":"GSoC proposal phase session minutes","text":"<p>Note, fidelity of these notes is low. Copy-pasted from another attendee\u2019s notes. Written collaboratively by multiple attendee\u2019s during the session.</p> <p>mailed to Stephanie as copy and link 11:55, 2023-10-24,</p> <p>10:30-11:25, room Token Ring</p> <p>Participants:</p> <ul> <li>Arman Bilge (Scala Center) (AB)</li> <li>Dominyjas Mosauskis (Mathesar) (DM)</li> <li>Reimar Bauer (Python Software Foundation) (RB)</li> <li>Eugene Sandulenko (ScummVM) (ES)</li> <li>Alya Allen (Zulip) (AA)</li> <li>Time Allen (Zulip) (TA)</li> <li>Nir Krakauer (GNU Octave) (NK)</li> <li>William Allen (Submitty) (WA)</li> <li>Razvan Deaconescu (Unikraft) (RD)</li> <li>Gabriel Henrique () (GH)</li> <li>Wilhelm (CCExtractor Development) (W)</li> <li>Punit Lodha (CCExtractor Development) (PL)</li> <li>Benjamin Pross (52\u00b0North) (GE)</li> </ul> <p>DM: Proposal phase was a lot of work for us (Mathesar). At the end, we were asking: is it worth it? The coding phase was awesome.</p> <p>AB: We had really good applicants. How to navigate on really cool people.</p> <p>RB: People joining very late don\u2019t have time write a good proposal. It\u2019s good to start early with testing, solving bugs, understanding how the process works.</p> <p>RB: The invitation must be much earlier than the official start.</p> <p>ScummVM project, our 15th application. ES: We made the project the application more complicated. They show several important skills. Make them set up environment, navigate code base, find out what questions they ask.</p> <p>Our yield is about 30%-50% pass. The chances of people joining early is higher.</p> <p>RocketChat: We are now starting the cycle for GSoC\u201924. We have a dashboard, and the communication starts early, very early. 60 applicant, 18 selected, 10 got approved</p> <p>AB: How do you handle the beginners? ES: We don\u2019t really care about them. They have 3 months to work, the need to pull it off without very much hand holding.</p> <p>RB: You have to have good first issues. You need to define issues on the way to get to a solution.</p> <p>We have only been considering people with considerable contributions. What about people who haven\u2019t heard of GSoC and may be good.</p> <p>AB: My concern is about people who feel intimated by the effort.</p> <p>DM: This year he had very good candidates applying for the same project.</p> <p>AA: We have tons and tons of documentation. If you\u2019re not successful in the pre-GSoC period, you won\u2019t be successful afterwards.</p> <p>NK: We have a similar approach. People who we do select, do very well. Getting more applicants would be great.</p> <p>RD: My concern is the spirit of the program, that is targeted towards newcomers to open source and to the project. I\u2019m doing personal mentorship and those who pass a 6 months work time in the community, I don\u2019t consider eligible for GSoC, as they are already experienced.</p> <p>RB: For us, we have knowledge requirements that revolve in science.</p> <p>AB: How do you do open proposals?</p> <p>AA/TA: We are advising them to not write proposals 2 weeks before that. And we advise them to post the proposals publicly and ask for feedback.</p> <p>RD: I am concerned about the spirit of the program. The focus is mentoring and not getting stellar candidates. Some of the filtering was if someone is already involved with the project for 6+ months should not be eligible because the spirit of the project is to get new comers. A possible idea to fix the hand holding problem is to start early.</p> <p>GH: Opening communication is the way to go. We create a channel for each topic and encourage discussions.</p> <p>RB: If we have students with the same idea, we create separate channels.</p> <p>DM: We have a full time team, so we need to carefully carve out some projects for GSoC that won\u2019t slow down the team.</p> <p>TA: Ideally you would have a lot of items that are non-critical.</p> <p>WA: We have a backlock of many issues. The GSoC team jumps to actual development.</p> <p>AA / TA: We had someone who work on our development tool. It doesn\u2019t have to be UI or a user interface. It could be something that is easy to review.</p> <p>WA: These are more mature projects.</p> <p>RB: A refactoring project may not be the best project for a GSoC project, due to its difficulty. Students learn how to write tests during the project.</p> <p>AA / TA: We had a good experience with students working on refactoring projects. And we have students who were excited about them and get prepared for a professional portfolio.</p> <p>W (CCExtractor): We are looking for technical projects.</p> <p>GE: Balancing an expert vs getting someone to learn. Balancing the level of maturity is the problem.</p> <p>RB: We had in the past three evaluations. And we can adjust the size, duration and the dates are variable. The proposal must be good enough to start, and belief that the student can do what is on the proposal. Then the goals can be adjusted.</p> <p>RD: The problem at us (with Unikraft) was a noise problem and a selection problem. A bunch of applicants tried stuff and then disappeared. And then the selection resulted in some not-so-good students.</p> <p>NK: We are concerned with</p> <p>AB: How do you increase the reach?</p> <p>ES: We post announcements on our website.</p> <p>RD: I\u2019m also in the university and I advertise it there. But mostly it\u2019s with the keywords on GSoC website.</p> <p>ES: We use the blog of our students to advertise projects. Potential contributors use knowledge from previous students.</p> <p>RD: For us as well, a participant from last year created documentation and processes for the current year. Building on top of previous work helps new applicants.</p> <p>GH: A video in a consumable format is useful.</p> <p>AB: I will probably get in touch with professor that teach Scala. Getting part of a functional programming community is how I got involved.</p>"},{"location":"community/gsoc/mentor-summit-notes/proposal-phase-gsoc-summit-session-notes/","title":"Proposal phase gsoc summit session notes","text":""},{"location":"community/gsoc/mentor-summit-notes/proposal-phase-gsoc-summit-session-notes/#preface","title":"Preface","text":"<ul> <li> <p>these are notes derived from a session held in 2023 GSoC mentor summit</p> <ul> <li>the audience of these notes is the team at Mathesar</li> <li>the tone is supposed to be one of recommendation<ul> <li>these are above all things to consider, as opposed to blindly follow</li> </ul> </li> <li>written up by Dom</li> <li>they discuss techniques, methods, approaches<ul> <li>that we might use in upcoming GSoCs to improve the proposal phase</li> </ul> </li> <li>the motivation for having this session and keeping these notes<ul> <li>is that our previous GSoC proposal phases required a lot of effort and time<ul> <li>and we\u2019re interested in improving that</li> </ul> </li> </ul> </li> </ul> </li> <li> <p>a different set of notes for the same meeting</p> <ul> <li>(raw and not written by Dom)</li> <li>can be found here.</li> </ul> </li> </ul>"},{"location":"community/gsoc/mentor-summit-notes/proposal-phase-gsoc-summit-session-notes/#notes","title":"Notes","text":""},{"location":"community/gsoc/mentor-summit-notes/proposal-phase-gsoc-summit-session-notes/#miscellaneous","title":"Miscellaneous","text":"<ul> <li> <p>start early</p> <ul> <li>best students start interacting very early</li> <li>same goes for organizations</li> </ul> </li> <li> <p>encourage demonstrating value by contributing and being active</p> <ul> <li>how that goes can be a strong indicator of how fitting a candidate is</li> <li>consider only accepting proposals late,<ul> <li>e.g. last 2 weeks before the deadline</li> </ul> </li> <li>encourage preparing via contribution and community involvement<ul> <li>prevents candidate from endlessly refining their proposal</li> <li>might give more valuable information than a highly refined proposal</li> </ul> </li> </ul> </li> <li> <p>instead of defining very concrete projects</p> <ul> <li>consider defining themes<ul> <li>i.e. be more abstract, leave wiggle room</li> </ul> </li> <li>let candidates find what needs to be done<ul> <li>this optimizes for contributors that fill in the gaps</li> </ul> </li> <li>this might not work for every project<ul> <li>for example,<ul> <li>when there aren\u2019t a lot of things to be done</li> <li>or when the possible projects are highly difficult and require great insight</li> </ul> </li> </ul> </li> <li>nonetheless, vagueness of project idea can be a useful parameter to tweak</li> </ul> </li> </ul>"},{"location":"community/gsoc/mentor-summit-notes/proposal-phase-gsoc-summit-session-notes/#communication","title":"Communication","text":"<ul> <li> <p>public, clear, fair comms</p> <ul> <li>some orgs keep proposals private<ul> <li>but insist that meaningful discussion/feedback be public</li> <li>while others keep everything public<ul> <li>and reassure candidates that others won\u2019t be able to steal their ideas</li> <li>and note that \u201cthis is in the spirit of open source\u201d</li> </ul> </li> </ul> </li> <li>clear and fair<ul> <li>need openness for fairness</li> <li>private proposal reviews give candidates with many private discussions an unnecessary advantage</li> </ul> </li> <li>lots of communication</li> <li>these things together make proposal phase smoother</li> </ul> </li> <li> <p>self-filtering</p> <ul> <li>once you make communication, discussion and feedback open for everyone to review</li> <li>lower quality candidates filter themselves out<ul> <li>because they are able to gauge their fitness relative to others\u2019</li> </ul> </li> </ul> </li> <li> <p>open communication saves on management</p> <ul> <li>when others see competition for a given project idea,<ul> <li>they\u2019ll naturally consider less popular project ideas</li> </ul> </li> <li>last GSoC this was a problem<ul> <li>best candidates competed for the same project</li> <li>adhoc solution was to ask one of them to submit another proposal<ul> <li>it turned out weak, because was done at the last moment</li> <li>but we knew candidate to be strong</li> </ul> </li> </ul> </li> </ul> </li> <li> <p>encourage threading of conversations</p> <ul> <li>and make those threads accessible to other candidates</li> <li>that way candidates can review discussions around a given project idea<ul> <li>reducing redundant communication,</li> <li>and encouraging communication between candidates</li> </ul> </li> <li>and also let\u2019s them evaluate their competition<ul> <li>which helps distribute candidates between project ideas</li> <li>and let\u2019s candidates self-filter</li> <li>reducing work for the org</li> </ul> </li> <li>zulip was introduced in this context<ul> <li>superior threading features to matrix/element</li> </ul> </li> </ul> </li> <li> <p>have contributor prepare documents for future contributors</p> <ul> <li>documents that help figure things out</li> <li>and/or take first steps</li> </ul> </li> </ul>"},{"location":"community/gsoc/mentor-summit-notes/proposal-phase-gsoc-summit-session-notes/#candidate-selection-and-community","title":"Candidate selection and community","text":"<ul> <li> <p>high standards</p> <ul> <li>having high standards can save on work</li> <li>be clear (with yourself and others) about what kind of<ul> <li>contributors and mentoring you\u2019re looking for</li> <li>if a candidate doesn\u2019t seem ready this year, tell them that</li> </ul> </li> <li>be harsh about not needing hand holding<ul> <li>if you can\u2019t or don\u2019t want to provide that</li> </ul> </li> <li>mentor exhaustion is a concern</li> </ul> </li> <li> <p>trade-off between candidate\u2019s skill and candidate\u2019s need for mentoring</p> <ul> <li>when selecting candidates there are at least two things you can optimize for<ul> <li>how good a candidate already is </li> <li>how much of an impact we can make by mentoring this candidate</li> </ul> </li> <li>i.e. balancing maturity and newbieness</li> <li>a candidate that is not familiar even with the most basic things<ul> <li>might derive more benefit from mentoring</li> <li>compared to someone who\u2019s fairly self-relient and skilled</li> </ul> </li> <li>which is better for community?</li> </ul> </li> <li> <p>proposal/project is a start</p> <ul> <li>ultimate goal is to get contributor involved in community</li> <li>community building might be<ul> <li>more than just getting projects done</li> </ul> </li> </ul> </li> </ul>"},{"location":"community/gsoc/mentor-summit-notes/proposal-phase-gsoc-summit-session-notes/#project-ideas","title":"Project ideas","text":"<ul> <li>tooling project ideas<ul> <li>projects that improve things which are often neglected<ul> <li>tests, linters, docs, dev scripts, ci</li> </ul> </li> </ul> </li> <li>a project idea needs to be easy to review<ul> <li>otherwise mentors will be taxed more</li> <li>this applies to proposal review and to code review</li> <li>useful criteria when evaluating project ideas</li> </ul> </li> <li>some projects (e.g. scala) draw in very skilled candidates<ul> <li>such projects need challenging projects to satisfy those candidates</li> <li>having project ideas that are all similarly challenging might not be desirable</li> </ul> </li> </ul>"},{"location":"community/gsoc/mentor-summit-notes/proposal-phase-gsoc-summit-session-notes/#outreach","title":"Outreach","text":"<ul> <li>outreach can help draw in more or better candidates</li> <li>seo optimization in and via gsoc<ul> <li>look at how gsoc project search works for candidates<ul> <li>optimize our relevant documents based on that</li> </ul> </li> <li>ask contributors to maintain blogs on our subdomains<ul> <li>helps future contributors</li> <li>gives us seo benefits</li> <li>ask them to use a lot of screenshots<ul> <li>helps newcomers</li> </ul> </li> </ul> </li> </ul> </li> <li>doing a video<ul> <li>a video to advertise org to potential candidates</li> <li>helps reach more candidates</li> </ul> </li> </ul>"},{"location":"community/gsoc/past/2022/dependents-graph/","title":"GSoC 2022: Dependents graph","text":"<p>Author: Yurii Palaida</p> <p>Mathesar is a tool that helps non-technical users to utilize the capabilities of a PostgreSQL database with an intuitive and user-friendly interface.</p> <p>Like most other databases, PostgreSQL cares a lot about data integrity. So, it\u2019s almost impossible to accidentally delete some object (table, view, constraint, etc.). If you\u2019re deleting any referenced object, a database will restrict this operation with a warning that\u2019ll be clear only to the developer.</p> <p>My project during this Google Summer of Code was to construct this warning manually for the end user so that they could read it: the so-called dependency graph. It includes two parts:</p> <ol> <li>Backend query for getting the graph (fully done)</li> <li>UI-representation so that the user can understand what they are about to lose when deleting a referenced object (not ready)</li> </ol>"},{"location":"community/gsoc/past/2022/dependents-graph/#deliverables","title":"Deliverables","text":"<p>At the project finale, there were three new endpoints for getting dependents graphs for schema, table and table column objects, and a bunch of unit and integration tests to validate the query behavior.</p> <p>A separate specifications page describes both the technical intricacies of implementation and the high-level overview of the project. With it, it\u2019ll be easy to add this graph to other resources in the project.</p>"},{"location":"community/gsoc/past/2022/dependents-graph/#closed-pull-requests","title":"Closed pull requests:","text":"<ul> <li>https://github.com/mathesar-foundation/mathesar/pull/1478 - an initial pull request that served as a proof of concept at the beginning (returns a full dependents graph for tables)</li> <li>https://github.com/mathesar-foundation/mathesar/pull/1540 - the first refactoring to make code more readable and include more info into the query result</li> <li>https://github.com/mathesar-foundation/mathesar/pull/1572 - tests refactoring to match with the project\u2019s single use-case</li> <li>https://github.com/mathesar-foundation/mathesar/pull/1577 - adding more types as possible dependent objects (like views and indexes)</li> <li>https://github.com/mathesar-foundation/mathesar/pull/1585 - endpoint for returning schema dependents</li> <li>https://github.com/mathesar-foundation/mathesar/pull/1608 - endpoint for returning column dependents</li> <li>https://github.com/mathesar-foundation/mathesar/pull/1638 - backend filters to completely remove dependents of a specific type from the result</li> </ul>"},{"location":"community/gsoc/past/2022/dependents-graph/#main-challenges","title":"Main challenges","text":"<p>The main challenges while working on the project were:</p> <ul> <li>Writing a pretty comprehensive recursive query using the SQL Alchemy statements (the main Mathersar library for communication with the database as per the time of writing)</li> <li>Creating tests to validate the query results, especially the recursive parts of it</li> <li>Factorization of the work. It was my first experience working on a project like this with planning the work by myself</li> </ul>"},{"location":"community/gsoc/past/2022/dependents-graph/#further-improvements","title":"Further improvements","text":"<p>Next steps for improving the project:</p> <ul> <li>Adding a UI layer to show a graph to a user (preferably as a modal window)</li> <li>Adding SQL functions as dependents</li> </ul>"},{"location":"community/gsoc/past/2022/dependents-graph/#acknowledgements","title":"Acknowledgements","text":"<p>Special thanks to Mukesh Murali for constant support and help during our weekly meetings and the Mathesar team for being an excellent place for open-source newcomers.</p>"},{"location":"community/gsoc/past/2022/dependents-graph/#references","title":"References","text":"<ul> <li>The initial proposal for the project: Construct Dependency Graph for Database Objects (GSoC 2022 Proposal by Yurii Palaida) (summerofcode.withgoogle.com)</li> <li>A blog post with impressions on the first part of the project: How I Spent My [Google] Summer [of Code] Part 1 | by Yurii Palaida | Aug, 2022 | Medium</li> <li>All the issues done during the project: https://github.com/mathesar-foundation/mathesar/issues/398</li> <li>The tech spec of the implemented feature</li> </ul>"},{"location":"community/gsoc/past/2022/importing-data-into-existing-tables/","title":"GSoC 2022: Importing data into existing tables","text":"<p>Author: Anish Umale</p>"},{"location":"community/gsoc/past/2022/importing-data-into-existing-tables/#introduction","title":"Introduction","text":"<p>Mathesar is a tool that provides a intuitive and user-friendly interface to databases along with great data analysis and visualization capabilities.</p> <p>Mathesar can be used for data modeling, creating views, data storage and much more but, this requires data to be present in a database. What happens if the a partial amount of data is located on a local machine of the user and the rest is present in a database? This is where a feature like importing data into an existing table comes in handy.</p> <p>My project during the Google Summer of Code was to enhance the capability of Mathesar\u2019s backend to support importing a CSV/TSV into an existing table. Take a look at the full project description here. Below are the relevant links to the Pull Requests that were made by me for the implementation of this project.</p>"},{"location":"community/gsoc/past/2022/importing-data-into-existing-tables/#completed-tasks","title":"Completed tasks","text":""},{"location":"community/gsoc/past/2022/importing-data-into-existing-tables/#import-api-and-record-insertion-implementation","title":"Import API and record insertion implementation","text":"<ul> <li>Implementation for <code>/existing_import</code> API endpoint: https://github.com/mathesar-foundation/mathesar/pull/1442</li> <li>Implementation and tests for temporary table creation: https://github.com/mathesar-foundation/mathesar/pull/1457</li> <li>Implementation for <code>INSERT FROM SELECT</code> functionality : https://github.com/mathesar-foundation/mathesar/pull/1487</li> </ul>"},{"location":"community/gsoc/past/2022/importing-data-into-existing-tables/#overcoming-challenges-caused-by-csv-imports-and-real-world-data","title":"Overcoming challenges caused by CSV imports and real-world data","text":"<ul> <li>Implementation and tests for column mapper: https://github.com/mathesar-foundation/mathesar/pull/1506</li> <li>Constraint violation handling during import: https://github.com/mathesar-foundation/mathesar/pull/1548</li> <li>Implementation and tests for suggesting column mappings: https://github.com/mathesar-foundation/mathesar/pull/1698</li> </ul>"},{"location":"community/gsoc/past/2022/importing-data-into-existing-tables/#additional-context","title":"Additional context","text":"<ul> <li>The issues related to this project are tracked here: https://github.com/mathesar-foundation/mathesar/issues/1416</li> <li>Link to my proposal: Support Importing Data into Existing Tables</li> </ul>"},{"location":"community/gsoc/past/2022/importing-data-into-existing-tables/#acknowledgement","title":"Acknowledgement","text":"<p>At the end, I would like to thank my mentor Brent Moran for his constant support, satisfying my curiosities and the informative and helpful weekly meetings through which this project was made possible, and also to everyone at Mathesar for providing me with a wonderful experience during the course of my internship.</p>"},{"location":"community/gsoc/past/2022/json-type/","title":"GSoC 2022: JSON data type","text":"<p>Author: Jinxiao Li</p> <p>Information</p> <p>Jinxiao originally sent this project report to the developer mailing list, see here</p> <p>Hey all,\u00a0</p> <p>I am Jinxiao Li, a lucky Mathesar contributor at Google Summer of Code 2022. During this three-month coding period, I am delighted to work with\u00a0@Brent Moran\u00a0and\u00a0@Pavish Kumar Ramani Gopal\u00a0to implement Mathesar database functions for JSON data types. I am very grateful for the support of every team member and the enjoyable time I spent on this\u00a0project.</p> <p>The works are listed below\u00a0at the Github links and you can also have a look at the project description\u00a0here. We implemented two main custom types for this goal: Mathesar JSON array and Mathesar JSON object. Most of the functions are settled down while a few are in progress but can be completed very soon. Feel free to leave comments and suggestions.</p> <p>JSON type reading and casting implementation</p> <ul> <li>Main implementation:\u00a0https://github.com/mathesar-foundation/mathesar/pull/1443 </li> <li>Minor issue fixes:\u00a0https://github.com/mathesar-foundation/mathesar/pull/1474</li> </ul> <p>JSON type sorting implementation</p> <ul> <li>Sorting for JSON array type:\u00a0https://github.com/mathesar-foundation/mathesar/pull/1482</li> <li>Sorting for JSON object type:\u00a0https://github.com/mathesar-foundation/mathesar/pull/1565</li> </ul> <p>JSON type filtering implementation</p> <ul> <li>JSON array length equals function as well as tests:\u00a0https://github.com/mathesar-foundation/mathesar/pull/1493</li> <li>JSON array length &lt;, &lt;=, &gt;, &gt;= functions as well as tests:\u00a0https://github.com/mathesar-foundation/mathesar/pull/1528</li> <li>JSON object filtering functions (in progress):\u00a0https://github.com/mathesar-foundation/mathesar/pull/1606</li> </ul> <p>Other issue fixes</p> <ul> <li>Fix reference column bug when deleted:\u00a0https://github.com/mathesar-foundation/mathesar/pull/1275</li> <li>Fix loading skeleton issue when rows are deleted:\u00a0https://github.com/mathesar-foundation/mathesar/pull/1351</li> </ul> <p>Jinxiao Li</p>"},{"location":"community/gsoc/past/2023/list-datatype/","title":"List data type report - 2023 internship","text":"<p>In this report we will talk about the scope and goals of the project:  List data type. Considerations and difficulties are also discussed, as well as the project\u2019s current state. Finally, a future work line is given.</p>"},{"location":"community/gsoc/past/2023/list-datatype/#introduction","title":"Introduction","text":"<p>The <code>List</code> data type project is about adding support to the <code>Array</code> Postgres type in Mathesar. One important detail to highlight is that we were only going to consider the 1-dimensional case of arrays, as this is the most common use case (and it was also going to save us dealing with some complexities that we\u2019re going to review below). The features originally proposed to be implemented are detailed in the [project\u2019s page]/archive/product/projects/2023/07/list-datatype).</p>"},{"location":"community/gsoc/past/2023/list-datatype/#preliminaries","title":"Preliminaries","text":"<p>An <code>Array</code> is not a data type per se, but a data structure that holds values of a certain data type. It is not supported by all the SQL databases, but Postgres does. A common array is a structure characterized by having a length and dimension. E.g. <pre><code>a = [1, 1, 3] # a has length=3 and dimensions=1   \nb = [[1, 1], [2, 3]] # b has dimensions=2\nc = [[[1, 1, 1]]] # c has dimensions=3\n</code></pre> If you\u2019ve worked with Python\u2019s numpy, you can think of dimensions as the number of available axis. Note that the notion of length becomes blurry if we\u2019re not in 1-D; should we count the number of items at the inner dimension? SQL works with the <code>array_length</code> function, which needs to be passed the <code>dimension</code> as an argument, so it returns the number of items at that dimension.</p>"},{"location":"community/gsoc/past/2023/list-datatype/#sql-alchemy-sa-support","title":"SQL Alchemy (SA) support","text":"<p>This library supports the handling of arrays, and it implements it as a data type class with an <code>item_type</code> attribute that specifies the true data type in the DB.  The Array class also uses an optional <code>dimensions</code> argument, with a default value of 1. This does not actually reflects into an ARRAY column enforced to be 1-dimensional in the DB; it\u2019s just a hack of the library to traverse the arrays more efficiently when converting them to Python\u2019s lists. </p> <p>Warning</p> <p>Attention, SQL Alchemy needs to work with the psycopg2 DB API to manipulate arrays. </p>"},{"location":"community/gsoc/past/2023/list-datatype/#methodology","title":"Methodology","text":""},{"location":"community/gsoc/past/2023/list-datatype/#restricting-the-dimensions-to-one","title":"Restricting the dimensions to one","text":"<p>Our initial goal was to support 1-D arrays. For this, we assumed the following:</p> <ul> <li>Having access to a length and dimensions properties</li> <li>An ARRAY[\u2026] column contains records with a maximum number of dimensions and length</li> </ul> <p>However, this was not true.</p> <p>Arrays in PostgreSQL The implementation of Arrays in PostgreSQL is tricky, and for our project, it brought a big overhead. From [1]: \u201d\u2026 the current implementation ignores any supplied array size limits, i.e., the behavior is the same as for arrays of unspecified length. The current implementation does not enforce the declared number of dimensions either. \u201c </p> <p>Problems: 1. We cannot be sure now that all the values in an ARRAY column will have the same dimensions and length. 2. Users can create ARRAY columns with N-dimensions back with Postgres, and Mathesar would have to figure out how to render them. 3. Any display option that the Frontend usually handles per column would now need to be processed per cell. 4. We cannot give users the chance to create a <code>List</code> column with a fixed number of dimensions, and assure them that all the records will comply with that number of dimensions. </p> <p>In summary, we don\u2019t have control over any dimensions nor length properties, because they are not even considered in the Postgres implementation. Some ideas on how to implement the <code>Array</code> type are going to be discussed now.</p>"},{"location":"community/gsoc/past/2023/list-datatype/#custom-mathesar-type","title":"Custom Mathesar Type","text":"<p>Similar data types like JSON and JSON Arrays have been implemented as custom data type classes in Mathesar. As such, they are reflected as Domains on the DB. Implementing Arrays in this way has some issues:</p> <ul> <li>As any data type can have its Array version, this implies that Mathesar will have to create a Domain for every possible scalar type. </li> <li>We would not have an Array type for any other scalar type installed on a user\u2019s DB (any custom type that Mathesar is not aware of). </li> <li>Other aspects tied to a data type, such as cast functions, will also be multiplied by this factor. </li> <li>This can be dangerous for backwards-compatibility in the future; we would have to support both a constrained array version and an unconstrained one (for when Mathesar does give full support to n-dimensional arrays).</li> </ul>"},{"location":"community/gsoc/past/2023/list-datatype/#type-decorator-in-sa","title":"Type decorator in SA","text":"<p>Another option was to implement the Array as a class that inherits from SA\u2019s TypeDecorator [2]. The catch here is to access to the dimension\u2019s argument handled by SA, and in compiling time, making sure that we pass a value of 1. Again, this workaround also has some disadvantages:</p> <ul> <li>Mathesar is currently trying to reduce its dependence on SQLAlchemy.</li> <li>We need to support columns being written to in the database via other clients (i.e., where the enforcement won\u2019t happen). That dimension can\u2019t be reflected from the database.</li> </ul> <p>Also while trying to integrate this class to the project, I faced difficulties such as:</p> <ul> <li>Mapping between this and the results of Array aggregation operations. I managed to solve it by using the kwarg <code>_default_array_type</code> of the <code>arr_agg()</code> method of SA, and set as its value my TypeDecorator class.</li> <li>Issues with casting that affected other functions, like <code>get_constraint_record_from_oid()</code>. This function is used to retrieve attnums of columns that have constraints, and outputs a list. After installing the new decorator, this function casted the array to text, breaking tests like the ones in <code>test_constraint_api.py</code>.</li> </ul> <p>The difficulty of introducing this decorator in the codebase and the type of changes required are indicative of the type of problems that could be found porting other pseudo data types.</p>"},{"location":"community/gsoc/past/2023/list-datatype/#custom-adapter","title":"Custom adapter","text":"<p>It would give us more control if we develop a module that works directly with psycopg2, where we could fully handle the postgres-python (and vice-versa) mapping of arrays. This module will also (probably) help us fix format issues when aggregating records of date like data types. See issues #2962, #2966. Custom adapters for date-related data types are discussed in the psycopg2 documentation, as some exact mappings are not possible [3].</p> <p>This option will however, require more time both for planning and implementation, as this would be a new way of implementing a data type in Mathesar, possibly requiring modifications in several parts of the backend code; e.g. integration in the codebase will be more complex. Moreover, it works mostly on Python\u2019s side, meaning we are not enforcing anything on the DB side.</p>"},{"location":"community/gsoc/past/2023/list-datatype/#supporting-n-dimensional-arrays","title":"Supporting n-dimensional arrays","text":"<p>Given that none of the ideas we had to attempt restricting arrays to 1 dimension were successful, we now move to consider supporting multidimensional ones.</p> <p>Filters As reviewed earlier, operations over n-dimensional arrays become confusing.</p> <ul> <li> <p>Length: it needs to know over what dimension to count.  <pre><code>a = ARRAY[1, 1, 3] \n# a has length=3 and dimensions=1   \nb = ARRAY[[1, 1, 1], [2, 3, 1]] \n# b has 2 dimensions\n# for dimension 1, length=2\n# for dimension 2, length=3\n</code></pre></p> </li> <li> <p>Contains: Postgres will internally store an array as a 1-dimensional one [5], so when comparing if a multidimensional array is contained in another one, it can behave weird. <pre><code>SELECT array[[442,2],[443,2]] @&gt; array[443,2] -- returns True\nSELECT array[[442,2],[443,2]] @&gt; array[2,443] -- returns True too\n</code></pre> So, it\u2019s like, before comparing, Postgres engine unnests the arrays involved in the comparison, and it will check if each value on the right-hand side array is present in the array to the left.</p> </li> <li> <p>Sort: there can be different criteria for sorting records of an Array column, and it becomes less intuitive/clear to compare and sort n-dimensional arrays. In addition, each possible scalar type has its own criteria for sorting. </p> </li> </ul> <p>Summarization Grouping records of a given column is currently supported. In the backend, the SA function array_agg() is used for this purpose, and it returns an object of SA\u2019s Array [6] type. However, if we now deal with arrays as records, grouping them can lead to inconsistencies in the inner dimensions of the Array. For example: <pre><code>| name  | emails                                     |\n|-------|--------------------------------------------|\n| alice | '{\"alix@gmail.com\"}'                       |\n| alice | '{\"alice@hotmail.com', \"bbb@outlook.com\"}' |\n\n# grouping by name here will  have to aggregate as:\n'{{\"alix@gmail.com\"},  {\"alice@hotmail.com', \"bbb@outlook.com\"}}'\n\n# but this is not possible in Postgres\n</code></pre> In general, grouping arrays can lead to a mismatch in the dimensions of the elements within an array.</p> <p>Rendering format Currently, each data type in Mathesar has its own UI component. A list also has its own styling, which is currently rendering pills in the data explorer. What should we display then, for a list of dates? Including a date picker inside a pill does not sound user-friendly. Now, consider a multidimensional array of dates. What\u2019s the best way of rendering it? Without overloading the frontend and overwhelming the user who wants to edit one item/element.  </p>"},{"location":"community/gsoc/past/2023/list-datatype/#current-state-and-considerations","title":"Current state and considerations","text":""},{"location":"community/gsoc/past/2023/list-datatype/#backend","title":"Backend","text":"<p>There is no new data type for arrays; the SA\u2019s <code>Array</code> [6] type, which was already supported for aggregation transformations, is the one we\u2019re going to keep working with.</p>"},{"location":"community/gsoc/past/2023/list-datatype/#crud-operations","title":"CRUD operations","text":"<p>Sending a patch request (update) to an array column correctly updates the records in a table. A request looks like this: <pre><code>{\"125\":[50000,200]}\n</code></pre></p> <p>where 125 is the id of the column to be updated, and the value is an array.  Reading is also working well for 1-D arrays.  </p> <p>Next steps:</p> <ul> <li>Test through API client: create and delete column.</li> <li>Tests for n-d case, in particular, when reading the data, how does the mapping of SA work (i.e how the formed array look like)?</li> <li>Type options dict properties: length and dimensions, should be discarded. </li> </ul>"},{"location":"community/gsoc/past/2023/list-datatype/#filters","title":"Filters","text":"<p>These filters are supported:</p> <ul> <li>ArrayLengthEquals</li> <li>ArrayLengthGreaterThan</li> <li>ArrayLengthGreaterOrEqual</li> <li>ArrayLengthLessThan</li> <li>ArrayLengthLessOrEqual</li> <li>ArrayNotEmpty</li> <li>ArrayContains</li> </ul> <p>The filters are implemented with sql functions, which need to be passed a dimension value.</p> <p>In the case of <code>ArrayContains</code>, we have to make sure it uses the correct operator, e.g. the proper SA comparator class. </p> <p>Next steps:</p> <ul> <li>Fix dimension value to 1 for all the filtering operations.</li> <li>Test output for n-d cases.</li> <li>Test for other scalar types.</li> </ul>"},{"location":"community/gsoc/past/2023/list-datatype/#summarization","title":"Summarization","text":"<p>Status: currently not supported.</p> <p>Next steps:</p> <ul> <li>Disable grouping by an Array column.</li> <li>After: develop custom criteria that avoids dimensions mismatch, for example, a criteria that first computes a single value per row in an Array column. Reducing each record of an Array column to a single value will result in, when grouping, a 1-D array.</li> </ul>"},{"location":"community/gsoc/past/2023/list-datatype/#other-operations","title":"Other operations","text":"<p>Not supported:</p> <ul> <li>Distinct</li> <li>Sort by</li> </ul> <p>Next steps:</p> <ul> <li>Disable them for Array columns.</li> <li>After: use a criteria that reduces an array to a single value, and then sort.</li> </ul>"},{"location":"community/gsoc/past/2023/list-datatype/#frontend","title":"Frontend","text":"<p>Here is where most new things to be implemented take place.</p>"},{"location":"community/gsoc/past/2023/list-datatype/#creating-an-array-column","title":"Creating an Array column","text":"<p>Status: currently not supported.</p> <p>Any data type can have its \u201carray version\u201d . Therefore, it doesn\u2019t seem a good idea to list each possible Array type in the data types dropdown list:</p> <ul> <li>There will be a lot of options listed.</li> <li>The user can easily misread one list type and select a wrong one, for example, choosing List of Money instead of List of Email (both begin with \u2018List of \u2026\u2019).</li> </ul> <p>A cleaner approach suggested by Ghislaine [4] is to have a separate menu for the Array or List type. </p> <p>Also, consider using the term \u201cArray\u201d instead of \u201clist\u201d, as the first one encloses n-dimensional arrays too (which will be supported in the future) and operations that work with them.</p>"},{"location":"community/gsoc/past/2023/list-datatype/#rendering-an-array","title":"Rendering an array","text":"<p>For 1-D arrays, items are displayed inside a pill, which corresponds to the <code>Chip</code> component in the frontend. The pills are not modifiable.</p> <p>The <code>ArrayCell</code> component receives a list object and renders a pill per each value. Currently, it is not handling any length or dimensions property. This is convenient as, for an Array column, we can have any number of elements and dimensions per record. </p> <p>Also, this approach is not considering the case of N-D arrays. Here, it would be better to render them as plain text. N-D arrays are not used as much as 1-D arrays (people would prefer to go for a vector type instead), so their use cases will be, hopefully, rare. For a first version, it\u2019s not worth to delay supporting it until figuring out how to design a proper UI for this multidimensional structure.</p> <p>Next steps:</p> <ul> <li>Keep disabled the edition of pills.</li> <li>Detect and display n-dimensional arrays as plain text.</li> </ul>"},{"location":"community/gsoc/past/2023/list-datatype/#editing-arrays-in-cells","title":"Editing arrays in cells","text":"<p>Array columns are read-only, and 1-D arrays are rendered with pills (one item in one pill). </p> <p>Idea: When editing a cell, a first and basic approach would be to let the user type in the array in the correct format (e.g with brackets, elements separated by commas). Then, as it happens for the other data types, when the user leaves a cell, a call is made to the API to update a particular record.  Work regarding this approach can be found in this branch. Here, cells of an Array column can be edited. Two types of components are handled: <code>TextInput</code> for when <code>editMode=True</code>, and ArrayCell otherwise. There are some issues: When entering a new value, the Frontend sends to the backend a malformed array, for example:</p> <pre><code># currently sent\nrequest: {\"125\":\"50000,200\"}\n# instead it should be\nrequest: {\"125\": [50000,200]}\n</code></pre> <p>This is because making both components work in sync is complex. There is probably a mishandling of the TextInput value, and so the Array factory ends up with a string instead of an Array object. More debugging is needed here.</p> <p>Next steps:</p> <ul> <li>Enable edition from the record view. The user will have to type the array in the correct format. </li> <li>Same for the table view, the user can click over a cell and edit the array as plain text.</li> </ul>"},{"location":"community/gsoc/past/2023/list-datatype/#deleting-items","title":"Deleting items","text":"<p>It is currently not possible to delete elements from an array. Also, the UI/UX has to be sorted out for this functionality. </p> <ul> <li>Will users be able to delete individual items? Consider the added complexity to this task if the array is large; it\u2019s very easy for the user to loose sight of the element they want to eliminate.</li> <li>An easier and reasonable first approach is to let the user handle this through plain text edition. Also, we should think about the persona of the target users. It\u2019s more natural for a DB maintainer to just edit records through a form, using plain text.</li> </ul>"},{"location":"community/gsoc/past/2023/list-datatype/#moving-elements","title":"Moving elements","text":"<p>A drag-and-drop feature does not seem to be very useful to offer.</p> <ul> <li>Again, we should consider the complexity of this task for large lists.</li> <li>For sorting, for end users used to calc documents, making use of a formula to achieve this is more intuitive and comfortable. </li> <li>I suggest to test the demand of this feature first before thinking on implementing it. One idea is through a poll.</li> </ul>"},{"location":"community/gsoc/past/2023/list-datatype/#documentation","title":"Documentation","text":"<p>User documentation Currently, there is no documentation for the List data type. It would be nice to have a page that explains:</p> <ul> <li>How to create an Array or List column</li> <li>How to edit it</li> <li>How transformations and summarization work</li> <li>What is currently supported and what\u2019s not</li> <li>etc.</li> </ul> <p>In particular, as it was previously discussed, operations for n-dimensional arrays can become confusing, so it would be good to have a section that explains how they work.</p> <p>Developer documentation When supporting this data type, it would be good to have documentation about the same aspects mentioned before, but for developers, e.g. at a more technical level. It should be included:</p> <ul> <li>Transformations: what operators are used, sql functions and their arguments.</li> <li>Basics of the Array type: how it is implemented (in Mathesar and Postgres), its string form, notions of dimensions and length. </li> <li>API: what is sent and what is received.</li> <li>What is currently supported and what\u2019s not, for 1-D or N-D arrays.</li> </ul>"},{"location":"community/gsoc/past/2023/list-datatype/#conclusions","title":"Conclusions","text":"<ul> <li>Major time-consuming task was to figure out how to restrict dimensionality.</li> <li>Next step is to make what we have work for the default Postgres\u2019 ARRAY<ul> <li>Test 1-D case first</li> <li>N-D arrays operations can be disabled for the meantime</li> </ul> </li> <li>New things to be implemented lie mostly in the frontend.</li> <li>Documentation is also needed (for both user and developer)</li> </ul>"},{"location":"community/gsoc/past/2023/list-datatype/#references","title":"References","text":"<ol> <li>Postgres documentation on Arrays</li> <li>TypeDecorators</li> <li>Custom adapter psycopg2</li> <li>Ghislaine feedback on creating a List column</li> <li>Contains multidimensional arrays</li> <li>SQL Array type in SQLAlchemy</li> <li>Slides of project (final presentation): link</li> </ol>"},{"location":"community/gsoc/project-ideas/","title":"Project Ideas","text":"<p>GSoC 2024 will not have Mathesar</p> <p>Mathesar will not be participating in Google Summer of Code (GSoC) 2024 due to lack of maintainer capacity. We hope to resume participation in 2025.</p> <p>This guide was for GSoC 2023.</p> <p>These ideas are for Google Summer of Code 2023.</p> <p>Information</p> <p>For information about applying to Google Summer of Code, please see our Applicant Guide.</p>"},{"location":"community/gsoc/project-ideas/#ideas","title":"Ideas","text":"ID Idea Skills Length Difficulty Primary mentor Secondary mentor 1 JSON editor HTML, CSS, TypeScript, JavaScript, Svelte, UX design Medium (~175 hours) or Long (~350 hours) depending on experience Medium / High Sean Pavish 2 Phone Number data type Necessary: Python, SQL, JavaScript  Bonus: Django, SQLAlchemy, Svelte, TypeScript Medium (~175 hours) or Long (~350 hours) depending on experience Medium Mukesh Rajat 3 UI for importing data into existing tables Necessary: HTML, CSS, JavaScript, Svelte.  Bonus: TypeScript, UX design Medium (~175 hours) or Long (~350 hours) depending on experience level Medium Pavish Anish 4 Persist UI configuration Necessary: Python, SQL, JavaScript.  Bonus: Django, SQLAlchemy, Svelte, TypeScript Medium (~175 hours) Medium Dom Pavish 5 Location data type(s) Necessary: Python, SQL, SQLAlchemy, PostGIS  Bonus: Django, Svelte, TypeScript Long (~350 hours) High Mukesh Pavish 6 Single select data type Necessary: Python, Svelte, JavaScript  Bonus: Django, TypeScript Long (~350 hours) Easy Pavish Mukesh 7 List data type Necessary: Python, SQL, JavaScript  Bonus: Django, SQLAlchemy, Svelte, TypeScript Long (~350 hours) for both frontend &amp; backend  Medium (~175 hours) for backend only Medium Brent Pavish 8 Make casting functions inlinable Python, PostgreSQL, SQLAlchemy Long (~350 hours) Medium Dom Brent 9 Kanban view JavaScript, frontend frameworks, Python, Django Long (~350 hours) High Rajat Brent 10 Database views Python, JavaScript, SQLAlchemy, Svelte.js, PostgreSQL Long (~350 hours) Medium Brent Rajat 11 API documentation Python, Django Medium (~175 hours) Easy Mukesh Kriti 12 Add more summarization functions Python, SQLAlchemy, PostgreSQL, JavaScript, Svelte Medium (~175 hours) Easy Brent Sean 13 Support importing Excel and JSON files Python, SQL, Django, SQLAlchemy Long (~350 hours) Medium Dom Anish 14 Automatically suggest improvements to table normalization PostgreSQL, Database theory, a bit of statistics Long (~350 hours) High Brent Dom <p>For ideas from previous years, see our Project Idea Archive.</p>"},{"location":"community/gsoc/project-ideas/#original-ideas","title":"Original Ideas","text":"<p>You are also welcome to propose your own original idea if you have a suggestion for a new feature. Our Roadmap and Feature Ideas pages might be helpful in coming up with your idea.</p> <p>Please talk to us and ensure that someone on the team is willing to mentor your idea before you submit your proposal.</p>"},{"location":"community/gsoc/project-ideas/api-documentation/","title":"API documentation","text":""},{"location":"community/gsoc/project-ideas/api-documentation/#classification","title":"Classification","text":"<ul> <li>Difficulty: Easy</li> <li>Skills needed: Python, Django</li> <li>Length: Medium (~175 hours)</li> </ul>"},{"location":"community/gsoc/project-ideas/api-documentation/#the-problem","title":"The Problem","text":"<ul> <li>Mathesar backend written in Django uses an JSON content-type API to communicate with the frontend client. This API is not properly documented which makes it harder for someone outside Mathesar to understand the APIs and use them.</li> </ul>"},{"location":"community/gsoc/project-ideas/api-documentation/#feature-description","title":"Feature Description","text":"<ul> <li>We should be able to automatically generate the API documentation based backend implementation</li> <li>It should be easy to manually override the automatic API inference if the inference is not correct.</li> <li>The generated documentation should be easy to understand for the users</li> <li>The API generator should be compatible with Mathesar\u2019s license (GPLv3).</li> <li>The API generator should be easy to integrate with Django</li> <li>The API format should be a well-defined standard supported by a good community</li> </ul>"},{"location":"community/gsoc/project-ideas/api-documentation/#tasks","title":"Tasks","text":"<ol> <li>Integrate the API generator with our backend codebase written in Django and Django Rest framework.</li> <li>Make sure the inferred APIs are correct and override them if necessary.</li> <li>Set up the CI to generate the API documentation automatically if needed.</li> </ol>"},{"location":"community/gsoc/project-ideas/api-documentation/#expected-outcome","title":"Expected Outcome","text":"<ul> <li>The API documentation should be automatically generated by inferring the backend codebase without a lot of manual intervention</li> <li>The API documentation should be in an easy to consume format like JSON, YAML.</li> </ul>"},{"location":"community/gsoc/project-ideas/api-documentation/#application-tips","title":"Application Tips","text":"<ul> <li>Demonstrate proficiency with the required skills.</li> <li>Present some preliminary research into available API formats</li> </ul>"},{"location":"community/gsoc/project-ideas/api-documentation/#resources","title":"Resources","text":"<ul> <li>DRF\u2019s \u201cDocumenting Your API\u201d page</li> <li>Open API is one such format that fits with above requirements.</li> <li>DRF Spectacular is a library for Django Rest framework to generate Open API spec</li> </ul>"},{"location":"community/gsoc/project-ideas/api-documentation/#mentors","title":"Mentors","text":"<p>Primary Mentor: Mukesh Secondary Mentor(s): Kriti</p>"},{"location":"community/gsoc/project-ideas/archive/","title":"Archived Project Ideas from GSoC 2022","text":"Idea Skills Length Difficulty Automatic Hint Reflection Python, PostgreSQL ~350 hours High Break Columns out to New Table Python, Django, PostgreSQL ~175 hours Low Suggest Candidate Columns to Create Separate Table PostgreSQL, database theory, statistics ~350 hours High Visualization of Grouped Data JavaScript, frontend frameworks ~175 hours Low Sharable Forms to Add Data to Tables JavaScript, frontend frameworks ~175 hours Low Construct Dependency Graph for Database Objects Python, Django, PostgreSQL ~350 hours Medium Support for PostGIS Data Types Python, PostgreSQL, PostGIS ~350 hours High Support for File &amp; Image Data Types Python, Django, PostgreSQL ~350 hours High Support for JSON Data Type Python, Django, JavaScript, frontend frameworks ~350 hours Medium Better Support for Default PostgreSQL Data Types Python, Django, PostgreSQL ~175 hours or ~350 hours Medium Implement Textual SQL Query Builder Python, JavaScript, frontend frameworks ~350 hours Medium Support Importing Data into Existing Tables Python, Django, PostgreSQL ~350 hours Medium Support More Data Import Sources Python, Django, PostgreSQL ~350 hours Medium Support Data Export Python, Django, PostgreSQL ~175 hours Medium"},{"location":"community/gsoc/project-ideas/archive/#other","title":"Other","text":"<ul> <li>Dark Mode - written for GSoC 2023, scrapped for scope being too small.</li> </ul>"},{"location":"community/gsoc/project-ideas/auto-suggest-normalization/","title":"Automatically suggest improvements to table normalization","text":""},{"location":"community/gsoc/project-ideas/auto-suggest-normalization/#classification","title":"Classification","text":"<ul> <li>Difficulty: High</li> <li>Skills needed: PostgreSQL, Database theory, a bit of statistics.</li> <li>Length: Long (~350 hours)</li> </ul>"},{"location":"community/gsoc/project-ideas/auto-suggest-normalization/#the-problem","title":"The Problem","text":"<p>Imagine a user imports the following data into Mathesar:</p> ID Book Title Author 1 Matilda Roald Dahl 2 Charlie and the Chocolate Factory Roald Dahl 3 Catch 22 Joseph Heller 4 James and the Giant Peach Roald Dahl <p>We have functionality that allows Mathesar users to extract columns out into a new table to help normalize data. We want to make this functionality more discoverable by suggesting columns that would be good to make their own table. In the example provided, that would be \u201cAuthor\u201d, since it has the same data repeated in three records.</p>"},{"location":"community/gsoc/project-ideas/auto-suggest-normalization/#feature-description","title":"Feature Description","text":"<p>In order to normalize a data model, one needs to understand correlations between different rows in the data of a table.  For example, if there is a column <code>student email</code> that is dependent on a proper subset of the key <code>(class id, student id)</code> in some <code>class_rosters</code> table, then a separate <code>students</code> table with columns <code>(student id, student email)</code> should be created, and <code>student email</code> should be dropped from the original <code>class_rosters</code> table. This would potentially move the data model closer to achieving the Second Normal Form (2NF). We need to build functions that notice this sort of correlations.  Ideally, we\u2019d start with functions that notice when a relation is not in 2NF (but is in 1NF), and suggest fixes. If that\u2019s achieved, we\u2019d then proceed to suggest fixes to achieve 3NF.</p>"},{"location":"community/gsoc/project-ideas/auto-suggest-normalization/#tasks","title":"Tasks","text":"<ul> <li>Research method of automatically determining the violating correlations disallowed by 2NF.</li> <li>Research whether a \u201chard rule\u201d makes more sense, or whether it makes more sense to have some correlation score.</li> <li>Based on answers to the above, implement functionality so that we can call a Python function that takes a table as input, and returns sets of columns that could be extracted.</li> </ul> <p>Repeat with 3NF as the goal.</p> <p>If time permits, you can also:</p> <ul> <li>Create an API that exposes this functionality. Given a table, the API should provide normalization suggestions for that table.</li> <li>Create the UI that displays these suggestions in the product.</li> </ul>"},{"location":"community/gsoc/project-ideas/auto-suggest-normalization/#expected-outcome","title":"Expected Outcome","text":"<p>We should end up with Python functions backed by SQL that let us determine whether a relation in a DB is in 2NF (or 3NF), and suggest column sets to extract to separate tables that would promote the data model to a higher normal form (at least the subset of the data model involving the relation in question).</p> <p>We\u2019d also like an API that exposes these functions and frontend work to display normalization suggestions in the UI, but these can be treated as stretch goals.</p>"},{"location":"community/gsoc/project-ideas/auto-suggest-normalization/#application-tips","title":"Application Tips","text":"<p>The successful candidate would understand the motivation for normalizing a database. They\u2019d also understand some basics about stats and be able to relate the idea of correlations between columns of a table to how different sets of columns might be able to be extracted.</p>"},{"location":"community/gsoc/project-ideas/auto-suggest-normalization/#resources","title":"Resources","text":"<ul> <li>Research report on this topic written by a previous intern</li> </ul>"},{"location":"community/gsoc/project-ideas/auto-suggest-normalization/#mentors","title":"Mentors","text":"<p>Primary Mentor: Brent Secondary Mentor(s): Dom</p>"},{"location":"community/gsoc/project-ideas/automatic-hint-reflection/","title":"Automatic Hint Reflection","text":""},{"location":"community/gsoc/project-ideas/automatic-hint-reflection/#functions-api","title":"Functions API","text":"<p>Mathesar has an API that describes how a client can assemble Postgres functions into expressions that can later be used, for example, to filter table rows with. We call it the functions API. A basic example of such an expression could be: \u201cdoes the title of this movie start with the same letter as its director\u2019s first-name\u201d.</p> <p>For the functions API to not require hardcoding on the client side, and for clients to be able to effortlessly adapt to newly added functions, it declares how those functions can be used. The API uses a system for assigning various types of information to individual functions and types. We\u2019re calling it the hint system.</p> <p>We use it, for example, to describe the signature of the function <code>starts_with</code>: it takes two named arguments, one argument is called <code>base_string</code> and the other <code>prefix</code>, both arguments should be string-like, and the function returns a boolean:</p> <pre><code>    starts_with_hints = [\n        hints.parameter(name='base_string', hints.string_like),\n        hints.parameter(name='prefix', hints.string_like),\n        hints.returns(hints.boolean),\n    ]\n</code></pre> <p>Here\u2019s some hints assigned to Postgres types:</p> <pre><code>db_types_mapped_to_hints = {\n    PostgresType.DECIMAL: [hints.comparable, hints.fractional],\n    PostgresType.TIMESTAMP: [hints.comparable, hints.time_related, hints.time_of_day, hints.date],\n    PostgresType.DATE: [hints.comparable, hints.time_related, hints.date],\n    PostgresType.TIME: [hints.comparable, hints.time_related, hints.time_of_day],\n}\n</code></pre> <p>Above mapping says that:   - the <code>DECIMAL</code> type is comparable (meaning you might be able to ask whether it\u2019s larger or smaller than another comparable type), and that it\u2019s fractional (as in can represent fractional numbers);   - the <code>TIMESTAMP</code>, <code>DATE</code> and <code>TIME</code> types are all comparable too, and they\u2019re all time-related;     - <code>TIMESTAMP</code> holds both time-of-day and date information,     - while <code>DATE</code> only holds date information,     - and <code>TIME</code> only holds time-of-day information.</p> <p>Importantly, hints don\u2019t obligate the user of the API to follow them. A user should be able to assemble expressions that are in conflict with what is declared by the hints. The purpose of the hint system is to give hints to the user about how to assemble expressions, but the user should be free to assemble any expression he likes.</p> <p>We chose for the hint system to be non-authoritative (allow users to ignore it) for two reasons:</p> <ul> <li>it empowers power-users that might want to use a function or a type in a way contrary to the declared hints;</li> <li>and, user developers (users that might also want to define their own Postgres functions or types) will not be obligated to master the hint system just to add a function: they\u2019ll be able to gradually start adding hints if/when they find that useful, which will cause the UX for using that function to become more streamlined with every hint added.</li> </ul> <p>A bonus of a non-strict composition system is that you don\u2019t have to strive to create very precise signature declarations that cover all use cases, which helps keep the way we declare signatures simple for new-comers.</p>"},{"location":"community/gsoc/project-ideas/automatic-hint-reflection/#the-problem","title":"The Problem","text":"<p>Currently, the hints are compiled by hand, as seen in the above code sample. That could become cumbersome if the number of functions or types explodes. Also, user developers might find the hint system\u2019s learning curve a barrier to declaring their own functions or types (though we\u2019re working to minimize that).</p> <p>We\u2019ve discussed the possibility to reflect function (and possibly type) properties automatically, which would allow us to also assign (at least some) hints automatically.</p> <p>The automatic reflection is not essential, but it could be a significant quality-of-life improvement. Its implementation seems too expensive for the core team to take up in the near term. At the same time, it\u2019s fairly isolated from the rest of Mathesar, which is good for new contributors.</p>"},{"location":"community/gsoc/project-ideas/automatic-hint-reflection/#classification","title":"Classification","text":"<ul> <li>Difficulty: High</li> <li>Skills needed: PostgreSQL, SQL</li> <li>Length: Long (~350 hours)</li> </ul>"},{"location":"community/gsoc/project-ideas/automatic-hint-reflection/#tasks","title":"Tasks","text":"<ul> <li>Research what is the intersection between the things that would be useful for Mathesar to automatically reflect and what can be automatically reflected;</li> <li>Create an accurate picture of what cases the automatic reflection will fully cover and in what cases information (hints) will have to be overridden or supplemented manually;</li> <li>Figure out when to reflect and how to cache the reflections so as to minimally burden the wider system with more state;</li> <li>Do the implementation.</li> </ul> <p>I would expect the above tasks to be performed (at least somewhat) asynchronously.</p>"},{"location":"community/gsoc/project-ideas/automatic-hint-reflection/#expected-outcome","title":"Expected Outcome","text":"<p>An automatic PostgreSQL function (and possibly type) property reflection mechanism tailored to automatically finding useful hints for the hint system.</p> <p>These automatically generated hints will be exposed through the function and type APIs, alongside manually written hints (if necessary), so that frontends can procedurally generate expression builders and provide useful guidance with minimal prior knowledge.</p>"},{"location":"community/gsoc/project-ideas/automatic-hint-reflection/#application-tips","title":"Application Tips","text":"<p>I\u2019d say a good candidate would be one that is comfortable taking the time to explore Mathesar needs, as relates to the hint, function and type systems, as well as one that is comfortable investigating the various tid-bits of information that Postgres makes available for reflection. I see this as a very exploratory task that requires the willingness to get to know multiple interesting systems.</p>"},{"location":"community/gsoc/project-ideas/automatic-hint-reflection/#resources","title":"Resources","text":"<ul> <li>This  is the tracking issue.</li> <li>This is the PR that will merge the hint system in.</li> <li>This is the current (rudimentary) state of the hint system.</li> <li>This is the current (rudimentary) state of the functions system, that uses hints.</li> </ul>"},{"location":"community/gsoc/project-ideas/automatic-hint-reflection/#mentors","title":"Mentors","text":"<ul> <li>Primary Mentor: Dominykas Mostauskis </li> <li>Backup Mentor: Brent Moran</li> </ul> <p>See our Team Members page for Matrix and GitHub handles of mentors.</p>"},{"location":"community/gsoc/project-ideas/break-out-columns/","title":"Break Columns out to New Table","text":""},{"location":"community/gsoc/project-ideas/break-out-columns/#the-problem","title":"The Problem","text":"<p>One of Mathesar\u2019s goals is to encourage users to store data in normalized tables. However, users that are not familiar with relational databases may not set up their data correctly to begin with.</p> <p>A user may have a column in their table which would be better as a separate table, linked by a foreign key relationship. For example, if they have a <code>Students</code> table in a database for a school district with a <code>School Name</code> column, it\u2019s likely that such a column could be a separate <code>Schools</code> table, and the students would be linked to their schools by a foreign key in the <code>Students</code> table linking to the primary key in the <code>Schools</code> table. Setting this up by hand would be tedious.</p>"},{"location":"community/gsoc/project-ideas/break-out-columns/#classification","title":"Classification","text":"<ul> <li>Difficulty: Easy</li> <li>Skills needed: PostgreSQL, Python, Pytest, Django</li> <li>Length: Medium (~175 hours)</li> </ul>"},{"location":"community/gsoc/project-ideas/break-out-columns/#tasks","title":"Tasks","text":"<ul> <li>Determine the current state of the solution in the code base in the <code>db/tables/operations/split.py</code> file.</li> <li>Double check the tests for the current solution and find any bugs.</li> <li>Fix any bugs found, add tests if needed.</li> <li>Connect the splitting functionality to the API so it can be called.</li> <li>If there\u2019s time, we will also attack the table merging logic in the <code>db/tables/operations/merge.py</code> file.</li> </ul>"},{"location":"community/gsoc/project-ideas/break-out-columns/#expected-outcome","title":"Expected Outcome","text":"<p>There should be an appropriate API endpoint (to be determined in collaboration with the Mathesar team) that lets a caller give a <code>database</code>, <code>schema</code>, <code>table</code>, and <code>column</code> as either a query parameter string or POST (depending on the design we choose).  The result should be the extraction of the column, creation of a new table consisting of a copy of that column (including data) plus the default Mathesar <code>id</code> primary key column, and the replacement of the extracted column in the original table with a foreign key column linking to the <code>id</code> column of the new table.  The foreign key column should be populated so that the natural join between the original and new tables results in the extracted data being matched up with the rows of the original table correctly.</p>"},{"location":"community/gsoc/project-ideas/break-out-columns/#application-tips","title":"Application Tips","text":"<p>The successful candidate will be able to understand and articulate the usefulness of automatically extracting a column to a separate table. They\u2019d thus be able to design and implement tests that ensure the expected behavior is actually satisfied by the current functions.  Finally, they\u2019d either know or be willing to learn about Django in order to be able to wire things up.</p>"},{"location":"community/gsoc/project-ideas/break-out-columns/#resources","title":"Resources","text":"<ul> <li>relevant code</li> <li>relevant tests</li> </ul>"},{"location":"community/gsoc/project-ideas/break-out-columns/#mentors","title":"Mentors","text":"<ul> <li>Primary Mentor: Brent Moran</li> <li>Backup Mentor: Kriti Godey</li> </ul> <p>See our Team Members page for Matrix and GitHub handles of mentors.</p>"},{"location":"community/gsoc/project-ideas/data-export/","title":"Support Data Export","text":""},{"location":"community/gsoc/project-ideas/data-export/#the-problem","title":"The Problem","text":"<p>Currently, Mathesar does not have any functionality that allows users to export data. We\u2019d like to allow users to export data from tables or views. We should support exporting to the following formats</p> <ul> <li>CSV/TSV files</li> <li>SQL files</li> <li>Excel files</li> <li>Google Sheets</li> <li>Airtable</li> <li>JSON files</li> </ul>"},{"location":"community/gsoc/project-ideas/data-export/#classification","title":"Classification","text":"<ul> <li>Difficulty: Medium</li> <li>Skills needed: Python, Django, PostgreSQL</li> <li>Bonus skills: JavaScript, frontend frameworks</li> <li>Length: Medium (~175 hours)</li> </ul>"},{"location":"community/gsoc/project-ideas/data-export/#tasks","title":"Tasks","text":"<ul> <li>Work with the Mathesar design team to figure out a design for how to integrate this functionality into the product.</li> <li>This includes what kinds of data we want to export. Do we want to support exporting tables, views, and/or entire schemas? Should we take currently applied filters and sorts into consideration?</li> <li>Write a technical spec for how this functionality will fit into the current Mathesar code.</li> <li>Implement the backend necessary to make the feature work, including both the import process in the database and APIs for the frontend to interact with.</li> <li>Optionally, implement the frontend changes needed for the feature as well.</li> </ul>"},{"location":"community/gsoc/project-ideas/data-export/#expected-outcome","title":"Expected Outcome","text":"<p>By the end of this project, we expect that the backend code and APIs will support exporting data to one or more of the file formats listed above.</p> <p>Also, we expect that exporting will transfer as much information as is supported by the target format, which might include column names, column types and table names (and possibly other bits of information).</p> <p>If the candidate is interested in working on the frontend, we\u2019d also love to see the frontend feature implemented.</p>"},{"location":"community/gsoc/project-ideas/data-export/#application-tips","title":"Application Tips","text":"<ul> <li>Please provide as much technical detail as you can on how this will integrate into Mathesar\u2019s code. API schemas, libraries you plan to use, etc.<ul> <li>Mathesar is a self-hosted product. You\u2019ll need to think through any requirements that the administrator of a Mathesar instance will need to perform (e.g. if you plan on exporting being an asynchronous process, then the administrator will need to install a task queue and a task cache)</li> </ul> </li> <li>Don\u2019t reinvent the wheel - use external libraries for the functionality where you can.</li> <li>It\u2019s helpful to start from the experience that you\u2019d like the end-user to have and work backwards.</li> </ul>"},{"location":"community/gsoc/project-ideas/data-export/#resources","title":"Resources","text":"<ul> <li>This is an entirely new feature so there are no existing resources.</li> </ul>"},{"location":"community/gsoc/project-ideas/data-export/#mentors","title":"Mentors","text":"<ul> <li>Primary Mentor: Mukesh Murali</li> <li>Backup Mentor: Dominykas Mostauskis</li> </ul> <p>See our Team Members page for Matrix and GitHub handles of mentors.</p>"},{"location":"community/gsoc/project-ideas/db-views/","title":"Database Views","text":""},{"location":"community/gsoc/project-ideas/db-views/#classification","title":"Classification","text":"<ul> <li>Difficulty: Medium</li> <li>Skills needed: Python, JavaScript, SQLAlchemy, Svelte.js, PostgreSQL</li> <li>Length: Long (~350 hours)</li> </ul>"},{"location":"community/gsoc/project-ideas/db-views/#the-problem","title":"The Problem","text":"<p>If a user has views in their database before installing Mathesar, or if they create views through some other client, those views will not be reflected in Mathesar.</p>"},{"location":"community/gsoc/project-ideas/db-views/#feature-description","title":"Feature Description","text":"<p>Mathesar should support read-only views. A user should be able to:</p> <ul> <li>Look at a view similarly to a table.</li> <li>Manipulate a view by sorting, filtering, and grouping on the view page (similarly to the table page)</li> <li>Explore the columns of a view in Data Explorer.</li> </ul>"},{"location":"community/gsoc/project-ideas/db-views/#ux-design-problems","title":"UX Design Problems","text":"<ul> <li>We need to figure out where/how to list views on the Schema page</li> <li>We need to determine which parts of the table page translate to a new \u201cview page\u201d. For example,</li> <li>Filtering works,</li> <li>Grouping works, but</li> <li>Opening the record details page from a view makes no sense.</li> <li>We need to determine how to integrate database views into the Data Explorer</li> <li>It\u2019s likely this would look something like how a table looks in Data Explorer when it has no links to another table.</li> </ul> <p>Overall, we expect a significant portion of this project to involve dealing with UX concerns before implementing.</p>"},{"location":"community/gsoc/project-ideas/db-views/#tasks","title":"Tasks","text":"<ul> <li>Add a <code>DBView</code> model.</li> <li>Add any related models needed (potentially <code>DBViewColumn</code>, for example)</li> <li>Set up at least the following read-only endpoints in the API:</li> <li><code>/api/db/v0/views/</code></li> <li><code>/api/db/v0/views/&lt;id&gt;/</code></li> <li><code>/api/db/v0/views/&lt;id&gt;/rows/</code></li> <li><code>/api/db/v0/views/&lt;id&gt;/columns/</code></li> <li>Do front end work to create a view page similar to the current table page.</li> <li>Do front end work to add views as a selectable object in the Data Explorer.</li> </ul>"},{"location":"community/gsoc/project-ideas/db-views/#expected-outcome","title":"Expected Outcome","text":"<p>Views should be integrated into the UI of Mathesar by the end of the project. In particular, there should be:</p> <ul> <li>A View page</li> <li>A way to query a view in the Data Explorer</li> <li>Some list of views in the Schema Page</li> </ul>"},{"location":"community/gsoc/project-ideas/db-views/#application-tips","title":"Application Tips","text":"<ul> <li>Demonstrate proficiency with the needed skills.</li> <li>Show that you understand the difficulty of this project, and have a grasp of the UX concerns involved.</li> </ul>"},{"location":"community/gsoc/project-ideas/db-views/#out-of-scope","title":"Out of Scope","text":"<ul> <li>Editing data values in views.</li> <li>Editing the definition of a view.</li> <li>Showing deep information about a DB view, e.g., the data sources for columns.</li> </ul>"},{"location":"community/gsoc/project-ideas/db-views/#resources","title":"Resources","text":"<ul> <li>https://www.postgresql.org/docs/13/sql-createview.html</li> </ul>"},{"location":"community/gsoc/project-ideas/db-views/#mentors","title":"Mentors","text":"<p>Primary Mentor: Brent Moran Secondary Mentor(s): Rajat Vijay</p>"},{"location":"community/gsoc/project-ideas/dependency-graph/","title":"Construct Dependency Graph for Database Objects","text":""},{"location":"community/gsoc/project-ideas/dependency-graph/#the-problem","title":"The Problem","text":"<p>We\u2019d like to be able to know what other database objects depend on a database object like a Schema or a Table.</p> <p>This is useful in various situations</p> <ul> <li>To show to the user in the frontend before they decide to delete a <code>Schema</code> or a <code>Table</code>.</li> <li>To show how a <code>View</code> was constructed </li> <li>To get a high level overview of the Data Model</li> </ul>"},{"location":"community/gsoc/project-ideas/dependency-graph/#classification","title":"Classification","text":"<ul> <li>Difficulty: Medium</li> <li>Primary Skills needed: PostgreSQL, Python, Pytest, Django</li> <li>Secondary skills needed (or willing to learn): UX design, Front End Development Knowledge</li> <li>Length: Long (~350 hours)</li> </ul>"},{"location":"community/gsoc/project-ideas/dependency-graph/#tasks","title":"Tasks","text":"<ul> <li>Build a python API(function in <code>db</code> module) to query for a database object dependency.</li> <li>Extract dependency information from System Catalog tables for the queried object</li> <li>System Catalog Tables does not contain the dependency information of a function as functions are stored as text on the database. So pglast should be used to extract dependency information from the function body.</li> <li>Build Dependency graph based on the dependency information.</li> <li>Add Django dependency API to resources listed in this issue, making use of the underlying python dependency API</li> </ul>"},{"location":"community/gsoc/project-ideas/dependency-graph/#bonus-tasks","title":"Bonus Tasks","text":"<ul> <li>Integrate it into the UI to support features as needed</li> </ul>"},{"location":"community/gsoc/project-ideas/dependency-graph/#expected-outcome","title":"Expected Outcome","text":"<p>There should an appropriate python api backed by SQL functions which would take in the <code>oid</code> or <code>name</code> of the database object whose dependency graph has to be constructed along with some filtering parameters to limit the listed dependent objects and return a hierarchical dependency graph which contains information of the dependent object. The dependency query varies based on the type of the database object, so the queries for each type should be split into composable <code>CTE</code> for readability.   </p>"},{"location":"community/gsoc/project-ideas/dependency-graph/#application-tips","title":"Application Tips","text":"<p>A good candidate would be someone who has good understanding of SQL, and align themselves with the goals of Mathesar. They should be willing to do a fair amount of research both in terms of UX and engineering. They will be working full-stack and would either know or be motivated to learn the necessary technologies in order to complete the project.</p>"},{"location":"community/gsoc/project-ideas/dependency-graph/#resources","title":"Resources","text":"<ul> <li>Reference code</li> <li>Relevant discussion</li> </ul>"},{"location":"community/gsoc/project-ideas/dependency-graph/#mentors","title":"Mentors","text":"<ul> <li>Primary Mentor: Mukesh Murali</li> <li>Backup Mentor: Brent Moran</li> </ul> <p>See our Team Members page for Matrix and GitHub handles of mentors.</p>"},{"location":"community/gsoc/project-ideas/file-data-types/","title":"Support for File &amp; Image Data Types","text":""},{"location":"community/gsoc/project-ideas/file-data-types/#the-problem","title":"The Problem","text":"<p>Mathesar currently only allows the user to use a small set of data types. We\u2019d like to expand the data types we offer in our product to include custom data types for dealing with files, images, and potentially other file types.</p>"},{"location":"community/gsoc/project-ideas/file-data-types/#classification","title":"Classification","text":"<ul> <li>Difficulty: High</li> <li>Skills needed: Python, PostgreSQL</li> <li>Bonus skills: JavaScript, frontend frameworks</li> <li>Length: Long (~350 hours)</li> </ul>"},{"location":"community/gsoc/project-ideas/file-data-types/#tasks","title":"Tasks","text":"<ul> <li>Work with the Mathesar design team to figure out how end users can interact with file and image data types in the UI, including:</li> <li>How data is displayed</li> <li>How data is entered</li> <li>What Mathesar Types to show</li> <li>What filtering options to support for each type</li> <li>What grouping options to support for each type</li> <li>What display options to support for each type</li> <li>Implement custom PostgreSQL types in the <code>db</code> module (similar to existing email and URI types).</li> <li>Implement storage of files or images in the desired storage backends. Users should be able to configure different storage backends (such as the local disk, AWS S3, etc.)</li> <li>Implement support for all frontend features in the backend <code>db</code> module and REST API.</li> <li>Optionally, implement the frontend portion of these features as well.</li> </ul>"},{"location":"community/gsoc/project-ideas/file-data-types/#expected-outcome","title":"Expected Outcome","text":"<p>By the end of this project, we expect that users will be able to seamlessly use file, image, and any other data types proposed (e.g. videos) within the Mathesar backend and API.</p> <p>If the candidate is interested, it would be great to also have the types integrated into the Mathesar UI.</p>"},{"location":"community/gsoc/project-ideas/file-data-types/#application-tips","title":"Application Tips","text":"<ul> <li>It\u2019s helpful to start from the experience that you\u2019d like the end-user to have and work backwards. Think through the use cases for each data type.</li> <li>For example, a user might want to see previews of images or view PDFs in the browser.</li> <li>Backend and database experience is critical for this project, so please emphasize your previous work there.</li> </ul>"},{"location":"community/gsoc/project-ideas/file-data-types/#resources","title":"Resources","text":"<ul> <li>Data Types in Mathesar:</li> <li>Data Types \u201cConcepts\u201d page</li> <li>Mathesar UI Data Types engineering page</li> <li>Existing Data Type components design spec, to see how current data types work.</li> <li>Filters in Mathesar:</li> <li>Filters \u201cConcepts\u201d page</li> <li>Filters engineering page</li> </ul>"},{"location":"community/gsoc/project-ideas/file-data-types/#mentors","title":"Mentors","text":"<ul> <li>Primary Mentor: Kriti Godey</li> <li>Backup Mentor: Mukesh Murali</li> </ul> <p>See our Team Members page for Matrix and GitHub handles of mentors.</p>"},{"location":"community/gsoc/project-ideas/import-data-into-existing-tables/","title":"Support Importing Data into Existing Tables","text":""},{"location":"community/gsoc/project-ideas/import-data-into-existing-tables/#the-problem","title":"The Problem","text":"<p>Currently, Mathesar only supports creating a new table when a CSV or TSV file is imported. We would like to expand this functionality to allow users to import new data into existing tables.</p>"},{"location":"community/gsoc/project-ideas/import-data-into-existing-tables/#classification","title":"Classification","text":"<ul> <li>Difficulty: Medium</li> <li>Skills needed: Python, Django, PostgreSQL</li> <li>Bonus skills: JavaScript, frontend frameworks</li> <li>Length: Long (~350 hours)</li> </ul>"},{"location":"community/gsoc/project-ideas/import-data-into-existing-tables/#tasks","title":"Tasks","text":"<ul> <li>Work with the Mathesar design team to figure out a design for how to integrate this functionality into the product.</li> <li>Write a technical spec for how this functionality will fit into the current Mathesar code.</li> <li>Implement the backend necessary to make the feature work, including both the import process in the database and APIs for the frontend to interact with.</li> <li>Optionally, implement the frontend changes needed for the feature as well.</li> </ul>"},{"location":"community/gsoc/project-ideas/import-data-into-existing-tables/#expected-outcome","title":"Expected Outcome","text":"<p>By the end of this project, we expect that the backend code and APIs will support importing CSV data into an existing table.</p> <p>If the candidate is interested, they can also implement the feature on the frontend.</p>"},{"location":"community/gsoc/project-ideas/import-data-into-existing-tables/#application-tips","title":"Application Tips","text":"<ul> <li>Please provide as much technical detail as you can on how this will integrate into Mathesar\u2019s code. API schemas, libraries you plan to use, etc.</li> <li>Don\u2019t reinvent the wheel - use external libraries for the functionality where you can.</li> <li>It\u2019s helpful to start from the experience that you\u2019d like the end-user to have and work backwards.</li> <li>Think through different cases for how to reconcile data, e.g. what happens when the field names in a CSV file don\u2019t match column names, or what happens when the table has more or fewer columns than the file being imported.</li> </ul>"},{"location":"community/gsoc/project-ideas/import-data-into-existing-tables/#resources","title":"Resources","text":"<ul> <li>Import Preview API technical spec</li> </ul>"},{"location":"community/gsoc/project-ideas/import-data-into-existing-tables/#mentors","title":"Mentors","text":"<ul> <li>Primary Mentor: Mukesh Murali</li> <li>Backup Mentor: Brent Moran</li> </ul> <p>See our Team Members page for Matrix and GitHub handles of mentors.</p>"},{"location":"community/gsoc/project-ideas/import-excel-json-files/","title":"Support importing Excel and JSON files","text":""},{"location":"community/gsoc/project-ideas/import-excel-json-files/#classification","title":"Classification","text":"<ul> <li>Difficulty: Medium</li> <li>Skills needed: Python, SQL</li> <li>Skills that could be helpful: Django, SQLAlchemy</li> <li>Length: Long (~350 hours)</li> </ul>"},{"location":"community/gsoc/project-ideas/import-excel-json-files/#the-problem","title":"The Problem","text":"<ul> <li>The Mathesar UI allows users to import data from CSV and TSV files.</li> <li>We\u2019d like to support importing Excel and JSON files.</li> </ul>"},{"location":"community/gsoc/project-ideas/import-excel-json-files/#feature-description","title":"Feature Description","text":"<ul> <li>The existing import UI should support importing JSON and Excel files.</li> <li>Importing a file should create a single table, and we should allow the user to preview that table, remove/rename columns, change data types etc.</li> <li>If the JSON or Excel files are not in a format where they can be easily imported as a single table, we should develop algorithms to convert the files into a suitable format.</li> <li>If the algorithm doesn\u2019t work, we should refuse to import the files and provide the user with a readable error.</li> <li>Column data types should be guessed during the import process.</li> <li>We have APIs for importing data into existing tables. Ideally, those should also work with the two new file types.</li> </ul>"},{"location":"community/gsoc/project-ideas/import-excel-json-files/#architectural-problems","title":"Architectural Problems","text":"<p>JSON and Excel files are more complex than CSV/TSV files. The primary architectural challenges for this project are:</p> <ul> <li>Figuring out a good algorithm for importing a single JSON file into a single table.</li> <li>Figuring out a good algorithm for importing a single Excel file into a single table.</li> <li>Integrating the new file types into our our existing import process while preserving all our functionality.</li> </ul>"},{"location":"community/gsoc/project-ideas/import-excel-json-files/#tasks","title":"Tasks","text":"<ol> <li>Determine what kinds of JSON data structures can and cannot be easily mapped to a single table.</li> <li>Determine if some other JSON data structures can be somehow adapted to map to a single table.</li> <li>Implement importing JSON files and integrate with current import APIs and UI.</li> </ol> <p>Repeat for Excel files.</p>"},{"location":"community/gsoc/project-ideas/import-excel-json-files/#expected-outcome","title":"Expected Outcome","text":"<p>Users should be able to upload JSON and Excel files in the current import UI seamlessly. If the file is structured so that it cannot be imported, they should see a clear error message explaining why.</p> <p>As a stretch goal, our APIs for importing data into existing tables should also support JSON and Excel files.</p>"},{"location":"community/gsoc/project-ideas/import-excel-json-files/#application-tips","title":"Application Tips","text":"<ul> <li>Demonstrate proficiency with the required skills.</li> <li>Demonstrate your understanding of Mathesar\u2019s current import code and how it will need to be extended to support these features.</li> </ul>"},{"location":"community/gsoc/project-ideas/import-excel-json-files/#resources","title":"Resources","text":"<ul> <li>Tutorial on using Postgres COPY to import JSON files</li> <li>Tutorial on using Pandas to read messy Excel files: this is provided as an example of how messy Excel files can be, not as an implementation suggestion.</li> </ul>"},{"location":"community/gsoc/project-ideas/import-excel-json-files/#mentors","title":"Mentors","text":"<p>Primary Mentor: Dominykas Secondary Mentor(s): Anish</p>"},{"location":"community/gsoc/project-ideas/json-data-type/","title":"Support for JSON Data Type","text":""},{"location":"community/gsoc/project-ideas/json-data-type/#the-problem","title":"The Problem","text":"<p>Mathesar currently only allows the user to use a small set of data types. We\u2019d like to expand the data types we offer in our product to include better support for PostgreSQL JSON types.</p>"},{"location":"community/gsoc/project-ideas/json-data-type/#classification","title":"Classification","text":"<ul> <li>Difficulty: Medium</li> <li>Skills needed: Python, Django, JavaScript, frontend frameworks</li> <li>Length: Long (~350 hours)</li> </ul>"},{"location":"community/gsoc/project-ideas/json-data-type/#tasks","title":"Tasks","text":"<ul> <li>Work with the Mathesar design team to figure out how end users can interact with the JSON data types in the UI, including:</li> <li>How data is displayed</li> <li>How data is entered</li> <li>What Mathesar Types to show</li> <li>What filtering options to support</li> <li>What grouping options to support</li> <li>What display options to support</li> <li>Implement support for all frontend features in the backend <code>db</code> module and REST API.</li> <li>Implement the frontend portion of these features as well.</li> </ul>"},{"location":"community/gsoc/project-ideas/json-data-type/#expected-outcome","title":"Expected Outcome","text":"<p>By the end of this project, we expect that users will be able to seamlessly use JSON data types within the Mathesar backend, API, and UI.</p>"},{"location":"community/gsoc/project-ideas/json-data-type/#application-tips","title":"Application Tips","text":"<ul> <li>It\u2019s helpful to start from the experience that you\u2019d like the end-user to have and work backwards. Think through the use cases for each data type.</li> <li>For example, users to expand and minimize individual keys in the JSON object stored in the UI</li> <li>Frontend experience is critical for this project, so please emphasize your previous work there.</li> </ul>"},{"location":"community/gsoc/project-ideas/json-data-type/#resources","title":"Resources","text":"<ul> <li>Data Types in Mathesar:</li> <li>Data Types \u201cConcepts\u201d page</li> <li>Mathesar UI Data Types engineering page</li> <li>Existing Data Type components design spec, to see how current data types work.</li> <li>Filters in Mathesar:</li> <li>Filters \u201cConcepts\u201d page</li> <li>Filters engineering page</li> <li>PostgreSQL JSON types documentation</li> </ul>"},{"location":"community/gsoc/project-ideas/json-data-type/#mentors","title":"Mentors","text":"<ul> <li>Primary Mentor: Brent Moran</li> <li>Backup Mentor: Mukesh Murali</li> </ul> <p>See our Team Members page for Matrix and GitHub handles of mentors.</p>"},{"location":"community/gsoc/project-ideas/json-editor/","title":"JSON editor","text":""},{"location":"community/gsoc/project-ideas/json-editor/#classification","title":"Classification","text":"<ul> <li>Difficulty: Medium or High, depending on experience</li> <li>Skills needed: HTML, CSS, TypeScript, JavaScript, Svelte, UX design</li> <li>Length:  Medium (~175 hours) or Long (~350 hours), depending on experience</li> </ul>"},{"location":"community/gsoc/project-ideas/json-editor/#the-problem","title":"The Problem","text":"<ul> <li> <p>The Mathesar UI allows users to configure the column types for their data, choosing between types like \u201cNumber\u201d, \u201cDate\u201d, \u201cText\u201d, and so on. All data entered into the column is then validated against the rules according to the type. So for example, in a Number column, Mathesar will allow input of <code>2</code> but will reject input of <code>hello</code>.</p> </li> <li> <p>Mathesar currently has partial support for two new types:</p> <ul> <li> <p>JSON Object columns, which should allow user input such as:</p> <pre><code>{\n  \"foo\": \"bar\",\n  \"baz\": { \"bat\": [ 1, 2, 3] }\n}\n</code></pre> </li> <li> <p>JSON Array columns, which should allow user input such as:</p> <pre><code>[\n  { \"foo\": \"bar\", \"baz\": 0 },\n  { \"bat\": null }\n]\n</code></pre> </li> </ul> <p>The goal with these types is to allow users to enter JSON data into Mathesar.</p> </li> <li> <p>The backend and API work is already complete for these two types. The front end work has begun but needs to be finished. The front end currently allows users to convert Text columns to JSON Object and JSON Array. And the front end is able to displays JSON values already stored in the database. But\u2026</p> </li> <li> <p>The UI does not yet allow users to input JSON values into table cells. There are also some other contexts which require user-entry of JSON values. We need a dedicated JSON editor for the user to input JSON.</p> </li> </ul>"},{"location":"community/gsoc/project-ideas/json-editor/#feature-description","title":"Feature Description","text":"<p>The JSON editor should meet all the following requirements:</p> <ul> <li>It should provide syntax highlighting, and be compatible with dark mode too.</li> <li>It should give users feedback on when their entry is not valid JSON.</li> <li>It should give users feedback on when their entry is valid JSON but is not valid for the column type. For example, the JSON Object column should not accept a JSON Array, and neither of our JSON column types should accept JSON values like <code>1</code>.</li> <li>It should display server errors </li> <li>It should load all its resources (e.g. JavaScript, static assets) asynchronously so that the initial page load is not degraded after adding this feature.</li> <li>It should provide a graceful experience for the user while loading.</li> <li>It should be easy to use.</li> <li>Its 3rd party libraries should be compatible with Mathesar\u2019s license (GPLv3).</li> </ul>"},{"location":"community/gsoc/project-ideas/json-editor/#ux-design-problems","title":"UX Design Problems","text":"<ul> <li>We have the following contexts in which we may want to accept entry of JSON values<ul> <li>A table cell</li> <li>An input field on a record page</li> <li>An input to set a default value for a column</li> <li>An input for a filter condition</li> <li>An input to filter records within the record selector</li> </ul> </li> <li>In each of the contexts above, we need to answer the following design questions:<ul> <li>Do we need a full-fledged JSON editor for the given context, or will a simple text input suffice?</li> <li>Can the user choose between a simple text input and a larger JSON editor? If so, how?</li> <li>How does the user open the JSON editor?</li> <li>Where does the JSON editor display after opening?</li> <li>How does the user submit their value once they are done entering their JSON?</li> <li>How does the user close the JSON editor without submitting a value?</li> <li>How do we indicate invalid JSON?</li> <li>When the user\u2019s input is valid JSON but invalid for the column type, should we perform that validation on the front end or the back end? How should these errors display?</li> <li>Where should we display general server errors that we get after the user has saved their value? (e.g. value violates a unique constraint)</li> <li>How does the user set the entire value to <code>NULL</code>? Do we need to make a distinction between a <code>null</code> JSON value and a <code>NULL</code> PostgreSQL value?</li> </ul> </li> </ul>"},{"location":"community/gsoc/project-ideas/json-editor/#tasks","title":"Tasks","text":"<ol> <li>Research available 3rd party libraries for accepting JSON input and present your findings to the Mathesar front end team for consideration. Then select the 3rd party library, in collaboration with the front end team.</li> <li>Write a UX design document describing the manner in which the JSON editor will be incorporated into Mathesar\u2019s UI. Then work with the front end team and product designer to solidify the UX design.</li> <li>Get the JSON editor to load an empty document asynchronously within the desired UI location.</li> <li>Get the JSON editor to load and display the cell contents, as fetched from the API.</li> <li>Get the JSON editor to save cell values via the API.</li> <li>Handle client-side error validation for cases where the input is valid JSON but invalid for the column type.</li> <li>Handle server-side errors after saving</li> </ol>"},{"location":"community/gsoc/project-ideas/json-editor/#expected-outcome","title":"Expected Outcome","text":"<p>Users can easily enter JSON data into cells within JSON Object and JSON Array columns.</p>"},{"location":"community/gsoc/project-ideas/json-editor/#application-tips","title":"Application Tips","text":"<ul> <li>Demonstrate proficiency with the required skills.</li> <li>Present some preliminary research into 3rd party JSON editors.</li> <li>Share some of your initial ideas about how best to integrate the JSON editor into the existing Mathesar UI.</li> </ul>"},{"location":"community/gsoc/project-ideas/json-editor/#out-of-scope","title":"Out of scope","text":"<p>These are some features we may consider adding in the future, but which are out of scope for this project</p> <ul> <li>More complex per-column validation of the JSON schema, beyond it being an object or array</li> <li>More ways to filter on JSON columns</li> </ul>"},{"location":"community/gsoc/project-ideas/json-editor/#mentors","title":"Mentors","text":"<ul> <li>Primary Mentor: Sean Colsen</li> <li>Secondary Mentor(s): Pavish Kumar Ramani Gopal</li> </ul>"},{"location":"community/gsoc/project-ideas/kanban-view/","title":"Kanban View","text":""},{"location":"community/gsoc/project-ideas/kanban-view/#classification","title":"Classification","text":"<ul> <li>Difficulty: High</li> <li>Skills needed: JavaScript, frontend frameworks, Python, Django</li> <li>Length: Long (~350 hours)</li> </ul>"},{"location":"community/gsoc/project-ideas/kanban-view/#the-problem","title":"The Problem","text":"<p>Currently the only way to visualize data in Mathesar is using the <code>Table</code> format. We would like the users to visualize data in other formats to make it easy to use and comprehend some specific types of data. This project aims to implement one of those formats called the Kanban view. Kanban view visually depict work at various stages of a process using cards to represent work items and columns to represent each stage of the process.</p>"},{"location":"community/gsoc/project-ideas/kanban-view/#feature-description","title":"Feature Description","text":"<p>Think of kanban view as a way of presenting grouped data with a very specific UI. It starts with the user grouping the data using exactly one table column. Each group becomes one kanban column. The user can then save the grouped data as a kanban board by giving it a name.</p> <p>The user can have multiple kanban boards using the same underlying table, ideally using different columns for grouping. Each kanban board will have its own grouping, filtering, and sorting configurations.</p> <p>Each item inside the kanban column should be represented as a card. This card uniquely represents exactly one row inside the table view. Each card will have its own configuration to choose the table columns for showing the data on the card.</p>"},{"location":"community/gsoc/project-ideas/kanban-view/#ux-design-challenges","title":"UX Design Challenges","text":"<p>Please bear in mind that the kanban view is a part of a bigger feature called visualization. This feature enables users to visualize data in other formats like kanban, calendar, graphs etc as opposed to just tables. This feature also let the user save these visualizations to visit and edit them later.</p>"},{"location":"community/gsoc/project-ideas/kanban-view/#tasks","title":"Tasks","text":"<ul> <li>Work with the Mathesar design team to figure out and finalize specs for:</li> <li>The user flow to create a new kanban board from a particular table.</li> <li>The user flow to see all of the saved kanban boards.</li> <li>The user flow to edit a kanban board\u2019s name.</li> <li>The user flow to change the column used for grouping.</li> <li>The user flow to toggle the visibility of any group.</li> <li>The user flow to toggle the visibility of empty groups.</li> <li>The user flow to add add filtering and sorting on the board\u2019s data.</li> <li>The user flow to configure the columns shown on the card UI.</li> <li>Implement the frontend components for this feature.</li> <li>Implement the backend components for this feature including but not limited to:</li> <li>API to list all of the saved boards. This API should be built in a way that it can be used later to list any visualization.</li> <li>API to save a kanban board with a name and some configurations.</li> <li>API to update the configuration for a board.</li> </ul> <p>NOTE: APIs for filtering, sorting, and grouping already exists.</p>"},{"location":"community/gsoc/project-ideas/kanban-view/#expected-outcome","title":"Expected Outcome","text":"<p>Users should be able able to create kanban boards on top of the tabular data. The users should also be able to list, edit and delete these boards.</p>"},{"location":"community/gsoc/project-ideas/kanban-view/#application-tips","title":"Application Tips","text":"<ul> <li>Demonstrate proficiency with the required skills.</li> <li>Share some of your initial ideas about UX of the feature.</li> <li>Share some of your initial ideas about how to save a particular visualization in the DB.</li> </ul>"},{"location":"community/gsoc/project-ideas/kanban-view/#out-of-scope","title":"Out of Scope","text":"<ul> <li>This project only only concerns the kanban view and hence implementing other visualizations like calendar, graphs, etc are out of scope.</li> <li>Sub-grouping inside a kanban board.</li> <li>Drag &amp; Drop to move cards across different groups(kanban columns).</li> <li>User permissions. For now all the views will be writable by the users having <code>read</code> access to the table on which they are built.</li> </ul>"},{"location":"community/gsoc/project-ideas/kanban-view/#resources","title":"Resources","text":"<ul> <li>What is a Kanban board?</li> <li>How grouping works currently?</li> <li>Examples of existing design specs</li> <li>Running the codebase locally</li> </ul>"},{"location":"community/gsoc/project-ideas/kanban-view/#mentors","title":"Mentors","text":"<p>Primary Mentor: Rajat Vijay</p> <p>Secondary Mentor(s): Brent Moran</p>"},{"location":"community/gsoc/project-ideas/list-data-type/","title":"List data type","text":""},{"location":"community/gsoc/project-ideas/list-data-type/#classification","title":"Classification","text":"<ul> <li>Difficulty: Medium</li> <li>Skills needed: Python, SQL, Django</li> <li>Skills that could be helpful: Django, SQLAlchemy, Svelte, TypeScript</li> <li>Length: Long (~350 hours) for both frontend &amp; backend, Medium (~175 hours) for backend only.</li> </ul>"},{"location":"community/gsoc/project-ideas/list-data-type/#the-problem","title":"The Problem","text":"<ul> <li>The Mathesar UI allows users to configure the column types for their data, choosing between types like \u201cNumber\u201d, \u201cDate\u201d, \u201cText\u201d, and so on. All data entered into the column is then validated against the rules according to the type. So for example, in a Number column, Mathesar will allow input of <code>2</code> but will reject input of <code>hello</code>.</li> </ul> <p>So far, we\u2019ve been assuming that users will only store a single point of data in any given table cell. However, PostgreSQL supports the ability to store an array instead of a single point of data, and we\u2019d like to support that.</p> <p>We already have support for arrays in explorations (and the Data Explorer), but those are read-only. This project is for adding support for lists to tables.</p>"},{"location":"community/gsoc/project-ideas/list-data-type/#feature-description","title":"Feature Description","text":""},{"location":"community/gsoc/project-ideas/list-data-type/#creating-columns","title":"Creating columns","text":"<ul> <li>\u201cList\u201d should be an available data type in addition to all of the others.</li> </ul>"},{"location":"community/gsoc/project-ideas/list-data-type/#importing-data","title":"Importing data","text":"<ul> <li>Comma separated or tab separated values in cells should be correctly inferred as Lists</li> </ul>"},{"location":"community/gsoc/project-ideas/list-data-type/#viewing-and-editing-list-data","title":"Viewing and editing list data","text":"<p>List data could be displayed and edited in the following places. All of these need to be updated to view and edit lists correctly.</p> <ul> <li>Table cells</li> <li>Input fields on record pages</li> <li>Inputs to set a default value for a column</li> <li>Inputs for filter conditions</li> <li>Inputs to filter records within the record selector</li> </ul> <p>Viewing lists</p> <ul> <li>Data of the \u201clist\u201d type should be shown as pills. </li> <li>Please look at the way lists are shown in the Data Explorer as a reference.</li> </ul> <p>Editing lists</p> <ul> <li>Users should be able to add and remove list items.</li> <li>Users should be able to edit the text of an existing list item.</li> <li>Errors should be handled and displayed if any of the operations fail.</li> </ul>"},{"location":"community/gsoc/project-ideas/list-data-type/#filtering-and-grouping","title":"Filtering and grouping","text":"<ol> <li>We should support the following filters for List cells:<ol> <li>is empty</li> <li>is not empty</li> <li>contains <code>&lt;ITEM&gt;</code></li> <li>number of items greater than <code>&lt;NUMBER&gt;</code></li> <li>number of items greater than or equal to <code>&lt;NUMBER&gt;</code></li> <li>number of items equal to <code>&lt;NUMBER&gt;</code></li> <li>number of items lesser than <code>&lt;NUMBER&gt;</code></li> <li>number of items lesser than or equal to <code>&lt;NUMBER&gt;</code></li> </ol> </li> <li>We should support the following custom grouping types for List cells:<ol> <li>Number of list items</li> </ol> </li> </ol>"},{"location":"community/gsoc/project-ideas/list-data-type/#architectural-problems","title":"Architectural Problems","text":"<ul> <li>Mathesar may be connected to PostgreSQL databases that have columns with arrays of non-text data types or multi-dimensional arrays. We need a way to let the frontend know that those kinds of lists aren\u2019t supported (we should show them as \u201cOther\u201d in the UI).</li> </ul>"},{"location":"community/gsoc/project-ideas/list-data-type/#ux-design-problems","title":"UX Design Problems","text":"<ul> <li>How do we add and remove list items from cells?</li> <li>How do we edit the text of existing list items?</li> </ul>"},{"location":"community/gsoc/project-ideas/list-data-type/#tasks","title":"Tasks","text":""},{"location":"community/gsoc/project-ideas/list-data-type/#backend","title":"Backend","text":"<ol> <li>Implement the List database type</li> <li>Integrate the List data type with our data type inference logic.</li> <li>Integrate the List data type with our existing APIs.</li> <li>Build custom grouping functions for number of list items</li> <li>Build custom filtering functions for lists</li> <li>Integrate the filtering and grouping function with our API.</li> <li>Figure out how to identify unsupported arrays in the API so that the frontend shows them as text.</li> </ol>"},{"location":"community/gsoc/project-ideas/list-data-type/#frontend","title":"Frontend","text":"<ol> <li>Write a UX design document describing how lists will be edited. Then work with the front end team and product designer to solidify the UX design.</li> <li>Implement the list viewing and editing behavior.</li> <li>Ensure filtering and grouping works well.</li> </ol>"},{"location":"community/gsoc/project-ideas/list-data-type/#expected-outcome","title":"Expected Outcome","text":"<p>Users should be able to use List data types as described in \u201cFeature Description\u201d</p>"},{"location":"community/gsoc/project-ideas/list-data-type/#application-tips","title":"Application Tips","text":"<p>You may submit an application for only the backend portion of this project, or for both backend and frontend. Please make it clear which you\u2019re proposing.</p> <ul> <li>Demonstrate proficiency with the required skills.</li> <li>Present a preliminary API spec.</li> <li>Present a preliminary UX design document if you\u2019re proposing working on the frontend.</li> <li>Demonstrate an understanding of how Mathesar data types are implemented in the backend and APIs.</li> </ul>"},{"location":"community/gsoc/project-ideas/list-data-type/#out-of-scope","title":"Out of Scope","text":"<p>For the scope of this project, we will only support lists of text in the UI. Lists of other data types and multi-dimensional lists (lists of lists, etc.) out of scope.</p>"},{"location":"community/gsoc/project-ideas/list-data-type/#resources","title":"Resources","text":"<ul> <li>Previous spec for List data types: this is an old and deprecated issue, but might be useful.</li> <li>Please review how multi-select fields work in Airtable.</li> </ul>"},{"location":"community/gsoc/project-ideas/list-data-type/#mentors","title":"Mentors","text":"<p>Primary Mentor: TBD Secondary Mentor(s): Pavish</p>"},{"location":"community/gsoc/project-ideas/location-data-type/","title":"Location Data type","text":""},{"location":"community/gsoc/project-ideas/location-data-type/#classification","title":"Classification","text":"<ul> <li>Difficulty: High</li> <li>Skills needed: Python, SQLAlchemy, SQL, PostGIS</li> <li>Skills that could be helpful: Django, Svelte, TypeScript</li> <li>Length: Long (~350 hours)</li> </ul>"},{"location":"community/gsoc/project-ideas/location-data-type/#the-problem","title":"The Problem","text":"<ul> <li>The Mathesar UI allows users to configure the column types for their data, choosing between types like \u201cNumber\u201d, \u201cDate\u201d, \u201cText\u201d, and so on. </li> <li>We would like to provide a Spatial data type so that users can</li> <li>Store Geometric values like a location coordinate, boundaries of an area etc</li> <li>Process the spatial values like sorting based on nearest location coordinate, filtering for values within a certain boundary.</li> <li>Visualize a spatial value </li> </ul>"},{"location":"community/gsoc/project-ideas/location-data-type/#feature-description","title":"Feature Description","text":"<ul> <li>Users should be able to install PostGIS extension</li> <li>Users should be able to set the Postgis data types(Geometry, Geography data types) as a column type</li> <li>Users should be able to choose the spatial type(POINT, LINESTRING etc) for a Geometry/Geography column.</li> <li>Add the basic operations supported by Postgres and PostGIS to our functions framework</li> <li>Add the basic functions supported by PostGIS to our functions framework</li> <li>Add casting functions to change a column from a spatial data type to a different compatible spatial data type.</li> <li>Bonus: Provide a text based UI for the user to enter the coordinates.  Add Map based coordinate Picker UI, using something like OpenStreetMap</li> </ul>"},{"location":"community/gsoc/project-ideas/location-data-type/#architectural-problems","title":"Architectural Problems","text":"<p>We need to figure out</p> <ul> <li>the logic for identifying columns with spatial data value when the data is imported</li> <li>how to format the geometric data types when sending it to or receiving it from the frontend</li> <li>Figure out the logic for casting between various compatible spatial data types.</li> </ul>"},{"location":"community/gsoc/project-ideas/location-data-type/#tasks","title":"Tasks","text":"<ol> <li>Add PostGIS data types to the list of available data types in Mathesar.</li> <li>Integrate PostGIS data types with our data type inference logic when a dataset is imported.</li> <li>Make sure we are able to infer spatial column type correctly when a column data is requested using the column API</li> <li>Integrate all the PostGIS data type with our existing APIs.</li> <li>Research and figure out a proper format to serialize and deserialize the PostGIS data types. You would need to confirm with the frontend team with the serialization format.</li> <li>Add the functions and operators supported by PostGIS to our functions and filters APIs.</li> <li>Bonus: Add frontend UI for the user to enter a spatial value into a Spatial column.</li> </ol>"},{"location":"community/gsoc/project-ideas/location-data-type/#expected-outcome","title":"Expected Outcome","text":"<ul> <li>Users can set columns to the most of the commonly used data types along with the spatial type available in PostGIS.</li> <li>Users should be able to import data which contains Spatial values and expect Mathesar to infer the column type based on the imported Spatial value.</li> <li>Users should be able to get/set a column to a spatial data type.</li> <li>Users should be able to get/set a spatial value to a spatial column using the API.</li> <li>Users should be able to filter, sort the spatial data based on operators supported by PostGIS. The list of operators does not have to be exhaustive, only the infrastructure should be set in place, so that we can extend the list of supported operators in future.</li> <li>Bonus: Users should be able to set the spatial data using the UI.</li> </ul>"},{"location":"community/gsoc/project-ideas/location-data-type/#application-tips","title":"Application Tips","text":"<ul> <li>Demonstrate proficiency with the required skills.</li> <li>Present some preliminary research into Spatial data types, Spatial data type serialization format.</li> <li>Demonstrate an understanding of how Mathesar does data type inference.</li> </ul>"},{"location":"community/gsoc/project-ideas/location-data-type/#resources","title":"Resources","text":"<ul> <li>The Ultimate List of GIS Formats and Geospatial File Extensions</li> <li>PostGIS documentation</li> </ul>"},{"location":"community/gsoc/project-ideas/location-data-type/#mentors","title":"Mentors","text":"<p>Primary Mentor: Mukesh Secondary Mentor(s): Pavish </p>"},{"location":"community/gsoc/project-ideas/make-casting-functions-inlinable/","title":"Make casting functions inlinable","text":""},{"location":"community/gsoc/project-ideas/make-casting-functions-inlinable/#classification","title":"Classification","text":"<ul> <li>Difficulty: Medium</li> <li>Skills needed: Python, PostgreSQL, SQLAlchemy</li> <li>Length: Long (~350 hours)</li> </ul>"},{"location":"community/gsoc/project-ideas/make-casting-functions-inlinable/#the-problem","title":"The Problem","text":"<p>When importing a table from a CSV file, we attempt to give reasonable types to the columns of the resulting column, and we do that by repeatedly attempting to cast its columns to various types and seeing which of those attempts succeed. We call this type-inference. We would like to improve the performance of our type inference. This project is about doing that by making our casting SQL functions [0] inlinable [1] so that they can be exposed to Postgres\u2019 query planner, which can apply various optimizations. We expect the most significant result to be an increase in how row-parallel casting is.</p>"},{"location":"community/gsoc/project-ideas/make-casting-functions-inlinable/#tasks","title":"Tasks","text":"<ul> <li>Find a way to tell when a casting SQL function is inlinable;</li> <li>Design a testing suite for whether or not our casting SQL functions are inlinable;</li> <li>Outline a strategy to make our casting SQL functions inlinable;</li> <li>Implement that strategy, making all of our type casting SQL functions inlinable.</li> </ul>"},{"location":"community/gsoc/project-ideas/make-casting-functions-inlinable/#expected-outcome","title":"Expected Outcome","text":"<ul> <li>All our type casting SQL functions are inlinable;</li> <li>We are able to test that that doesn\u2019t change.</li> </ul>"},{"location":"community/gsoc/project-ideas/make-casting-functions-inlinable/#application-tips","title":"Application Tips","text":"<ul> <li>Demonstrate proficiency with the required skills;</li> <li>Demonstrate interest in learning new and esotheric things; Postgres inlining is poorly documented and will require the willigness to dig for information and to experiment;</li> <li>Present some preliminary research into how our SQL type casting functions are defined and how they could be made inlinable;</li> <li>Describe your plan or preliminary research for each of the Tasks with clarity.</li> </ul>"},{"location":"community/gsoc/project-ideas/make-casting-functions-inlinable/#resources","title":"Resources","text":"<ul> <li>[0] https://github.com/mathesar-foundation/mathesar/blob/master/db/types/operations/cast.py </li> <li>[1] https://wiki.postgresql.org/wiki/Inlining_of_SQL_functions</li> </ul>"},{"location":"community/gsoc/project-ideas/make-casting-functions-inlinable/#mentors","title":"Mentors","text":"<p>Primary Mentor: Dominykas Secondary Mentor(s): Brent</p>"},{"location":"community/gsoc/project-ideas/more-data-import-sources/","title":"Support More Data Import Sources","text":""},{"location":"community/gsoc/project-ideas/more-data-import-sources/#the-problem","title":"The Problem","text":"<p>Currently, Mathesar only supports importing data from CSV-like files. We\u2019d like to expand the types of data we can import, including support for:</p> <ul> <li>SQL files</li> <li>Excel files</li> <li>Google Sheets</li> <li>Airtable</li> <li>JSON files</li> </ul>"},{"location":"community/gsoc/project-ideas/more-data-import-sources/#classification","title":"Classification","text":"<ul> <li>Difficulty: Medium</li> <li>Skills needed: Python, Django, PostgreSQL</li> <li>Bonus skills: JavaScript, frontend frameworks</li> <li>Length: Long (~350 hours)</li> </ul>"},{"location":"community/gsoc/project-ideas/more-data-import-sources/#tasks","title":"Tasks","text":"<ul> <li>Work with the Mathesar design team to figure out a design for how to integrate this functionality into the product.</li> <li>Write a technical spec for how this functionality will fit into the current Mathesar code.</li> <li>Implement the backend necessary to make the feature work, including both the import process in the database and APIs for the frontend to interact with.</li> <li>Optionally, implement the frontend changes needed for the feature as well.</li> </ul>"},{"location":"community/gsoc/project-ideas/more-data-import-sources/#expected-outcome","title":"Expected Outcome","text":"<p>By the end of this project, we expect that the backend code and APIs will support importing data from one or more of the data sources listed above.</p> <p>If the candidate is interested in working on the frontend, we\u2019d also love to see the frontend feature implemented.</p>"},{"location":"community/gsoc/project-ideas/more-data-import-sources/#application-tips","title":"Application Tips","text":"<ul> <li>Please provide as much technical detail as you can on how this will integrate into Mathesar\u2019s code. API schemas, libraries you plan to use, etc.<ul> <li>Mathesar is a self-hosted product. You\u2019ll need to think through any requirements that the administrator of a Mathesar instance will need to perform (e.g. if you plan to use an external API, will the administrator need a developer key for that API?) </li> </ul> </li> <li>Don\u2019t reinvent the wheel - use external libraries for the functionality where you can.</li> <li>It\u2019s helpful to start from the experience that you\u2019d like the end-user to have and work backwards.</li> </ul>"},{"location":"community/gsoc/project-ideas/more-data-import-sources/#resources","title":"Resources","text":"<ul> <li>Import Preview API technical spec</li> </ul>"},{"location":"community/gsoc/project-ideas/more-data-import-sources/#mentors","title":"Mentors","text":"<ul> <li>Primary Mentor: Mukesh Murali</li> <li>Backup Mentor: Kriti Godey</li> </ul> <p>See our Team Members page for Matrix and GitHub handles of mentors.</p>"},{"location":"community/gsoc/project-ideas/more-summarizations/","title":"Add more summarization functions","text":""},{"location":"community/gsoc/project-ideas/more-summarizations/#classification","title":"Classification","text":"<ul> <li>Difficulty: Easy</li> <li>Skills needed: Python, SQLAlchemy, JavaScript, Svelte, PostgreSQL</li> <li>Length: Medium (~175 hours)</li> </ul>"},{"location":"community/gsoc/project-ideas/more-summarizations/#the-problem","title":"The Problem","text":"<p>The Mathesar Data Explorer enables an action called \u201cSummarize\u201d that let a user view a summary of their data, which is in fact an aggregation of some column(s), grouped by some other column(s). Currently, the only possible aggregation functions are counting or listing.</p>"},{"location":"community/gsoc/project-ideas/more-summarizations/#feature-description","title":"Feature Description","text":"<p>We want to add more summarization (aggregation) functions to the Mathesar Data Explorer. The functions should either come from the PostgreSQL aggregate functions, or the implementer could create their own. Functions to prioritize are:</p> <ul> <li>Summing numeric columns</li> <li>Joining array (list) columns into a single array (list)</li> <li>Merging JSON Object columns</li> <li>Statistical aggregations (Mean, Median, Max, Min)</li> </ul>"},{"location":"community/gsoc/project-ideas/more-summarizations/#ux-design-problems","title":"UX Design Problems","text":"<p>The only real UX issue to solve here is how to present the different options in a way that is understandable to the user. It may be that the current drop-down list needs to be enriched somehow. It\u2019s possible that the implementer could want to do an aggregation that needs some kind of presentation of the output, but that\u2019s doubtful.</p>"},{"location":"community/gsoc/project-ideas/more-summarizations/#tasks","title":"Tasks","text":"<ul> <li>Determine which summarization functions to add by consulting the documentation and proposing ideas to the mentors.</li> <li>Determine whether any UI/UX concerns will arise from the chosen functions.</li> <li>Implement the back end functions for each summarization function chosen.</li> <li>Add the summarization functions to the Data Explorer UI, handling any UX concerns.</li> </ul>"},{"location":"community/gsoc/project-ideas/more-summarizations/#expected-outcome","title":"Expected Outcome","text":"<p>We should have at least 3 (preferably more) new summarization functions in the Data Explorer by the end of the internship.</p>"},{"location":"community/gsoc/project-ideas/more-summarizations/#application-tips","title":"Application Tips","text":"<ul> <li>Demonstrate proficiency with the required skills.</li> <li>Present some preliminary research into which summarization functions make sense and why.</li> <li>Make sure to demonstrate an understanding of what an aggregation function does, and why they\u2019re useful.</li> <li>Try to provide examples showing why each aggregation function researched might be useful.</li> </ul>"},{"location":"community/gsoc/project-ideas/more-summarizations/#resources","title":"Resources","text":"<ul> <li>https://www.postgresql.org/docs/13/functions-aggregate.html</li> <li>https://www.postgresql.org/docs/13/sql-createaggregate.html</li> <li>https://www.postgresql.org/docs/13/xaggr.html</li> </ul>"},{"location":"community/gsoc/project-ideas/more-summarizations/#mentors","title":"Mentors","text":"<p>Primary Mentor: Brent Moran Secondary Mentor(s): Sean Colsen</p>"},{"location":"community/gsoc/project-ideas/persist-ui-configuration/","title":"Persist UI configuration","text":""},{"location":"community/gsoc/project-ideas/persist-ui-configuration/#classification","title":"Classification","text":"<ul> <li>Difficulty: Medium</li> <li>Skills needed: Python, SQL, JavaScript</li> <li>Skills that could be helpful: Django, SQLAlchemy, Svelte, TypeScript</li> <li>Length: Medium (~175 hours)</li> </ul>"},{"location":"community/gsoc/project-ideas/persist-ui-configuration/#the-problem","title":"The Problem","text":"<ul> <li>Mathesar currently does not persist certain user-defined configurations, such as:</li> <li>Column widths in tables and explorations</li> <li>Open/closed state of the Table Inspector and Exploration Inspector</li> <li>Sidebar widths</li> <li>The objectives of this project are to:</li> <li>Identify any other non-persisted user configurations</li> <li>Store the aforementioned information in the backend</li> </ul>"},{"location":"community/gsoc/project-ideas/persist-ui-configuration/#tasks","title":"Tasks","text":"<ul> <li>Come up with a specification document containing the database schema, backend work, and API request/response structure necessary to persist the data mentioned in \u201cThe Problem\u201d section.</li> <li>Work with the Mathesar backend and frontend teams to finalize the specifications.</li> <li>Implement the necessary backend work.</li> <li>Implement the frontend work to send API requests when user modifies any of these configurations.</li> </ul>"},{"location":"community/gsoc/project-ideas/persist-ui-configuration/#expected-outcome","title":"Expected Outcome","text":"<ul> <li>Users\u2019 changes to the UI should be persisted as described in \u201cThe Problem\u201d section.</li> </ul>"},{"location":"community/gsoc/project-ideas/persist-ui-configuration/#application-tips","title":"Application Tips","text":"<ul> <li>Show proficiency in the required skills.</li> <li>Provide a preliminary approach to solving the challenge, including the database schema and API specifications.</li> <li>Demonstrate a good understanding of the Mathesar codebase.</li> </ul>"},{"location":"community/gsoc/project-ideas/persist-ui-configuration/#mentors","title":"Mentors","text":"<p>Primary Mentor: Dominykas Secondary Mentor(s): Pavish Kumar Ramani Gopal</p>"},{"location":"community/gsoc/project-ideas/phone-number-data-type/","title":"Phone Number data type","text":""},{"location":"community/gsoc/project-ideas/phone-number-data-type/#classification","title":"Classification","text":"<ul> <li>Difficulty: Medium</li> <li>Skills needed: Python, SQL, JavaScript</li> <li>Skills that could be helpful: Django, SQLAlchemy, Svelte, TypeScript</li> <li>Length: Medium (~175 hours) or Long (~350 hours) depending on your experience</li> </ul>"},{"location":"community/gsoc/project-ideas/phone-number-data-type/#the-problem","title":"The Problem","text":"<ul> <li>The Mathesar UI allows users to configure the column types for their data, choosing between types like \u201cNumber\u201d, \u201cDate\u201d, \u201cText\u201d, and so on. All data entered into the column is then validated against the rules according to the type. So for example, in a Number column, Mathesar will allow input of <code>2</code> but will reject input of <code>hello</code>.</li> <li>We would to provide \u201cPhone Number\u201d as an available type, but Mathesar does not support this functionality.</li> </ul>"},{"location":"community/gsoc/project-ideas/phone-number-data-type/#feature-description","title":"Feature Description","text":"<ul> <li>We should have a custom Postgres data type for \u201cPhone Number\u201d. Please refer to our email &amp; URL implementations.</li> <li>Users should be able to set a column\u2019s data type to \u201cPhone Number\u201d.</li> <li>Data with the \u201cPhone Number\u201d data type set should be automatically formatted in a pretty way where possible.<ul> <li>e.g. 10-digit US/Canada phone numbers should be formatted as (XXX) XXX-XXXX</li> </ul> </li> <li>Phone numbers that cannot be automatically formatted should be formatted as text    </li> </ul>"},{"location":"community/gsoc/project-ideas/phone-number-data-type/#architectural-problems","title":"Architectural Problems","text":"<p>We need to figure out:</p> <ul> <li>how to structure the Postgres type.</li> <li>the logic for identifying columns with phone number data when data is imported.</li> <li>how to format phone numbers in the frontend.</li> </ul>"},{"location":"community/gsoc/project-ideas/phone-number-data-type/#tasks","title":"Tasks","text":"<ol> <li>Implement the Phone Number database type</li> <li>Integrate the Phone Number data type with our data type inference logic.</li> <li>Integrate the Phone Number data type with our existing APIs.</li> <li>Research available phone number formatting libraries and present your findings to the Mathesar front end team for consideration. Then select the 3rd party library, in collaboration with the front end team.</li> <li>Implement phone number formatting in the frontend.</li> </ol>"},{"location":"community/gsoc/project-ideas/phone-number-data-type/#expected-outcome","title":"Expected Outcome","text":"<ul> <li>Users can set columns to the Phone Number data type.</li> <li>Phone numbers should be correctly formatted in table cells, explorations, default value inputs, filter inputs, and record selector inputs.</li> </ul>"},{"location":"community/gsoc/project-ideas/phone-number-data-type/#application-tips","title":"Application Tips","text":"<ul> <li>Demonstrate proficiency with the required skills.</li> <li>Present some preliminary research into phone number formatting.</li> <li>Demonstrate an understanding of how Mathesar data types are implemented in the backend and APIs.</li> </ul>"},{"location":"community/gsoc/project-ideas/phone-number-data-type/#out-of-scope","title":"Out of Scope","text":"<p>We shouldn\u2019t implement any custom logic for validating phone numbers since phone numbers can be quite complex.</p>"},{"location":"community/gsoc/project-ideas/phone-number-data-type/#resources","title":"Resources","text":"<ul> <li>Falsehoods Programmers Believe About Phone Numbers</li> <li>Airtable has a phone number column data type, feel free to play around with it.</li> </ul>"},{"location":"community/gsoc/project-ideas/phone-number-data-type/#mentors","title":"Mentors","text":"<p>Primary Mentor: Mukesh Secondary Mentor(s): Rajat</p>"},{"location":"community/gsoc/project-ideas/postgis-data-types/","title":"Support for PostGIS Data Types","text":""},{"location":"community/gsoc/project-ideas/postgis-data-types/#the-problem","title":"The Problem","text":"<p>Mathesar currently only allows the user to use a small set of data types. We\u2019d like to expand the data types we offer in our product to include the spatial data types provided by PostGIS.</p>"},{"location":"community/gsoc/project-ideas/postgis-data-types/#classification","title":"Classification","text":"<ul> <li>Difficulty: Hard</li> <li>Skills needed: Python, PostgreSQL, PostGIS</li> <li>Bonus skills: JavaScript, frontend frameworks</li> <li>Length: Long (~350 hours)</li> </ul>"},{"location":"community/gsoc/project-ideas/postgis-data-types/#tasks","title":"Tasks","text":"<ul> <li>Work with the Mathesar design team to figure out how end users can interact with PostGIS data types in the UI, including:</li> <li>How data is displayed</li> <li>How data is entered</li> <li>What Mathesar Types to show</li> <li>What filtering options to support for each type</li> <li>What grouping options to support for each type</li> <li>What display options to support for each type</li> <li>Implement support for these features in the backend <code>db</code> module and REST API.</li> <li>Optionally, implement the frontend portion of these features as well.</li> </ul>"},{"location":"community/gsoc/project-ideas/postgis-data-types/#expected-outcome","title":"Expected Outcome","text":"<p>By the end of this project, we expect that if a user has PostGIS installed, they will be able to have a seamless experience of using PostGIS types within the Mathesar backend and API.</p> <p>If the candidate is interested, it would be great to also have the types integrated into the Mathesar UI.</p>"},{"location":"community/gsoc/project-ideas/postgis-data-types/#application-tips","title":"Application Tips","text":"<ul> <li>It\u2019s helpful to start from the experience that you\u2019d like the end-user to have and work backwards. Think through the use cases for each data type.</li> <li>Backend and database experience is critical for this project, so please emphasize your previous work there.</li> <li>You\u2019ll need to do considerable research into PostGIS for this project. Demonstrate that as much as you can in your application.</li> </ul>"},{"location":"community/gsoc/project-ideas/postgis-data-types/#resources","title":"Resources","text":"<ul> <li>Data Types in Mathesar:</li> <li>Data Types \u201cConcepts\u201d page</li> <li>Mathesar UI Data Types engineering page</li> <li>Existing Data Type components design spec, to see how current data types work.</li> <li>Filters in Mathesar:</li> <li>Filters \u201cConcepts\u201d page</li> <li>Filters engineering page</li> <li>PostGIS resources:</li> <li>PostGIS website</li> <li>PostGIS Data Types reference</li> </ul>"},{"location":"community/gsoc/project-ideas/postgis-data-types/#mentors","title":"Mentors","text":"<ul> <li>Primary Mentor: Kriti Godey</li> <li>Backup Mentor: Brent Moran</li> </ul> <p>See our Team Members page for Matrix and GitHub handles of mentors.</p>"},{"location":"community/gsoc/project-ideas/sharable-forms/","title":"Sharable Forms to Add Data to Tables","text":""},{"location":"community/gsoc/project-ideas/sharable-forms/#the-problem","title":"The Problem","text":"<p>Mathesar currently offers a spreadsheet-like interface for data entry into tables. One of Mathesar\u2019s potential usecases is to allow data entry through surverys from a large group of individuals. Sharing the spreadsheet-like interface for such data entry is unfeasible and also comes with privacy and access-level implications.</p> <p>A simpler solution is to share forms to the individuals. The creators/admins would have direct access to Mathesar\u2019s interface, share a form view for the table, and everyone participating in the survey would only be seeing and entering data into that form. An entry through the form will reflect on the associated table(s) as a row.</p>"},{"location":"community/gsoc/project-ideas/sharable-forms/#classification","title":"Classification","text":"<ul> <li>Difficulty: Low</li> <li>Primary skills needed: Frontend development knowledge</li> <li>Secondary skills needed (or willing to learn): Requirement analysis, UX design, SQL, Python, Django</li> <li>Length: Medium (~175 hours)</li> </ul>"},{"location":"community/gsoc/project-ideas/sharable-forms/#tasks","title":"Tasks","text":"<ul> <li>Research similar products and come up with product-level specs on the requirement.</li> <li>Research and come up with the UX required for form construction for Mathesar admins, and the form displayed to end-users (participants).</li> <li>Identify API requirements and create new endpoints or update existing ones as required.</li> <li>Implement the frontend work essential for building, sharing and entering data into the form.</li> </ul>"},{"location":"community/gsoc/project-ideas/sharable-forms/#expected-outcome","title":"Expected Outcome","text":"<p>We should have an interface for table owners to construct and share forms. The fields on the form should map to table columns and owners should have the ability to omit, align, organize those fields. They should also be able to provide additional descriptions. Participants viewing the form should be able to enter and submit data using it, which should reflect on the table.</p>"},{"location":"community/gsoc/project-ideas/sharable-forms/#application-tips","title":"Application Tips","text":"<p>A good candidate should take the time needed to understand the requirements, research and suggest changes or improvements. They should be motivated in providing a good user experience. They will be working full-stack and would either know or be willing to learn the necessary technologies.</p>"},{"location":"community/gsoc/project-ideas/sharable-forms/#mentors","title":"Mentors","text":"<ul> <li>Primary Mentor: Pavish Kumar Ramani Gopal</li> <li>Backup Mentor: Sean Colsen</li> </ul> <p>See our Team Members page for Matrix and GitHub handles of mentors.</p>"},{"location":"community/gsoc/project-ideas/single-select-data-type/","title":"Single Select \u201cdata type\u201d","text":""},{"location":"community/gsoc/project-ideas/single-select-data-type/#classification","title":"Classification","text":"<ul> <li>Difficulty: Easy</li> <li>Skills needed: Python, Svelte, JavaScript</li> <li>Skills that could be helpful: Django, TypeScript</li> <li>Length: Long (~350 hours)</li> </ul>"},{"location":"community/gsoc/project-ideas/single-select-data-type/#the-problem","title":"The Problem","text":"<p>Currently, Mathesar users have no way to restrict values in a column to a pre-defined set of values. We would like to offer users a way to create a \u201csingle select\u201d field.</p>"},{"location":"community/gsoc/project-ideas/single-select-data-type/#feature-description","title":"Feature Description","text":"<p>The Mathesar UI has the concept of links between tables. Links create a new column with a foreign key constraint. This column show a summary of the linked record, and adding or editing data involves selecting or creating a record from another table via the \u201crecord selector\u201d.</p> <p>\u201cSingle select\u201d fields should be a configuration of a column with a foreign key constraint. When a foreign key column is designated as a \u201csingle select field\u201d, the following behavior should change:</p>"},{"location":"community/gsoc/project-ideas/single-select-data-type/#showing-and-editing-single-select-data","title":"Showing and editing \u201csingle select\u201d data","text":"<ul> <li>Editing data in the following places should use a dropdown instead of the record selector:<ul> <li>A table cell</li> </ul> </li> <li>An input field on a record page</li> <li>An input to set a default value for a column</li> <li>An input for a filter condition</li> <li>An input to filter records within the record selector</li> <li>Each choice (i.e. linked record) should be associated with a different color and displayed in that color</li> <li>The colors should be able to be turned off.</li> <li>Users should not be able to add new choices from the dropdown, they can only choose from existing choices.</li> </ul>"},{"location":"community/gsoc/project-ideas/single-select-data-type/#table-inspector","title":"Table inspector","text":"<ul> <li>The column should show that it\u2019s a single select field in the table inspector</li> <li>Columns should be able to be switched between \u201cnormal\u201d FK mode and \u201csingle select\u201d mode.</li> <li>There should be a link to the table that stores the \u201cchoices\u201d for this field so the user can edit choices.</li> </ul>"},{"location":"community/gsoc/project-ideas/single-select-data-type/#tables-with-choices","title":"Tables with choices","text":"<ul> <li>Tables that linked to a single select field should display differently in the UI</li> <li>There should be a place to set and change each record\u2019s associated color if colored choices are turned on.</li> </ul>"},{"location":"community/gsoc/project-ideas/single-select-data-type/#creating-single-select-fields","title":"Creating single select fields","text":"<ul> <li>Users should be able to find the \u201csingle select\u201d option easily when creating a column</li> <li>Users should be able to find the \u201csingle select\u201d option easily when creating a new link</li> </ul>"},{"location":"community/gsoc/project-ideas/single-select-data-type/#ux-design-problems","title":"UX Design Problems","text":"<ul> <li>What new options will the table inspector need? </li> <li>How do we choose colors for each choice?</li> <li>How do we distinguish tables that are being used for choices in the UI?<ul> <li>Should we distinguish them when they are in a list or only on the table page?</li> </ul> </li> <li>How can users easily find this option both when they\u2019re creating a new column and a new link?</li> </ul>"},{"location":"community/gsoc/project-ideas/single-select-data-type/#tasks","title":"Tasks","text":"<ol> <li>Write a UX design document describing the manner in which the single select field will be incorporated into Mathesar\u2019s UI. Then work with the front end team and product designer to solidify the UX design.</li> <li>Write an API spec to <ol> <li>store and retrieve information about whether a column is a regular FK or a single select field.</li> <li>store color information for linked records</li> </ol> </li> <li>Get feedback from the back end team to solidify the API behavior.</li> <li>Implement the backend API changes.</li> <li>Show single select fields as dropdowns in the UI instead of using the record selector.</li> <li>Implement colors for each record.</li> <li>Implement table inspctor changes.</li> <li>Implement design for showing tables that store choices differently in the UI.</li> <li>Implement features to help users find single select fields more easily.</li> </ol>"},{"location":"community/gsoc/project-ideas/single-select-data-type/#expected-outcome","title":"Expected Outcome","text":"<p>Users should be able to use single select fields as described in \u201cFeature Description\u201d</p>"},{"location":"community/gsoc/project-ideas/single-select-data-type/#application-tips","title":"Application Tips","text":"<ul> <li>Demonstrate proficiency with the required skills.</li> <li>Present a preliminary API spec.</li> <li>Present a preliminary UX design document.</li> <li>Demonstrate an understanding of the Mathesar frontend codebase.</li> </ul>"},{"location":"community/gsoc/project-ideas/single-select-data-type/#resources","title":"Resources","text":"<p>Other tools like Airtable, Baserow, and NocoDB have single select fields. Please explore their UX.</p>"},{"location":"community/gsoc/project-ideas/single-select-data-type/#mentors","title":"Mentors","text":"<p>Primary Mentor: Pavish Secondary Mentor(s): Mukesh</p>"},{"location":"community/gsoc/project-ideas/suggest-candidate-columns/","title":"Suggest Candidate Columns to Create Separate Table","text":""},{"location":"community/gsoc/project-ideas/suggest-candidate-columns/#the-problem","title":"The Problem","text":"<p>Information</p> <p>This is related to Break Columns out to New Table, please read that project idea first.</p> <p>In order to normalize a data model, one needs to understand correlations between different rows in the data of a table.  For example, if there is a column <code>student email</code> that is dependent on a proper subset of the key <code>(class id, student id)</code> in some <code>class_rosters</code> table, then a separate <code>students</code> table with columns <code>(student id, student email)</code> should be created, and <code>student email</code> should be dropped from the original <code>class_rosters</code> table. This would potentially move the data model closer to achieving the Second Normal Form (2NF). We need to build functions that notice this sort of correlations.  Ideally, we\u2019d start with functions that notice when a relation is not in 2NF (but is in 1NF), and suggest fixes. If that\u2019s achieved, we\u2019d then proceed to suggest fixes to achieve 3NF.</p>"},{"location":"community/gsoc/project-ideas/suggest-candidate-columns/#classification","title":"Classification","text":"<ul> <li>Difficulty: High</li> <li>Skills needed: PostgreSQL, Database theory, a bit of statistics.</li> <li>Length: Long (~350 hours)</li> </ul>"},{"location":"community/gsoc/project-ideas/suggest-candidate-columns/#tasks","title":"Tasks","text":"<ul> <li>Research method of automatically determining the violating correlations disallowed by 2NF.</li> <li>Research whether a \u201chard rule\u201d makes more sense, or whether it makes more sense to have some correlation score.</li> <li>Based on answers to the above, implement functionality so that we can call a python function that takes a table as input, and returns sets of columns that could be extracted.</li> <li>Repeat with 3NF as the goal.</li> </ul>"},{"location":"community/gsoc/project-ideas/suggest-candidate-columns/#expected-outcome","title":"Expected Outcome","text":"<p>We should end up with python functions backed by SQL that let us determine whether a relation in a DB is in 2NF (or 3NF), and suggest column sets to extract to separate tables that would promote the data model to a higher normal form (at least the subset of the data model involving the relation in question).</p>"},{"location":"community/gsoc/project-ideas/suggest-candidate-columns/#application-tips","title":"Application Tips","text":"<p>The successful candidate would understand the motivation for normalizing a database. They\u2019d also understand some basics about stats and be able to relate the idea of correlations between columns of a table to how different sets of columns might be able to be extracted.</p>"},{"location":"community/gsoc/project-ideas/suggest-candidate-columns/#resources","title":"Resources","text":"<ul> <li>relevant code</li> <li>relevant tests</li> <li>Database normalization wikipedia page</li> </ul>"},{"location":"community/gsoc/project-ideas/suggest-candidate-columns/#mentors","title":"Mentors","text":"<ul> <li>Primary Mentor: Brent Moran</li> <li>Backup Mentor: Kriti Godey</li> </ul> <p>See our Team Members page for Matrix and GitHub handles of mentors.</p>"},{"location":"community/gsoc/project-ideas/support-default-postgres-types/","title":"Better Support for Default PostgreSQL Data Types","text":""},{"location":"community/gsoc/project-ideas/support-default-postgres-types/#the-problem","title":"The Problem","text":"<p>Mathesar currently only allows the user to use a small set of data types. We\u2019d like to expand the data types we offer in our product to include more default PostgreSQL types such as Network Address types, Geometric Types, UUID Types, and Range Types. </p>"},{"location":"community/gsoc/project-ideas/support-default-postgres-types/#classification","title":"Classification","text":"<ul> <li>Difficulty: Medium</li> <li>Skills needed: Python, Django, PostgreSQL</li> <li>Bonus skills: JavaScript, frontend frameworks</li> <li>Length: Long (~350 hours)</li> </ul>"},{"location":"community/gsoc/project-ideas/support-default-postgres-types/#tasks","title":"Tasks","text":"<ul> <li>Determine which types you\u2019d like to work on.</li> <li>Work with the Mathesar design team to figure out how end users can interact with file and image data types in the UI, including:</li> <li>How data is displayed</li> <li>How data is entered</li> <li>What Mathesar Types to show</li> <li>What filtering options to support for each type</li> <li>What grouping options to support for each type</li> <li>What display options to support for each type</li> <li>Implement support for all frontend features in the backend <code>db</code> module and REST API.</li> <li>Optionally, implement the frontend portion of these features as well.</li> </ul>"},{"location":"community/gsoc/project-ideas/support-default-postgres-types/#expected-outcome","title":"Expected Outcome","text":"<p>By the end of this project, we expect that users will be able to seamlessly use any data types proposed (e.g. videos) within the Mathesar backend and API.</p> <p>If the candidate is interested, it would be great to also have the types integrated into the Mathesar UI.</p>"},{"location":"community/gsoc/project-ideas/support-default-postgres-types/#application-tips","title":"Application Tips","text":"<ul> <li>Please specify the types you\u2019d like to implement.</li> <li>It\u2019s helpful to start from the experience that you\u2019d like the end-user to have and work backwards. Think through the use cases for each data type.</li> <li>Backend and database experience is critical for this project, so please emphasize your previous work there.</li> </ul>"},{"location":"community/gsoc/project-ideas/support-default-postgres-types/#resources","title":"Resources","text":"<ul> <li>Data Types in Mathesar:</li> <li>Data Types \u201cConcepts\u201d page</li> <li>Mathesar UI Data Types engineering page</li> <li>Existing Data Type components design spec, to see how current data types work.</li> <li>Filters in Mathesar:</li> <li>Filters \u201cConcepts\u201d page</li> <li>Filters engineering page</li> <li>PostgreSQL types documentation</li> </ul>"},{"location":"community/gsoc/project-ideas/support-default-postgres-types/#mentors","title":"Mentors","text":"<ul> <li>Primary Mentor: Kriti Godey</li> <li>Backup Mentor: Dominykas Mostauskis </li> </ul> <p>See our Team Members page for Matrix and GitHub handles of mentors.</p>"},{"location":"community/gsoc/project-ideas/ui-import-data-existing-table/","title":"UI for Importing data into existing table","text":""},{"location":"community/gsoc/project-ideas/ui-import-data-existing-table/#classification","title":"Classification","text":"<ul> <li>Difficulty: Medium</li> <li>Skills needed: HTML, CSS, JavaScript, Svelte</li> <li>Skills that could be helpful: TypeScript, UX design</li> <li>Length: Medium (~175 hours) or Long (~350 hours) depending on experience level</li> </ul>"},{"location":"community/gsoc/project-ideas/ui-import-data-existing-table/#the-problem","title":"The Problem","text":"<ul> <li>Mathesar currently allows users to import data into a new table through the UI by uploading CSV/TSV files, remote links, or copy/paste.</li> <li>However, there is no option to import data into an existing table.</li> <li>The backend work and APIs have already been implemented.</li> <li>The goal of this project is to implement the frontend.</li> </ul>"},{"location":"community/gsoc/project-ideas/ui-import-data-existing-table/#feature-description","title":"Feature Description","text":"<ul> <li>Provide an option in the UI to import data into existing tables.</li> <li>Allow users to upload valid CSV/TSV files to append data to an existing table.</li> <li>Enable users to copy and paste data into existing tables.</li> <li>Provide a column mapping option to map the columns from the uploaded data to match the table columns.</li> </ul>"},{"location":"community/gsoc/project-ideas/ui-import-data-existing-table/#ux-design-problems","title":"UX Design Problems","text":"<ul> <li>Where do we place the option to import data into existing tables?</li> <li>Would this be part of the existing import flow, or a different flow on the table page, or both?</li> <li>Should copy/paste have an additional flow compared to csv/tsv uploads?</li> <li>Should we allow copy/pasting directly onto the table cell?</li> <li>How would we allow the user to map columns from uploaded data to the table columns?</li> <li>How would we represent errors?</li> </ul>"},{"location":"community/gsoc/project-ideas/ui-import-data-existing-table/#tasks","title":"Tasks","text":"<ul> <li>Familiarize yourself with the current import flow and the backend APIs.</li> <li>Come up with a UX design document outlining the step-by-step user actions.</li> <li>Work closely with the frontend team and our product designer to finalize the UX design.</li> <li>Write down architectural specifications and a task list based on the UX design. Create Github issues for them.</li> <li>Implement the frontend work needed.</li> </ul>"},{"location":"community/gsoc/project-ideas/ui-import-data-existing-table/#expected-outcome","title":"Expected Outcome","text":"<p>Users should be able to import data into existing tables as described in the \u201cFeature Description\u201d section.</p>"},{"location":"community/gsoc/project-ideas/ui-import-data-existing-table/#application-tips","title":"Application Tips","text":"<ul> <li>Show proficiency in the required skills.</li> <li>Provide a preliminary UX design document.</li> <li>Demonstrate a good understanding of the Mathesar frontend codebase and required APIs.</li> </ul>"},{"location":"community/gsoc/project-ideas/ui-import-data-existing-table/#resources","title":"Resources","text":"<ul> <li>Backend work for Importing data into existing tables: GSoC 2022</li> <li>Explore other tools such as Airtable and NocoDB for their approach and UX for importing data into existing tables.</li> </ul>"},{"location":"community/gsoc/project-ideas/ui-import-data-existing-table/#mentors","title":"Mentors","text":"<p>Primary Mentor: Pavish Kumar Ramani Gopal Secondary Mentor(s): Anish Umale</p>"},{"location":"community/gsoc/project-ideas/visualization-of-grouped-data/","title":"Visualization of Grouped Data","text":""},{"location":"community/gsoc/project-ideas/visualization-of-grouped-data/#the-problem","title":"The Problem","text":"<p>One of the common needs that arises when analyzing data is to group similar results, aggregate them, and gain insights from them. For eg., Consider the scenario where we have a list of employee records and would like to figure out how many employees reside in a particular country, and further categorize them by age group, gender etc., Databases make these kind of usecases easier by providing powerful grouping behaviours. However, inorder to leverage it users would need to work with SQL which requires technical knowledge.</p> <p>Mathesar is focused on providing an intuitive interface over databases for non-technical users. They should be able to gain data insights through grouping with as simple interactions as possible. Mathesar currently provides the ability to group records and displays them as linear rows, separated by group headers, further narrowed down by pagination. While this allows users to group data as per their requirements, it would be more helpful to provide a bird\u2019s eye view on the entire dataset.</p> <p>An additional option to visualize the grouped results in the form of graphs or a summary view would be highly effective.</p>"},{"location":"community/gsoc/project-ideas/visualization-of-grouped-data/#classification","title":"Classification","text":"<ul> <li>Difficulty: Low</li> <li>Primary skills needed: Frontend development knowledge</li> <li>Secondary skills needed (or willing to learn): UX design, SQL, Python, Django</li> <li>Length: Medium (~175 hours)</li> </ul>"},{"location":"community/gsoc/project-ideas/visualization-of-grouped-data/#tasks","title":"Tasks","text":"<ul> <li>Research and come up UX design specs and wireframes for grouped data visualization.</li> <li>Create necessary issues based on the finalized specs after review.</li> <li>Research graphing libraries and identify the one most suitable with Mathesar\u2019s architecture and goals.</li> <li>Identify missing APIs or changes required in existing APIs and implement the necessary changes on the backend.</li> <li>Implement the frontend data visualization interface.</li> </ul>"},{"location":"community/gsoc/project-ideas/visualization-of-grouped-data/#expected-outcome","title":"Expected Outcome","text":"<p>Once a user groups rows, there should be an option on the Mathesar UI to allow them to visualize the result. The interactions and user input required should be minimal.</p>"},{"location":"community/gsoc/project-ideas/visualization-of-grouped-data/#application-tips","title":"Application Tips","text":"<p>A good candidate would be someone who is able to empathize and think from the perspective of a non-technical user, and align themselves with the goals of Mathesar. They should be willing to do a fair amount of research both in terms of UX and engineering. They will be working full-stack and would either know or be motivated to learn the necessary technologies in order to complete the project.</p>"},{"location":"community/gsoc/project-ideas/visualization-of-grouped-data/#mentors","title":"Mentors","text":"<ul> <li>Primary Mentor: Pavish Kumar Ramani Gopal</li> <li>Backup Mentor: Sean Colsen</li> </ul> <p>See our Team Members page for Matrix and GitHub handles of mentors.</p>"},{"location":"community/gsoc/project-ideas/web-sql-editor/","title":"Implement Textual SQL Query Builder","text":""},{"location":"community/gsoc/project-ideas/web-sql-editor/#the-problem","title":"The Problem","text":"<p>We are building a visual query builder into Mathesar to help the user find answers to questions using their data and to create Views. To make the visual query builder easy to use, we needed to make a bunch of assumptions that limits the types of queries that can be produced. </p> <p>To support the full range of queries that can be written using SQL, we should allow advanced users to write SQL queries.</p>"},{"location":"community/gsoc/project-ideas/web-sql-editor/#classification","title":"Classification","text":"<ul> <li>Difficulty: Medium</li> <li>Skills needed: Python, JavaScript, frontend frameworks</li> <li>Length: Long (~350 hours)</li> </ul>"},{"location":"community/gsoc/project-ideas/web-sql-editor/#tasks","title":"Tasks","text":"<ul> <li>Work with the Mathesar design team to figure out a design for how to integrate the SQL editor into the product.</li> <li>Write a technical spec for how the SQL editor will work from a code perspective.</li> <li>Implement the backend necessary to process input from the SQL editor.</li> <li>Implement the SQL editor in the frontend.</li> </ul>"},{"location":"community/gsoc/project-ideas/web-sql-editor/#expected-outcome","title":"Expected Outcome","text":"<p>By the end of this project, we expect that the query builder web interface will have an option for advanced users to use SQL to build queries. This interface should be easy to use, including features like syntax highlighting and autocomplete.</p>"},{"location":"community/gsoc/project-ideas/web-sql-editor/#application-tips","title":"Application Tips","text":"<ul> <li>Please provide as much technical detail as you can on how this will integrate into Mathesar\u2019s code. API schemas, libraries you plan to use, etc.</li> <li>Don\u2019t reinvent the wheel - use external libraries for the functionality where you can.</li> <li>It\u2019s helpful to start from the experience that you\u2019d like the end-user to have and work backwards.</li> </ul>"},{"location":"community/gsoc/project-ideas/web-sql-editor/#resources","title":"Resources","text":"<ul> <li>Views \u201cConcepts\u201d page</li> <li>\u201cViews in Mathesar\u201d product spec</li> <li>Code Mirror text editor library</li> </ul>"},{"location":"community/gsoc/project-ideas/web-sql-editor/#mentors","title":"Mentors","text":"<ul> <li>Primary Mentor: Pavish Kumar Ramani Gopal</li> <li>Backup Mentor: Dominykas Mostauskis </li> </ul> <p>See our Team Members page for Matrix and GitHub handles of mentors.</p>"},{"location":"engineering/markdown/","title":"Markdown style guide","text":"<p>This page recommends guidelines to follow when writing Markdown in order to keep your content portable, maintainable, consistent, and semantic.</p>"},{"location":"engineering/markdown/#indentation","title":"Indentation","text":"<ul> <li>Use four spaces for all indentation.</li> </ul> <p>Rationale: \ud83d\udcbc Portability</p> <p>Most Markdown rendering platforms handle other indentation styles with some degree of consistency for simple content, so at first this guideline may appear to be unnecessary. But as content gets more complex, various edge cases tend to crop up which lead to inconsistencies. Maintaining four-space indentation across the board is the best way to ensure your indentation is always consistent.</p> <p>For example, when some list items are intended by only two spaces:</p> <ul> <li>GitHub nests those indented items into into a sub-list</li> <li>MkDocs renders a flat list</li> </ul> <p>Tip: how to handle embedded content with two-space indentation</p> <p>In some cases it can be helpful to keep your text editor set to indent by two spaces (and to manually indent everything by double that amount). For example, if you\u2019re authoring content which includes a code block of JSON or TypeScript that has two-space indentation within it, then if you indent that code block within a markdown list the code indentation can get messed up if your text editor is set to indent the markdown by four spaces.</p>"},{"location":"engineering/markdown/#line-breaks","title":"Line breaks","text":"<ul> <li>Do not insert line breaks mid-paragraph.</li> </ul> \u2705 Good (one long line)\u274c Bad (hard-wrapped lines) <pre><code>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n</code></pre> <pre><code>Lorem ipsum dolor sit amet, consectetur adipiscing elit,\nsed do eiusmod tempor incididunt ut labore et dolore magna\naliqua. Ut enim ad minim veniam, quis nostrud exercitation\nullamco laboris nisi ut aliquip ex ea commodo consequat.\nDuis aute irure dolor in reprehenderit in voluptate velit\nesse cillum dolore eu fugiat nulla pariatur.\n</code></pre> <p>Rationale: \ud83d\udcbc Portability</p> <p>Markdown rendering platforms have inconsistent behavior for paragraphs containing line breaks.</p> <p>For example, when a paragraph contains a line break:</p> <ul> <li>GitHub inserts a <code>&lt;br&gt;</code> tag</li> <li>MkDocs ignores the line break</li> </ul>"},{"location":"engineering/markdown/#blank-lines","title":"Blank lines","text":"<ul> <li>Use blank lines between paragraphs, lists, and headings.</li> </ul> \u2705 Good (with blank lines)\u274c Bad (no blank lines) <pre><code>## Shopping list\n\nHere are the things we need to buy at the store:\n\n- Bread\n- Eggs\n</code></pre> <pre><code>## Shopping list\nHere are the things we need to buy at the store:\n- Bread\n- Eggs\n</code></pre> <p>Rationale: \ud83d\udcbc Portability</p> <p>For example, when a list immediately follows a paragraph:</p> <ul> <li>GitHub will render them separately</li> <li>MkDocs will render them together as one paragraph</li> </ul> <p>Note that when a paragraph or list immediately follows a heading, all of the Markdown tools that the Mathesar team currently uses will behave consistently. However there are some more esoteric Markdown rendering platforms that render this sort of content as one paragraph. Sean recommends blank lines as best-practice because it gives your content the best chance of rendering consistently on with other renderers too.</p>"},{"location":"engineering/markdown/#headings","title":"Headings","text":"<ul> <li>On each page, use one (and only one) level-1 heading (<code>#</code>). This should be the page title and should occur before any other content.</li> <li>Use level-2 headings (<code>##</code>) as the top-most level to separate different content on the page.</li> <li>Don\u2019t skip nesting levels. For example, If the most recent heading was a level-3 heading, then valid headings which can follow it would be level-2, level-3, or level-4 \u2014 not level-5, because that would be skipping a level-4 heading.</li> </ul> <p>Rationale: \ud83d\udcd0 Semantics</p> <p>When you follow this rule, the rendered HTML will be styled consistently with other pages and will have a clean structure that other other tools like search engines can understand clearly.</p>"},{"location":"engineering/markdown/#ordered-lists","title":"Ordered lists","text":"<ul> <li>For ordered lists, begin all items with <code>1.</code> instead of manually sequencing the numbers.</li> </ul> \u2705 Good (repeating numbers)\u274c Bad (sequential numbers) <pre><code>1. Foo\n1. Bar\n1. Baz\n</code></pre> <pre><code>1. Foo\n2. Bar\n3. Baz\n</code></pre> <p>Rationale: \ud83d\udee0\ufe0f Maintainability</p> <p>Repetitive numbering makes it easier for future editors to insert, remove, and re-order list items.</p>"},{"location":"engineering/markdown/#internal-hyperlinks","title":"Internal hyperlinks","text":"<p>When a Markdown page links to another Markdown page, follow these patterns:</p> <p>\u2705 Good examples:</p> Type Example Relative child <code>[Lorem ipsum](./foo/lorem.md)</code> Relative ancestor <code>[Lorem ipsum](../../lorem.md)</code> Absolute path <code>[Lorem ipsum](/foo/bar/lorem)</code> Index page <code>[Lorem ipsum](/foo/bar/lorem/index)</code> Section in current page <code>[Lorem ipsum](#lorem-ipsum)</code> Section in different page <code>[Lorem ipsum](./foo/bar.md#lorem-ipsum)</code> <p>\u274c Bad examples:</p> Example What\u2019s wrong <code>[Lorem ipsum](./foo/lorem)</code> missing <code>.md</code> extension <code>[Lorem ipsum](./some/folder/)</code> missing <code>index.md</code> file name <code>[Lorem ipsum][1]</code> inconsistent Markdown syntax <p>Rationale: \ud83d\udee0\ufe0f Maintainability</p> <ul> <li>Following the rules above helps us avoid broken links.</li> <li>MkDocs will detect broken links when building books, but only if the links are absolute and end with <code>.md</code>.</li> <li>Using consistent syntax helps us to more easily find-and-replace links when moving pages.</li> </ul> <p>Tip: Custom heading anchors</p> <p>We use the Attribute Lists extension within our MkDocs guides to enable custom named anchors for headings. Use it like this:</p> <pre><code>## Section A {:#a}\n\nSee [section B](#b) in order to...\n\n## Section B {:#b}\n\nLorem ipsum dolor sit amet...\n</code></pre> <p>Giving custom names to your heading anchors is nice because it allows us to change the heading text without breaking the cross-reference. In addition, it allows for shorter URLs.</p>"},{"location":"engineering/translator-guide/","title":"Translator Guide","text":"<p>Welcome! This guide is for contributors who want to help translate Mathesar into different languages. Whether you\u2019re an experienced translator or new to the process, this document outlines everything you need to get started.</p>"},{"location":"engineering/translator-guide/#translating-mathesar","title":"Translating Mathesar","text":"<p>Mathesar uses Transifex to manage all translations. It\u2019s an online localization platform that allows our global community to collaboratively translate Mathesar into multiple languages.</p> <p>The Mathesar Transifex project lists all available languages, shows the percentage completed for each one, and provides tools for contributing directly through your browser.</p>"},{"location":"engineering/translator-guide/#getting-started","title":"Getting Started","text":""},{"location":"engineering/translator-guide/#1-create-a-transifex-account","title":"1. Create a Transifex Account","text":"<p>Go to transifex.com and sign up for a free account if you don\u2019t have one. You can also log in with an existing GitHub account.</p>"},{"location":"engineering/translator-guide/#2-join-the-mathesar-project","title":"2. Join the Mathesar Project","text":"<ol> <li>Visit the Mathesar project on Transifex.</li> <li>Click the \u201cJoin this Project\u201d button.</li> <li>Select your preferred language(s) or request to add a new one.</li> <li>After selecting your language(s), a Mathesar maintainer will manually approve your request to join. This can take up to 24 hours.</li> </ol> <p>Once approved, you can start translating right away!</p> <p>Translating additional languages</p> <p>If you\u2019re already a member of the Mathesar translation team, the process to translate additional languages beyond the ones you chose at sign-up can be confusing.</p> <p>You must first select an existing language from the Mathesar project, then click the \u201cview resources\u201d button. Finally, on the next page, click the \u201cfalafel\u201d (three vertical dots) menu and choose \u201cJoin team\u201d, like so:</p> <p></p>"},{"location":"engineering/translator-guide/#translating-mathesar-in-transifex","title":"Translating Mathesar in Transifex","text":"<p>On the Mathesar project you\u2019ll see the list of avaliable languages. Hover over your desired language and then hit the \u201cTranslate\u201d button to get started.</p> <p>You\u2019ll see two resources avaliable for translation in each language:</p> <ul> <li>The <code>django.po</code> includes strings for Mathesar\u2019s backend and actions related to logging in and out, pasword resets, etc.</li> <li>The <code>dict.json</code> file includes the vast majority of strings needing translation.</li> </ul> <p>Clicking on each resource will allow you to translate individual pieces of text in Mathesar. Be sure to press the \u201cSave\u201d button after making your suggested translations, and a member of the Mathesar team will approve the work.</p>"},{"location":"engineering/translator-guide/#best-practices-for-translation","title":"Best Practices for translation","text":"<ul> <li>Translate meaning, not just words.   Focus on clarity and natural phrasing for your audience.</li> <li>Preserve placeholders and variables.   Texts like <code>{username}</code> or <code>[text]</code> must remain unchanged within strings. These are dynamic values, for example the name of a database or the count of returned rows on a table page.</li> <li>Check for existing terminology.   Reuse terms from the glossary or previously translated strings to maintain consistency.</li> <li>Ask if unsure.   Use the Transifex comment threads or reach out on our community channels if a string is unclear.</li> </ul>"},{"location":"engineering/translator-guide/#need-help","title":"Need Help?","text":"<p>For translation questions, reach out to the Mathesar team via:</p> <ul> <li>The i18n channel on Mathesar\u2019s Matrix chat</li> <li>Transifex comments (on specific strings)</li> </ul> <p>Thank you! \ud83d\udc18</p>"},{"location":"engineering/code-review/","title":"Code Review Guidelines","text":"<p>Anyone is welcome to review pull requests!</p> <p>If your review is requested, it means that you are responsible for reviewing the pull request. If the PR is large or you think someone who is familiar with a specific part of the code would be helpful, feel free to request additional reviewers through the GitHub interface.</p>"},{"location":"engineering/code-review/#process","title":"Process","text":"<ul> <li>We should be aiming to turn around PR reviews within 1-2 working days. This means that there should be movement on the PR every 1-2 days, a new review, code review fixes, repeat if needed, and then merge.</li> <li>If you approve the PR, merge it unless someone else has requested changes.</li> <li>If the person who has requested changes is unavailable, merge the PR anyway.</li> <li>Always merge using merge commits, never squash or rebase (the GitHub interface should disable squash and rebase, but check just in case).</li> <li>If the PR is from a community contributor and it only requires minor changes, feel free to make the changes yourself and merge them.</li> </ul>"},{"location":"engineering/code-review/#tips","title":"Tips","text":"<ul> <li>If the branch needs to be updated before merging (because it\u2019s out-of-date with the <code>master</code> branch), do so, as long as the merge can be performed automatically.  Otherwise, ask the Author to handle it.</li> <li>See Backend Code Review for guidelines specific to backend code.</li> <li>We should be aiming to merge PRs in and create new issues for improvements rather than keeping PRs in review until every possible issue is fixed.</li> <li>Code review should be a fairly quick process. Reviewers should be focused on asking the right questions, not on doing research into the answers and suggesting them. <ul> <li>e.g. if you\u2019re wondering if the author considered a particular implication of a change they made, ask them that instead of doing research into all the implications yourself and informing the author of them.</li> </ul> </li> <li>If you\u2019d like to reconsider the architecture of a PR, create a draft issue for figuring that out rather than blocking the PR until you figure out the right architecture.</li> <li>When reviewing community contributed PRs, if it\u2019s easier to make the changes yourself rather than describe the changes needed as a code review, just make the changes and merge the PR. You can explain what you did and thank the contributor for their work.</li> </ul>"},{"location":"engineering/code-review/#modifying-prs-before-merging","title":"Modifying PRs before merging","text":"<p>You can modify an in progress PR before merging, if necessary.  If the PR is from a branch in the official Mathesar repository, just modify that branch.  If it\u2019s in a branch of a fork, it\u2019s a bit more complicated.  The smoothest way in that case is to 1. Add the fork repo as a remote, locked to the appropriate branch and fetch:    <pre><code>git remote add -t $A_BRANCH_NAME -f $A_REMOTE_NAME $REPO_URL\n</code></pre>    Here,    - <code>$A_BRANCH_NAME</code> is the 3rd party branch name.    - <code>$A_REMOTE_NAME</code> is chosen by the user; make it memorable.    - <code>$REPO_URL</code> is set to the url of the 3rd party repo in question.    - Note that the <code>-f</code> flag is not for \u2018force\u2019, but for \u2018fetch\u2019. 2. Make changes in that branch. 3. Add, commit, and push your changes (the branch should already have the correct remote set). 4. Back in the official Mathesar repo, your changes should be shown.  Review and merge as appropriate.</p> <p>If (3) fails, it may be a permissions issue.  In that case, you\u2019ll have to make a new branch in the official Mathesar repo based off of the PR.  To do that, follow the instructions here.</p>"},{"location":"engineering/code-review/#reading","title":"Reading","text":"<p>Some reading related to our process:</p>"},{"location":"engineering/code-review/#why-not-squash-or-rebase-merges","title":"Why not squash or rebase merges?","text":"<ul> <li>Why I\u2019m against merging pull requests in squash mode or rebase mode?</li> <li>Squash merges are evil</li> <li>Why git squash merges are bad</li> <li>Git merge - to squash or not to squash? - Stack Overflow</li> </ul>"},{"location":"engineering/code-review/#commits","title":"Commits","text":"<ul> <li>Commit early, push often</li> <li>Commit message guidelines</li> </ul>"},{"location":"engineering/code-review/backend/","title":"Backend Code Review","text":"<p>These are general guidelines to follow when reviewing backend code. Please feel free to add to them.</p>"},{"location":"engineering/code-review/backend/#additional-reviewers","title":"Additional Reviewers","text":"<p>If you\u2019d like a second opinion before merging the code, please tag another reviewer and ask them to also review the PR.</p> <p>It\u2019s especially recommended to tag authors of specific features if the feature they built is being touched, or to tag (other) maintainers in case there are architectural changes to existing code or to support new features.</p>"},{"location":"engineering/code-review/backend/#documentation","title":"Documentation","text":"<ol> <li>If there are any lines that are not immediately understandable to you, ask the author to add a comment explaining the line.</li> <li>If you\u2019re not sure why the author chose a particular approach, or if there\u2019s some context on the pull request description that would be useful in the future, ask the author to add it as a comment to the code.</li> </ol>"},{"location":"engineering/code-review/backend/#style","title":"Style","text":"<p>Linting should handle many style issues, but here\u2019s some to check manually:</p> <ol> <li>Imports should be ordered in alphabetical order, with standard library imports first, third-party imports second, and local imports third.</li> <li>All class attributes should be defined before class methods.</li> <li>Internal functions (not meant to be used outside the class or file) should be prefixed with an underscore (<code>_</code>).</li> <li>Variable names should not be reused within the same function.</li> <li>Identifier terminology (for the service layer):<ul> <li>All the database object identifiers should be named with database object followed by <code>_oid</code> e.g. <code>database_oid</code>, <code>schema_oid</code> and <code>table_oid</code>.</li> <li>Columns should be identified by <code>attnum</code>.</li> <li>The django model identifiers should be named with model name followed by <code>_id</code>, e.g. <code>database_id</code>, <code>user_id</code>, <code>server_id</code>.</li> </ul> </li> </ol>"},{"location":"engineering/code-review/backend/#testing","title":"Testing","text":"<ol> <li>There should be tests for new functionality.</li> <li>There should be tests for both failure and success cases (as applicable)</li> <li>New functionality that applies to both the API and the database code should be tested in both places.</li> </ol>"},{"location":"engineering/code-review/backend/#user-experience","title":"User Experience","text":"<ol> <li>If there are any user-facing changes to the product that are not directly defined by the GitHub issue, please run them by Kriti.</li> </ol>"},{"location":"engineering/glossary/filters/","title":"Filters in Mathesar","text":"<p>This page covers filters from an engineering/architecture perspective. Please see the \u201cFilters\u201d product concepts page for a user-facing looking at filters.</p>"},{"location":"engineering/glossary/filters/#criteria-for-filters-in-mathesar","title":"Criteria for Filters in Mathesar","text":"<p>In Mathesar, filters are a subset of functions that take in a set of row or a relation as input and return only the rows that satisfy some condition.</p> <p>To be considered a filter, a function has to only consider a single row at a time. It should have no knowledge of any other rows in the relation. This means that filters are commutative.</p>"},{"location":"engineering/glossary/filters/#examples","title":"Examples","text":"<p>Consider this table:</p> <p>As an example, here\u2019s a table:</p> ID Title Year Favorite 1 Dante\u2019s Peak 1997 FALSE 2 Forrest Gump 1994 TRUE 3 The Karate Kid 1984 TRUE 4 Dante\u2019s Peak 1997 TRUE 5 The Karate Kid 1984 TRUE <p>Here are some examples of correct and wrong filters. The emoji indicates whether they are correct.</p> <ul> <li><code>\"Year\" &gt; 1990</code></li> <li><code>\"ID\" = 5</code></li> <li><code>\"Favorite\" is TRUE</code></li> <li>\u201cTitle\u201d is a duplicate</li> <li>Latest \u201cYear\u201d</li> </ul>"},{"location":"engineering/glossary/filters/#reasoning","title":"Reasoning","text":"<p>You might be wondering why filter scope is limited to a single row. This is to allow filters to be applied in any order (to ensure filters are commutative). Otherwise, we will need to introduce users to the concept of a pipeline of operations and that seems more complicated to design. We plan to have a separate user-facing concept for operations that will have different results depending on the ordering.</p> <p>This can be illustrated with treating \u201cis a duplicate\u201d as a filter below and observing how the results change based on ordering. This uses the table from the example above.</p>"},{"location":"engineering/glossary/filters/#order-1","title":"Order 1","text":"<p>Imagine the user applies filters in this order:  1. <code>\"Year\" &gt; 1993</code> 2. <code>\"Favorite\" is TRUE</code> 3. <code>\"Title\" is a duplicate</code></p>"},{"location":"engineering/glossary/filters/#filter-1-year-1993","title":"Filter 1: <code>\"Year\" &gt; 1993</code>","text":"<p>After filtering: | ID | Title | Year | Favorite | |-|-|-|-| | 1 | Dante\u2019s Peak | 1997 | FALSE | | 2 | Forrest Gump | 1994 | TRUE | | 4 | Dante\u2019s Peak | 1997 | TRUE |</p>"},{"location":"engineering/glossary/filters/#filter-2-favorite-is-true","title":"Filter 2: <code>\"Favorite\" is TRUE</code>","text":"<p>After filtering: | ID | Title | Year | Favorite | |-|-|-|-| | 2 | Forrest Gump | 1994 | TRUE | | 4 | Dante\u2019s Peak | 1997 | TRUE |</p>"},{"location":"engineering/glossary/filters/#filter-3title-is-a-duplicate","title":"Filter 3:<code>\"Title\" is a duplicate</code>","text":"<p>After filtering: 0 results.</p>"},{"location":"engineering/glossary/filters/#order-2","title":"Order 2","text":"<p>But instead if the user applies filter in this order 1. <code>\"Year\" &gt; 1993</code> 2. <code>\"Title\" is a duplicate</code> 3. <code>\"Favorite\" is TRUE</code></p>"},{"location":"engineering/glossary/filters/#filter-1-year-1993_1","title":"Filter 1: <code>\"Year\" &gt; 1993</code>","text":"<p>After filtering: | ID | Title | Year | Favorite | |-|-|-|-| | 1 | Dante\u2019s Peak | 1997 | FALSE | | 2 | Forrest Gump | 1994 | TRUE | | 4 | Dante\u2019s Peak | 1997 | TRUE |</p>"},{"location":"engineering/glossary/filters/#filter-2title-is-a-duplicate","title":"Filter 2:<code>\"Title\" is a duplicate</code>","text":"<p>After filtering: | ID | Title | Year | Favorite | |-|-|-|-| | 1 | Dante\u2019s Peak | 1997 | FALSE | | 4 | Dante\u2019s Peak | 1997 | TRUE |</p>"},{"location":"engineering/glossary/filters/#filter-3-favorite-is-true","title":"Filter 3: <code>\"Favorite\" is TRUE</code>","text":"<p>After filtering: | ID | Title | Year | Favorite | |-|-|-|-| | 4 | Dante\u2019s Peak | 1997 | TRUE |</p>"},{"location":"engineering/glossary/ui-types/","title":"UI Data Types","text":"<p>Please see the \u201cData Types\u201d product concept page for more information about the idea behind UI data types (a.k.a. \u201cUI types\u201d for brevity).</p>"},{"location":"engineering/glossary/ui-types/#goals","title":"Goals","text":"<p>The main goal of the UI Data Type system is to create a better user experience for non-technical users on the frontend. We aim to do this by:</p> <ul> <li>Making data types understood in simple, non-technical terms.</li> <li>e.g. users should not need to know or think about what a <code>DOUBLE PRECISION</code> is in order to set their column to accept decimal numbers.</li> <li>Reducing cognitive load while picking a data type.</li> <li>A user should not need to look through every single data type to figure out how to set up their column. Setting up their column involves both data integrity and a consistent set of database operations.</li> <li>e.g. if a user knows their data is numeric, they shouldn\u2019t have to look through every data type to figure out which ones are numeric and how they\u2019re different.</li> </ul> <p>We\u2019d like to minimize the number of UI Types so that the user can first make a decision about which UI Type to use and then adjust the parameters within that type to change the underlying PostgreSQL type if needed.</p>"},{"location":"engineering/glossary/ui-types/#implementation","title":"Implementation","text":"<p>A Mathesar type can be thought of as a set of one or more PostgreSQL data types. Every PostgreSQL type should be mapped to exactly one UI type, but a UI type can be mapped to many PostgreSQL types.</p> <p>Mathesar types are an abstraction only applicable to frontend clients, they should not be considered in any operations at the backend or database level. For example, filtering, sorting, and grouping operations happen using PostgreSQL types, not UI types.</p> <p>UI types are defined in the backend instead of the frontend for two reasons:</p> <ul> <li>to enable alternate clients that play well with the abstractions we use for the \u201cofficial\u201d frontend</li> <li>to enable users to extend the type system by installing types in the backend and automatically getting the user experience offered by the frontend without having to write frontend code.</li> </ul>"},{"location":"engineering/glossary/ui-types/#criteria-to-define-ui-types","title":"Criteria to Define UI Types","text":"<p>We will need to extend the Mathesar type system over time as we support more data types. When doing so, we should follow these criteria for what PostgreSQL types can be grouped into a single UI type. These criteria assume that you have selected a set of PostgreSQL types and are now wondering whether they make sense together as a UI type:</p> <ul> <li>The set of types as a whole should be able to be described by a simple concept (e.g. Number, Text, Date &amp; Time, Email)</li> <li>There should be a reasonable default type that can be picked from the set so that users can only pick a UI type and have the default database type apply. Applying the default database type should not cause any loss of data.</li> <li>e.g. the Number UI type\u2019s default is <code>NUMERIC</code>, since it\u2019s general enough to cover most use cases.</li> <li>e.g. the Date &amp; Time UI type\u2019s default is <code>TIMESTAMP WITH TIME ZONE</code>, since it preserves all information.</li> <li>It should be possible to cast data between all PostgreSQL data types in the set.</li> <li>The types in the set should support the exact same filters and groups.</li> </ul>"},{"location":"engineering/glossary/ui-types/#list-of-ui-data-types","title":"List of UI Data Types","text":"<p>Current mapping of UI data types to PostgreSQL types.</p> <p>We\u2019ll expand these over time as we support advanced functionality for more types in Mathesar.</p> UI Data Type PostgreSQL Data Type Default Notes Number <code>NUMERIC</code>, <code>SMALLINT</code>, <code>INTEGER</code>, <code>BIGINT</code>, <code>DECIMAL</code>, <code>REAL</code>, <code>DOUBLE PRECISION</code> <code>NUMERIC</code> Percent <code>MATHESAR_TYPES.PERCENT</code> <code>MATHESAR_TYPES.PERCENT</code> Custom type implemented as domain around <code>DOUBLE PRECISION</code> Text <code>VARCHAR</code>, <code>CHAR</code>, <code>TEXT</code> <code>TEXT</code> Date <code>DATE</code> <code>DATE</code> Time <code>TIME WITH TIME ZONE</code>, <code>TIME WITHOUT TIME ZONE</code> <code>TIME WITHOUT TIME ZONE</code> Date &amp; Time <code>TIMESTAMP WITH TIME ZONE</code>, <code>TIMESTAMP WITHOUT TIME ZONE</code> <code>TIMESTAMP WITH TIME ZONE</code> Duration <code>INTERVAL</code> <code>INTERVAL</code> Boolean <code>BOOLEAN</code> <code>BOOLEAN</code> Money <code>MATHESAR_TYPES.MONEY</code>, <code>MONEY</code> <code>MATHESAR_TYPES.MONEY</code> if installed, else <code>MONEY</code> <code>MATHESAR_TYPES.MONEY</code> is a custom type Email <code>MATHESAR_TYPES.EMAIL</code> <code>MATHESAR_TYPES.EMAIL</code> URL <code>MATHESAR_TYPES.URI</code> <code>MATHESAR_TYPES.URI</code> Custom type List PostgreSQL Arrays (single dimension only) <code>VARCHAR[]</code> We should support all database and display options for whatever data type that the array is set to. Other <code>SMALLSERIAL</code>, <code>SERIAL</code>, <code>BIGSERIAL</code>, <code>BYTEA</code>, <code>POINT</code>,<code>LINE</code>,<code>LSEG</code>,<code>BOX</code>,<code>PATH</code>,<code>PATH</code>,<code>POLYGON</code>, <code>CIRCLE</code>, <code>CIDR</code>, <code>INET</code>, <code>MACADDR</code>, <code>MACADDR8</code>, <code>BIT</code>, <code>BIT VARYING</code>, <code>TSQUERY</code>, <code>TSVECTOR</code>, <code>JSON</code>, <code>JSONB</code>, <code>XML</code>, <code>PG_LSN</code>, <code>PG_SNAPSHOT</code>, <code>TXID_SNAPSHOT</code>, <code>INT4RANGE</code>, <code>INT8RANGE</code>, <code>NUMRANGE</code>, <code>TSRANGE</code>, <code>TSTZRANGE</code>, <code>DATERANGE</code>, multidimensional arrays, any other type that\u2019s detected in the DB N/A, cannot be set at the moment. These types are native PostgreSQL data types that we don\u2019t support any advanced functionality for yet."},{"location":"engineering/glossary/ui-types/#custom-types","title":"Custom Types","text":"<p>Some common data types used by users (e.g. emails, URLs, etc.) do not have native PostgreSQL equivalents. For these data types, Mathesar ships with custom PostgreSQL types that users can install if they want.</p>"},{"location":"engineering/glossary/ui-types/#further-reading","title":"Further Reading","text":"<ul> <li>The Global Data Type Components design spec shows the user experience of UI Data Types and PostgreSQL types in the UI.</li> <li>\u201cMathesar Data Types definition\u201d on GitHub Discussions</li> </ul>"},{"location":"engineering/how-tos/server-update-process/","title":"Server update process","text":""},{"location":"engineering/how-tos/server-update-process/#updating-the-demo-server","title":"Updating the Demo server","text":"<ul> <li>Create a new server on gcp which will be used as a template for a demo server. we will call it as <code>demo-template</code></li> <li>Deploy a new demo server using ansible.</li> <li>Create a snapshot of the demo server you created by visiting the snapshot page. This page should be on the navigation panel on the left and can be under \u201cStorage -&gt; Snapshots\u201d. Configure the following options<ul> <li>Set the name to <code>live-demo-v{deployed-version}</code></li> <li>Set the source disk as the <code>demo-template</code> server you created</li> </ul> </li> <li>Create an image based on the created snapshot by visiting the Images page. This page should be on the navigation panel on the left and can be under \u201cStorage -&gt; Images\u201d.<ul> <li>Set the name to <code>live-demo-v{deployed-version}</code></li> <li>Set the source as <code>Snapshot</code></li> <li>Set the source disk as the source snapshot <code>live-demo-v{deployed-version}</code></li> </ul> </li> <li>Edit the load balancer instance group by visiting the instance group page</li> <li>On that same page, create a new instance template by clicking on \u201cInstance template\u201d dropdown under \u201cInstances\u201d and click on \u201cCreate new instance template\u201d</li> <li>On the right-hand side, the instance template creation menu will open up. Set the following configurations<ul> <li>Set the name of the template as <code>live-demo-v{deployed-version}</code></li> <li>Set the machine type as \u201ce2-Standard-2\u201d</li> <li>Set the boot disk to the image you created before by</li> <li>Click on the \u201cChange\u201d button under the \u201cBoot disk\u201d section</li> <li>Click on the \u201cCustom Images\u201d tab in the popup that appears<ul> <li>Set the image to <code>live-demo-v{deployed-version}</code> which you created earlier</li> </ul> </li> <li>Click save, and you will be taken back to the instance template creation popup</li> <li>Tick the following firewall options in the firewall section</li> <li>Allow HTTP traffic</li> <li>Allow HTTPS traffic</li> <li>Click on save to create a new instance template</li> </ul> </li> <li>Select the instance template you created now</li> <li>Hit save</li> <li>In the Instance group page, click on \u201cUpdate VMs\u201d<ul> <li>Choose the template <code>live-demo-v{deployed-version}</code> you created</li> <li>Click on Update VMs</li> </ul> </li> </ul>"},{"location":"engineering/how-tos/set-up-new-repo/","title":"How to set up a new GitHub repo","text":"<p>Setting up a new GitHub repo involves a bunch of different steps to tie into our GitHub workflows.</p>"},{"location":"engineering/how-tos/set-up-new-repo/#setup-tasks","title":"Setup tasks","text":"<p>If you\u2019re creating a GitHub repo, please make sure you do all of these things. </p> <ul> <li> Repo name should use hyphens, not underscores</li> <li> Default branch name should be <code>master</code>, not <code>main</code></li> <li> Repo collaborators should ONLY use Teams, not individual accounts.<ul> <li> Private repos only the \u201cMathesar Maintainers\u201d should have access, and the access level should be \u201cMaintain\u201d. </li> <li> Public repos should also have the \u201cMathesar Community Team\u201d added with \u201cWrite\u201d permissions.</li> </ul> </li> <li> Set up our default GitHub workflows<ul> <li>This plugs the repo into the main Mathesar project and sets up some QoL automations</li> <li>See update of <code>sync.yml</code> in this example PR</li> </ul> </li> <li> Merge the new PR this generates (example)</li> <li> Set up comprehensive <code>.gitignore</code> file<ul> <li>You can copy this from <code>mathesar-private-notes</code> repo since it\u2019s fairly basic and doesn\u2019t involve code-specific things.</li> </ul> </li> <li> Set up label &amp; milestone sync<ul> <li>This syncs labels and milestones between repos</li> <li>See update of <code>sync-github-labels-milestones.yml</code> in this example</li> </ul> </li> <li> Run the workflow above manually in the <code>mathesar</code> repo (so you don\u2019t have to wait a day for labels and milestones to sync)<ul> <li>Click \u201crun workflow\u201d here</li> </ul> </li> <li> Verify that the new milestones and labels are now available on the new repo</li> <li> Delete default labels created by GitHub that we don\u2019t use (i.e. <code>bug</code>, <code>documentation</code>, <code>enhancement</code>, <code>question</code> etc.)</li> <li> Ensure that repo has access to correct GitHub token for actions<ul> <li>This involves going to the org settings &gt; Secrets &amp; variables &gt; Actions and granting the new repo permissions to the <code>MATHESAR_ORG_GITHUB_TOKEN</code> secret</li> </ul> </li> <li> Set up repo settings <ul> <li> Ensure Issues is on </li> <li> Turn off Wikis</li> <li> Turn off Projects (we use org-level projects, not repo-level projects)</li> <li> Turn off Discussions</li> <li> Pull requests<ul> <li> Turn off squash merging</li> <li> Turn off rebase merging</li> <li> Turn on auto-merge</li> <li> Turn on automatically deletion of head branches </li> </ul> </li> </ul> </li> </ul>"},{"location":"engineering/how-tos/set-up-new-repo/#teardown-tasks","title":"Teardown tasks","text":"<p>If you\u2019re removing a GitHub repo, please make sure you do all of these things.</p> <ul> <li> Remove all references to the repo from within the <code>.github</code> directory of the main <code>mathesar</code> repo.</li> </ul>"},{"location":"product/","title":"About Mathesar","text":"<p>Warning</p> <p>This page is no longer being updated as of 2023-01-27. Please see our main website for more up-to-date information about Mathesar.</p> <p>Mathesar is an open source tool that provides an intuitive user interface to databases. Our aim is to make it easy for non-technical users to be able to work with databases without prior knowledge of database concepts. We\u2019re heavily inspired by the user experience of Dabble DB.</p> <p>Users can either set up a database from scratch or connect to an existing database. They can store, organize, and set up various views of their data. By our beta release, users will also be able to collaborate with other users, see visualizations of their data, and evolve their data model as their needs change.</p> <p>Mathesar is designed to be self-hosted on your own server.</p>"},{"location":"product/#use-cases","title":"Use cases","text":"<p>Mathesar can be used to:</p> <ul> <li>Publish or explore public datasets</li> <li>Run business processes such as:</li> <li>inventory management</li> <li>event planning</li> <li>project and task management</li> <li>expense tracking and accounting</li> <li>customer relationship management</li> <li>Provide non-technical users access to existing databases for:</li> <li>data entry</li> <li>custom reporting and querying</li> <li>Collect and process data from the public or external collaborators (similar to products like Google Forms)</li> <li>Simple data cleaning e.g. consolidating data gathered from different sources into a single format</li> <li>Simple data analysis and visualizations</li> <li>Automatically generate REST APIs to interact with connected database</li> </ul> <p>Mathesar\u2019s goal is to be an infrastructural tool for anyone who works with information and we\u2019re looking forward to seeing other use cases people come up with.</p>"},{"location":"product/#why-build-mathesar","title":"Why build Mathesar?","text":"<p>There are already many tools out there for working with data such as database administration GUIs, spreadsheet software, \u201clow code\u201d platforms, and business intelligence tools. Why do we need another?</p> <p>Interoperability and Data Portability Data stored using most comparable tools cannot be modified by other software. Mathesar uses a general purpose database (Postgres) with a thriving ecosystem of interoperable tools.</p> <p>Approachable User Experience Existing tools either limit available features or focus on power users. Mathesar meets users at their technical skill level while also supporting advanced features and encouraging learning.</p> <p>Data Integrity and Reuse Spreadsheets and low code platforms don\u2019t do much by default to help you make sure data is consistent and this limits reuse potential. Databases are good at this by design.</p> <p>Open Source Infrastructure Data is valuable and shouldn\u2019t be tied to using a specific proprietary service. The public needs open source, decentralized, and private infrastructure for people to manage their own data.</p>"},{"location":"product/#further-reading","title":"Further reading","text":"<ul> <li>Tool Category Exploration - Report on initial research towards defining Mathesar\u2019s scope</li> </ul>"},{"location":"product/principles/","title":"Product Principles","text":"<p>Information</p> <p>See also Design Principles</p>"},{"location":"product/principles/#product","title":"Product","text":"<p>These principles apply to what Mathesar is.</p> <ul> <li>Mathesar should be able to work as a frontend to existing databases without altering data, even if not all features are available.</li> <li>Mathesar is built in a modular way, so that:<ul> <li>Our database helper library should be able to be used independently of using Mathesar.</li> </ul> </li> <li>Mathesar\u2019s backend should support building custom frontend/mobile clients. All actions should be available via API, and should be well documented.</li> <li>Mathesar should support plugins for custom data types, views, data manipulations, etc.</li> <li>Mathesar\u2019s frontend should have an intuitive, user-friendly, and delightful user interface</li> <li>Our aim is to make users feel empowered to explore, make mistakes, and recover from them.</li> <li>Mathesar is for both non-technical and technical users.</li> <li>We favor convention over configuration (sensible defaults).</li> <li>Users do not need to know anything about database concepts to use Mathesar, but we do not hide them either.</li> <li>We aim to actively guide non-technical users into using Mathesar (and databases in general) optimally.</li> <li>We aim to create a standard PostgreSQL database that technical users can use with other PostgreSQL tooling.</li> </ul>"},{"location":"product/principles/#process","title":"Process","text":"<p>These principles apply to how we build Mathesar.</p> <ul> <li>Documentation is meant to be descriptive, not prescriptive.</li> <li>Our aim is to write down what we need to make things easier for ourselves.</li> <li>Avoid rabbit holes (defining/planning out too far into the future), keep focus on getting a product out.</li> <li>Iterate, don\u2019t try to get things perfect.</li> <li>We are trying to make something that we can put in front of users quickly.</li> <li>We might have to change or throw away stuff later, that is absolutely fine.</li> <li>Keep implementation simple.</li> <li>Try to minimize assumptions about users, we cannot know what users want ahead of time.</li> <li>Given two options, if both rely on assumptions about users, choose the one that\u2019s simpler to implement.</li> </ul>"},{"location":"product/proposal-template/","title":"Proposal Template","text":""},{"location":"product/proposal-template/#solution","title":"Solution","text":"<p>Describe solution.</p> <p>Define the specifics of the solution. Tie back to the requirements.</p>"},{"location":"product/proposal-template/#tradeoffs","title":"Tradeoffs","text":"<p>Describe tradeoffs.</p> <p>Tradeoffs / risks / caveats / things we\u2019re not doing on purpose. Tie back to requirements.</p>"},{"location":"product/proposal-template/#high-level-implementation-plan","title":"High-Level Implementation Plan","text":"<p>Create high-level plan.</p> <ul> <li>Types of work needed: design / backend / frontend / documentation / other.</li> <li>Types of work output for each type of work.</li> <li>Stakeholders / reviewers / implementers.</li> <li>Infrastructure needs.</li> <li>Workflow: who does what, in what order.</li> <li>Rough timeline.</li> <li>Next steps to approval and implementation.</li> </ul>"},{"location":"product/proposal-template/#research","title":"Research","text":"<p>Describe research.</p> <p>Related research (ecosystem, solution-related)</p>"},{"location":"product/proposal-template/#community-engagement","title":"Community Engagement","text":"<p>Describe community engagement opportunities.</p> <p>How does this project interface with the community? How can we include the community during development and after release?</p>"},{"location":"product/related/","title":"Related Products","text":"<p>This page lists other products that solve similar/related problems to what Mathesar is aiming to solve. We\u2019re glad to see other open source projects in this area.</p>"},{"location":"product/related/#open-source","title":"Open Source","text":"<ul> <li>NocoDB</li> <li>Baserow</li> <li>Teable</li> <li>APITable</li> <li>Rowy</li> <li>Budibase</li> <li>Grist</li> <li>Directus</li> <li>PocketBase</li> <li>REI3</li> <li>NocoBase</li> <li>ToolJet</li> <li>Corteza</li> <li>Appsmith</li> <li>Leaptable</li> <li>undb</li> <li>Baastronaut</li> <li>Basetool (unmaintained)</li> </ul>"},{"location":"product/related/#proprietary","title":"Proprietary","text":"<ul> <li>Airtable</li> <li>AppSheet</li> <li>SeaTable</li> <li>Zoho Tables</li> <li>Google Tables</li> <li>Microsoft Lists</li> <li>spreadsheet.com</li> <li>Rows</li> <li>Fibery</li> <li>TogetherDB</li> <li>Teamdesk</li> <li>ApptiveGrid</li> <li>Plato</li> <li>Outerbase</li> <li>Retable</li> <li>Retool Database</li> <li>Stackby</li> <li>Xata</li> <li>Xano</li> <li>Tadabase</li> <li>Visual DB</li> <li>Smartsheet</li> <li>Fusioo</li> <li>Quip</li> <li>ClickUp</li> <li>Quickbase</li> </ul>"},{"location":"product/related/#desktop","title":"Desktop","text":"<ul> <li>Ultorg</li> </ul>"},{"location":"product/requirements-template/","title":"Requirements Template","text":""},{"location":"product/requirements-template/#the-problem","title":"The Problem","text":"<p>Describe the problem.</p> <ul> <li>What is the \u201cbusiness problem\u201d that the user is trying to solve?</li> <li>Current pain points: how is the user solving this problem now, either within Mathesar, or otherwise?</li> <li>Why is it worth solving now?: explain why we think this problem is worth solving now (signals).</li> </ul>"},{"location":"product/requirements-template/#is-it-feasible","title":"Is it feasible?","text":"<p>Evaluate high-level feasibility.</p> <ul> <li>What indicators do we have that this is possible? How does it relate to existing work in Mathesar?</li> <li>Are there existing tools we can leverage or integrate?</li> </ul>"},{"location":"product/requirements-template/#use-cases","title":"Use Cases","text":"<p>Write use cases.</p> <p>Use cases and/or user stories. User persona-related synthesis (if any).</p>"},{"location":"product/requirements-template/#success-criteria","title":"Success Criteria","text":"<p>Create success criteria.</p> <p>What are our externally measurable success criteria? How much time is it worth spending on solving this problem (T-shirt size)?</p>"},{"location":"product/requirements-template/#requirements","title":"Requirements","text":"<p>Write requirements.</p> <p>A classic list of requirements, without delving too deep into implementation specifics.</p>"},{"location":"product/proposals/2025/sso-oidc/","title":"SSO (OIDC)","text":"<p>View this project in GitHub</p>"},{"location":"product/proposals/2025/sso-oidc/#solution","title":"Solution","text":""},{"location":"product/proposals/2025/sso-oidc/#high-level-plan","title":"High level plan","text":"<p>We use Django for our users, and there are several libraries we can just drop into our codebase.</p> <ul> <li>juanifioren/django-oidc-provider </li> <li>jazzband/django-oauth-toolkit </li> <li>mozilla/mozilla-django-oidc </li> </ul> <p>OIDC is a protocol and any OIDC IdP can be used once we implement one of those libraries. For example, the Mozilla Django OIDC library\u2019s setup involves setting up:</p> <pre><code>OIDC_RP_CLIENT_ID = os.environ['OIDC_RP_CLIENT_ID']\nOIDC_RP_CLIENT_SECRET = os.environ['OIDC_RP_CLIENT_SECRET']\nOIDC_OP_AUTHORIZATION_ENDPOINT = \"&lt;URL of the OIDC OP authorization endpoint&gt;\"\nOIDC_OP_TOKEN_ENDPOINT = \"&lt;URL of the OIDC OP token endpoint&gt;\"\nOIDC_OP_USER_ENDPOINT = \"&lt;URL of the OIDC OP userinfo endpoint&gt;\"\n# optional\nOIDC_RP_IDP_SIGN_KEY = \"&lt;OP signing key in PEM or DER format&gt;\"\nOIDC_OP_JWKS_ENDPOINT = \"&lt;URL of the OIDC OP jwks endpoint&gt;\"\n</code></pre> <p>Someone setting this up with Google Workspace would set up an internal OAuth app and then configure the above stuff using the info they got there. If they used a different provider e.g. Okta, they\u2019d get the OIDC info from there.</p>"},{"location":"product/proposals/2025/sso-oidc/#implementation-checklist","title":"Implementation checklist","text":""},{"location":"product/proposals/2025/sso-oidc/#integration-setup","title":"Integration Setup","text":"<ul> <li>Pick an OIDC Django library (e.g., <code>mozilla-django-oidc</code>) and validate it supports configurable claims, custom user creation, and multiple providers.</li> <li>Add the chosen library to the codebase and set up minimal working OIDC flow.</li> <li>Define a config file format (e.g., YAML or JSON) for OIDC providers and role mappings.</li> <li>Implement config loader that parses this file and exposes settings to Django.</li> <li>Implement on/off switch for SSO in the configuration.</li> </ul>"},{"location":"product/proposals/2025/sso-oidc/#authentication-flow","title":"Authentication Flow","text":"<ul> <li>Wire up Django auth to use the OIDC library\u2019s login flow (override login view if needed).</li> <li>Implement domain restriction check using <code>email</code> claim and allowed domain(s) from config.</li> <li>Add logic to handle fallback login (e.g., allow username/password login even if OIDC is enabled).</li> <li>Implement user lookup or creation on OIDC login based on email claim.</li> <li>Add optional merging logic if user already exists with same email but no OIDC identity.</li> </ul>"},{"location":"product/proposals/2025/sso-oidc/#claims-role-mapping","title":"Claims &amp; Role Mapping","text":"<ul> <li>Extract claims from ID token and/or UserInfo response (choose priority or allow both).</li> <li>Implement configurable mapping of claims to Postgres roles via config file.</li> <li>Allow fallback to a default role if no mapping matches.</li> <li>Support optional claim match modes: exact match, substring match, or regex (optional but useful for Okta-style groups).</li> <li>Assign Postgres role to Mathesar user object at time of login or provisioning.</li> </ul>"},{"location":"product/proposals/2025/sso-oidc/#user-provisioning","title":"User Provisioning","text":"<ul> <li>Support just-in-time provisioning of user accounts if no match exists.</li> <li>Allow JIT-provisioned users to be assigned default or mapped Postgres roles.</li> </ul>"},{"location":"product/proposals/2025/sso-oidc/#logging-debugging","title":"Logging &amp; Debugging","text":"<ul> <li>Log received claims at login (to stdout or a debug logger).</li> <li>Log domain validation and failure reasons (unauthorized domain, missing claim, etc.).</li> <li>Log role mapping process: which claim matched, what role was assigned.</li> <li>Return readable error message on login failure, including mismatch reason if available.</li> </ul>"},{"location":"product/proposals/2025/sso-oidc/#documentation","title":"Documentation","text":"<ul> <li>Write user-facing docs explaining how to configure OIDC login with Google Workspace, Okta, or Auth0 using the config file.</li> <li>Include sample config files for each provider.</li> <li>Document how role mapping works, including fallback and group claim support.</li> <li>Include common troubleshooting scenarios and how to debug login failures.</li> </ul>"},{"location":"product/proposals/2025/sso-oidc/#testing-internal-use","title":"Testing &amp; Internal Use","text":"<ul> <li>Set up Google Workspace OAuth client for internal test deployment.</li> <li>Configure internal.mathesar.org to use OIDC login only, with fallback enabled.</li> <li>Verify domain restriction, role assignment, and fallback login manually.</li> </ul>"},{"location":"product/proposals/2025/sso-oidc/#tradeoffs","title":"Tradeoffs","text":"<p>Things to watch out for while implementing:</p> <ul> <li>Adding more scope to these requirements for the feature to be \u201cmore useful\u201d.  <ul> <li>e.g. \u201cSAML isn\u2019t that much harder\u2026\u201d  </li> </ul> </li> <li>Over-indexing on all user needs. This is an initial MVP and won\u2019t solve everyone\u2019s needs and that\u2019s okay. We can always add more features later.</li> </ul> <p>This is explicitly an MVP, so the following things are out of scope:</p> <p>Authentication Methods:</p> <ul> <li>No SAML support (OIDC only)  </li> <li>No support for IdP-initiated login flows (SP-initiated only)  </li> <li>No social login (e.g. GitHub, Facebook, etc.)  </li> <li>No password-based SSO fallback except for Mathesar admins.</li> </ul> <p>Provisioning and Role Management:</p> <ul> <li>No SCIM or automatic deprovisioning  </li> <li>No UI for managing users, roles, or SSO config  </li> <li>No per-user or per-session role overrides  </li> <li>No multi-role assignment per user  </li> <li>No support for assigning roles via UI or API based on group claims (config file only)</li> </ul> <p>Access Control:</p> <ul> <li>No support for multi-tenancy or per-project IdP config  </li> <li>No other permissions mapping beyond Postgres roles  </li> <li>No email-based whitelists beyond domain restriction  </li> <li>No support for conditional logic on access (e.g. \u201cthis group and this claim\u201d)</li> </ul> <p>Observability and Admin Tools:</p> <ul> <li>No UI for viewing login attempts, group mappings, or audit trails  </li> <li>No real-time SSO diagnostics or health checks  </li> <li>No alerting for failed logins or misconfigurations</li> </ul> <p>User Experience:</p> <ul> <li>No role-selection prompt on login  </li> <li>No way for end-users to request access or change roles  </li> <li>No customization of login UI</li> </ul>"},{"location":"product/proposals/2025/sso-oidc/#high-level-implementation-plan","title":"High-Level Implementation Plan","text":"<p>Work needed: </p> <ul> <li>Selection of Django library</li> <li>Backend work on SSO and configuration (output: PR)</li> <li>Documentation work on how to use SSO (output: PR)<ul> <li>Can be split into outline + work</li> </ul> </li> </ul> <p>Stakeholders:</p> <ul> <li>Anish (implmenter + docs)</li> <li>Brent (reviewer + docs)</li> <li>Kriti (help with docs, docs and user-facing items approver)</li> <li>Zack (coordination + second reviewer if needed)</li> </ul> <p>Workflow: usual code workflow + Kriti reviews.</p> <p>Rough timeline: 0.4.0</p> <p>Next steps after approval:</p> <ul> <li>Update the project issue with new links.</li> <li>Anish: make implementation tasks.</li> <li>Implementation proceeds as planned.</li> </ul>"},{"location":"product/proposals/2025/sso-oidc/#community-engagement","title":"Community Engagement","text":"<p>We should:</p> <ul> <li>seek input from community members who have asked for SSO, to ensure that we\u2019re building the right set of features and addressing their use cases.</li> <li>update mathesar.org and our <code>README.md</code> to include SSO in tandem with the next release.<ul> <li>On mathesar.org, this should include the homepage, product page, and a few use cases.</li> </ul> </li> <li>post on self-hosting communities to let people know that we have free SSO.</li> <li>add ourselves to https://ssotax.org/friends-of-sso.html</li> </ul>"},{"location":"product/requirements/2025/deployments/","title":"Additional Deployment Options","text":"<p>Old version</p> <p>These requirements are being updated.</p>"},{"location":"product/requirements/2025/deployments/#the-problem","title":"The Problem","text":"<p>Additional deployment options are actually solving four different problems:</p> <ol> <li>Makes it easier for people to evaluate Mathesar quickly.</li> <li>It makes it easy for people with existing infrastructure to integrate Mathesar into their infrastructure.</li> <li>It helps new people discover Mathesar (e.g. Supabase users looking at their marketplace, or Vercel users trying to integrate a DB)</li> <li>It makes it easier for people to actually deploy Mathesar in production.</li> </ol> <p>Some intangible benefits include:</p> <ul> <li>Bridges technical trust gaps: Mathesar is still new, and offering a known, reproducible setup path option reduces perceived risk of adoption. Engineers trust tools that use platforms they trust.</li> <li>Unblocks adoption for semi-technical users: There are plenty of people who are uncomfortable with Docker but are comfortable hitting a \u201cDeploy on DigitalOcean\u201d button, given that DigitalOcean sets up backups, has support, etc.</li> <li>Validates Mathesar\u2019s maturity and longevity: People use availability and ubiquity as a proxy for viability. If we\u2019re on AWS and GCP and Supabase marketplace, we must be legit.</li> <li>Enables real testing: If my infrastructure\u2019s all on AWS locked in a private VPC, an AWS AMI or CloudFormation template means the barrier to me trying out Mathesar with real data is much, much lower.</li> <li>Signals real-world usage and deployment: Currently, the lack of easy installation options when so many other projects have that as the first thing in their README makes us look immature in comparison.</li> </ul>"},{"location":"product/requirements/2025/deployments/#why-its-worth-solving","title":"Why it\u2019s worth solving","text":"<p>Mathesar\u2019s primary need right now is user adoption and growth, ASAP. It\u2019s essential for both impact and sustainability, because we\u2019re still \u201cdefault dead\u201d.</p> <p>Offering more deployment options is relatively low-effort and high-impact. </p> <p>How it helps users:</p> <ul> <li>People are asking us for AWS AMIs, Helm charts, etc.</li> <li>People with existing infrastructure are having to spend a lot of time and effort into integrating Mathesar into their workflow.</li> <li>People seem to be finding it hard to go from evaluating Mathesar to deploying it in production.</li> <li>The people that might benefit most from Mathesar are not the ones finding Mathesar.</li> </ul> <p>It helps us grow by:</p> <ul> <li>Making people aware of us when they\u2019re looking to solve a specific problem e.g. if they\u2019re on Supabase\u2019s integrations site thinking \u201chow do we do better data entry for this DB?\u201d</li> <li>Becoming available on platforms ASAP. People who need us on specific platforms won\u2019t use us until we\u2019re there. The sooner we\u2019re there, the better.</li> <li>Helping us learn by things and see what works and what doesn\u2019t. Lack of information is worse than failure.</li> </ul>"},{"location":"product/requirements/2025/deployments/#is-it-feasible","title":"Is it feasible?","text":"<p>Yes! It\u2019s not feasible to implement every single way to deploy Mathesar, but there\u2019s some low-hanging fruit that could have a real impact.</p>"},{"location":"product/requirements/2025/deployments/#evaluation-and-guardrails","title":"Evaluation and Guardrails","text":"<p>How we\u2019ll know we\u2019ve succeeded with our goals:</p> <ul> <li>We\u2019re seeing more people installing Mathesar and using it (DAUs / MAUs trackable to that install method).</li> <li>We\u2019re specifically seeing people using any new installation method we set up.</li> <li>Ideally we also get an uptick in user feedback / new issues, etc, but that should not be a formal success criterion since that also depends on other issues. </li> <li>The number and variety of installation methods we offer are equivalent to other products in the ecosystem.</li> </ul> <p>Things to watch out for while implementing:</p> <ul> <li>Not making installation methods easily discoverable in our documentation. See Self-hosting (NocoDB) and Install with Docker (Baserow, see sidebar) for positive examples.</li> <li>Trying to make our documentation too preemptively perfect \u2013 let\u2019s just put it out there.</li> <li>Not implementing things because of prioritizing hypothetical maintainability concerns, or not imagining that something might be useful, or worrying about cluttering the documentation (these have all come up in the past).</li> <li>Spending a lot of time stuck on one installation method without raising it / figuring out if we should keep going.</li> </ul>"},{"location":"product/requirements/2025/deployments/#requirements","title":"Requirements","text":"<p>This is not a single task, it is a series of discrete tasks. Each task may be fairly small. We should aim to get 1 thing from this list shipped every week, in order of highest leverage.</p> <p>Initial Goals: Get Mathesar integrated into a variety of different categories of platform, prioritizing low effort and high impact outcomes.</p>"},{"location":"product/requirements/2025/deployments/#supabase","title":"Supabase","text":"<p>Why?: Postgres-specificity + reach + potential for discoverability.</p> <ul> <li>The Supabase partner integration page should include Mathesar. </li> <li>Our documentation should link to the Supabase integration and an accompanying guide about how to use Supabase with Mathesar.<ul> <li>Also review docs for how well it explains RLS, how to set up a DB without allowing DDL changes, and how to set up roles and permissions.</li> </ul> </li> <li>We should publish a blog post about how to set up RLS in Supabase / Postgres generally and use it with Mathesar.</li> <li>We should track analytics of how much traffic and clicks all this is generating, both for the Supabase specific items as well as generally.</li> </ul> <p>Example: Directus\u2019s Supabase integration shows how to demonstrate integration with a self-hosted project.</p> <p>Maps to use case: Frances Maps to category: Hosted Postgres / backend services</p>"},{"location":"product/requirements/2025/deployments/#helm-chart","title":"Helm chart","text":"<p>Why?: Integrates into existing infrastructure, user requests.</p> <ul> <li>Users should be able to install Mathesar via a Helm chart. available in a repo.  <ul> <li>Potentially multiple types of helm charts based on structure. </li> </ul> </li> <li>Our documentation should link to those charts as a first class citizen in the installation section, with accompanying documentation on how to use them.</li> <li>We should track analytics of how much traffic and clicks all this is generating, both for the Helm specific items as well as generally.</li> </ul> <p>Maps to use case: Frances Maps to category: DevOps tools</p>"},{"location":"product/requirements/2025/deployments/#digitalocean","title":"DigitalOcean","text":"<p>Why?: Quick implementation time, helps people evaluate, makes Mathesar deployment accessible without CLI.</p> <ul> <li>Users should be able to find and install Mathesar in the DigitalOcean Marketplace as a one-click app. </li> <li>Our documentation should include deploying with Digital Ocean as a first class citizen in the installation section, with accompanying documentation on how to work with it.<ul> <li>The user should be able to complete the setup without ever using the command line or having to make any decisions about database size, SSL, etc.</li> <li>The setup should take less than 15 minutes and produce a working HTTPS endpoint with a login screen.</li> <li>We need to be able to help non-technical users find their organization\u2019s existing DB and connect it to Mathesar in the UI or docs. We can\u2019t assume as much technical familiarity when they\u2019re doing a one-click deploy.</li> </ul> </li> <li>Our README and documentation should include a one-click deploy button.</li> <li>We should track analytics of how much traffic and clicks all this is generating, both for the Digital Ocean specific items as well as generally.</li> </ul> <p>Maps to use case: Blair Maps to category: Simple platforms</p>"},{"location":"product/requirements/2025/deployments/#railway","title":"Railway","text":"<p>Why?: Quick implementation time, helps people evaluate, makes Mathesar deployment accessible without CLI.</p> <ul> <li>Users should be able to find and install Mathesar on Railway as a one-click app. </li> <li>Our documentation should include deploying with Railway as a first class citizen in the installation section, with accompanying documentation on how to work with it.</li> <li>Our README and documentation should include a one-click deploy button.<ul> <li>We need to be able to help non-technical users find their organization\u2019s existing DB and connect it to Mathesar in the UI or docs. We can\u2019t assume as much technical familiarity when they\u2019re doing a one-click deploy.</li> </ul> </li> <li>We should track analytics of how much traffic and clicks all this is generating, both for the Railway specific items as well as generally.</li> </ul> <p>Maps to use case: Drew Maps to category: Simple platforms, Developer-focused PaaS</p>"},{"location":"product/requirements/2025/deployments/#cloudron","title":"Cloudron","text":"<p>Why?: Works for self-hosters, expanding platform diversity.</p> <ul> <li>Users should be able to find and install Mathesar through Cloudron.</li> <li>Our documentation should include deploying with Cloudron as a first class citizen in the installation section, with accompanying documentation on how to work with it.</li> <li>We should track analytics of how much traffic and clicks all this is generating, both for the Cloudron specific items as well as generally.</li> </ul> <p>Maps to use case: Isa Maps to category: Self-hosted PaaS</p>"},{"location":"product/requirements/2025/deployments/#flyio","title":"Fly.io","text":"<p>Why?: Expands platform diversity to more developer-focused tooling.</p> <ul> <li>Users should be able to find and install Mathesar through fly.io.</li> <li>Our documentation should include deploying with fly.io as a first class citizen in the installation section, with accompanying documentation on how to work with it.</li> <li>We should track analytics of how much traffic and clicks all this is generating, both for the fly.io specific items as well as generally.</li> </ul> <p>Maps to use case: Casey Maps to category: Developer-focused PaaS</p>"},{"location":"product/requirements/2025/deployments/#google-cloud-platform","title":"Google Cloud Platform","text":"<p>Why?: Big Three cloud infrastructure platform, expands platform diversity.</p> <ul> <li>Users should be able to find and install Mathesar through the Google Cloud Marketplace.</li> <li>We should write guides for how to set up Mathesar with GCP, such that they are foolproof to follow and follow GCP best practices and networking.<ul> <li>Using CloudSQL</li> <li>Using Helm + GKE</li> <li>Using a VM</li> </ul> </li> </ul> <p>Maps to use case: Gray Maps to category: Cloud IaaS</p> <p>We will evaluate what\u2019s next for this project after we complete implementation of the above, based on our current user base and the efficacy of all the things we\u2019ve already done. </p>"},{"location":"product/requirements/2025/deployments/#community-engagement","title":"Community Engagement","text":"<p>We should:</p> <ul> <li>seek input from community members who have asked for additional deployment options, to ensure that we\u2019re building the right set of features and addressing their use cases.</li> <li>set up a Community Guides section of our docs so that we can ask people to contribute their setups.</li> <li>update our blog with every new guide we write, even if it also goes on our documentation website.</li> <li>consider updating website copy with each new deployment method.</li> <li>consider posting on platform-specific or self-hosting communities when we add a new platform.</li> <li>consider adding one-click buttons to our website.</li> </ul>"},{"location":"product/requirements/2025/deployments/#what-were-not-doing-yet","title":"What We\u2019re Not Doing (Yet)","text":"<p>These issues came up in the user stories below, but we\u2019re not prioritizing them.</p> <ul> <li>Updating UI documentation with screenshots for people to use to train other people.<ul> <li>Too much work; too unrelated to this project.</li> </ul> </li> <li>AWS and GCP<ul> <li>We should only start with one here since it\u2019ll be a lot of work.</li> <li>Depends on what our users use more.</li> </ul> </li> <li>Anything to do with the use cases of:<ul> <li>Harper, on-premise engineer.</li> <li>John, Mac user.</li> <li>Elliot: AWS user (unless we substitute him for Gray and do AWS instead of GCP).</li> </ul> </li> </ul>"},{"location":"product/requirements/2025/deployments/#use-cases","title":"Use Cases","text":"<p>I thought it would be useful to consider a wide range of potential installers so that we could be thoughtful about what we can support and what we\u2019re putting off. Only some of them have been prioritized for the actual proposal.</p>"},{"location":"product/requirements/2025/deployments/#alex-cloud-friendly-engineer","title":"Alex: Cloud-friendly engineer","text":"<p>Alex is a mid-level full-stack dev at a data-savvy startup. He\u2019s comfortable with Docker, CLI tools, and VPS provisioning. He likes open-source and self-hosts side projects. He wants to try Mathesar as a potential internal tool to replace messy spreadsheets. He\u2019s spinning up a test environment on a Hetzner VPS.</p> <p>He wants a well-documented <code>docker-compose.yml</code> he can modify, clear instructions for TLS setup (he\u2019ll use nginx + Certbot), and persistent volumes that survive reboots or image rebuilds. He doesn\u2019t want to reverse-engineer random scripts. He orefers to run things in containers for portability.</p> <p>User stories:</p> <ol> <li>Alex wants to clone a GitHub repo with a ready-to-use <code>docker-compose.yml</code> that he can launch with one command.</li> <li>Alex wants to connect Mathesar to an existing Postgres instance running on another VPS or in the same stack so he can manage access to live data.</li> <li>Alex wants to be able to edit environment variables and config files directly so he can fine-tune behavior and performance.</li> <li>Alex wants SSL to be set up automatically using Let\u2019s Encrypt or documented clearly enough for him to do it.</li> <li>Alex wants to see logs and test endpoints during setup to make sure everything is working before he invites collaborators.</li> <li>Alex wants updates to be handled via Docker image pulls so he doesn\u2019t have to reconfigure every time.</li> </ol>"},{"location":"product/requirements/2025/deployments/#blair-nonprofit-technology-generalist","title":"Blair: nonprofit technology generalist","text":"<p>Blair manages websites, tools, and sometimes databases for a 30-person nonprofit. She wants to set up Mathesar to give program staff easy access to donor and outreach data without bugging her constantly.</p> <p>She\u2019s stretched thin and not a full-time sysadmin. She does not self-host regularly and cannot spend hours debugging YAML or unfamiliar infra. She wants to avoid hand-editing config files after deployment.</p> <p>User stories:</p> <ol> <li>Blair would like to find Mathesar on a VPS platform marketplace that she\u2019s familiar with and be able to set it up through the website.</li> <li>Blair wants to complete setup without ever using the command line or having to make any decisions about database size, SSL, etc.</li> <li>Blair wants installation to take less than 15 minutes and produce a working HTTPS endpoint with a login screen.</li> <li>Blair wants to be walked through connecting her organization\u2019s existing DB to Mathesar in the UI or linked documentation.</li> <li>Blair wants clear UI documentation with screenshots so she can hand off post-setup usage to her colleagues.</li> </ol>"},{"location":"product/requirements/2025/deployments/#casey-devops-engineer","title":"Casey: DevOps engineer","text":"<p>Casey is an early technical hire at a YC startup. He uses fly.io for microservices, values fast deploys and infra-as-code. He sees Mathesar as a good admin UI for internal ops data. He wants it in their staging environment fast.</p> <p>He wants a <code>fly.toml</code> file and Dockerfile that integrate with fly\u2019s builder and volume mounts. He\u2019d like HTTPS out of the box, maybe via built-in certs. He\u2019d ideally like a deployable Postgres image or docs on using fly.io\u2019s PG add-on. He needs logs and rollbacks to work with fly CLI. He has to deploy in a way that can be repeated in CI. He\u2019ll run <code>fly deploy</code>, and expect it to work the first time, but will do some debugging before giving up. </p> <p>User stories:</p> <ol> <li>Casey wants to deploy Mathesar to fly.io using a <code>fly.toml</code> config so it integrates cleanly with our existing infra.</li> <li>Casey wants Mathesar to connect securely to their internal Postgres instance (via IP allowlist or fly.io\u2019s internal networking).</li> <li>Casey wants TLS to be automatically configured so he doesn\u2019t have to handle certs manually.</li> <li>Casey wants to manage Mathesar deployment through CI/CD or fly\u2019s CLI so he can version and track deployments.</li> <li>Casey wants logs and health checks exposed via fly\u2019s dashboard so I can monitor the app\u2019s status.</li> </ol>"},{"location":"product/requirements/2025/deployments/#drew-freelance-data-consultant","title":"Drew: Freelance data consultant","text":"<p>Drew is a freelance data consultant that does short-term dashboarding and analysis work for small teams. She prioritizes speed and simplicity, and usually uses Railway for quick, low-effort deployments of whatever tool she needs.She wants to host Mathesar temporarily during a client project to give them data editing access, without touching infrastructure.</p> <p>She just wants to click a \u201cDeploy\u201d button in the Railway UI and have everything pre-configured for her. She\u2019ll move on in 15 min if there\u2019s confusing errors or setup isn\u2019t done. She just wants to look good to her client fast.</p> <p>User stories:</p> <ol> <li>Drew wants to deploy Mathesar to Railway with a single click so she can quickly give clients access to their data.</li> <li>Drew wants to easily point Mathesar to a Postgres instance provisioned on Railway or a client\u2019s host (she has access to a connection string).</li> <li>Drew does not want to have to figure out environment variables or a Postgres DB configuration or DNS or SSL, Railway should handle all that.</li> <li>Drew wants to be able to shut down or delete the Mathesar instance easily when the project ends.</li> <li>Drew wants to reuse the same deploy template for multiple clients as needed,</li> </ol>"},{"location":"product/requirements/2025/deployments/#elliot-data-product-owner-on-rds","title":"Elliot: Data product owner on RDS","text":"<p>Elliot manages internal analytics tools and workflows for a 100-person company that uses AWS heavily and has a managed Postgres RDS instance powering multiple apps. He wants to give non-technical team leads (e.g. product, ops) access to structured data without involving engineering. He can\u2019t expose RDS publicly \u2014 Mathesar must live in a private subnet or behind IAM-controlled ingress. And the setup must comply with existing AWS security policies. </p> <p>He wants to deploy Mathesar into the same VPC as RDS with minimal friction, through hosting on the AWS service that makes sense. He\u2019d like the ability to choose where to host (e.g. EC2 vs. EKS vs. Fargate). He aims to integrate Mathesar into a Terraform or CloudFormation stack. He expects SSL, secrets handling, and logging to work within existing AWS tooling.</p> <p>User stories:</p> <ol> <li>Elliot wants to deploy Mathesar within their AWS VPC so it can connect securely to their private RDS instance.</li> <li>Elliot wants to use Terraform or CloudFormation to provision Mathesar so it integrates with their infrastructure-as-code.</li> <li>Elliot wants Mathesar to support IAM roles or long-lived credentials to connect to RDS without opening public access.</li> <li>Elliot wants to configure role-based access in Mathesar that mirrors their internal RBAC model.</li> <li>Elliot wants the ability to audit user activity and log access attempts so they stay compliant with internal security policies.</li> <li>Elliot wants Mathesar updates to be packaged in a way that doesn\u2019t interfere with the rest of their infrastructure stack.</li> </ol>"},{"location":"product/requirements/2025/deployments/#frances-engineer-on-supabase-based-app","title":"Frances: Engineer on Supabase-based app","text":"<p>Frances works at a startup whose app runs on Supabase\u2019s hosted Postgres service. She wants to give internal ops + support staff controlled access to some tables. She\u2019s looking for an Airtable-like interface that connects directly to Supabase\u2019s DB without breaking the row-level security she has set up on the DB.</p> <p>Frances is primarily concerned with maintaining the integrity of the DB and engineering setup. She wants to ensure that RLS is respected and that Supabase auth and APIs are unaffected. She does not want the schema to be overwritten or for any problems with production. She wants to use known tools like a Helm chart. She also wants to use existing Postgres roles, she does not want to do a lot of additional setup. </p> <p>User stories:</p> <ol> <li>Frances would like to connect Mathesar to their Supabase-hosted Postgres using an existing connection string so she doesn\u2019t have to move or duplicate data.</li> <li>Frances wants Mathesar to respect row-level security (RLS) and not interfere with Supabase\u2019s roles or policies.</li> <li>Frances wants to deploy Mathesar via Helm chart so she can host it alongside their internal tooling stack. </li> <li>Frances wants to pre-define user roles that match their Supabase access patterns so internal users only see the data they need.</li> <li>Frances wants minimal or no schema modification so Mathesar works purely as a frontend and doesn\u2019t change her DB structure.</li> <li>Frances wants to onboard non-technical users quickly without needing to explain SQL or Supabase internals.</li> </ol>"},{"location":"product/requirements/2025/deployments/#gray-researcher-using-gcp","title":"Gray: Researcher using GCP","text":"<p>Gray maintains datasets in a GCP CloudSQL instance for his research lab. His grad students keep asking for access or CSV exports. He wants to set up Mathesar so students can view and edit structured data themselves without messing up raw tables.</p> <p>Gray is familiar with GCP patterns, but not self-hosting in general. He has time and budget; he cannot babysit the server. He needs support for how to set up his server on GCP (as a VM, or using App Engine, or Cloud Run\u2026 he doesn\u2019t care) with access to his database, which is in a private VPC.</p> <p>User stories:</p> <ol> <li>Gray would like to deploy Mathesar to a GCP VM or App Engine so it lives close to his CloudSQL database.</li> <li>Gray wants to connect Mathesar to his existing CloudSQL instance without opening it to the public internet.</li> <li>Gray would like to use default options for things like SSO or networking because he does not have the time to learn about the different options and decide.</li> <li>Gray wants to ensure he knows how to set up Mathesar so that his students do not have access to edit the schema (definition) of the data.</li> <li>Gray wants to know that he can just read through some documentation tailored to GCP and follow it and end up with a fully working and secure server.</li> </ol>"},{"location":"product/requirements/2025/deployments/#harper-on-premise-mathesar-setup","title":"Harper: On-premise Mathesar setup","text":"<p>Harper works at a mid-size company with strict data policies and manages tools in a secure, air-gapped network. The Postgres DB runs on bare-metal in a secured internal network. She wants Mathesar for ops and finance teams to self-serve data reporting, but can\u2019t put data or tools in the cloud \u2014 Mathesar needs to run fully offline.</p> <p>She\u2019ll install Mathesar inside their firewalled network, ideally via Docker Compose. She needs to build from source or use pre-scanned container images, since no external network access means no public Docker Hub. She aims to connect to the existing internal DB without breaking security assumptions. She has to manage auth via internal LDAP or SSO. She reads install docs carefully, runs things on airgapped servers, and uses the company\u2019s own CA for SSL certs.</p> <p>User stories:</p> <ol> <li>Harper wants to install Mathesar from a pre-built tarball or internal image registry so she doesn\u2019t require internet access.</li> <li>Harper wants to run Mathesar entirely inside their internal network using Docker Compose or a VM so it conforms to their security boundaries.</li> <li>Harper wants to connect Mathesar to their existing Postgres instance via localhost or private IP so no external routing is needed.</li> <li>Harper wants to configure everything via files\u2014no external API calls, license checks, or telemetry.</li> <li>Harper wants Mathesar to respect their internal CA and certificate setup so TLS works with their existing infra.</li> <li>Harper wants to restrict access via internal SSO (e.g., LDAP, Keycloak) so no cloud-based login is involved.</li> </ol>"},{"location":"product/requirements/2025/deployments/#isa-self-hoster","title":"Isa: Self-hoster","text":"<p>Isa manages a handful of apps for a community organization and side projects. She uses CapRover to avoid dealing with Docker or cloud config directly. Her stack already includes Postgres (via a CapRover one-click app). She wants to use Mathesar to give non-technical volunteers a way to edit structured data\u2014without building custom UIs or giving raw DB access.</p> <p>She deploys through CapRover\u2019s GUI and uses its container orchestration. She prefers apps that behave like other CapRover-deployed tools\u2014one click, then domain + login. She cannot use command-line tooling to install or configure apps. She doesn\u2019t want to manage Dockerfiles, ports, or SSL.</p> <p>User stories:</p> <ol> <li>Isa wants to deploy Mathesar via CapRover\u2019s \u201cOne Click Apps\u201d UI using a prefilled form so she doesn\u2019t have to touch Dockerfiles or terminal commands.</li> <li>Isa wants to specify the Postgres host, port, DB name, user, and password in the form during setup so Mathesar connects to the existing database.</li> <li>Isa wants Mathesar to start with a default admin user (or let her create one on first login) so she can log in immediately and verify it works.</li> <li>Isa wants Mathesar to automatically use SSL via CapRover\u2019s built-in TLS proxy so she doesn\u2019t have to set up certificates or proxies manually.</li> <li>Isa wants to access Mathesar at a subdomain she configures in CapRover, like <code>mathesar.community.org</code>, so it\u2019s easily shareable with others.</li> <li>Isa wants a simple way to back up the Mathesar container\u2019s config or bind mount so she can restore it if needed.</li> </ol>"},{"location":"product/requirements/2025/deployments/#john-mac-user","title":"John: Mac user","text":"<p>John is a macOS-native developer who tries out new open source tools locally before considering them for work or side projects. John saw Mathesar on GitHub or Hacker News and wants to see if it\u2019s a viable lightweight Airtable replacement. His DB is a local Postgres instance from Homebrew, already populated with app data.</p> <p>He installs Mathesar with <code>brew install mathesar</code> or <code>brew tap mathesar/cli</code>.\u000b Expects a local server to run with <code>mathesar start</code> and launch in browser.</p> <p>User stories:</p> <ol> <li>John wants to install Mathesar via Homebrew with a single command like <code>brew install mathesar</code> or <code>brew tap mathesar/cli</code> so he doesn\u2019t have to download anything manually.</li> <li>John wants to launch Mathesar locally with a command like <code>mathesar start</code> so it runs a local server and opens in his browser.</li> <li>John wants to connect Mathesar to his local Postgres DB so he can work with real data.</li> <li>John wants the app to bind to <code>localhost:8000</code> or similar and serve a working UI without needing certificates or proxies.</li> <li>John wants Mathesar to install with local defaults (e.g., SQLite or bundled Postgres) if he doesn\u2019t configure anything, so he can test it instantly.</li> <li>John wants to uninstall Mathesar cleanly using <code>brew uninstall mathesar</code> and remove any runtime artifacts, so his system stays clean.</li> </ol>"},{"location":"product/requirements/2025/deployments/#comparison-of-hosting-platforms-vs-benefits","title":"Comparison of hosting platforms vs. benefits","text":"\ud83c\udfc1Targets to prioritize \ud83c\udfcb\ufe0fEffort \ud83d\udea8Urgency \u26a0\ufe0fImportance \ud83d\udea7Evaluating Mathesar for production use \u2692\ufe0f Integrating into their own infra \ud83d\udea2 Discovering Mathesar through a tool they use \ud83e\uddf1Aiming to make prod. deployment easier \ud83e\uddd1\u200d\ud83d\udcbbSemi-technical users deploying Mathesar \ud83e\uddea Test with their own secure data \u2b50 Social-proof validation through integrations \ud83d\udce1 Real-world signal from reproducible methods As many as possible (meta) N/A N/A \u274c We only need a couple simple ones for this cohort \u2705 We need to integrate with as many platforms as people use. \u2705 More people will discover us if we\u2019re more places \ud83d\udfe8 We\u2019re likely to get most benefits with this cohort with a few well chosen platforms. Simpler PaaSDigital OceanHerokuRailwayetc. Medium\u000bNot blocking anything High Removes adoption barrier \u2705 People don\u2019t want to spend time deploying to evaluate or if they\u2019re non-technical \u274c People who\u2019ve invested in infrastructure usually end up at a bigger cloud marketplace. \ud83d\udfe8 Some people will discover us here, but people who tend to be discovering things through platforms are likely bigger. \u2705 People who just want to deploy Mathesar will appreciate easy deployment options. Cheaper hostsDreamhost, etc. MediumDon\u2019t usually support Docker out of the box Low\u000bNo one asked for this Low There are other ways to solve low-cost evaluation \u2705 People don\u2019t want to pay much to evaluate \u274c See above. \u274c See above. \ud83d\udfe8 Easy deployment doesn\u2019t usually mean cheap. Cloud IaaSGCP, AWS, Azure, IBM etc. MediumMay need approval &amp; learning platform specifics Medium\u000bNot blocking anything, although people have asked. High We have often seen people deploy on these, people have asked us for an AMI. \u274c Not always likely to have AWS etc. accounts \u2705 Definitely the place to be for integrating into existing infrastructure. \ud83d\udfe8 People do discover things on AWS and GCP, but may be better on smaller platforms. \ud83d\udfe8 Cloud infrastructure is sometimes hard to deploy. DevOps toolsHelm chartTerraform modulesAnsible playbookKubernetes operatorPacker templateetc. MediumThis needs some learning Medium\u000bNot blocking anything, although people have asked. High People have also asked us repeatedly for a helm chart. \u274c Too technical \u2705 Often necessary \u2705 Often necessary \ud83d\udfe8 Sometimes too technical, sometimes helpful. Postgres-like DBsCitusTimescaleDB (TigerData)YugabyteCockroachDBBabelfishAWS AuroraMaterializeetc. High Often don\u2019t support Postgres features we depend on. Low\u000bNot many asks for it. Low No use case we know of. \u274c Too technical \ud83d\udfe8 Sometimes a key part of their stack, sometimes too specialized to need Mathesar. \ud83d\udfe8 Could be a source of growth if we find one that works well. \u274c Not likely to be helpful here. Frontend platformsVercel, Netlify, etc. MediumThis needs us to figure out the platform. Medium\u000bSeems like they would be a good place for discovery. Medium This is expansive rather than unblocking. \ud83d\udfe8 People are more likely to be looking for DBs if they\u2019re users of these platforms. \ud83d\udfe8 Depending on the team, they may rely more on these platforms. \u2705 This seems like a good place for discovery. \u2705 People who use these platforms are likely looking for a quick deployment. Backend platformsSupabase, etc. LowThey use Postgres, we just need a guide on how to connect to it. High\u000bPostgres-specific platform with high reach. High\u000bLikely strong overlap in users. \ud83d\udfe8 Potentially, people who have a Supabase DB are likely to want quick evaluation. \ud83d\udfe8 Supabase is definitely a popular tool. \u2705 This seems like a good place for discovery. \u2705 People who use these platforms are likely looking for a quick deployment. Developer-focused PaaS fly.ioRailwayKoyebRenderetc. MediumThis needs us to figure out the platform. Medium\u000bSeems important to our user base. Medium Seems like a good platform to be on eventually. \u274c Too focused on high-performance and serverless. \ud83d\udfe8 Maybe. Seems a bit specialized. \ud83d\udfe8 Maybe \u2013 seems a bit specialized. \u2705 People who use these platforms are likely looking for a quick deployment. Self-hosted PaaSCoolifyCloudronCaproveretc. MediumThis needs us to figure out the platform. Medium\u000bSeems important to our user base. Medium Seems like a good platform to be on eventually. \u274c Definitely not self-hosters \ud83d\udfe8 Seems less likely for orgs, but people who use these seem like they really use them. \u274c Seems less likely to spawn discovery. \ud83d\udfe8 Only for people who bought into this particular ecosystem. Managed PostgresNeon, Nile, Crunchy Bridge, ScaleGrid, Aiven, Prisma Postgres, etc. MediumThis needs us to figure out the platform. Medium\u000bPostgres-specific is good for us High\u000bSeems good for distribution. \u274c Seems too specialized for this group of people. \u2705 Seems really good for people who actually use Postgres a lot. \u2705 Seems like a good place for people in the Postgres ecosystem to discover things. \ud83d\udfe8 People who are using hosted Postgres may want easier deploys for Mathesar. Local installationapt package, snap, flatpak, AppImage, Homebrew, podman, systemd, Nix HighNeeds individual support per platform. Medium-low\u000bPeople asked for it in the past but not recently. Medium-low\u000bNo specific use case we know of. \ud83d\udfe8 Too technical? Evaluating could happen locally, but Docker should cover that. \u274c Existing infrastructure is usually not local. \u274c No discovery happening here. \u274c Deployment is probably not happening locally."},{"location":"product/requirements/2025/deployments/#comparison-of-user-personas","title":"Comparison of user personas","text":"\ud83e\uddd1\u200d\ud83d\udcbbPersona Background Motivation Needs Constraints Behavior Environment \ud83d\udea7Alex Mid-level full-stack dev at a data-savvy startup.  Comfortable with Docker, CLI tools, and VPS provisioning. Likes open-source and self-hosts side projects. He wants to try Mathesar as a potential internal tool to replace messy spreadsheets.  He\u2019s spinning up a test environment on a Hetzner VPS. A well-documented <code>docker-compose.yml</code> he can modify.\u000b Clear instructions for TLS setup (he\u2019ll use nginx + Certbot).\u000b Persistent volumes that survive reboots or image rebuilds. Doesn\u2019t want to reverse-engineer random scripts.\u000b Prefers to run things in containers for portability. Will clone the GitHub repo, tweak env vars, and expect the README to \u201cjust work.\u201d Uses Hetzner Cloud and DigitalOcean for VPS hosting.\u000b Deploys apps using Docker Compose, stored in GitHub repos with <code>.env</code> files and config directories.\u000b Local machine is Linux (Pop!_OS), CLI-focused, uses <code>docker-compose</code>, <code>curl</code>, <code>vim</code>, <code>tmux</code>, and <code>nginx</code>.\u000b DNS handled via Cloudflare; HTTPS via Certbot + nginx reverse proxy.\u000b Has multiple running services on custom ports; uses <code>ufw</code> for basic firewalling.\u000b Postgres either runs in a separate container or remotely (DO managed DB). \ud83e\uddd1\u200d\ud83d\udcbb\ud83e\uddf1Blair Works at a 30-person nonprofit. Technical but stretched thin\u2014manages email, websites, analytics, and occasional server tasks. Wants Mathesar to give program staff easy access to donor and outreach data without bugging her constantly. A one-click DigitalOcean Marketplace install that handles TLS and Postgres.\u000b A public-facing UI and admin login within 5 minutes of clicking.\u000b Docs she can link to when training staff. Cannot spend hours debugging YAML or unfamiliar infra.\u000b She wants to avoid hand-editing config files after deployment. Will only install if the Marketplace flow works without SSH.  Might use the web console but avoids CLI unless necessary. Uses DigitalOcean for hosting; prefers Marketplace apps or Droplets with minimal manual setup.\u000b Primarily manages apps through web dashboards, not CLI.\u000b Public domain registered via Namecheap, DNS managed through DigitalOcean.\u000b Prefers browser-based UIs, HTTPS out of the box.\u000b Has deployed Ghost, WordPress, and Plausible using DO Marketplace before.\u000b Uses Gmail and Google Workspace; all user management happens there. \u2692\ufe0f\ud83e\uddf1Casey Early technical hire at a YC startup.  Uses fly.io for microservices, values fast deploys and infra-as-code. Sees Mathesar as a good admin UI for internal ops data. He wants it in their staging environment fast. A <code>fly.toml</code> file and Dockerfile that integrate with fly\u2019s builder and volume mounts.\u000b HTTPS out of the box, maybe via built-in certs.\u000b Ideally a deployable Postgres image or docs on using fly.io\u2019s PG add-on. Needs logs and rollbacks to work with fly CLI.\u000b Has to deploy in a way that can be repeated in CI. Will fork your repo, run <code>fly deploy</code>, and expect it to work the first time.  Tolerant of minor friction if it aligns with platform conventions. Entire internal toolchain lives on fly.io\u2014app platform, Postgres, Redis.\u000b Deploys via <code>fly launch</code>, <code>fly deploy</code>, and GitHub Actions.\u000b Uses <code>fly secrets</code> for env vars, <code>fly volumes</code> for persistent storage.\u000b Monitors app health with <code>fly status</code>, logs with <code>fly logs</code>.\u000b TLS handled automatically via fly.io platform; custom domains configured via DNS provider.\u000b Very comfortable with Dockerfiles, CI/CD, and internal service networking. \ud83e\uddd1\u200d\ud83d\udcbb\ud83e\uddf1Drew Freelance data consultant who does short-term dashboarding and analysis work for small teams.  Uses Railway for quick, low-effort deployments. Wants to host Mathesar temporarily during a client project to give them data editing access, without touching infrastructure. One-click Railway deploy (template + environment vars pre-filled).\u000b Zero infra management beyond clicking \u201cDeploy\u201d.\u000b Temporary Postgres DB bundled or easily linked. No access to client\u2019s infra, no SSH.\u000b Doesn\u2019t want to manage DNS or SSL\u2014Railway should handle it. Will abandon setup if it takes more than 15 minutes or requires non-obvious tweaking.  Wants to look good to her client fast. Uses Railway for temporary infra during client engagements.\u000b Launches Postgres and backend services with one-click templates.\u000b Avoids terminal/CLI entirely; prefers GUI and prefilled deploy forms.\u000b Domain use is minimal; relies on Railway\u2019s auto-generated app URLs.\u000b Uses browser for everything: GitHub, Figma, GDrive, and Railway.\u000b Shares tools with clients via public or invite-only URLs, often disposably. \u2692\ufe0fElliot Runs internal tools for a 100-person company.  They use AWS heavily and have a managed Postgres RDS instance powering multiple apps. Wants to give non-technical team leads (e.g. product, ops) access to structured data without involving engineering. Deploy Mathesar into the same VPC as RDS with minimal friction.\u000b Configure DB connection using env vars (hostname, username, etc.).\u000b Option to self-host Mathesar on an EC2 or EKS instance. Can\u2019t expose RDS publicly\u2014Mathesar must live in a private subnet or behind IAM-controlled ingress.\u000b Must comply with existing AWS security policies. Will integrate Mathesar into a Terraform or CloudFormation stack.  He expects SSL, secrets handling, and logging to work within existing AWS tooling. Manages internal tools on AWS, including EC2, RDS (Postgres), and S3.\u000b Infra defined with Terraform; uses GitOps-style workflows.\u000b Private VPC with RDS instances in isolated subnets, no public access.\u000b Uses IAM roles and Secrets Manager for credentials.\u000b Services are containerized but deployed via ECS or EC2 AMIs.\u000b Requires TLS, audit logging, and secure access paths for all tools. \ud83d\udea7\u2692\ufe0fFrances Built the app on Supabase, including its hosted Postgres. She wants to give internal ops + support staff controlled access to some tables. She\u2019s looking for an Airtable-like interface that connects directly to Supabase\u2019s DB without breaking row-level security. Point Mathesar at a Supabase connection string (with RLS policies respected).\u000b Avoid any breakage in JWT-based Supabase auth or PostgREST setup.\u000b Run Mathesar via Helm chart alongside other internal tools. Must not interfere with production Supabase config or overwrite schema.\u000b Wants to reuse existing roles, not manage separate DB access paths. Will experiment locally first, then deploy if integration is clean.  Not afraid of K8S, Docker, or env files but wants to stay inside known patterns. Backend built on Supabase; uses its hosted Postgres, auth, and edge functions.\u000b No separate backend servers\u2014everything is managed inside Supabase.\u000b Uses VSCode and GitHub for coding, Supabase Studio for DB/admin.\u000b Postgres connection string used in multiple tools via <code>.env</code> files.\u000b RLS policies are enforced on tables; auth tokens tie to DB roles.\u000b Occasionally deploys internal tools via Helm chart. \u2692\ufe0f\ud83e\uddf1Gray Maintains datasets in a GCP CloudSQL instance for his research lab.  His grad students keep asking for access or CSV exports. Wants Mathesar so students can view and edit structured data themselves without messing up raw tables. Deploy Mathesar as a GCP VM or App Engine app connected to CloudSQL.\u000b Secure access with Google Identity SSO.\u000b Read-only DB role for most users, one editor role for himself. Limited time and budget; cannot babysit the server.\u000b Needs support for IP whitelisting or private IP access to CloudSQL. Follows GCP patterns, uses Google Docs heavily, wants to integrate with what he already knows. Stores data in a CloudSQL Postgres instance managed by GCP.\u000b SSH tunneling or private IP access configured via IAM permissions.\u000b Google Workspace account handles all login and identity.\u000b Occasionally spins up GCE VMs or Cloud Run instances using the console.\u000b DNS is rarely touched; uses direct IPs or auto-generated app URLs.\u000b Sensitive research data\u2014access must be auditable, minimal-exposure. \ud83d\udea7\u2692\ufe0fHarper Works at a mid-size company with strict data policies.  The Postgres DB runs on bare-metal in a secured internal network. Wants Mathesar for ops and finance teams to self-serve data reporting, but can\u2019t put data or tools in the cloud. Install Mathesar inside their firewalled network, ideally via Docker Compose.\u000b Configure it to connect to existing internal DB without breaking security assumptions.\u000b Manage auth via internal LDAP or SSO. No cloud, no external network access, no public Docker Hub.\u000b Needs to build from source or use pre-scanned container images. Reads install docs carefully, runs things on airgapped servers, uses their own CA for SSL certs. Airgapped internal network, no access to internet or cloud.\u000b Services run on physical servers, some virtualized with KVM or VMware.\u000b Postgres hosted locally, locked down by firewall + VPN access.\u000b TLS via internal CA; client machines trust this CA.\u000b Uses internal Docker registry; images are scanned and promoted manually.\u000b LDAP or Keycloak used for internal identity; no cloud auth permitted.\u000b Infrastructure maintained via shell scripts, Ansible, and occasional systemd services. \u2692\ufe0f\ud83e\uddf1Isa Isa manages a handful of apps for a community org and side projects. She uses CapRover to avoid dealing with Docker or cloud config directly. Her stack includes Ghost, Outline, Plausible, and Postgres (via a CapRover one-click app). Isa wants to use Mathesar to give non-technical volunteers a way to edit structured data\u2014like translation strings, schedule data, or membership records\u2014without building custom UIs or giving raw DB access. Isa wants to install Mathesar from an app catalog with a few clicks.\u000b She doesn\u2019t want to manage Dockerfiles, ports, or SSL.\u000b Must deploy through CapRover\u2019s GUI and use its container orchestration. \u000bPrefers UI-based deployment. Cannot use command-line tooling to install or configure apps. Might use built-in Postgres from the platform or link to external DB.\u000b Will not run SSL setup scripts or reverse proxies manually.\u000b Prefers apps that behave like other CapRover-deployed tools\u2014one click, then domain + login. Isa starts by scanning CapRover\u2019s \u201cOne Click Apps\u201d list for anything that might be a UI for Postgres.\u000b If Mathesar isn\u2019t there, Isa looks for a <code>captain-definition</code> file or a deployable Docker image with clear setup instructions.\u000b Isa uses the CapRover UI exclusively\u2014logs into the dashboard, picks \u201cApps &gt; One Click App,\u201d fills out env vars in a web form, and clicks deploy.\u000b Once deployed, Isa uses the \u201cVisit App\u201d button in CapRover to verify it loads under HTTPS.\u000b Isa pastes in DB credentials during setup, copied from CapRover\u2019s own Postgres app output.\u000b If Mathesar doesn\u2019t connect on first try, Isa reopens the CapRover UI and looks for logs via the \u201cApp Logs\u201d tab.\u000b After first login, Isa manually creates 2\u20133 user accounts and sends links to teammates via email.\u000b If any problems arise, Isa searches the Mathesar GitHub issues, CapRover forums, or posts a question tagged \u201cself-host\u201d on a community thread. CapRover installed on a small VPS (1 core, 2 GB RAM, 50 GB SSD).\u000b CapRover\u2019s one-click Postgres container already running.\u000b Uses CapRover UI to deploy all services.\u000b Public domain with auto-SSL via CapRover\u2019s built-in Let\u2019s Encrypt integration. \ud83d\udea7John John is a macOS-native developer who tries out new open source tools locally before considering them for work or side projects. Uses <code>brew</code> for everything: installs Redis, postgres, psql, httpie, etc. John saw Mathesar on GitHub or Hacker News and wants to see if it\u2019s a viable lightweight Airtable replacement. His DB is a local Postgres instance from Homebrew, already populated with app data. He installs Mathesar with <code>brew install mathesar</code> or <code>brew tap mathesar/cli</code>.\u000b Expects a local server to run with <code>mathesar start</code> and launch in browser.\u000b Uses embedded Postgres for local test, or connects to test DB. Doesn\u2019t use Docker unless necessary.\u000b Avoids GUI installers or browser-based setup wizards.\u000b Will abandon the tool if local install takes more than 10 minutes or requires registering accounts. Needs good local defaults.\u000b Fast setup and teardown expected. John finds Mathesar through GitHub or a blog post and immediately runs <code>brew install mathesar</code> or <code>brew tap mathesar/tap</code>.\u000b After install, John runs <code>mathesar start</code>, expects it to spin up locally and open <code>http://localhost:8000</code> in the browser.\u000b If it asks for DB config, John pastes in a connection string to his local dev database (<code>postgres://noah@localhost/myproject_dev</code>)John tests the UI using real data from a side project\u2014opens a table, changes a few rows, checks Postgres in another terminal to confirm it worked.\u000b Any time something doesn\u2019t work, John opens Console.app or terminal logs to look for stack traces or port conflicts.\u000bJohn may file a GitHub issue or PR if something\u2019s broken, but will move on if the tool isn\u2019t usable in 10\u201315 minutes.\u000b If satisfied, John may suggest the team use it internally, fork the repo, or write a wrapper script for quick reuse. macOS Sonoma, using Terminal + iTerm + brew.\u000b Local Postgres installed via <code>brew install postgresql@15</code>Runs local services via <code>brew services start postgresql</code>.\u000b Data lives in <code>myproject_dev</code> DB.\u000bNo Docker installed, avoids Compose setups for tests."},{"location":"product/requirements/2025/deployments/#ecosystem-research","title":"Ecosystem Research","text":""},{"location":"product/requirements/2025/deployments/#nocodb","title":"NocoDB","text":"<p>For what it\u2019s worth, NocoDB supports a few different types of hosting platforms, see all types below in the next section.</p> <p>\u201cAuto upstall\u201d: This is their default script meant for a Linux server that installs everything including Postgres, sets up a DB, sets up SSL, upgrades, etc. I think it\u2019s meant to be idempotentent.</p> <p>Simple platforms: Digital Ocean, Railway, some other \u201cone click deploy\u201d buttons.</p> <p>Cloud marketplaces: AWS Fargate, GCP Cloud Run</p> <p>DevOps tools: Docker, Docker Compose, Helm chart</p> <p>Local installation: Homebrew, Nix/NixOS, npm</p> <p>Self-hosted PaaS tools: Cloudron, CapRover + they link to an external TrueNAS / FreeNAS guide.</p>"},{"location":"product/requirements/2025/deployments/#baserow","title":"Baserow","text":"<p>Baserow supports a similar list of hosting services as NocoDB.</p> <p>DevOps tools: Docker, Docker Compose, Helm chart, K8S. They have images that contain all dependencies and are ready to go.</p> <p>Simple platforms: Digital Ocean, Heroku, Render, Railway + a page for other third-party hosting providers</p> <p>Cloud marketplaces: AWS Fargate / other ways of deploying on AWS using Docker &amp; Kubernetes</p> <p>Self-hosted PaaS tools: Cloudron</p> <p>Additionally, they have:</p> <ul> <li>Guides on how to set up various proxies: Traefix, nginx, Apache  </li> <li>A guide on how to set up logging and monitoring  </li> <li>A guide on how to save files securely</li> </ul>"},{"location":"product/requirements/2025/file-attachments/","title":"File Attachments","text":""},{"location":"product/requirements/2025/file-attachments/#the-problem","title":"The Problem","text":"<p>Users need to associate files with individual records in their tables, and they prefer to add, view, and remove these files in context with their associated data. They need to determine which records do or do not have required files. Without built-in file support, users are forced to rely on third-party tools and fragmented workflows.</p>"},{"location":"product/requirements/2025/file-attachments/#is-it-feasible","title":"Is it feasible?","text":"<p>File attachments is a constrained, standalone feature that exists in all of the spreadsheet-like products in Mathesar\u2019s ecosystem. File attachments are extremely common in most web-based software, as such there are considerable resources, libraries, and references to facilitate the work on this feature. It is very feasible to implement.</p>"},{"location":"product/requirements/2025/file-attachments/#use-cases","title":"Use Cases","text":"<p>As the owner of a construction company, I want to:</p> <ul> <li>Associate screenshots of signed contracts with each construction job, so I know which jobs can have their status updated to \u201cApproved\u201d.</li> <li>Make sure staff members who can access our main jobs table are able to view the associated contracts, order sheets, and permits for each job, without needing access to any other system.</li> <li>Attach inspection reports, permits, and compliance documents to jobs, so my team and I can produce reports about non-compliant jobs.</li> <li>Find a construction job using its job ID number, so I can immediately access and print the signed contract.</li> <li>Check that \u201cApproved\u201d jobs have the required documents, an approved contract and a paid invoice, so that work can begin as quickly as possible.</li> <li>Remove files that have accidentally been added to the wrong job, so that the correct materials are ordered for each job.</li> </ul>"},{"location":"product/requirements/2025/file-attachments/#requirements","title":"Requirements","text":"<ul> <li>Add one or multiple file attachments of any type to records</li> <li>Remove file attachments previously associated with records</li> <li>Find specific records based on attachment(s) information</li> </ul>"},{"location":"product/requirements/2025/file-attachments/#ecosystem-analysis","title":"Ecosystem Analysis","text":"<p>There are many existing examples of this functionality in other applications, so there is a lot of inspiration to draw from.</p>"},{"location":"product/requirements/2025/file-attachments/#airtable","title":"Airtable","text":"<p>Airtable offers an \u201cAttachments\u201d column type which is described as \u201cAdd images, documents, or other files to be viewed or downloaded.\u201d</p> <p></p>"},{"location":"product/requirements/2025/file-attachments/#baserow","title":"Baserow","text":"<p>Baserow has a \u201cFile\u201d column type with similar behavior:</p> <p></p>"},{"location":"product/requirements/2025/file-attachments/#nocodb","title":"NocoDB","text":"<p>NocoDB has an \u201cAttachments\u201d column type with very similar behavior:</p> <p></p>"},{"location":"product/requirements/2025/forms-public/","title":"Forms (Public)","text":"<p>Old version</p> <p>These requirements will be updated soon.</p>"},{"location":"product/requirements/2025/forms-public/#problem-were-solving","title":"Problem we\u2019re solving","text":"<p>Users need a way to collect structured data from people outside their organization, such as volunteers, customers, or survey respondents, without requiring those users to log in or provide any information beyond that needed by the form. </p> <p>Today, Mathesar only allows data entry through the logged-in spreadsheet interface, which:</p> <ul> <li>Limits collaboration to internal users  </li> <li>Makes it impossible to collect one-off or community-sourced submissions  </li> <li>Adds unnecessary friction for low-risk, high-volume data collection scenarios</li> </ul> <p>Users have explicitly requested this feature:</p> <ul> <li>\u201cIf Mathesar had this, we would have selected it over NocoDB. We have a lot of plans for this, such as a contact us form on our website, customer satisfaction surveys, and data entry for our production systems.\u201d </li> <li>\u201cIf we could create and use different forms to fill the database that would be very interesting because it would avoid having to develop an entire database management interface.\u201d </li> <li>\u201cThis feature would enable diagnostics EUA submissions to the FDA where the FDA could spin up a table with an associated form for diagnostic manufacturers to populate.\u201d</li> </ul>"},{"location":"product/requirements/2025/forms-public/#features","title":"Features","text":"<ul> <li>Allow data to be entered via public, sharable forms  </li> <li>Allow Mathesar users to create, configure, and publish forms</li> </ul>"},{"location":"product/requirements/2025/forms-public/#feasibility","title":"Feasibility","text":"<p>This feature is a common one with lots of prior implementations to take inspiration from, and forms are a foundational part of frontend software engineering, so it\u2019s unlikely our team would be unable to work on this. </p>"},{"location":"product/requirements/2025/forms-public/#user-stories","title":"User Stories","text":"<p>As the admin of a community movie database, I want to:</p> <ul> <li>Build a single form that allows community members to add new movies, generes, and the related crew in one place for ease and convenience.  </li> <li>Avoid users submitting invalid data so that our small team doesn\u2019t have to manage spam or invalid submissions.  </li> <li>Preview the form and test it before making it public, so that we don\u2019t provide a bad experience or collect data incorrectly in a way that messes up our dataset.  </li> <li>Make sure users know their submission was received correctly after they fill out the form, so that they aren\u2019t confused and don\u2019t contact us to verify.</li> </ul>"},{"location":"product/requirements/2025/forms-public/#ecosystem","title":"Ecosystem","text":"<p>Tools like Airtable and Google Forms support anonymous, public form submissions. Open-source alternatives like Baserow and NocoDB also support public forms with field-level validation. In fact, most products in Mathesar\u2019s ecosystem contain a \u201cforms\u201d feature, including but not limited to Airtable, Baserow, NocoDB, Teable, Grist, SeaTable, Tadabase, and Quickbase.</p> <p>It\u2019s arguable that this functionality is \u201cindustry standard\u201d and is commonly-accepted as a key feature for any offering in this space.</p>"},{"location":"product/requirements/2025/joined-data-improvements/","title":"Working with Joined Data","text":"<p>Old version</p> <p>These requirements are being updated.</p>"},{"location":"product/requirements/2025/joined-data-improvements/#the-problem","title":"The Problem","text":"<p>Mathesar users would like an easy way to view and edit data from related tables while looking at a table.</p> <p>Direct user request:</p> <p>It would be really useful if, when looking at a table, a user could also see a column from a different table, either due to a foreign key relationship or simply via a join</p>"},{"location":"product/requirements/2025/joined-data-improvements/#why-its-worth-solving","title":"Why it\u2019s worth solving.","text":"<p>We are currently focusing on major issues that are blocking people from adopting Mathesar. </p> <p>Many people use Mathesar for both querying and data entry. But it\u2019s extremely inconvenient or inefficient to work with joined data in Mathesar. Users need to use the following workarounds right now:</p> <ul> <li>Use the record page or multiple windows to add related data.  </li> <li>Use multiple windows to edit data across multiple records and multiple tables.</li> <li>Switch from the table page to the data explorer page to view data related to the data you\u2019re currently editing.</li> <li>Use the many to many tables to edit, but there\u2019s not enough context to see what rows you\u2019ve already added and what you haven\u2019t (e.g. if associating five genres with a movie)  </li> </ul> <p>Users have told us they cannot adopt Mathesar without this process being easier, and users who are happy with Mathesar have also requested this. It seems urgent to solve this to make Mathesar more useful.</p>"},{"location":"product/requirements/2025/joined-data-improvements/#is-it-feasible","title":"Is it feasible?","text":"<p>Yes, it will require design changes, but it\u2019s absolutely feasible. We\u2019ve already done the technical feasibility work on this as part of Worksheets and Table Query Integration investigation so I will not repeat it here.</p>"},{"location":"product/requirements/2025/joined-data-improvements/#requirements","title":"Requirements","text":"<p>Minimum necessary:</p> <ul> <li>Starting at a table, add related one-to-one columns that are \u201cenum like\u201d (are either a FK pointing back to the table, or are a many-to-many table) to the table view. See the values in that column.  </li> <li>Remove columns from the current view, either from the table or joined tables  </li> <li>A way to distinguish between hiding new columns from deleting table columns.  </li> <li>A way to distinguish between adding brand new columns to the current table and showing new columns from an existing table.  </li> <li>A way to distinguish between columns in the current table and columns from other tables.  </li> <li>Adding and removing existing items to one-to-many columns from the cell displaying them, with autocomplete based on values.  </li> <li>Ensuring that filtering / sorting / grouping tables still works as usual.</li> </ul> <p>Additional scope (not necessary for MVP):</p> <ul> <li>Save the current view (global, not per-user)  </li> <li>Switch between multiple saved views associated with a table  </li> <li>Remove saved views (global, not per-user)  </li> <li>Creating new one-to-many records from a cell  from the cell displaying them.  </li> <li>This can be limited to things that are easy (e.g. no NOT NULL constraints, disable creation for complicated records)  </li> <li>Adding any kind of related column to the table:<ul> <li>Any join distance</li> <li>Multiple paths to the table</li> <li>Natural joins</li> </ul> </li> </ul>"},{"location":"product/requirements/2025/joined-data-improvements/#out-of-scope","title":"Out of Scope","text":"<ul> <li>Any additional query building functionality \u2013 only adding / removing columns that already exist.  </li> <li>Adding records that are not one-to-many  </li> <li>Any summarizations or transformations that aren\u2019t lists.  </li> <li>Changing any existing table page functionality.  </li> <li>Editing / deleting related records \u2013 only adding / removing them or creating them are in scope.  </li> <li>Adding new related records with complex constraints.</li> </ul>"},{"location":"product/requirements/2025/joined-data-improvements/#evaluation-and-guardrails","title":"Evaluation and Guardrails","text":"<p>How we\u2019ll know we\u2019ve succeeded with our goals:</p> <ul> <li>Users who\u2019ve requested the feature saying that it works for them.  </li> <li>Kriti being able to do product planning in Mathesar.  </li> <li>People using this feature, as shown in analytics.</li> <li>Uptick in DAUs and MAUs (may not be conclusively linked to this feature).</li> </ul> <p>Things to watch out for while implementing:</p> <ul> <li>Scope creep and competing goals. We need to focus on fixing only this one issue.  </li> <li>Optimizing for edge cases.</li> </ul>"},{"location":"product/requirements/2025/joined-data-improvements/#community-engagement","title":"Community Engagement","text":"<p>We should:</p> <ul> <li>seek input from community members who have asked for this, to ensure that we\u2019re building the right set of features and addressing their use cases.</li> <li>update mathesar.org and our <code>README.md</code> to include this as a featured use case.<ul> <li>On mathesar.org, this should include the product page and a few use cases.</li> <li>We may want to create a new use case built around this feature because this unlocks a lot of workflows.</li> <li>We\u2019ll need new screenshots too.</li> </ul> </li> </ul>"},{"location":"product/requirements/2025/joined-data-improvements/#use-case","title":"Use Case","text":"<p>I\u2019m just using myself as the user here. I have a product planning schema in Mathesar. </p> <p>I think of the Ideas table as the primary concept in this schema.. I\u2019m organizing product ideas. Everything else is scaffolding.</p> <p>Each idea has multiple categories. In order to organize ideas in a way that\u2019s useful to me, I need to have a single work area where I can:</p> <ul> <li>Start from the ideas list and add in a category column so I can see all categories associated with an idea.  </li> <li>Add and remove categories associated with an idea.  </li> <li>Create new categories inline if needed.</li> </ul> <p>I also realized midway through making this schema that I want to associate multiple impacts to the same idea. I\u2019d like to be able to:</p> <ul> <li>Extract the impact foreign key column into a mapping table and preserve existing mappings (this is tracked as a GitHub issue).  </li> <li>Add the impact column to the ideas list (which already has the category column)  </li> <li>Manipulate impacts associated with an idea in the same way as categories.</li> </ul> <p>I don\u2019t want to keep adding these columns every time, so I\u2019d like to save this as my default view of the table, since I always use this the same way.</p>"},{"location":"product/requirements/2025/joined-data-improvements/#comparison-to-prior-work","title":"Comparison to Prior Work","text":"<p>Worksheets: </p> <ul> <li>No new query paradigm, just added functionality to the query page.  </li> <li>Functionality is limited to what solves the immediate problem, but can be extended for future problems.  </li> <li>Tables are still the central organizing concept.</li> </ul> <p>Prior design concepts: </p> <p>We have had a bunch of designs related to this before.</p> <ul> <li>One-to-Many Relationships - Mathesar Wiki </li> <li>Multiple Records Associated with a Single Record - Mathesar Wiki </li> <li>Editing Records Within a View - Mathesar Wiki</li> </ul>"},{"location":"product/requirements/2025/sso-oidc/","title":"SSO (OIDC)","text":"<p>View this project in GitHub</p> <p>Mathesar users would like to reduce the number of separate passwords they need to use.</p> <p>Mathesar admins would like:</p> <ul> <li>All of their internal users using the same secure login that can be managed in one place.</li> <li>Reuse their existing groups and roles.</li> <li>Create users automatically and avoid manual work to create users.</li> </ul> <p>Mathesar maintainers would like Mathesar to be adopted at organizations with IT policies that require SSO.</p>"},{"location":"product/requirements/2025/sso-oidc/#pain-points-for-users","title":"Pain points for users","text":"<ul> <li>The current user creation process in Mathesar involves setting up users through the UI, plus getting them credentials manually. It\u2019s slow and cumbersome.</li> <li>Organizations that use SSO cannot benefit from their SSO setup when using Mathesar.</li> <li>Separate passwords also create a security risk, especially for a tool like Mathesar that may connect to a production database.</li> <li>People don\u2019t adopt Mathesar because of this.</li> </ul>"},{"location":"product/requirements/2025/sso-oidc/#why-its-worth-solving","title":"Why it\u2019s worth solving","text":"<p>We are currently focusing on major issues that are blocking people from adopting Mathesar. SSO is one of the lowest effort / highest impact ways to do that. It has several comments and upvotes in our GitHub.</p> <p>SSO may also help us grow Mathesar adoption, because:</p> <ul> <li>Other products charge for SSO as part of their open core offering, but we would be releasing it under GPL.</li> <li>Mathesar supports Postgres DB-based permissions, but organizations who care about access control enough to use it are also likely to care about SSO.</li> </ul>"},{"location":"product/requirements/2025/sso-oidc/#is-it-feasible-to-solve","title":"Is it feasible to solve?","text":"<p>Yes! We use Django for our users, and there are several libraries we can just drop into our codebase.</p> <ul> <li>juanifioren/django-oidc-provider </li> <li>jazzband/django-oauth-toolkit </li> <li>mozilla/mozilla-django-oidc </li> </ul> <p>Further feasibility research is unnecessary, it should be quick to implement. I briefly considered just implementing it instead of writing this.</p>"},{"location":"product/requirements/2025/sso-oidc/#use-cases","title":"Use Cases","text":"<p>This is background information that I used to help me think through the requirements. I started with the use cases first and derived everything else from there. The use cases are made up, but people have described their use cases on our SSO (single sign-on) support GitHub discussion, which may also be helpful to read. </p>"},{"location":"product/requirements/2025/sso-oidc/#most-minimal-user-alice","title":"Most Minimal User: Alice","text":"<p>Alice is a tech generalist who manages databases and IT (among other things) for her 30-person organization, but neither of those are her main job. She wants to set up Mathesar to help non-technical people who need access to data self-serve. </p> <p>Their organization uses Google Workspace to manage accounts, and she knows that if Mathesar doesn\u2019t support Google Workspace login, she\u2019s going to have more tech support on her hands, not less. She also wants to ensure that users accessing the DB through the Mathesar UI use a Postgres role with limited permissions.</p> <p>Since they have a small organization, she doesn\u2019t mind creating/updating/deleting the users manually in Mathesar. She does need to configure email domain based whitelisting in Mathesar, and she\u2019d like to be able to set the default Postgres role for all users, rather than have to set a role for individual users. Deprovisioning is not a priority because once they lose access to their Google email, they can\u2019t get into Mathesar either.</p> <p>Alice already has Google Workspace set up. She\u2019s fine with doing the configuration on the command line or through config files. All she needs is:</p> <ol> <li>A way to configure Google Workspace SSO in Mathesar. (Google supports both OIDC and SAML).</li> <li>A way to limit who can access Mathesar to a particular email domain.</li> <li>A way to set up what Postgres role people automatically get when they sign in \u2013 a single role is fine.</li> <li>A way to create users in Mathesar and map them to the accounts they\u2019ll be signing in with \u2013 manual is fine.</li> <li>A UI for users to log in to Mathesar with their Google account.</li> </ol>"},{"location":"product/requirements/2025/sso-oidc/#user-stories","title":"User stories","text":"<p>Alice (tech generalist, small org admin)</p> <ul> <li>As Alice, I want to configure OIDC SSO with our Google Workspace account via a config file so that my users can sign in with their Google accounts.  </li> <li>As Alice, I want to restrict Mathesar access to users with a specific email domain so that unauthorized users can\u2019t sign in even if they have a valid Google account.  </li> <li>As Alice, I want to define a default Postgres role in the config file that all SSO-authenticated users get, so that they don\u2019t accidentally have too much access.  </li> <li>As Alice, I want to either pre-create user accounts in Mathesar and link them to their Google account or have Mathesar automatically create user accounts linked to the Postgres role in the config file, for anyone new that signs in from the specific email domain.  </li> <li>As Alice, I want my users to see a login screen that includes a \u201cSign in with Google\u201d button so they can access Mathesar easily without needing credentials from me.</li> </ul> <p>David (non-technical staff at Alice\u2019s org)</p> <ul> <li>As David, I want to sign in to Mathesar using my Google Workspace account so I don\u2019t have to remember a new password or ask Alice for access.</li> <li>As David, I want to be granted access with the right permissions when I sign in so I can immediately use the product without extra steps.</li> </ul>"},{"location":"product/requirements/2025/sso-oidc/#more-common-user-bob-carol","title":"More Common User: Bob &amp; Carol","text":"<p>Bob works on the data science team at a 80-person company, and often collaborates with non-technical users e.g. sales and customer success. They also work with a team of outsourced data entry workers to populate their data. </p> <p>Mathesar would really make his job easier by allowing the data entry team to input data directly and simplifying data gathering. Mathesar would also allow the sales and support team to self-serve without the data science team being a bottleneck. Bob needs to work with Carol, his organization\u2019s IT person, to install Mathesar.</p> <p>Carol is comfortable installing Mathesar and connecting to their production database as long as Mathesar supports the following:</p> <ul> <li>Integration with Okta / Auth0, the identity provider used in the organization.  </li> <li>Separate Postgres roles for the data entry people, sales, and customer success \u2013 with proper RBAC. Carol is willing to set these up manually through <code>psql</code>.</li> <li>Automatic provisioning of roles based on groups \u2013 Carol does not want to make individual users, Carol has already set up groups in Okta and wants Mathesar to assocale \u2018sales\u2019 in the authorization headers with the \u2018sales\u2019 DB role, etc.  </li> <li>Documentation on how all this works, so Carol can learn about Mathesar comfortably.  </li> <li>Some information on how to debug failures, if someone can\u2019t log in.</li> </ul> <p>Carol also needs the basic requirements that Alice needs. Carol still doesn\u2019t need a UI for any of this.</p>"},{"location":"product/requirements/2025/sso-oidc/#user-stories_1","title":"User stories","text":"<p>Bob (power user at medium org, internal advocate)</p> <ul> <li>As Bob, I want Mathesar set up at our organization so that I have more time to devote to data science and less to logistics.  </li> <li>As Bob, I want to hand off SSO configuration to our IT admin but still use Mathesar confidently once access is set up.  </li> <li>As Bob, I want to enable multiple Postgres roles for different kinds of users so that each group gets only the access they need.</li> </ul> <p>Carol (IT admin, medium org)</p> <ul> <li>As Carol, I want to configure OIDC SSO via a config file using our existing IdP (e.g., Okta/Auth0) so that I don\u2019t have to create new identity workflows.  </li> <li>As Carol, I want to map IdP groups to specific Postgres roles in a config file so that access is automatically assigned based on group membership.  </li> <li>As Carol, I want to see logs showing which groups were received in the login assertion and what role was assigned, so I can debug access issues.  </li> <li>As Carol, I want clear documentation explaining how to configure OIDC, role mapping, and email domain restrictions so I can deploy Mathesar without reverse engineering.  </li> <li>As Carol, I want Mathesar to show users an unauthorized error if they don\u2019t match allowed domains or mappings so that access failures are clear and traceable.  </li> <li>As Carol, I want a fallback login method to remain available so I don\u2019t get locked out if the IdP is misconfigured.</li> </ul> <p>Frank (data entry contractor)</p> <ul> <li>As Frank, I want to sign in using my work email and immediately have access to the parts of the database I need, without having to be invited or manually added.</li> </ul> <p>Grace (customer success team)</p> <ul> <li>As Grace, I want to access live customer data in Mathesar by signing in with my usual company account so that I can self-serve metrics without waiting on the data team.</li> </ul>"},{"location":"product/requirements/2025/sso-oidc/#success-criteria","title":"Success Criteria","text":"<p>How we\u2019ll know we\u2019ve succeeded with our goals for adding SSO:</p> <ul> <li>We transition internal.mathesar.org to use Google Workspace OIDC SSO and not hate it.  </li> <li>We track SSO usage growing in analytics.  </li> <li>We see an uptick in conversion from our website (after we advertise SSO)  </li> <li>We see qualitative positive user feedback on GitHub / Reddit, etc.</li> </ul>"},{"location":"product/requirements/2025/sso-oidc/#requirements","title":"Requirements","text":"<p>These requirements are from the point of view of the user and aim to represent all of the interaction surfaces that they have with this feature in Mathesar. They are not meant to map to implementation details. Some requirements may not need any implementation work done to fulfil them.</p>"},{"location":"product/requirements/2025/sso-oidc/#minimal-scope","title":"Minimal Scope","text":"<p>Setup:</p> <ul> <li>Configure OIDC (Google Workspace / Okta / Auth0, etc) via config file.  </li> <li>Restrict access to a specific email domain in config.  </li> <li>Manually pre-create accounts and link to OIDC identities, at minimum.  </li> <li>Define a default Postgres role for all SSO users in the config file.</li> </ul> <p>Maintenance:</p> <ul> <li>Retain fallback login method in case SSO is misconfigured.  </li> <li>Get clear error messaging for others if login fails.  </li> <li>See clear error if a user is unauthorized based on domain or mapping.</li> </ul> <p>End user experience:</p> <ul> <li>Users see a \u201cSign in with Google\u201d / \u201cSign in with Okta\u201d option on the login page.  </li> <li>Sign in and immediately access the right data without manual setup.  </li> <li>Use their existing work account to access data self-serve.</li> </ul> <p>Documentation:</p> <ul> <li>Access clear documentation for OIDC setup, domain restriction, role mapping, and debugging.</li> </ul> <p>Analytics (for us):</p> <ul> <li>Track SSO setup as an event in analytics.</li> </ul>"},{"location":"product/requirements/2025/sso-oidc/#full-scope","title":"Full Scope","text":"<p>Assuming we can do the full scope without too much additional effort, we should do so, since it will make Mathesar useful for a much wider variety of users.</p> <p>JIT provisioning:</p> <ul> <li>Automatically provision accounts on first login. No manual creation of users needed.  </li> <li>View group claims received from IdP and role assignment in logs, to help debug issues.  </li> <li>Understand why a user failed to authenticate or received incorrect access.</li> </ul> <p>Group-based role mapping:</p> <ul> <li>Map IdP groups to Postgres roles via config.  </li> <li>Automatically assign roles based on IdP group membership.</li> </ul> <p>Merging users automatically:</p> <ul> <li>Signing in with username/password or SSO should be the same account if the email is the same.</li> </ul>"},{"location":"release/","title":"Release process","text":""},{"location":"release/#steps","title":"Steps","text":"<ol> <li>Plan the release \u2014 this is done in Basecamp and GitHub milestones</li> <li>Cut the release</li> <li>QA the release and write the release notes</li> <li>Publish the release</li> <li>Update our servers</li> <li>Announce the release</li> </ol>"},{"location":"release/#prerequisites","title":"Prerequisites","text":"<p>Some of the commands within our release process require you to have the following utilities installed.</p> <ul> <li> <p>buildx</p> <p>Depending on how you installed Docker, you may already have this. Verify with:</p> <pre><code>docker buildx version\n</code></pre> <p>Your version of buildx needs to contain the \u201ccloud driver\u201d. We think buildx <code>0.12.1</code> or newer should suffice. You may need to install Docker 25.0.3 or newer to get this version of buildx.</p> </li> <li> <p>Create a local instance of our cloud driver:</p> <pre><code>docker buildx create --driver cloud mathesar/release-builder\n</code></pre> <p>This will create a Docker container on your system. You\u2019ll need to do this step again if you delete that container at some point. If you see a <code>failed to find driver \"cloud\"</code> error you likely need to download a supported binary from this repository: buildx-desktop. Go to the \u201cReleases\u201d page and find the correct artifact to download for your operating system. </p> </li> <li> <p>gh (aka the GitHub CLI)</p> <p>Verify with:</p> <pre><code>gh --version\n</code></pre> </li> </ul>"},{"location":"release/cutting/","title":"Cutting a release","text":"<p>When we \u201ccut\u201d a release, we begin the process of making a release. (This is not to be confused with publishing a release, which is the last step.) After a release is cut, we can perform manual QA testing and polish any remaining small changes.</p> <ol> <li> <p>Set a VERSION variable in your shell</p> <p>Run this command to set a local variable within your shell to the version number of the release you\u2019re making.</p> <pre><code>VERSION=1.2.3 # \u26a0\ufe0f CUSTOMIZE THIS\n</code></pre> <p>Note</p> <p>Do not prefix the version with <code>v</code>.</p> </li> <li> <p>Cut the release branch</p> <p>Run these commands from within the repo, locally.</p> <pre><code>git checkout develop\ngit pull origin develop\ngit checkout -b release-$VERSION\n</code></pre> </li> <li> <p>Notify team that release branch is cut</p> <p>This is important because engineers will need to know to target the release branch with any subsequent PRs intended for the release.</p> </li> <li> <p>Update version numbers</p> <pre><code>sed -i \"s/^__version__ =.*\\$/__version__ = \\\"$VERSION\\\"/\" mathesar/__init__.py\nsed -i \"s/^  mathesar_version:.*\\$/  mathesar_version: $VERSION/\" docs/mkdocs.yml\ngit commit -a -m \"Update version numbers to $VERSION\"\n</code></pre> </li> <li> <p>Create the release PR</p> <pre><code>git push -u origin release-$VERSION\ngh pr create -d -B master -m \"v$VERSION\" -t \"Release $VERSION\" -b \"\"\n</code></pre> </li> <li> <p>Publish Docker images for QA</p> <ol> <li> <p>Log in to DockerHub</p> <pre><code>docker login\n</code></pre> <p>(Use your personal Docker credentials. Your personal Docker account will need to be a member of our mathesar Docker org.)</p> </li> <li> <p>Locally clone the repo into a clean directory and go there.</p> <pre><code>REPO_DIR=$(pwd)\nCLEAN_REPO_DIR=$(mktemp -d)\ncd $CLEAN_REPO_DIR\ngit clone -b release-$VERSION --single-branch --no-tags \"$REPO_DIR\" .\n</code></pre> <p>(This ensures that files which are ignored by git don\u2019t end up in the Docker image.)</p> </li> <li> <p>Build and push images to DockerHub</p> <pre><code>docker buildx build \\\n  -t mathesar/mathesar-caddy:$VERSION \\\n  --builder=cloud-mathesar-release-builder \\\n  --platform=linux/amd64,linux/arm64 \\\n  --push \\\n  -f Dockerfile.caddy .\n\ndocker buildx build \\\n  -t mathesar/mathesar:$VERSION \\\n  --builder=cloud-mathesar-release-builder \\\n  --platform=linux/amd64,linux/arm64 \\\n  --push .\n</code></pre> <p>(These images are intentionally not tagged as latest \u2014 that will happen during publication.)</p> <p>If you have trouble running these commands, make sure you\u2019ve run the prerequisite setup steps.</p> </li> <li> <p>Clean up</p> <pre><code>cd \"$REPO_DIR\"\nrm -rf $CLEAN_REPO_DIR\ndocker logout\n</code></pre> </li> </ol> </li> <li> <p>Create a pre-release for QA</p> <ol> <li> <p>Create and push a tag on GitHub with the release version.</p> <pre><code>git checkout \"release-$VERSION\"\ngit pull\ngit tag \"$VERSION\"\ngit push origin \"$VERSION\"\n</code></pre> </li> <li> <p>GH will automatically create a draft release containing the installation assets for this tag. This will take a few minutes.</p> </li> <li> <p>Update the release name &amp; description to make it clear that it\u2019s a testing release.</p> </li> <li> <p>Publish this draft release as a <code>Pre-release</code> via the GitHub UI.</p> <p>Do not set the release as <code>latest</code></p> <ul> <li>Ensure that the checkbox mentioning <code>latest</code> is not checked.</li> <li>Only set the release as a <code>Pre-release</code>.</li> <li>Double check this before publishing.</li> </ul> </li> </ol> </li> </ol>"},{"location":"release/notes/","title":"Writing release notes","text":""},{"location":"release/notes/#workflow","title":"Workflow","text":"<p>You can begin this process before the release is cut.</p> <ol> <li> <p>Generate a release notes document. Follow steps here.</p> </li> <li> <p>Create a PR for the release notes.</p> </li> <li> <p>Push a commit to the PR adding the PR itself within the release notes (under \u201cDocumentation\u201d).</p> </li> <li> <p>As the release nears, keep the PR up-to-date periodically by re-running the release notes helper script.</p> </li> <li> <p>Have other team members review the release notes as necessary.</p> </li> </ol> <p>The release notes PR will be merged at the start of the publication process.</p>"},{"location":"release/notes/#guidelines","title":"Guidelines","text":"<p>See the release notes template for additional information.</p> <ul> <li> <p>Write for an audience of Mathesar users and administrators. Keep in mind that these readers may not be technical and almost certainly won\u2019t understand acronyms internal to our team (e.g. RSQLA1) that occasionally appear in PR titles.</p> </li> <li> <p>Within each section, order the items with the most compelling ones first. Begin with the things that you think readers are most likely to care about.</p> </li> <li> <p>For each item within the \u201cImprovements\u201d section:</p> <ul> <li>In addition to the title, write a short blurb to describe the improvement.</li> <li>Add a screenshot if possible.</li> </ul> <p>(See 0.1.4 as an example of these \u201cimprovements\u201d guidelines in practice.)</p> </li> <li> <p>PRs which fix mid-cycle regressions should be lumped into their originating items. For example, if we implement a feature that in turn breaks some functionality elsewhere, that\u2019s a regression. If the regression never gets released, then from the user\u2019s perspective it\u2019s not actually a bug. Rather, the regression is just part of our internal process of building the feature.</p> </li> <li> <p>Keep it concise.</p> </li> </ul>"},{"location":"release/publication/","title":"Publishing a release","text":"<p>Warning</p> <p>These steps are currently structured in a manner that is convenient for Mathesar developer but leaves a window open during which the documentation will be out of sync with other assets required for installation and upgrades.</p> <p>For example: the docs get published as soon as the release PR is merged into master. At that point the tag won\u2019t yet exist in GitHub (meaning readers won\u2019t be able to download the referenced docker-compose file) and the image won\u2019t yet exist on DockerHub.</p> <p>We would like to improve this process. But in the mean time, be sure to follow these steps quickly so as to reduce the duration of this \u201cout of sync\u201d window.</p> <p>Before publishing the releases</p> <p>Ensure that tags and releases created for the QA process are cleaned up.</p> <ol> <li> <p>Set a VERSION variable in your shell</p> <p>Run this command to set a local variable within your shell to the version number of the release you\u2019re making.</p> <pre><code>VERSION=1.2.3 # \u26a0\ufe0f CUSTOMIZE THIS\n</code></pre> <p>Note</p> <p>Do not prefix the version with <code>v</code>.</p> </li> <li> <p>Merge the release notes PR (if not yet done)</p> <p>This should merge the release notes file into the release branch.</p> </li> <li> <p>Merge the release PR</p> <p>This should merge the release branch into <code>master</code>.</p> <p>Before moving on, ensure the release branch is deleted within GitHub after merge. This should happen automatically after merging. The PR should show an entry in the activity timeline like:</p> <p>seancolsen deleted the <code>0.1.5</code> branch 1 minute ago</p> </li> <li> <p>Create the tag</p> <p>Locally tag the commit you\u2019ve just merged with the version number of the release. Then push to GitHub.</p> <pre><code>git checkout master\ngit pull\ngit branch -d release-$VERSION\ngit tag $VERSION\ngit push origin $VERSION\n</code></pre> <p>A draft release will be automatically created on GH once this tag is pushed.</p> </li> <li> <p>Publish Docker images</p> <ol> <li> <p>Log in to DockerHub</p> <pre><code>docker login\n</code></pre> <p>(Use your personal Docker credentials. Your personal Docker account will need to be a member of our mathesar Docker org.)</p> </li> <li> <p>Locally clone the repo into a clean directory and go there.</p> <pre><code>REPO_DIR=$(pwd)\nCLEAN_REPO_DIR=$(mktemp -d)\ncd $CLEAN_REPO_DIR\ngit clone -b master --single-branch --no-tags \"$REPO_DIR\" .\n</code></pre> <p>(This ensures that files which are ignored by git don\u2019t end up in the Docker image.)</p> </li> <li> <p>Run the following commands:</p> <pre><code>docker buildx build \\\n  -t mathesar/mathesar-caddy:$VERSION \\\n  -t mathesar/mathesar-caddy:latest \\\n  --builder=cloud-mathesar-release-builder \\\n  --platform=linux/amd64,linux/arm64 \\\n  --push \\\n  -f Dockerfile.caddy .\n\ndocker buildx build \\\n  -t mathesar/mathesar:$VERSION \\\n  -t mathesar/mathesar:latest \\\n  --builder=cloud-mathesar-release-builder \\\n  --platform=linux/amd64,linux/arm64 \\\n  --push .\n</code></pre> <p>These commands build, push, and tag the images as <code>latest</code>.</p> <p>If you have trouble running these commands, make sure you\u2019ve run the prerequisite setup steps.</p> </li> <li> <p>Clean up</p> <pre><code>cd \"$REPO_DIR\"\nrm -rf $CLEAN_REPO_DIR\ndocker logout\n</code></pre> </li> </ol> </li> <li> <p>Publish docs</p> <p>To publish the release notes, you\u2019ll need to manually publish a version (or possibly update an existing version) of our docs.</p> </li> <li> <p>Update the draft GitHub release and publish it</p> <pre><code>gh release edit \\\n  --latest \\\n  --title \"Version $VERSION (alpha release)\" \\\n  --notes \"__[Release notes](https://docs.mathesar.org/releases/$VERSION/)__\" \\\n  --draft=false \\\n  $VERSION\n</code></pre> </li> <li> <p>Merge master into develop</p> <p>GitHub will automatically create a PR for this. Find it and merge it.</p> </li> <li> <p>Deploy to our internal instance</p> </li> </ol> <p>Immediately following the release, update our internal Mathesar instance to use the latest version. The steps here are fairly simple:</p> <ol> <li><code>ssh &lt;server-external-IP&gt;</code> or via the GCP web terminal</li> <li>sudo <code>docker compose -f /etc/mathesar/docker-compose.yml up --pull always -d</code></li> <li>Log into the internal instance and verify the correct version is now shown.</li> </ol>"},{"location":"release/qa/","title":"Release QA testing","text":"<p>This page describes manual QA testing routines that we perform before a release.</p>"},{"location":"release/qa/#admin","title":"Administrator-facing QA","text":""},{"location":"release/qa/#pre-requisites-for-testing-installation-upgrades","title":"Pre-requisites for testing Installation &amp; Upgrades","text":""},{"location":"release/qa/#for-direct-install-on-linux-macos-and-wsl","title":"For direct install on Linux, macOS, and WSL","text":"<ul> <li>Ensure that there is a release on GitHub and the release assets can be downloaded via public url.</li> <li>This should have been done when cutting the release branch.</li> </ul> <p>For upgrades:</p> <ul> <li>Run the new install script pointing to the same directory as the previous installation.</li> </ul>"},{"location":"release/qa/#for-docker-related-setups","title":"For docker related setups","text":"<p>For installations:</p> <ul> <li>Clear out remains of any previous installations.</li> </ul> <p>For upgrades:</p> <ul> <li>Clear out remains of any previous installations.</li> <li>Install the current published version of Mathesar.</li> </ul> <p>For both:</p> <ul> <li> <p>Locally download and tag the new version images as <code>latest</code>:</p> <pre><code>docker image pull mathesar/mathesar-caddy:&lt;version_number&gt;\ndocker image tag mathesar/mathesar-caddy:&lt;version_number&gt; mathesar/mathesar-caddy:latest\n\ndocker image pull mathesar/mathesar:&lt;version_number&gt;\ndocker image tag mathesar/mathesar:&lt;version_number&gt; mathesar/mathesar:latest\n</code></pre> </li> </ul>"},{"location":"release/qa/#understanding-database-connections","title":"Understanding Database connections","text":""},{"location":"release/qa/#database-types","title":"Database types","text":"<ul> <li>Mathesar Database - The Django database used by Mathesar</li> <li>Data database - The user database(s) being explored in Mathesar\u2019s UI</li> </ul>"},{"location":"release/qa/#connection-types","title":"Connection types","text":"<ul> <li>Local - On the host machine</li> <li>External - Outside of the host machine</li> <li>Integrated - Inside of Mathesar\u2019s docker image</li> <li>Docker Postgres service - Postgres service running in a docker compose network</li> </ul>"},{"location":"release/qa/#tasks","title":"Tasks","text":"<ul> <li> Test direct install on Linux and macOS by following our documentation</li> <li> Test all different installation methods<ul> <li> Docker compose<ul> <li> Local using all default settings</li> <li> Exposed on domain with different database configurations:</li> <li> Docker Postgres service Mathesar, Docker Postgres service Data</li> <li> Docker Postgres service Mathesar, External Data</li> <li> External Mathesar, External Data</li> </ul> </li> <li> Docker \u201cTry Mathesar\u201d command with different database configurations:<ul> <li> Integrated Mathesar, Integrated Data</li> <li> Integrated Mathesar, External Data</li> </ul> </li> <li> Direct install on Linux<ul> <li> Exposed on domain, DB preexisting for all data</li> <li> Local using all default settings</li> <li> Exposed on domain with Local Mathesar, Local Data</li> </ul> </li> </ul> </li> <li> Test that previously installed versions of Mathesar can be upgraded to this release.<ul> <li> Docker compose \u2013 All above variants for docker compose<ul> <li> Same docker compose file, same <code>.env</code></li> <li> New docker compose file, same <code>.env</code></li> <li> New docker compose file, bring <code>.env</code> into the new file</li> </ul> </li> <li> Direct install on linux (Previously known as Install from scratch) \u2013 All above variants</li> </ul> </li> </ul>"},{"location":"release/qa/#users","title":"User-facing QA","text":"<p>Tips:</p> <ul> <li>Don\u2019t just aim to complete the tests with the minimum possible steps \u2014 try to test the edges around each of the features, seeing if you can hammer at Mathesar to break something or uncover bugs.</li> <li>If you find a bug, try to reproduce it against the latest release (e.g. on the demo site). If you can reproduce it on the latest release, then it\u2019s not a regression. It\u2019s still worth reporting, but it won\u2019t be as high of a priority. If you can\u2019t reproduce it on the latest release, then it is a regression. It\u2019s important to specify this.</li> <li>The PRs for issues should be based off of the release branch, and merged into the release branch.</li> </ul> <p>Tasks:</p> <ul> <li>Test create/update/delete for:<ul> <li> Mathesar users</li> <li> Connection</li> <li> Schema</li> <li> Table</li> <li> Column</li> <li> Constraint</li> </ul> </li> <li>Import<ul> <li> Test basic import.</li> <li> Try different options for \u201cData Source\u201d</li> <li> Try different options for \u201cColumn Data Types\u201d</li> </ul> </li> <li>Table Page<ul> <li> Test filtering, sorting, grouping</li> <li> Test pagination</li> <li> Test updating cell values for all data types</li> <li> Test showing/hiding/resizing table inspector and collapsing/expanding sections</li> <li> Test keyboard shortcuts to move active cell, enter edit mode, save value</li> <li> Ensure the context menu looks correct for data cells, column header cells, and row header cells</li> <li> Test table sharing</li> <li> Test cell selection via: dragging from data cell to data cell, dragging from column header cell to column header cell, dragging from row header cell to row header cell</li> <li> Test custom record summary template</li> <li> Test updating column data type</li> <li> Test updating column display settings</li> <li> Test setting column default value</li> <li> Test column re-ordering via drag &amp; drop</li> <li> Test \u201cCreate Link\u201d dialog</li> <li> Test \u201cExtract Column Into a New Table\u201d</li> <li> Test \u201cMove Column To Linked Table\u201d</li> <li> Test \u201cShare\u201d functionality \u2014 and test that the share page works</li> </ul> </li> <li>Record Selector<ul> <li> Test filtering on multiple columns</li> <li> Test picking an existing record</li> <li> Test creating a new record from within the record selector</li> <li> Test selecting a record from within a nested record selector</li> <li> Test horizontal and vertical scrolling for narrow and short viewports</li> </ul> </li> <li>Record Page<ul> <li> Test updating direct fields</li> <li> Test setting field values to null</li> <li> Test navigating to linked records through linked record input</li> <li> Test loading a record page with linked records</li> </ul> </li> <li>Data Explorer<ul> <li> Test creating and saving an exploration from Data Explorer view</li> <li> Try joining columns from multiple tables without summarization</li> <li> Try joining columns from multiple tables with summarization</li> <li> Try renaming column in column properties</li> <li> Test pagination</li> <li> Test \u2018Filter\u2019 transformation</li> <li> Test \u2018Sort\u2019 transformation</li> <li> Test \u2018Hide Columns\u2019 transformation</li> <li> Test \u2018Summarization\u2019 transformation</li> <li> Try summarizing with different aggregations</li> <li> Test opening an existing exploration</li> <li> Test editing and saving an existing exploration</li> <li> Create an exploration from Table page -&gt; Inspector -&gt; Actions -&gt; Explore Data</li> <li> Test \u201cShare\u201d functionality \u2014 and test that the share page works</li> </ul> </li> </ul>"},{"location":"release/qa/#cleanup","title":"Cleanup","text":"<p>After QA</p> <p>Cleanup before another round of QA and before publishing the release</p> <ul> <li>Destroy any infra setup on GCP that was created for QA purposes.</li> <li>Delete the pre-release and tag that were created when testing \u201cDirect installation on Linux, macOS, and WSL\u201d.<ul> <li>Recommended: Do this via the GitHub UI to avoid any potential mistakes.</li> <li>Delete the pre-release.</li> <li>Delete the tag associated with it.</li> <li>Commands, if you\u2019re confident:     <pre><code>VERSION=1.2.3 # \u26a0\ufe0f CUSTOMIZE THIS\n\ngh release delete \"$VERSION\" -y\ngit tag -d \"$VERSION\"\ngit push -d origin \"$VERSION\"\n</code></pre></li> </ul> </li> </ul>"},{"location":"release/template/","title":"Template","text":"<p>This is our release notes template. The template part follows the horizontal rule.</p>"},{"location":"release/template/#mathesar-version","title":"Mathesar [VERSION]","text":"Optional CTA for user research, sponsorship, etc. <p>Make the CTA specific, it\u2019s often better to aim for a smaller niche than go too general. For instance, we might mention wanting to talk to users who would like a specific feature.</p>"},{"location":"release/template/#summary","title":"Summary","text":"<p>The summary should be 2-4 sentences.</p> <p>First sentence: Summarize the type of release this is / what the release focuses on.</p> <p>Examples:</p> <ul> <li>Mathesar 0.3.0 focuses on improvements to Mathesar\u2019s installation experience, look-and-feel, usability, and stability. </li> <li>This release contains targeted fixes for bugs within Mathesar\u2019s new UNIX socket connection feature, as released in version 0.2.3.</li> <li>Mathesar 0.2.1 addresses a number of bug fixes identified by members of our community during our beta release. </li> </ul> <p>Second and third sentence: Mention highlights of the release from the point of view of what\u2019s changed for the user (which may not always be how we think about things internally e.g. \u2018record selector improvements\u2019 gets translated to \u2018improvements in locating records\u2019).</p> <p>Examples:</p> <ul> <li>Highlights include a new dark mode theme, a UI refresh in light mode and a new install method using a one-line script. We\u2019ve also improved usability of the Data Explorer, finding table records, and creating records. </li> <li>This release includes some quality-of-life improvements to Mathesar like nicknames for databases, persisted column widths, and the ability to connect databases without a password.</li> <li>This release introduces a UUID data type, enhanced primary key handling including support for UUIDs as primary keys, more flexible primary key handlind during data import, and more.</li> </ul> <p>Last sentence: Just an indicator that there\u2019s more in the release, not just the mentioned highlights. Only include if applicable.</p> <p>Example:</p> <p>The release includes several other smaller fixes and improvements.</p> <p>We include this info box to flag that this is the canonical / comprehensive list of all changes to the release.</p> <p>This page provides a comprehensive list of all changes in the release.</p>"},{"location":"release/template/#improvements","title":"Improvements","text":"<p>The improvements section can be skipped if there are none. Improvements are basically user-facing or admin-facing features or enhancements.</p>"},{"location":"release/template/#a-specific-improvement","title":"A specific improvement","text":"<p>The improvement title should be a brief description of the improvement that focuses on what changed, from the user PoV. Examples:</p> <ul> <li>A new look for Mathesar</li> <li>Updated \u201cfrom scratch\u201d installation workflow</li> <li>New access control system based on PostgreSQL roles and privileges</li> </ul> <p>The text should describe:</p> <ul> <li>What we did in terms of changes e.g. \u201cwe streamlined Mathesar\u2019s from scratch install workflow\u201d, \u201cwe completely redesigned Mathesar\u2019s access control system\u201d etc.</li> <li>What that does, in neutral, externally observable terms e.g. </li> <li>\u201celiminates several steps from the process\u201d</li> <li>\u201callows users to use UNIX sockets to connect their Postgres instance to Mathesar\u201d</li> <li>\u201cYou can now use Mathesar to configure roles and privileges in PostgreSQL and to set granular access control at the individual schema and table level.\u201d</li> <li>Links to any relevant documentation that\u2019s new.</li> </ul> <p>If this improvement involves a UI change, or there is some other visual representation possible (docs screenshot, SQL command, etc.), please include one.</p> <p>Other notes:</p> <ul> <li>Describe everything from the external change point of view, from the user\u2019s perspective. For example, when we set up <code>uv</code> as an installation method, we described as the \u201cfrom scratch\u201d installation method changing because from the user\u2019s PoV, the docs page with that heading now has new instructions. Even though behind-the-scenes it was a whole new technology.</li> <li>Anything user or adminstrator facing counts as an improvement - new security policy for the project, minor usability changes, etc.</li> <li>Each change should get its own section. Do not combine multiple changes into a single section. It\u2019s fine for the description to only involve one sentence.</li> <li>Generally make sure each sentence has a purpose. It\u2019s better to say less than more.</li> <li>Avoid \u201cselling\u201d the feature i.e. don\u2019t describe how it will benefit the user or use notably positive or emotionally loaded terms. Aim for accurate but neutral-ish language.</li> <li>\u201cSimplifies\u201d is fine if there are fewer steps in something.</li> <li>\u201cImproves\u201d is fine if there\u2019s a visible change in affordances.</li> <li>Avoid explaining to the user why the feature is useful. For example, if we introduce public forms, avoid saying things like \u201cforms can be used for surveys, etc.\u201d</li> </ul> <p>Related work:</p> <p>List of PRs, only with numbers.</p>"},{"location":"release/template/#bug-fixes","title":"Bug Fixes","text":"<p>The bug fixes section can be skipped if there are none. </p> <p>This is just a list of bug fixes that link to the relevant PR. No need for subsections.</p> <p>Notes:</p> <ul> <li>Always describe the bug fix from the user PoV of what changed.</li> <li>e.g. a PR titled \u201cFix not null SQL\u201d becomes \u201cFix issue where <code>NOT NULL</code> constraints could only be set in the <code>public</code> schema\u201d in this section.</li> <li>Always look at the base issue, not just the PR title. Sometimes PR titles are very different from the issue being fixed.</li> <li>e.g. a PR titled \u201cAlways display external links icon in the DocsLink component\u201d becomes \u201cFix issue with some external links not showing the external link icon\u201d</li> <li>Some items may not be framed as bugs in GitHub, but count as bugs.</li> <li>e.g. \u201cAdd language selector to complete installation template\u201d seems like a feature, but it\u2019s actually fixing an issue where localization wasn\u2019t available during installation.</li> </ul>"},{"location":"release/template/#documentation","title":"Documentation","text":"<p>The documentation section can be skipped if there are no user-facing or admin-facing docs changes.</p> <p>Documentation changes should be represented similarly to Improvements \u2013 subsection for each change, screenshots, etc.</p>"},{"location":"release/template/#maintenance","title":"Maintenance","text":"<p>The maintenance section can be skipped if there are none. Maintenance should only be for things that truly do not result in user-facing or admin-facing changes e.g. refactors, housekeeping.</p> <p>This is just a list of changes that link to the relevant PR. No need for subsections.</p> <p>The last item on the list can be \u201cWork related to our internal workflows\u201d and just link to a list of PRs (this is reserved for housekeeping / repo maintenance tasks that are not product changes, e.g. tests, GitHub workflows, etc.)</p>"},{"location":"release/template/#features-removed","title":"Features removed","text":"<p>The features removed section can be skipped if there are no features removed.</p> <p>There should be one subsection per feature removed. Screenshots are not needed.</p>"},{"location":"release/template/#upgrading","title":"Upgrading to [VERSION]","text":"<p>Include a subsection for each installation type.</p>"},{"location":"team/","title":"Team","text":""},{"location":"team/#maintainers","title":"Maintainers","text":"<p>The maintainers maintain the project on a day-to-day basis. We previously called this group the \u201ccore team\u201d.</p> Name Matrix GitHub Roles Anish Umale <code>@anish:matrix.mathesar.org</code> <code>@Anish9901</code> Engineering Brent Moran <code>@brent:matrix.mathesar.org</code> <code>@mathemancer</code> Engineering Ghislaine Guerin <code>@ghislaine:matrix.mathesar.org</code> <code>@ghislaineguerin</code> Product, Design Kriti Godey <code>@kgodey:matrix.mathesar.org</code> <code>@kgodey</code> Project Lead, Product, Engineering Pavish Kumar Ramani Gopal <code>@pavish:matrix.mathesar.org</code> <code>@pavish</code> Engineering Sean Colsen <code>@seancolsen:matrix.mathesar.org</code> <code>@seancolsen</code> Engineering Zack Krida <code>@zack:matrix.mathesar.org</code> <code>@zackkrida</code> Technical Community Advocate"},{"location":"team/#staff-members","title":"Staff members","text":"<p>These team members also work on Mathesar, but do not maintain the open source project.</p> Name Matrix GitHub Roles Adam Mullinax <code>@adam:matrix.mathesar.org</code> <code>N/A</code> Growth, Finance, Strategy Amanda Jayawardene <code>@amanda:matrix.mathesar.org</code> <code>@amanda-jayawardene</code> Operations Tanya Nguyen <code>@tanya:matrix.mathesar.org</code> <code>@howdytanya</code> Operations, Strategy"},{"location":"team/#community-team","title":"Community Team","text":"<p>The community team contributes to Mathesar\u2019s design and development fairly regularly and has write access to the <code>mathesar</code> repository and wiki. For now, joining the community team is invite-only.</p> Name Matrix GitHub Roles Dhruv Bhanushali <code>@dhruvkb:matrix.org</code> <code>@dhruvkb</code> Engineering (backend, frontend) Dhruvi Butti <code>@dhruvi16:matrix.org</code> <code>@Dhruvi16</code> Design Eamon Ito-Fisher <code>@eito-fis:matrix.org</code> <code>@eito-fis</code> Engineering (backend) Mar\u00eda Guaranda <code>@belengc:matrix.org</code> <code>@soccerdroid</code> Intern (summer 2022 &amp; 2023), Engineering (backend) Jinxiao Li <code>@jinxiaol:matrix.org</code> <code>@Jinxiao0302</code> GSoC \u201822 contributor Yurii Palaida <code>@jyuart:matrix.org</code> <code>@Jyuart</code> GSoC \u201822 contributor Gabriel Sotomayor <code>@mr.gabe49:matrix.org</code> <code>@mr-gabe49</code> Engineering (frontend) Han Yang <code>@ppii_775:matrix.org</code> <code>@ppii775</code> Design Anshuman Maurya <code>@iamezio:matrix.org</code> <code>@IamEzio</code> GSoC \u201823 contributor Aritra Majumder <code>@arima_kun:matrix.org</code> <code>@@Aritra8438</code> GSoC \u201823 contributor Varsha D R <code>@varshadr1234:matrix.org</code> <code>@varshadr</code> Summer \u201823 volunteer Shrey Tripathi <code>@shrey_tripathi:matrix.org</code> <code>@shrey27tri01</code> Summer \u201823 volunteer Mukesh Murali <code>@silentninja:matrix.org</code> <code>@silentninja</code> Engineering (backend), core team emeritus Dominykas Mostauskis <code>@dmos:matrix.org</code> <code>@dmos62</code> Engineering (backend), core team emeritus Rajat Vijay TBD <code>@rajatvijay</code> Engineering (frontend), core team emeritus"},{"location":"team/guide/","title":"Mathesar Team Guide","text":"<p>A guide for Mathesar core and community team members.</p>"},{"location":"team/guide/#product-development","title":"Product Development","text":"<p>These pages relate to Mathesar\u2019s development.</p> <ul> <li>Workflow - How the workflow of the team is organized</li> <li>Meetings - How we should approach meetings</li> <li>Design Review - Guidelines for reviewing new designs</li> <li>Code Review - Guidelines for reviewing new code</li> <li>Security Assessment - How to assess security vulnerabilities</li> </ul>"},{"location":"team/guide/#community-management","title":"Community Management","text":"<p>These pages relate to managing the community of contributors around the project, but are also applicable to the product development workflow.</p> <ul> <li>Issue Triage and Assignment - How to triage incoming issues, including ones you make yourself</li> <li>Syften Keyword Alerts Guide</li> </ul>"},{"location":"team/guide/#other","title":"Other","text":"<p>Other pages that don\u2019t fit into the above two categories.</p> <ul> <li>Tools - Collaboration tools used by the Mathesar team</li> <li>Team Events - About Mathesar core team events</li> <li>Communication Tips - Communication tips for Mathesar team members</li> </ul>"},{"location":"team/guide/comm-tips/","title":"Communication Tips","text":"<p>The Mathesar team works remotely and asynchronously across many different timezones. Here are some things that we\u2019ve discovered for communicating well in this environment, in no particular order:</p> <ul> <li>Be as thorough as you can while writing messages. You may not be available to answer follow up questions when the person you\u2019re talking to is next around.</li> <li>Use GitHub Discussions for any messages that require some thought. Chat incentivizes quick responses.</li> <li>Be proactive about seeking feedback about your ideas.</li> <li>Be proactive about asking for quick 1:1 or small group calls to work through complex ideas. </li> <li>Summarize conclusions and rationale from any discussions you have on a call in the relevant discussion or issue.</li> <li>Emojis responses are fine but also respond using words to messages. Emojis don\u2019t generate notifications on Matrix or GitHub, so people may not see your acknowledgement of messages.</li> </ul>"},{"location":"team/guide/events/","title":"Team Events","text":"<p>The Mathesar maintainer team has a virtual team event around every two weeks to have some fun and get to know each other better. Alternate events are open to the community. Team members take turns organizing events on a volunteer basis.</p> <p>Previous events have included:</p> <ul> <li>Watching a movie together using Syncplay. </li> <li>Playing GeoGuessr both collaboratively and competitively.</li> <li>Playing trivia competitively (in teams) on Sporcle.</li> <li>Playing an online escape room together.</li> <li>Playing an online drawing/guessing game on skribbl.</li> <li>A murder mystery roleplay event.</li> <li>Lightning Talks</li> <li>Playing CodeNames</li> <li>Playing charades (with a movie theme)</li> <li>Playing an online version of Fishbowl, a guessing game.</li> <li>Playing just one!</li> <li>Playing https://really.boring.website</li> <li>Playing Quack Stanley</li> </ul> <p>We\u2019re particularly interested in events that help us get to know each other better. Also, we\u2019re always open to doing activities we\u2019ve done before.</p> <p>Online games to consider for future events</p> <ul> <li>https://github.com/flamableconcrete/awesome-online-board-games</li> <li>https://rocketcrab.com/library</li> </ul>"},{"location":"team/guide/issues/","title":"Managing GitHub Issues","text":""},{"location":"team/guide/issues/#assigning-issues","title":"Assigning issues","text":"<p>Issues should only be assigned to core and community team members who have committed to completing the issue.</p> <p>If an outside contributor wants to work on the issue, they should still comment on it to indicate interest, but there\u2019s no need to assign it to them.</p> <p>If you are assigning an issue:</p> <ol> <li>Ensure that the issue has sufficient detail and can be worked on. If not, update the issue so that it does.</li> <li>Assign the issue to the desired person.</li> <li>Remove the existing <code>status: ready</code> label and change the label to <code>status: started</code>. This will automatically update the \u201cStatus\u201d in the project as well, you do not need to do this manually.</li> </ol>"},{"location":"team/guide/issues/#issue-triage","title":"Issue Triage","text":"<p>Triaging an issue means setting all the appropriate fields on it.</p>"},{"location":"team/guide/issues/#responsibility","title":"Responsibility","text":"<ul> <li>Everyone creating issues should do their best to triage them at creation time.</li> <li>Team members who work on the repo admin responsibility should catch issues opened by non-team members or were not properly triaged during creation.</li> </ul>"},{"location":"team/guide/issues/#how-to-triage-one-issue","title":"How to triage one issue","text":"<ol> <li> <p>Set required labels</p> Prefix Required count Notes <code>work:</code> 1+ All <code>work: design</code> issues should also be marked <code>restricted: design team</code> because only the design team can currently work on those. <code>type:</code> 1 <code>status:</code> 1 Should not be <code>status: triage</code> </li> <li> <p>Set optional labels</p> <p>Scan through the full labels list and apply other labels as necessary. Learn more about the meaning of all our labels.</p> </li> <li> <p>Verify Project and fields</p> <p>Set the Project to \u201cMathesar\u201d.</p> <p>Within the project, ensure that the <code>status</code>, <code>priority</code>, and <code>work</code> fields are set. Set the <code>feature</code> field to the appropriate feature.</p> <p>If you don\u2019t know what feature to put something in, talk to Kriti.</p> </li> <li> <p>Set milestone</p> <p>If an issue is directly associated with a milestone, put it in the milestone. Otherwise, put it in the \u201cBacklog\u201d milestone.</p> <p>If you don\u2019t know what milestone to put something in, talk to Kriti.</p> <p>Do not create any new milestones.  </p> </li> </ol>"},{"location":"team/guide/issues/#notes-on-labels-and-milestones","title":"Notes on Labels and Milestones","text":"<p>The list of available labels and milestones should only be changed in the <code>mathesar</code> repo. They are synced every day to the other repos related to the project using this GitHub action.</p>"},{"location":"team/guide/meetings/","title":"Running Effective Team Meetings","text":"<p>By default, we are an asynchronous team and communicate via our mailing lists or GitHub issues for anything that involves discussion. We also do ephemeral communication on Matrix.</p> <p>But sometimes, meeting synchronously is the fastest way to get something done. Here\u2019s how you should approach meetings.</p> <p>These steps should definitely be applied to any meeting with more than two people, The general mindset should also be helpful for 1:1 meetings.</p>"},{"location":"team/guide/meetings/#before-scheduling","title":"Before scheduling","text":"<ol> <li> <p>Think about whether you need a meeting. </p> <p>Meetings are costly, e.g. a one hour meeting with five people costs five hours of people\u2019s work + whatever time it takes to context switch before and after.</p> <p>The outcome of the meeting should be worth the time spent. If a one hour meeting with five people saves six hours of back and forth on email, then it is barely worth it (and might not be, with context switching costs taken into account).</p> </li> <li> <p>Determine the desired outcome for the meeting.</p> <p>The purpose of the meeting should be clearly stated and written down.</p> <p>At the end of the meeting, every participant should be able to clearly determine whether the outcome was achieved.</p> </li> <li> <p>Designate a Meeting Owner.</p> <p>The Meeting Owner is responsible for:</p> <ul> <li>Determining who should attend</li> <li>Handling any asynchronous preparation</li> <li>Running the meeting and facilitating discussion</li> <li>Ensuring that the desired outcome is reached within the allotted time</li> <li>Clearly communicating next steps and action items to participants</li> <li>Ensuring that comprehensive notes are taken</li> <li>Publishing the notes on the wiki</li> </ul> <p>If you\u2019re scheduling a meeting, this is you.</p> </li> <li> <p>Determine Attendees.</p> <p>Make sure this list is the minimum set of people that actually need to participate in the discussion. If someone just needs to be informed of the outcome, then the notes should serve that.</p> </li> <li> <p>Handle Asynchronous Preparation.</p> <ul> <li>Meetings should only involve discussion.</li> <li>Determine what resources attendees should read ahead of time and send them an email asking them to.</li> <li>If there are updates or opinions that can be shared ahead of time, please ask attendees to do that.</li> </ul> </li> <li> <p>Create an agenda with time boxes for each topic.</p> <ul> <li>This will help you ensure that the meeting is on track.</li> </ul> </li> </ol>"},{"location":"team/guide/meetings/#scheduling","title":"Scheduling","text":"<p>You can now schedule the meeting. Make sure to send the agenda and asynchronous preparation checklist to all attendees.</p> <p>We have a HackMD template to make this easier, you can use it like so:</p> <p></p> <p></p>"},{"location":"team/guide/meetings/#at-the-meeting","title":"At the meeting","text":"<ul> <li>If the async preparation hasn\u2019t been done by attendees, then reschedule the meeting.</li> <li>Designate a note taker (or two)</li> <li>Keep the conversation focused on the desired outcome.</li> <li>Obey the time limits you\u2019ve set for given agenda items and for the entire meeting.</li> </ul>"},{"location":"team/guide/meetings/#after-the-meeting","title":"After the meeting","text":"<ul> <li>Clean up the notes and publish them on the wiki, see Meeting Notes section.</li> <li>Follow up with participants and other interested parties with decisions and action items.</li> </ul>"},{"location":"team/guide/meetings/#additional-resources","title":"Additional resources","text":"<ul> <li>Matt Mochary\u2019s \u201cMeetings:  How to make them effective and efficient\u201d on Google Docs</li> </ul>"},{"location":"team/guide/run-experiments/","title":"Guidelines for experiments and research","text":"<p>This quick guide outlines best practices for Mathesar staff when conducting \u201cexperimental\u201d work. For example:</p> <ul> <li>Adding a feature to Mathesar without going through the product process.</li> <li>Exploring a previously-unknown community where we may promote Mathesar.</li> <li>Adding an integration with a 3rd-party service to Mathesar or its repo, e.g., a 1-click deploy button.</li> </ul> <p>We encourage experimenting with these sorts of things without the bureaucratic overhead of normal processes, but staff should make sure their experiment satisfies some basic guidelines.</p>"},{"location":"team/guide/run-experiments/#general-concepts-for-experiments-and-research","title":"General concepts for experiments and research","text":"<p>These concepts will be expanded with examples in different contexts below.</p> <ul> <li>Make any changes reversible.</li> <li>Make sure experimental work doesn\u2019t interfere with your normal work.</li> <li>Don\u2019t obligate Mathesar Foundation to anything when experimenting.</li> <li>Timebox your experiment.</li> <li>Have a way to tell whether an experiment was successful.</li> <li>Talk to others on the team if you\u2019re unsure about any of the above.</li> </ul>"},{"location":"team/guide/run-experiments/#experimental-features","title":"Experimental features","text":"<p>This section is concerned with experimental features in Mathesar, i.e., PRs that you want to raise in the repo without going through the normal product process. These guidelines are organized from most to least important.</p>"},{"location":"team/guide/run-experiments/#easily-reversible","title":"Easily reversible","text":"<p>An experiment should be easily reversible on a technical level. This means:</p> <ul> <li>Avoid distributing experimental code changes throughout the entire codebase. Contain them in a dedicated directory if possible.</li> <li>Make it obvious to other developers through comments or other means that they should not depend on the experimental code.</li> <li>Removing any code changes associated with the experiment should be a 5-minute project leading to an easily reviewable PR.</li> <li>Experimental GitHub workflows should be in their own files.</li> </ul> <p>More importantly, an experiment must be reversible w.r.t. our perceived obligations to the public.</p> <ul> <li>It should be obvious to a user that an experimental feature might disappear in the next release.</li> <li>Experimental wrappers or integrations must not set up a long-running dependency. For example, a 1-click deploy button is fine if it doesn\u2019t require any special Docker setup. In that case, a user could continue to upgrade and use Mathesar by following our Docker instructions, even if we stop supporting a given 1-click deployment method.</li> <li>Experimental installation methods should not require changes to the main Mathesar codebase.</li> </ul> <p>Finally, the experiment must be reversible in your mind. It\u2019s crucial to be honest with yourself and ask:</p> <ul> <li>If this doesn\u2019t work, will I let it go without a second thought?</li> <li>Am I going to be willing to admit when it isn\u2019t working?</li> </ul> <p>If the answer to these questions are anything but a resounding \u201cYes and Yes!\u201d, staff are strongly encouraged to follow the standard product process instead of experimenting. This brings us to the next section.</p>"},{"location":"team/guide/run-experiments/#doesnt-break-anything","title":"Doesn\u2019t break anything","text":"<ul> <li>Obviously, added experimental functionality shouldn\u2019t break or obscure current functionality in the product.</li> <li>Changes to support an experimental 1-click deployment can\u2019t break any previous installation methods.</li> </ul>"},{"location":"team/guide/run-experiments/#minimal-time-investment","title":"Minimal time investment","text":"<p>This is obvious, but bears mentioning. Do not spend more than 8 hours working on something experimental without talking to anyone else about it. Even better, talk to someone else after 4 hours of time investment.</p>"},{"location":"team/guide/run-experiments/#clear-success-criteria","title":"Clear success criteria","text":"<p>There should be some way to tell whether the experiment has succeeded or failed. The staff member conducting the experiment should think about any success criteria before proceeding, and (ideally) write them down. These success criteria should ideally involve user goals, or helping a user solve some problem when sensible.</p>"},{"location":"team/guide/run-experiments/#find-an-accountabilibuddy","title":"Find an \u201cAccountabilibuddy\u201d","text":"<p>In the event that the 4 hour mark has been crossed in time investment in an experiment, staff are strongly encouraged to find an accountabilibuddy. If time investment crosses 8 hours, this is required. </p> <ul> <li>Choose any staff member (with sufficient context, and ideally a skeptical attitude) to be your accountabilibuddy for the experiment. </li> <li>Their role is to listen to a short pitch, look at any examples or output of the experiment so far, and assess the experiment according to the guidelines above. </li> <li>If it seems like the experiment is worth continuing, the staff member who originated the experiment and the accountabilibuddy should let the rest of the staff know what they\u2019re doing through typical channels (Matrix, email). </li> <li>They should be prepared to be told to stop what they\u2019re doing, or go through the normal process if appropriate. In some cases, the consensus may be \u201cjust keep going\u201d.</li> </ul>"},{"location":"team/guide/run-experiments/#responsibilities-for-pr-reviewers","title":"Responsibilities for PR reviewers","text":"<p>Pull requests adding functionality that haven\u2019t followed standard procedures, aren\u2019t easily reversible, or lack demonstrations ensuring they don\u2019t break existing functionality should be closed with minimal discussion. Staff are expected to use their judgment in these situations.</p> <ul> <li>A PR closing an issue which has been triaged by someone on the team (who didn\u2019t write it) counts as typical for now, subject to any product process imposed by Zack moving forward.</li> <li>A PR closing an issue written by the PR author with no discussion with anyone else is experimental. So, it must be easily reversible and effort should be spent making sure no current functionality should be broken by the proposed change. If that\u2019s the case, go ahead and merge.</li> </ul> <p>On the other hand, if a PR:</p> <ul> <li>meets the easily-reversible criteria above, and</li> <li>the reviewer is confident that the proposed change won\u2019t break anything, and </li> <li>there\u2019s sufficient time before the next release to make sure the change doesn\u2019t really screw things up, then</li> </ul> <p>it can (and in most cases should) be merged without much discussion about its value. However, it\u2019s crucial to think skeptically about the reversibility w.r.t. our perceived obligations in this analysis.</p> <p>Importantly, we shouldn\u2019t discuss the value of proposed changes in the PR reviews. That\u2019s way too late in the process, and the emotional investment of the PR author is probably too high at that point. Rather, PRs for experimental changes should instead be discussed w.r.t. safety and reversibility. They should be merged, rejected, or sent for a revision round based on those considerations.</p>"},{"location":"team/guide/run-experiments/#what-if-proposed-changes-are-actively-bad","title":"What if proposed changes are actively bad?","text":"<p>There may be extreme exceptions, but I think it\u2019s generally okay to go ahead and merge, as long as current functionality isn\u2019t affected. Again, use your head. With this document, we want to encourage \u201cmoving fast and making mistakes\u201d. The point of harping on the reversibility aspect is that we can just merge it, see what (if any) feedback we get for a release (including from staff who notice the changes and love/hate them), and reverse the changes.</p>"},{"location":"team/guide/run-experiments/#community-research-and-marketing","title":"Community research and marketing","text":"<p>There are some special considerations when doing community research, outreach, or marketing without going through normal channels.</p>"},{"location":"team/guide/run-experiments/#no-obligations","title":"No obligations","text":"<p>Avoid setting up obligations for the Mathesar Foundation.</p> <ul> <li>Do not, for example, set up a Mastodon server on Mathesar\u2019s behalf.</li> <li>Do not tell community members that we\u2019ll definitely implement this or that feature</li> <li>Don\u2019t promote Mathesar at MySQL conferences by saying \u201cwe hope to support that someday\u201d.</li> </ul>"},{"location":"team/guide/run-experiments/#minimal-time-investment_1","title":"Minimal time investment","text":"<p>It\u2019s fine and encouraged to participate in various communities to let people know about Mathesar, but try not to spend too much time on it.</p> <ul> <li>4 hours is reasonable for a quick dive into some community or exploring a marketing opportunity</li> <li>1 hour per week is the max for participating in a community without any process.</li> </ul>"},{"location":"team/guide/run-experiments/#avoid-ad-hoc-marketing-for-mathesar","title":"Avoid ad-hoc marketing for Mathesar","text":"<p>Staff should avoid making representations on behalf of Mathesar without going through any process with Kriti or other team members.</p>"},{"location":"team/guide/run-experiments/#bring-your-research-results-to-the-team","title":"Bring your research results to the team","text":"<p>This concept is similar to the accountabilibuddy section, but the triggers that require staff to loop in other team members are different:</p> <ul> <li>More than 4 hours spent researching a community or other opportunity</li> <li>More than an hour a week spent engaging with some community</li> </ul> <p>If some research or experimental community engagement reaches those metrics, then</p> <ul> <li>Pitch the idea to another staff member, and</li> <li>if they think it\u2019s worth pursuing, then</li> <li>bring the idea to the rest of the team.</li> </ul>"},{"location":"team/guide/security-assessment/","title":"Security Assessment guide","text":"<p>This page serves as a guide for Mathesar team members to use when trying to decide the risk or severity of a (potential) vulnerability.</p>"},{"location":"team/guide/security-assessment/#cvss","title":"CVSS","text":"<p>For now, we\u2019ll use the typical standard CVSS when trying to figure out whether a vulnerability is a big problem. For convenience, here\u2019s a calculator with nice tooltips to explain how to fill it out:</p> <p>https://nvd.nist.gov/vuln-metrics/cvss/v4-calculator</p>"},{"location":"team/guide/security-assessment/#assessment-of-issues-and-proposed-features","title":"Assessment of issues and proposed features","text":"<p>If a team member notices a proposed feature or issue that we plan to implement, and that feature has some perceived security risk, that team member should do an assessment based on their understanding of the proposed feature using the calculator above. Only fill out the \u201cBase Metrics\u201d section.</p>"},{"location":"team/guide/security-assessment/#when-should-i-assess-a-feature-or-issue","title":"When should I assess a feature or issue?","text":"<p>The goal should be to assess the feature after it\u2019s actually specced out somewhat, but before it\u2019s merged. If the issue is not yet fully specced out, the assessment may be a waste of time, e.g., if the person designing the feature has already though through mitigation options for any issues noticed. Subject to that constraint, however, earlier in the process is better.</p> <p>Eventually, it\u2019s likely that a quick assessment will be part of pulling any issue or proposed feature into a release cycle.</p>"},{"location":"team/guide/security-assessment/#example-assessment-before-mitigation","title":"Example Assessment before mitigation","text":"<p>For example, consider File Upload support in forms. Here\u2019s my attempt at an assessment:</p> <p></p> <p>This assessment is based only on the issue description. If the score is \u201cMedium\u201d or \u201cHigh\u201d, or if the team is otherwise uncomfortable with the security implications, we then discuss mitigation options, and then reassess.</p>"},{"location":"team/guide/security-assessment/#review-of-pr-related-to-or-fixing-issue-with-security-implications","title":"Review of PR related to or fixing issue with security implications","text":"<p>This is basically the same, except that if we can\u2019t convince ourselves that the score for the CVSS system (Base Metrics only) is \u201cLow\u201d or \u201cNone\u201d, we should not merge.</p> <p>In general, any mitigation documentation or work should be included in the PR. It\u2019s too easy to skip the follow-up PR and leave the vulnerability in.</p>"},{"location":"team/guide/syften-keyword-alerts/","title":"Syften Keyword Alerts","text":"<p>Tip</p> <p>Have you been assigned a keyword alert task and are looking for what to do? See the replying to users or documenting keyword alerts sections for next steps.</p> <p>Current Keyword Lead: Zack</p> <p>Keyword alerts refer to Mathesar-related keywords tracked across the web. We use a tool called Syften to monitor these keyword alerts, similar to Google Alerts, but more robust and tailored to technical products like Mathesar.</p> <p>Keyword alerts need to be triaged daily to ensure timely engagement, community building, and brand reputation management.</p>"},{"location":"team/guide/syften-keyword-alerts/#understanding-keyword-alerts","title":"Understanding keyword alerts","text":"<p>We currently classify three types of keyword alerts. In order of their importance, they are:</p> <ol> <li>Mention.   Direct references to Mathesar. Actual discussions or mentions of our product in technical contexts (e.g., blogs, forums, social media). These are occasionally references to Galaxy Quest\u2019s character of the same name. These mentions help us:<ul> <li>Collect user feedback.</li> <li>Understand where users are coming from.</li> <li>Find opportunities to respond to users directly.</li> </ul> </li> <li>Recommendation.    Opportunities to recommend Mathesar to users of competitors, spreadsheets, or other products. these mentions help us:<ul> <li>Promote Mathesar to new users.</li> <li>Identify user pain points.</li> </ul> </li> <li>Competitor.    References to other products in the spreadsheet-like and database management ecosystem. These mentions help us:<ul> <li>Identify user pain points.</li> <li>Discover feature requests or gaps in other products.</li> <li>Gauge general sentiment and understand use cases within our space.</li> </ul> </li> </ol> <p>Keyword alerts are configured in Syften.</p>"},{"location":"team/guide/syften-keyword-alerts/#daily-keyword-alert-triage","title":"Daily keyword alert triage","text":"<p>Tip</p> <p>See the daily checklist for a systemized \u201crunbook\u201d of the approach outlined here.</p> <p>Keyword alerts are triaged daily by the Keyword Lead (Lead). A script runs every 30 minutes to convert the keyword alerts to asana tasks in the \u201cCommunity - Syften Keyword Alerts\u201d Asana project.</p> <p>The goals of the triage are to:</p> <ol> <li>Close inactionable, irrelevant keyword alerts</li> <li>Identify keyword alerts that need a response from the Mathesar team.</li> <li>User support</li> <li>User feedback</li> <li>Opportunities to recommend Mathesar in a natural, relevant way.</li> <li>Identify product feedback and user pain points to document, including from ecosystem and recommendation alerts.</li> </ol>"},{"location":"team/guide/syften-keyword-alerts/#assessing-keyword-alerts","title":"Assessing keyword alerts","text":"<p>Each keyword alert should be evaluated for any action items. If the keyword alert is actionable it should have it\u2019s \u201cstage\u201d field set as \u201cReply\u201d or \u201cDocument\u201d and assigned to a user. If neither of these sections seem appropriate for an alert, it likely isn\u2019t actionable! Keyword alerts moved to these categories are assigned to a Mathesar maintainer and given a due date by the Lead.</p> <p>The Lead will leave on each task explaining its importance. For example:</p> <ul> <li>The keyword alert: \u201cI am running nocodb and n8n currently. What are the benefits of using Postgres instead of sticking with what nocodb defaults with (i think it\u2019s SQLite)?\u201d</li> <li>The task comment: \u201cThis user wants to learn more about Postgres. We should provide general advice but disclose we work on a competing product called Mathesar {link to our homepage}\u201d</li> </ul> <p>Keyword alerts are not actionable when:</p> <ul> <li>The mention is not about Mathesar, a competing product, or the data needs of a potential user.<ul> <li>Examples:<ul> <li>\u201cMathesar was my favorite character in Galaxy Quest!\u201d</li> <li>Social media posts mentioning \u201cMathesar\u201d in unrelated contexts like gaming or pop culture.</li> <li>Repeated or low-value mentions like SEO-generated spam posts.</li> </ul> </li> </ul> </li> <li>The mention is a duplicate of an already reviewed entry.</li> </ul>"},{"location":"team/guide/syften-keyword-alerts/#response-schedule","title":"Response schedule","text":"<p>Ideally users are responded to as quickly as possible by the assignee. Social media communications move quickly. Other products in this space also monitor their keyword alerts and perform similar outreach.</p> <ul> <li>Replies to users: 1 business day</li> <li>Documentation: 2-3 business days</li> </ul> <p>It is important that we reply to users as quickly as possible and prioritize outreach over documentation.</p>"},{"location":"team/guide/syften-keyword-alerts/#assigning-maintainers","title":"Assigning maintainers","text":"<p>Keyword alert tasks should be assigned to the most appropriate team member based on complexity and expertise, starting with @amandaj, then progressing to engineers or leads as needed.</p> <p>Through this process we should develop and maintain a list of stock replies (link here when created) to facilitate quick responses to common keyword alert types.</p>"},{"location":"team/guide/syften-keyword-alerts/#when-the-lead-is-out-of-office","title":"When the lead is out of office","text":"<p>If the Keyword lead is out of office for any amount of time greater than one business day, another team member should take over the daily checklist.</p> <p>For longer periods of absence or when assigning a new lead, the Asana rule that automatically assigns direct mentions to the Lead should be updated to the new Lead.</p>"},{"location":"team/guide/syften-keyword-alerts/#questions-and-feedback","title":"Questions and feedback","text":"<p>If you have questions about this process of suggestions to improve it, feel free to reach out to community@mathesar.org with your ideas.</p>"},{"location":"team/guide/syften-keyword-alerts/#daily-lead-checklist","title":"Daily Lead checklist","text":"<p>This is the checklist for the daily triage of Keyword Alerts used by the Keyword Lead.</p> <p>Tip</p> <p>If you do not see a particular category visible in Asana, it means there are currently no keyword alerts for that category.</p> <p>In the Syften Keywords Asana project:</p> <ul> <li> 1. Check the \u201cpast due\u201d tab of the Asana project for any overdue replies or documentation. Ping the assignees of these tasks in the comments of the task. If tasks are repeatedly past due or require urgent atention, reach out to the assignee more directly using your preferred method (DM, email, etc.)</li> <li> 2. In the \u201cTo Triage\u201d tab, Review the \u201cMention\u201d category.</li> <li> Set actionable tasks requiring a reply to the \u201cReply\u201d stage, assign a maintainer, and leave a comment with context. Set the due date to the end of the next business day.</li> <li> Set actionable keyword alerts that do not require a response to the \u201cDocument\u201d stage and assign a maintainer to respond within 2-3 business days. Be sure to leave a comment explaining what should be documented.</li> <li> Mark all non-actionable tasks as completed and leave a comment explaining why they were not actionable.</li> <li> 3. In the todo tab, review the \u201cRecommendation\u201d category.</li> <li> Set actionable tasks requiring a reply to the \u201cReply\u201d stage, assign a maintainer, and leave a comment with context. Set the due date to the end of the next business day.</li> <li> Set actionable keyword alerts that do not require a response to the \u201cDocument\u201d stage and assign a maintainer to respond within 2-3 business days. Be sure to leave a comment explaining what should be documented.</li> <li> Mark all non-actionable tasks as completed and leave a comment explaining why they were not actionable.</li> <li> 4. In the todo tab, Check the \u201cCompetitor\u201d category.</li> <li> Set actionable tasks requiring a reply to the \u201cReply\u201d stage, assign a maintainer, and leave a comment with context. Set the due date to the end of the next business day.</li> <li> Set actionable keyword alerts that do not require a response to the \u201cDocument\u201d stage and assign a maintainer to respond within 2-3 business days. Be sure to leave a comment explaining what should be documented.</li> <li> Mark all non-actionable tasks as completed and leave a comment explaining why they were not actionable.</li> </ul>"},{"location":"team/guide/syften-keyword-alerts/#replying-to-users","title":"Replying to users","text":"<p>If you\u2019ve been assigned a user reply, follow the below steps:</p> <ol> <li>Read the original keyword alert and any comments left on the Asana task.</li> <li>Draft your reply and leave it as an Asana comment.</li> <li>Assign the Asana task back to the Keyword Lead (Lead) for review.</li> <li>When your reply is approved, post it and leave a link on the Asana task.</li> <li>Mark the task as completed.</li> <li>Log the interaction in the CRM.</li> </ol>"},{"location":"team/guide/syften-keyword-alerts/#documenting-keyword-alerts","title":"Documenting keyword alerts","text":"<p>There are two ways of documenting keyword alerts with slightly different processes.</p>"},{"location":"team/guide/syften-keyword-alerts/#replies","title":"Replies","text":"<p>Any user outreach that resulted from a keyword alert should be documented in our CRM. Typically the Lead will handle user outreach (or assign someone to do so), and after the interaction is done the task will be moved to the \u201cDocument\u201d stage so a new assignee can document it in the CRM.</p>"},{"location":"team/guide/syften-keyword-alerts/#ecosystem-information","title":"Ecosystem information","text":"<p>Information about other tools in the ecosystem or feature requests should be documented in the Internal Mathesar instance. There is a table called \u201cProduct\u201d in which any products related to Mathesar can be added. There is a table called \u201cProduct notes\u201d where any notes about a product can be added. Typically, any Asana \u201cDocument\u201d task will either be:</p> <ul> <li>A new tool to add to the \u201cProduct\u201d table</li> <li>A note about an existing ecosystem tool that should be added as a new \u201cProduct Note\u201d</li> </ul> <p>If there are any tasks to document that do not seem suitable for either category, please check in with the Lead.</p>"},{"location":"team/meeting-notes/2021/04/2021-04/","title":"April 2021 meeting notes","text":""},{"location":"team/meeting-notes/2021/04/2021-04/#2021-04-26","title":"2021-04-26","text":""},{"location":"team/meeting-notes/2021/04/2021-04/#welcome-pavish","title":"Welcome Pavish!","text":"<ul> <li>Welcome!</li> </ul>"},{"location":"team/meeting-notes/2021/04/2021-04/#last-week-retrospective","title":"Last week retrospective","text":"<ul> <li>Ghislaine: wireframes &amp; roadmap update<ul> <li>Went well</li> <li>Discovered a lot of things while making wireframes</li> <li>Need to agree on what we\u2019ll cover in wireframes, and what we\u2019ll do in later steps<ul> <li>See questions in notes</li> </ul> </li> </ul> </li> <li>Brent:<ul> <li>Library splitting done</li> <li>Code moving over from prototype - in progress<ul> <li>Crucial method in SQLAlchemy deprecated (meant to be internal method)</li> </ul> </li> <li>Doing a better job of testing the Mathesar db library (someday could be pip installable on its own)</li> <li>Setup Mathesar to work with existing Postgres DB.</li> </ul> </li> <li>Kriti:<ul> <li>Everything is now moved to the wiki</li> <li>Collections -&gt; tables, Applications -&gt; schemas</li> <li>Read-only APIs (APIs ongoing, CRUD and records API pending)</li> </ul> </li> <li>Pavish:<ul> <li>Set up his CCI account</li> <li>Started discussion re: front-end framework and repo structure</li> <li>Finalized Svelte/Django templates + monorepo</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/04/2021-04/#this-weeks-plan","title":"This week\u2019s plan","text":"<ul> <li>Ghislaine:<ul> <li>Wireframes for data explorer</li> <li>Move current work to wiki</li> </ul> </li> <li>Brent:<ul> <li>Finish moving code over from the prototype</li> <li>Types:<ul> <li>String</li> <li>Email</li> <li>Number types</li> <li>Datetime types</li> </ul> </li> </ul> </li> <li>Kriti:<ul> <li>Update roadmap based on current work</li> <li>Finish API work</li> <li>Sync database tables and webapp tables</li> <li>Import TSVs as well as CSVs</li> </ul> </li> <li>Pavish:<ul> <li>Set up frontend repo</li> <li>Set up workflows required for client</li> <li>Set up Docker</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/04/2021-04/#community-readiness-check-in","title":"Community readiness check-in","text":"<ul> <li>License<ul> <li>Hopefully finalized next week</li> </ul> </li> <li>Ticket creation<ul> <li>Depends on wireframes/roadmap finalization, at least a couple of weeks away</li> </ul> </li> <li>Other community building ideas?<ul> <li>Too early</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/04/2021-04/#internship-update","title":"Internship update","text":"<ul> <li>FYI, we have an intern from May 17 to Aug 20 (<code>@eito-fis</code>)</li> </ul>"},{"location":"team/meeting-notes/2021/04/2021-04/#team-event","title":"Team event","text":"<ul> <li>Galaxy Quest</li> </ul>"},{"location":"team/meeting-notes/2021/04/2021-04/#discussion","title":"Discussion","text":"<ul> <li>How to install Mathesar?<ul> <li>Use docker for now</li> <li>Installation instructions for deployment, we\u2019ll figure this out as its own task:<ul> <li>see wiki.js as an example https://docs.requarks.io/install</li> </ul> </li> </ul> </li> <li>How to handle large amounts of data?<ul> <li>Two approaches: canvas vs. replace data in elements</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/04/2021-04/#2021-04-19","title":"2021-04-19","text":""},{"location":"team/meeting-notes/2021/04/2021-04/#frontend-hiring-update","title":"Frontend hiring update","text":"<ul> <li>Pavish is onboard, pending logistics</li> <li>2 month notice, starts June 21st</li> <li>Will join meetings and do some part-time work starting April 26th</li> </ul>"},{"location":"team/meeting-notes/2021/04/2021-04/#wiki-httpswikimathesarorg","title":"Wiki https://wiki.mathesar.org/","text":"<ul> <li>GitHub repo: https://github.com/centerofci/mathesar-wiki</li> <li>Move mathesar-notes to it?<ul> <li>Affirmed by all</li> </ul> </li> <li>Set up private area for our competitor notes, strategy, meeting notes, etc.</li> <li>Define rules for what is sensitive information in the wiki</li> </ul>"},{"location":"team/meeting-notes/2021/04/2021-04/#this-weeks-plan_1","title":"This week\u2019s plan","text":"<ul> <li>Ghislaine<ul> <li>Initial wireframes and roadmap update</li> </ul> </li> <li>Brent<ul> <li>Split up SQLAlchemy/psycopg2 into a library that the webservice imports<ul> <li>take engine as input</li> <li>Django would store engines</li> </ul> </li> <li>Move code over from prototype and get rid of prototype repo</li> <li>\u201cInstallation and configuration\u201d from roadmap:<ul> <li>Access existing PostgreSQL databases via Mathesar using existing PostgreSQL user credentials.<ul> <li>Existing databases should reflect all columns and types correctly in the user interface.</li> </ul> </li> <li>Set up a PostgreSQL server automatically if none exists.<ul> <li>Create a new database from scratch.</li> <li>Create an initial user if needed.</li> </ul> </li> </ul> </li> </ul> </li> <li>Kriti<ul> <li>Move stuff to the wiki and retire mathesar-notes repo</li> <li>Rename collections and applications in codebase</li> <li>Start work on API<ul> <li>CRUD for tables, schemas</li> <li>CRUD for records</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/04/2021-04/#ticket-creation","title":"Ticket creation","text":"<ul> <li>Everyone to create tickets for their work</li> <li>Deferred to later discussion<ul> <li>Should we create an issue template for internal feature tickets? (existing templates only cover external feature requests)</li> <li>When should we start creating tickets in advance for the next sprint or for contributors?</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/04/2021-04/#2021-04-13","title":"2021-04-13","text":""},{"location":"team/meeting-notes/2021/04/2021-04/#team-collaboration-process","title":"Team collaboration process","text":"<ul> <li>Standups</li> <li>Weekly meeting<ul> <li>Agenda: planning for the next week (sprint)</li> </ul> </li> <li>Sprint cadence<ul> <li>Weekly</li> <li>Tool: GitHub Project with Backlog column</li> </ul> </li> <li>Informal collaboration<ul> <li>Impromptu chat, video call encouraged</li> <li>Chats are async, don\u2019t feel pressure to reply</li> </ul> </li> <li>Notes location<ul> <li>Public docs</li> <li>Private notes (strategy, competitors, funding) etc. will live in mathesar-notes repo</li> <li>Semi-public notes (e.g. user interview notes) - we\u2019ll figure out later</li> <li>Technical discussions/decisions that we might want to go back to should go in GitHub Discussions<ul> <li>https://github.com/centerofci/mathesar/discussions</li> </ul> </li> </ul> </li> <li>Todos<ul> <li>Kriti will invite Ghislaine and Brent to Miro</li> <li>Kriti will set up a GitHub Project</li> <li>Kriti to figure out first issue templates</li> <li>In a couple of weeks, we\u2019ll talk about the process with collaborating with the community<ul> <li>Brent: think about \u201ccreate a type\u201d issue template</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/04/2021-04/#frontend-hiring-update_1","title":"Frontend hiring update","text":"<ul> <li>Two candidates in the pipeline</li> <li>Perhaps Ghislaine would like to talk to the Frontend Engineer<ul> <li>TODO: Share interview notes with Ghislaine</li> <li>TODO: Prepare Interview Questions</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/04/2021-04/#roadmap-discussion","title":"Roadmap discussion","text":"<ul> <li>Goals</li> <li>Timeline<ul> <li>Will be decided after we agree on MVP goals</li> </ul> </li> <li>Ghislaine\u2019s research/questions:<ul> <li>How people use Airtable<ul> <li>Sharing forms is a big use case, unlike SurveyMonkey etc., you don\u2019t need to connect to a Google sheet<ul> <li>from a table</li> <li>This is opposed to bulk importing data</li> </ul> </li> <li>Automation<ul> <li>Zapier is a bit disconnected, Airtable pulls it all together</li> <li>Improve the quality of data collection</li> </ul> </li> </ul> </li> <li>Some industries need to automate processes for cost savings<ul> <li>for example, see librarians transitioning in the 70s</li> <li>we could get some user journeys here</li> </ul> </li> </ul> </li> <li>Process for further iteration<ul> <li>Ghislaine will do some research and write up user journey</li> <li>Then we\u2019ll measure roadmap against it and refine roadmap</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/04/2021-04/#kritis-use-cases-for-mathesar","title":"Kriti\u2019s use cases for Mathesar","text":"<ul> <li>Book collection inventory<ul> <li>would be great to support barcode scanning that looks up books</li> </ul> </li> <li>DVD/Bluray collection inventory</li> <li>Food inventory + grocery list creation</li> <li>Health data tracking<ul> <li>would be great to be able to upload Apple Health exports, Migraine Buddy exports, MyFitnessPal exports etc. and find patterns in data, correlate different types of data</li> </ul> </li> <li>Track lectures/courses that I want to watch, have already watched, etc.</li> </ul>"},{"location":"team/meeting-notes/2021/04/2021-04/#plan-for-this-week","title":"Plan for this week","text":"<ul> <li>User journey and roadmap refinement</li> <li>Continue code on essential things</li> <li>Flag things that are potentially technically difficult</li> <li>Set up for official sprints next week</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/","title":"May 2021 meeting notes","text":""},{"location":"team/meeting-notes/2021/05/2021-05/#2021-05-25","title":"2021-05-25","text":""},{"location":"team/meeting-notes/2021/05/2021-05/#welcome-eamon","title":"Welcome Eamon!","text":"<ul> <li>Eamon started yesterday</li> <li>Introductions all around</li> <li>Nice work on link-rot issue!</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#new-design-review-channel","title":"New Design Review channel","text":"<ul> <li><code>#design-review:matrix.mathesar.org</code><ul> <li>for design review (like code review)</li> </ul> </li> <li>Review process:<ul> <li>Required reviewers: Kriti, Pavish</li> <li>Brent &amp; Eamon are strongly encouraged to review</li> <li>Process:<ul> <li>Document shared in the channel</li> <li>Reviewers should comment on the document<ul> <li>Pay attention to missing components</li> <li>Ask questions about how to implement something</li> <li>Raise limitations if any</li> </ul> </li> <li>Comment in the channel when you\u2019re done reviewing</li> <li>Ghislaine will resolve comments and post in the channel if it\u2019s ready for re-review</li> <li>Once it\u2019s done being reviewed, Ghislaine will summarize decisions made in comments</li> <li>Then it will go to the wiki as ready for implementation</li> </ul> </li> </ul> </li> <li>Ghislaine will summarize above process on the wiki</li> <li>Please prioritize reviews, like any other work that blocks people</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#design-development-process-follow-up","title":"Design / Development Process follow up","text":"<ul> <li>Goal is for design to be two features ahead of development<ul> <li>There should always be three features (let\u2019s call them A, B, and C) in progress:<ul> <li>A is being implemented</li> <li>B is in design review / discussion / technical spec</li> <li>C is being designed</li> </ul> </li> </ul> </li> <li>Concerns raised about too much parallelization and splitting effort too much.<ul> <li>Sometimes it\u2019s better to go slower and ensure we\u2019re on the same page.</li> </ul> </li> <li>A, B, C are separate types of work, so shouldn\u2019t conflict.</li> <li>Let\u2019s try it!</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#standups","title":"Standups","text":"<ul> <li>Linking to issues and PRs in your standup is encouraged, but please describe them in addition so that people can get context without have to click through</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#typescript-port","title":"Typescript port","text":"<ul> <li>GH discussion is open: https://github.com/centerofci/mathesar/discussions/145</li> <li>We could have a brief discussion on call if the team has not yet gone through the GH discussion</li> <li>Concern about how many people know Typescript, is it contributor friendly?<ul> <li>(Lots)</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#retrospective","title":"Retrospective","text":""},{"location":"team/meeting-notes/2021/05/2021-05/#kriti","title":"Kriti","text":"<ul> <li>Set up Matrix bot</li> <li>File import API (including schema creation API and overhaul of file storage and copying)</li> <li>Various discussions</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#pavish","title":"Pavish","text":"<p>Did not have enough time to work during weekdays. Not as productive as I hoped.</p> <ul> <li>Built Tab and Tree Components</li> <li>Ported code to TypeScript</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#brent","title":"Brent","text":"<ul> <li>Finished PRs to implement custom logic for casting between types</li> <li>Finished PRs to use that casting in type inference algorithm</li> <li>Finished PRs to use type inference algorithm to determine types for table columns</li> <li>Finished PR to implement getting records in given order (by columns)</li> <li>Submitted PR to allow getting valid grouping filters, then filtering table by them to create groups of records.</li> <li>Started / contributed to discussions about types, lossy type conversions, and assumptions about user roles.</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#ghislaine","title":"Ghislaine","text":"<ul> <li>Worked on prototype for \u2018Add new table from file import\u2019</li> <li>We had a design review and changes were implemented</li> <li>Documentation updates to inventory use case</li> <li>Had to update my knowledge on figma prototyping </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#active-work-plan","title":"Active work plan","text":"<p>Implementation: Read only tables Review/Prep: CSV import Design: Filtering, sorting, grouping &amp; Pagination</p> <p>Next: Editing tables</p>"},{"location":"team/meeting-notes/2021/05/2021-05/#kriti_1","title":"Kriti","text":"<ul> <li>Document general implementation principles for API</li> <li>Finish up file import API work, including table creation from file import.</li> <li>Work on TSV file imports with Joi</li> <li>Additional API work as needed to support the file import frontend</li> </ul> <p>I have more communication training and interviews this week, so I don\u2019t have as much time.</p>"},{"location":"team/meeting-notes/2021/05/2021-05/#pavish_1","title":"Pavish","text":"<ul> <li>Define clear route boundaries on client for table view and import</li> <li>Switch to new api for import</li> <li>Maintain open tab and tables state in url</li> </ul> <p>I will have only about an hour during the weekdays, this week and next. Will have to defer dev work to the weekend. I don\u2019t think this week will be productive for me.</p> <p>Next week - on call, may have to drop out during meeting.</p>"},{"location":"team/meeting-notes/2021/05/2021-05/#brent_1","title":"Brent","text":"<ul> <li>Finish up current PR review process (regarding filtering)<ul> <li>Kriti: I merged this already</li> </ul> </li> <li>Work on syncing objects between data DB and models (webapp)</li> <li>Catch up with Eamon about endpoints for functions</li> <li>Maybe help with API work</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#ghislaine_1","title":"Ghislaine","text":"<ul> <li>Work on pagination update for read-only tables</li> <li>Update design process for reviews and definition of done</li> <li>Start work on design for filtering, sorting and grouping of table data</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#eamon","title":"Eamon","text":"<ul> <li>Download image automation</li> <li>Meet with Brent about endpoints</li> <li>Start endpoints work</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#upcoming-work-for-backend","title":"Upcoming work for backend","text":"<ul> <li>We have three people on the backend currently, so we\u2019ll need to get ahead of frontend a little bit for the next few weeks</li> <li>Next issue for whoever is free on the backend first: https://github.com/centerofci/mathesar/issues/69</li> <li>Other backend issue: come up with install instructions for Mathesar</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#2021-05-21","title":"2021-05-21","text":""},{"location":"team/meeting-notes/2021/05/2021-05/#meetings-starting-next-week","title":"Meetings starting next week","text":"<ul> <li>Fewer meetings starting next week</li> <li>Meetings so far are frequent, we are relying too much on synchronous discussion</li> <li>Async discussions are better, we can think about things more, and it\u2019s documented</li> <li>Design reviews - it\u2019s still useful to have those synchronously</li> <li>We can schedule additional synchronous meetings as needed ad-hoc</li> <li>Only Tuesdays starting next week</li> <li>Will also give us more uninterrupted time</li> <li>Team events after Pavish starts full time for team building</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#eamon-starting-monday","title":"Eamon starting Monday","text":"<ul> <li>New Summer intern</li> <li>He\u2019ll be in meetings, research sync, LWT, etc.</li> <li>We\u2019ll treat him as a member of the team</li> <li>Kriti will schedule call on Monday</li> <li>First task:  GH Actions <ul> <li>Automation will be useful for us, good for learning</li> <li>Detecting link rot</li> <li>Moving images uploaded via HackMD to wiki</li> </ul> </li> <li>Second task: <ul> <li>API endpoints for filtering/ordering/grouping</li> </ul> </li> <li>He\u2019ll be working with us for 3 months</li> <li>We\u2019ll need to make sure meeting times work</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#2021-05-19","title":"2021-05-19","text":""},{"location":"team/meeting-notes/2021/05/2021-05/#import-from-file-user-flow","title":"Import from file user flow","text":"<p>(Ghislaine demoed wireframes on Figma)</p>"},{"location":"team/meeting-notes/2021/05/2021-05/#remote-url-vs-local-file-upload","title":"Remote URL vs. Local file upload","text":"<p>How wiki.js shows it: </p>"},{"location":"team/meeting-notes/2021/05/2021-05/#feedback","title":"Feedback","text":"<ul> <li>\u201cImport Data\u201d panel<ul> <li>need to show a file uploading / loading indicator in \u201cImport Data\u201d step</li> <li>we need to ask user whether to consider first row as header<ul> <li>checkbox with default checked </li> </ul> </li> </ul> </li> <li>\u201cMap Columns\u201d panel <ul> <li>we can select columns that should not be imported</li> <li>dropdowns should be changed to an interface that shows they can edit freely</li> </ul> </li> <li>\u201cReview Data\u201d panel<ul> <li>only show first few rows of data (but show total count)</li> </ul> </li> <li>This shouldn\u2019t be a modal<ul> <li>Should be its own dedicated page</li> <li>Might take a while, dedicated page could show status of the upload and not block user.</li> <li>Sidebar under \u201ctables\u201d with a loading icon?<ul> <li> <ul> <li>Cannot allow user to close browser window because upload won\u2019t work, so hiding it in the sidebar is not a good idea, show something prominent</li> </ul> </li> </ul> </li> <li>Status bar on the bottom might show current operations at the bottom, like chat windows</li> <li>Make it very clear that the window shouldn\u2019t be closed</li> </ul> </li> <li>Needs explanatory text / guiding user through steps and adding confirmations</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#discussion-about-combining-views","title":"Discussion about combining views","text":"<p>Screenshot from Dabble DB </p> <ul> <li>Combining all three views puts everything in one place.</li> <li>Might lead to horizontal scrolling if there are a lot of columns</li> <li>Need a default name for the table<ul> <li>Can use the filename (maybe filename + timestamp)</li> </ul> </li> <li>Once they click on the table, it takes them to the DabbleDB kind of view for the table<ul> <li>Sidebar should have separate icon for this</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#new-design-components-needed","title":"New design components needed","text":"<ul> <li>System notifications</li> <li>Progress bar and errors</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#roadmap-updates","title":"Roadmap updates","text":"<ul> <li>Roadmap should help us define the basic product functionality</li> <li>We should stop some product definition work before we have the MVP</li> <li>Let\u2019s focus on basic features first before building hairy features</li> <li>We\u2019ll hold type inference at the current stage (after finishing #93)</li> <li>We\u2019ll try to get DB client features first<ul> <li>Upload</li> <li>Edit</li> <li>View<ul> <li>filtering</li> <li>ordering</li> <li>grouping</li> </ul> </li> <li>Installation</li> <li>Multiple Databases</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#paginated-view-vs-infinite-scrolling","title":"Paginated view vs. Infinite scrolling","text":"<ul> <li>Paginated might support the interactions we require for editing records.</li> <li>We won\u2019t aim to have a full spreadsheet-ui experience</li> <li>We\u2019ll only support spreadsheet like operations on visible records</li> <li>Let\u2019s see how far we get with pagination</li> <li>We can consider full spreadsheet like capability using HTML canvas in the future</li> <li>We\u2019ll avoid having to implement grouping with virtual scrolling</li> </ul> <p>Grouping on Dabble DB (December 2007 etc. are the groups)  </p> <p>Ghislaine will update read only spec with pagination controls</p>"},{"location":"team/meeting-notes/2021/05/2021-05/#maubot","title":"Maubot","text":"<ul> <li>GitHub Updates and Wiki Updates (private) rooms set up</li> <li>Let Kriti know if you want any plugins installed, list on README https://github.com/maubot/maubot</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#2021-05-17","title":"2021-05-17","text":""},{"location":"team/meeting-notes/2021/05/2021-05/#last-week-retrospective","title":"Last week retrospective","text":""},{"location":"team/meeting-notes/2021/05/2021-05/#kriti_2","title":"Kriti","text":"<p>Not a very productive week.</p> <ul> <li>Meetings/conversations/discussions</li> <li>Matrix server setup</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#pavish_2","title":"Pavish","text":"<p>Was only able to work for a couple days</p> <ul> <li>Discussions on readonly table</li> <li>Started working on table view</li> <li>Analyzed virtual scroll implementations</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#brent_2","title":"Brent","text":"<ul> <li>Type casting, altering columns</li> <li>Implemented altering a column to a desired supported type</li> <li>Started discussions around different aspects of types / type casting from a UX perspective</li> <li>Implemented restricted / custom type casting logic based on outcomes of those discussions</li> <li>Overall, made less progress than hoped, but realized that some details needed clarification / buy-in before implementation made sense.</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#ghislaine_2","title":"Ghislaine","text":"<ul> <li>Readonly table wireframes and specs</li> <li>Setup design figma file and start defining components</li> <li>Update design wiki to include design documents</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#this-weeks-plan","title":"This week\u2019s plan","text":"<p>We\u2019ll be continuing with read only tables, table creation via data imports are next, followed by table editing (DML).</p>"},{"location":"team/meeting-notes/2021/05/2021-05/#kriti_3","title":"Kriti","text":"<ul> <li>Set up Matrix bot</li> <li>File import API</li> <li>Sync DB and webapp if DB changes out from under webapp</li> <li>If I have time, handle TSV file imports (I might work with Joi on this if he\u2019s interested)</li> </ul> <p>Will also be working on CCI IT interviews and communication training.</p>"},{"location":"team/meeting-notes/2021/05/2021-05/#pavish_3","title":"Pavish","text":"<ul> <li>Try and complete the read-only table view, with virtual scroll, accessibility and selection handling</li> <li>Discuss on ways to load data for table<ul> <li>Handling row position change</li> <li>Merging buckets based on PK on UI</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#ghislaine_3","title":"Ghislaine","text":"<ul> <li>Add table via data import from CSV / Paste</li> <li>Define structure for figma component library</li> <li>Define basic typography styles</li> <li>Update design wiki to include design patterns</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#brent_3","title":"Brent","text":"<ul> <li>Continue work on type casting, and type inference.  We\u2019ll be restricting attention to supported types only.</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#interaction-patterns-for-adding-tables","title":"Interaction Patterns for Adding Tables","text":"<p>Three questions:</p> <ul> <li>Do we at some point want people to add multiple tables at the time?<ul> <li>Yes, zip file of multiple CSVs or excel file where each sheet becomes a table</li> <li>Unlikely to add multiple tables in bulk from the UI without file import</li> </ul> </li> <li>In videos, people create tables and define column types at the same time. Does that pattern make sense for us?<ul> <li>Not during import. People can\u2019t directly import CSV to Postgres, we automate that so people don\u2019t have to pre-setup a table.</li> <li>Useful during table creation from scratch (blank).</li> </ul> </li> <li>Blank tables, will discuss later.</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#other-discussion","title":"Other Discussion","text":"<ul> <li>When we import a CSV, along with allowing changing types, we\u2019d also allow changing column namesj during an intermediary step in the UI<ul> <li>The immediate table creation in the backend is just a backend implementation detail, the UI should still show a limbo state</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#ui-library-and-font-choice","title":"UI Library and Font Choice","text":"<ul> <li>right now, just using an Apple system font</li> <li>We probably want it to be an open-licensed font</li> <li>We need to make sure it has all the characters necessary</li> <li>It\u2019s also important that we have something that does a good job with digits:  0 vs O, etc. (also consistent sizing)</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#google-fonts","title":"Google Fonts","text":"<p>Google Fonts are open and could be one option</p> <ul> <li>Pavish likes Open Sans</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#system-fonts","title":"System Fonts","text":"<p>System fonts might be good, better for performance (no need to load font)</p> <ul> <li>https://meta.stackexchange.com/questions/364048/we-are-switching-to-system-fonts-on-may-10-2021</li> <li>https://markdotto.com/2018/02/07/github-system-fonts/</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#discussion","title":"Discussion","text":"<ul> <li>Allowing user to use monospace font might be useful, especially for data entry</li> <li>Current font size does not work for small screens, Ghislaine will work on defining this better when defining the typography<ul> <li>We will use relative sizes</li> </ul> </li> <li>Ghislaine will find related article before next check in<ul> <li>Use TypeScale to define font size https://type-scale.com/</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#wednesdays-meeting","title":"Wednesday\u2019s meeting","text":"<ul> <li>Wednesday meeting moved two hours later</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#technical-spec-design-implementation-process","title":"Technical spec / design / implementation process","text":"<ul> <li>We should be thinking in terms of finishing features end to end<ul> <li>e.g. read only tables, table creation, table editing</li> </ul> </li> <li>Ideally the process should be design \u2013&gt; identify decisions that need to be made \u2013&gt; make decisions \u2013&gt; finish design \u2013&gt; technical spec \u2013&gt; implementation<ul> <li>we can\u2019t do this for everything, and it wouldn\u2019t make sense for everything</li> </ul> </li> <li>think about things in terms of \u201chigh UI cost\u201d and \u201chigh dev cost\u201d and decide what to do</li> <li>hard to do things in parallel because we only have one person for each thing</li> <li>We could talk through our upcoming features to see if there are any \u201chigh dev cost\u201d parts that we could get done before the design.<ul> <li>Some things depend on UI (e.g. how are we conceiving editing a table, by row or by cell)<ul> <li>Actually, editing a table is product decisions, not design decisions</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#conclusion","title":"Conclusion","text":"<p>Design work should happen serially, one feature at a time.</p> <ul> <li>We can try to have conversations in parallel, but it could get confusing, so let\u2019s hold off for now and do one thing at a time.</li> <li>We might have cycles where some weeks are focused more on product decisions and research, others on implementation</li> <li>We can always start a GitHub discussion if inspiration strikes</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#handling-data-load-for-table","title":"Handling data load for table","text":"<ul> <li>How to merge rows in UI when there\u2019s no primary key?<ul> <li>Maybe have a special read-only paginated (no-infinite scroll) display for tables without a primary key.</li> <li>Will continue discussion async</li> </ul> </li> <li>Virtual scroll implementations \u2013 two different options<ul> <li>Still deciding which option to use, Pavish will make a discussion with both approaches</li> <li>We might need to have a limit of 500k rows on a single page due to browser limitations on element height</li> <li>We cannot handle variable row height, need to figure out how to handle long data</li> <li>Grouping data should happen before table editing, since virtual scrolling will be affected</li> </ul> </li> <li>We might want to wonder why the user is scrolling 500k rows, they may want to compare data between rows that are far apart and be frustrated that it takes time to load<ul> <li>This is probably a separate feature, we currently just don\u2019t want to break mysteriously with large tables.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#2021-05-14","title":"2021-05-14","text":""},{"location":"team/meeting-notes/2021/05/2021-05/#import-from-csv","title":"Import from CSV","text":"<p>Discussion of functionality</p> <ul> <li>We\u2019ll support:<ul> <li>Import local file</li> <li>Import file from URL</li> <li>Paste CSV/spreadsheet</li> </ul> </li> <li>We can automatically detect file type, no need for user to enter</li> <li>Type inference<ul> <li>Will it be done soon?<ul> <li>Yes, Brent is working on it, we should assume it\u2019ll be done by the time we\u2019re implementing.</li> </ul> </li> <li>Do we give advanced user the option to skip inference?<ul> <li>Not for the MVP, to keep things simple</li> </ul> </li> <li>We should show the user what\u2019s happening in the background, show that the import is happening<ul> <li>Show an indicator next to the table name</li> <li>Show the percentage to completion?</li> <li>We will have data to show (all strings)</li> </ul> </li> <li>Do we allow the user to select columns to import?<ul> <li>Not for the first iteration</li> </ul> </li> <li>Schemas \u2013 users can either create a new schema or upload to an existing schema</li> <li>You can replace an entire table with a CSV or append extra rows to an existing table, but you can\u2019t merge/deduplicate in the first iteration</li> <li>Error handling \u2013 show errors, we need error states<ul> <li>Do we exclude only problem rows or reject the whole file?<ul> <li>Reject the whole file</li> <li>It\u2019s going to be confusing to see which rows were added and which weren\u2019t</li> </ul> </li> </ul> </li> <li>We need to show types in the read only table<ul> <li>Icon for types, maybe an extra row that shows types in the header<ul> <li>we probably don\u2019t need to show an extra header row while looking at the whole table, metadata related to tables isn\u2019t useful all the time</li> <li>idea: context menu for column that shows information about the column</li> <li>idea: hover over the column to see more information</li> </ul> </li> <li>Not going to go into modifying types yet</li> </ul> </li> </ul> </li> <li>Provide a summary for tables to show fields and types</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#custom-type-casts","title":"Custom type casts","text":"<ul> <li>Postgres is far too liberal while casting types<ul> <li>e.g. casting to boolean, \u201cyesterday\u201d becomes \u201cyes\u201d, which is True</li> <li>decimals \u2013&gt; durations casts to integers first</li> </ul> </li> <li>What\u2019s our appetite for risk here, especially since we have no undo?<ul> <li>Option 1:  Try very hard to cast (be okay with data modifications)</li> <li>Option 2:  Be very conservative (refuse if we won\u2019t be able to cast absolutely confidently)</li> <li>Option 3:  (airtable-ish) delete data we don\u2019t understand.</li> </ul> </li> <li>We will probably need to support rules in the future, (e.g. \u201cyes\u201d/\u201dno\u201d in other language)</li> <li>We might have global inference rules in the future where we notice columns with only two options and ask them if they want to cast it to boolean.</li> <li>We\u2019re casting at three different times:<ul> <li>Automatic inference during import - this SHOULD be conservative</li> <li>User tries to manually cast \u2013 this should be more liberal</li> <li>Global inference (where we analyze the entire data and come up with inference suggestions)<ul> <li>Not worrying about this one yet</li> <li>We might want to apply this at import for more \u201cmagic\u201d (e.g. if column just has \u201cyes\u201d and \u201cno\u201d values, suggest boolean, if it has \u201cyes\u201d, \u201cno\u201d, \u201cmaybe\u201d, suggest string)</li> <li>Inferring that columns are distinct would be useful<ul> <li>e.g. OpenRefine notices that columns are almost-distinct</li> </ul> </li> </ul> </li> </ul> </li> <li>We should not assume we don\u2019t have an undo, we\u2019re not trying to make the product as-is useful, we\u2019re trying to make our MVP usable and we\u2019ll have undo by the time the MVP ships<ul> <li>Massively shifts balance towards being more liberal</li> </ul> </li> <li>Mathesar should feel magical to work with: things we do for the user like converting data, making suggestions should enhance the user experience.<ul> <li>But we should not do things without user approval/confirmation.</li> <li>Raja Parasuraman et al., \u201cA Model for Types and Levels of Human Interaction with Automation.\u201d Each line describes the tool as one of the following:<ul> <li>Fully manual</li> <li>Showing the user every option</li> <li>Narrowing the options</li> <li>Suggesting the \u201cbest\u201d</li> <li>Asking the user to approve an action</li> <li>Giving the user time to veto a selected action</li> <li>Keeping the user informed of actions that have been taken</li> <li>Responding to user inquiry about actions that have been taken</li> <li>Deciding when to inform the user of actions that have been taken</li> <li>Fully autonomous</li> </ul> </li> <li>We\u2019ll need to apply this scale to individual features.</li> </ul> </li> <li>What do we do when the user tries to cast to a column and the data isn\u2019t supported?<ul> <li>We should try, if there\u2019s an error and it\u2019s nullable, then offer to delete the data that doesn\u2019t fit.</li> <li>We might want customized actions based on types, but not for the MVP</li> </ul> </li> <li>Users need to identify nullable / non-nullable column (field)<ul> <li>also need to identify whether column is distinct/unique</li> <li>default value for column</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#2021-05-12","title":"2021-05-12","text":""},{"location":"team/meeting-notes/2021/05/2021-05/#design-hand-off-document","title":"Design Hand-off Document","text":"<ul> <li>Document Sections (UX, Interactions and UI)</li> <li>Wiki Entry for Deliverables</li> <li>Throwaway vs. permanent documents <ul> <li>Throwaway documents will be published in a separate section on the wiki</li> </ul> </li> <li>First design hand-off document is the spec for read only tables<ul> <li>We\u2019ll discuss the spec asynchronously</li> </ul> </li> <li>Implementation phase will be documented after we actually implement a spec</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#new-matrix-server","title":"New Matrix server","text":"<ul> <li>matrix.mathesar.org</li> <li>Accounts limited to core team</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#more-wiki-updates","title":"More wiki updates","text":"<ul> <li>New navigation</li> <li>Concepts page updates<ul> <li>https://wiki.mathesar.org/archive/product/concepts</li> </ul> </li> <li>Design inspiration section:<ul> <li>https://wiki.mathesar.org/archive/product/design/exploration/data-types</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#new-github-issues","title":"New GitHub issues","text":"<p>Frontend workflow issues</p> <ul> <li>https://github.com/centerofci/mathesar/issues/123</li> <li>https://github.com/centerofci/mathesar/issues/124</li> </ul> <p>Icon library issue</p> <ul> <li>https://github.com/centerofci/mathesar/issues/125<ul> <li>Assigned to Ghislaine and moved to active work</li> <li>Noun Project icons don\u2019t all have the same license, probably worth finding a different icon set.</li> <li>Icon set ideas<ul> <li>Feather Icons</li> <li>Font Awesome<ul> <li>https://fontawesome.com/license/free</li> </ul> </li> <li>Material Design Icons</li> </ul> </li> <li>Icon set should offer SVG<ul> <li>Font Awesome offers SVG</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#2021-05-10","title":"2021-05-10","text":""},{"location":"team/meeting-notes/2021/05/2021-05/#ghislaines-design-process","title":"Ghislaine\u2019s Design Process","text":"<p>(Ghislaine shared Miro board via screenshare)</p> <p>The process is documented on the wiki: https://wiki.mathesar.org/archive/product/design/process</p>"},{"location":"team/meeting-notes/2021/05/2021-05/#steps","title":"Steps","text":"<ul> <li>Discovery</li> <li>Definition</li> <li>Design<ul> <li>Design problem framing</li> <li>Point of view, goals, constraints</li> <li>Explore possibilities</li> <li>Prototyping</li> <li>Testing</li> </ul> </li> <li>Development</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#explanation","title":"Explanation","text":"<ul> <li>Kriti &amp; Brent did discovery and definition before Ghislaine joined, Ghislaine had to do some of her own work on this.</li> <li>\u201cDefinition\u201d is our product roadmap</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#discussion_1","title":"Discussion","text":"<ul> <li>We don\u2019t want to go in circles on definition, we should take our product roadmap as our strategy for now</li> <li>We shouldn\u2019t be adding things to the roadmap, but we\u2019ll need to clarify or remove certain things.</li> <li>We\u2019ll review the roadmap before next time to make sure essential architectural things are on it:<ul> <li>e.g. undo functionality, localization</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#design-principles-closing-design-issues","title":"Design Principles &amp; Closing Design Issues","text":"<ul> <li>Ghislaine has rough notes that she\u2019s still organizing</li> <li>Principles are a manual for making decisions so that the designer doesn\u2019t have to be involved in every decision</li> <li>Two different targets for design:<ul> <li>Process-oriented: Enabling community &amp; co-creation</li> <li>Result-oriented: Users accept product features, and we can measure acceptance.</li> </ul> </li> <li>We design for impact and for implementation (not research and discovery and pushing boundaries, at this point)</li> <li>Competing options - we decide based on something that\u2019s implementable sooner and have the optimal impact on the users<ul> <li>e.g. increased effort for users has a big impact (may not be positive)</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#principles-draft","title":"Principles draft","text":"<ul> <li>Change plan if circumstances change</li> <li>Sufficient documentation to justify design decisions</li> <li>Shared sense of ownership on design</li> <li>Anticipate effects of project results on the user (we might not be right, but we try)</li> <li>Communication methods increase mutual understanding but do not delay work</li> <li>Regular contact with key stakeholders of the project</li> <li>Make invisible work visible to the user to build and maintain trust</li> <li>The work and how to do it is based on knowledge, not belief</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#discussion_2","title":"Discussion","text":"<ul> <li>It\u2019s important to facilitate users becoming developers, so integrating both process and result is essential<ul> <li>We can try to help users create the results they want through their own development</li> </ul> </li> <li>Having a design system will be helpful so that developers don\u2019t have to worry about design, and design system changes can be handled separately</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#upcoming-features","title":"Upcoming Features","text":"<p>What\u2019s next after read only tables?</p> <ul> <li>Table creation from file import</li> <li>Records editing (DML)</li> <li>Table manipulation (DDL)</li> </ul> <p>TODO: Kriti to add DDL and DML to wiki</p>"},{"location":"team/meeting-notes/2021/05/2021-05/#last-week-retrospective_1","title":"Last week retrospective","text":""},{"location":"team/meeting-notes/2021/05/2021-05/#pavish_4","title":"Pavish","text":"<ul> <li>Tickets and implementation for client routing takeover. See current PR.</li> <li>PR raised also:<ul> <li>includes changes for npm dependency reinstall on starting containers (based on our discussion in Matrix channel)</li> <li>moves existing front-end to svelte</li> <li>loads pre-rendered data for implemented routes + through API on second visit</li> <li>handles scss preprocessing</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#kriti_4","title":"Kriti","text":"<ul> <li>Mainly wiki updates, took longer than expected.</li> <li>Some API work <ul> <li>finished records API</li> <li>updates to schema API (to unblock Pavish)</li> <li>database keys API (to unblock Pavish)</li> </ul> </li> <li>Licensed Mathesar under GPL.</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#brent_4","title":"Brent","text":"<ul> <li>Finished testing of old prototype code</li> <li>Got into types.<ul> <li>Implementation of type casting:  Quick, easy (maybe 80 LOC)</li> <li>Testing of type casting: Complex, and raises a number of questions (ongoing)</li> <li>Overall, the main difficulty is mostly UX concerns; the implementations are generally easy.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#ghislaine_4","title":"Ghislaine","text":"<ul> <li>Wireframes and UI exploration.</li> <li>Created issues for design tasks.</li> <li>Started draft for UX principles, but wanted to experiment a bit with the process before moving forward</li> <li>Defined initial UI design in Figma.</li> <li>Wiki updates. </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#this-weeks-plan_1","title":"This week\u2019s plan","text":"<p>General plan is to focus on layout and read-only table view, and if no work is needed on that front, focus on supporting upcoming features decided above (probably file import).  * Question (from Brent):  Is there any support needed in the DB that doesn\u2019t currently exist?       * No, but types support the upcoming import flow</p>"},{"location":"team/meeting-notes/2021/05/2021-05/#pavish_5","title":"Pavish","text":"<ul> <li>Create tickets and work on reusable components required for UI, without finalized css<ul> <li>Textbox (text, password, number, email)</li> <li>Buttons</li> <li>Checkbox, Radio</li> <li>File drag &amp; drop import</li> <li>If I get time,<ul> <li>custom select box (has the most work - thinking of importing code from one of my open-source projects: select-madu)</li> </ul> </li> </ul> </li> <li>Discuss and decide on table view read-only UI</li> <li>Will not be available during usual working hours on Tuesday and Wednesday, since I have conflicting meetings with my current job</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#brent_5","title":"Brent","text":"<ul> <li>Continue with types, unless there\u2019s something more pressing (it\u2019s not really related to the week goal, so I can flex if needed)</li> <li>Specifically, I want to bring some precision to the mapping between the types in the roadmap and implementation, and make sure we\u2019re on the same page for each and every one.<ul> <li>(Note from Kriti: that would be great)</li> </ul> </li> <li>Finish type casting (it\u2019s actually done, but the previous applies)</li> <li>Move on to type inference (easy once we\u2019ve made all necessary decisions about each type implementation)</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#kriti_5","title":"Kriti","text":"<ul> <li>Sync DB and webapp if DB changes out from under webapp</li> <li>API updates needed for read-only table view</li> <li>File import API</li> <li>Set up some more infrastructure for Mathesar (wiki update bot, GitHub bot)<ul> <li>might need separate Matrix server</li> </ul> </li> <li>If I have time, handle TSV file imports (I might work with Joi on this if he\u2019s interested)<ul> <li>(note from Brent:  If you switch to using the <code>psycopg2.copy_expert</code> (which I recommend), this will be extremely easy)</li> </ul> </li> </ul> <p>I\u2019ll be spending some time on hiring IT support for CCI.</p>"},{"location":"team/meeting-notes/2021/05/2021-05/#ghislaine_5","title":"Ghislaine","text":"<ul> <li>Finalize first version of design process (diagrams, additional activity details)</li> <li>Complete UI for read-only tables</li> <li>Present UX principles and add first draft to wiki</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#read-only-tables","title":"Read-Only Tables","text":"<p>What decisions do we need to make in order to design and develop read-only tables?</p> <ul> <li>How users locate tables<ul> <li>Sidebar navigation</li> <li>Naming tables</li> <li>Bookmark</li> <li>Recent</li> <li>Search across table</li> </ul> </li> <li>How users prepare tables<ul> <li>Opening a table to read</li> <li>Browsing table content</li> <li>Verify record count (basic table stats)</li> <li>Finding a table record location</li> <li>View options/pagination</li> <li>Save query (AWS Athena)</li> </ul> </li> <li>How user confirms table content<ul> <li>Real time editing / data accuracy</li> <li>Is it updated?</li> </ul> </li> <li>How user executes table reading<ul> <li>Filtering?</li> <li>Sorting</li> </ul> </li> <li>How user modifies table reading<ul> <li>Open another table</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#questions-from-engineering","title":"Questions from Engineering","text":"<ul> <li>How do we handle an existing database with thousands of tables or schemas in the sidebar?</li> <li>How do we handle a table with hundreds of thousands of records?</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#discussion_3","title":"Discussion","text":"<ul> <li>AWS Athena as an example<ul> <li>Left pane has your tables</li> <li>You can create tabs for different queries (on any tables or combinations of tables from the left pane)</li> <li>You can run the queries</li> <li>When you change tabs, the results change to match the displayed query.</li> <li>You can save a query so that you can close a tab, and get back to it (it reopens in an editable state)</li> <li>Tabs from last time are still open when you log back into the account.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#2021-05-07","title":"2021-05-07","text":""},{"location":"team/meeting-notes/2021/05/2021-05/#wiki-restructure-walkthrough","title":"Wiki restructure walkthrough","text":"<ul> <li>New Product section<ul> <li>new Concepts page</li> </ul> </li> <li>New Engineering section</li> <li>Community &amp; Meeting Notes section moved to the root</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#wiki-purpose","title":"Wiki purpose","text":"<ul> <li>Spending time on the wiki now to set up structure</li> <li>We should all get into the habit of updating the wiki/documentation regularly, to make it accessible for future contributors / onboarding</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#wiki-updates-review-process","title":"Wiki updates review process","text":"<ul> <li>We want to keep review process minimal, since we\u2019ll be updating the wiki frequently</li> <li>Major wiki changes should be reported in code review channel and appropriate people tagged<ul> <li>Use your discretion</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#future-ideas","title":"Future ideas","text":"<ul> <li>Blog hosted on the wiki (can post to Hacker News, etc.)<ul> <li>Blog post page type is on the wiki.js roadmap</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#keeping-the-wiki-up-to-date","title":"Keeping the wiki up to date","text":"<p>How do we make sure the wiki stays up to date?</p> <ul> <li>Wiki should not need to stay in sync with the code, it should be for higher level documents/specs</li> <li>We should update wiki when:<ul> <li>Designing new features</li> <li>Concluding GitHub discussions</li> <li>Making major technical decisions</li> </ul> </li> <li>Previously, wiki was used for things that belonged more in GitHub discussions, so that caused it to go out of date quickly</li> <li>Kriti will keep an eye on making sure the wiki is up to date</li> <li>We should figure out how to post wiki updates to Matrix</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#figma-designs","title":"Figma designs","text":"<p>(Ghislaine demoed Figma designs)</p> <ul> <li>Designs are exploratory but general feedback is welcome</li> <li>Icons should always be accompanied by labels</li> <li>Lots of questions coming up, decisions need to be made</li> <li>Going simple on UI design</li> <li>Icons are Noun Project</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#questions-and-discussion","title":"Questions and Discussion","text":"<ul> <li>What does the pagination look like?</li> <li>Header, etc. should be sticky</li> <li>Are views in Mathesar separate from database views?<ul> <li>Mathesar views are backed by database views</li> <li>Are forms views?</li> <li>Are calendars views?</li> <li>Maybe forms and calendars should be different from views<ul> <li>Can make the decision later</li> </ul> </li> </ul> </li> <li>Will we support sorting, grouping, etc. on Tables?<ul> <li>Yes, but if you want to save it, then it\u2019ll be made into a View</li> </ul> </li> <li>Will we show the ID in the record view?<ul> <li>Yes</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#ideas","title":"Ideas","text":"<ul> <li>Pinning columns would be good to help users identify important columns</li> <li>Can we get back to the record you were editing if you open a record form and go back to the record view?<ul> <li>It\u2019s doable</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#next-steps","title":"Next steps","text":"<ul> <li>We\u2019ll start with designing the general layout and read-only table<ul> <li>Pavish &amp; Ghislaine will make a list of what decisions block this from their end</li> </ul> </li> <li>We\u2019ll also decide on Monday what we\u2019ll work on after the read-only view so we can start planning on decisions that need to happen on backend/design front</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#local-development","title":"Local Development","text":"<ul> <li>Image is constructed after package install<ul> <li>typical for prod</li> <li>requires rebuilding when new packages are installed</li> <li>Could do the installation in docker-compose</li> </ul> </li> <li>Improve documentation ASAP</li> <li>Will continue discussion async</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#2021-05-05","title":"2021-05-05","text":""},{"location":"team/meeting-notes/2021/05/2021-05/#internship-update","title":"Internship update","text":"<ul> <li>Eamon is now starting on May 24.</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#hand-off-design-to-development","title":"Hand-off design to development","text":""},{"location":"team/meeting-notes/2021/05/2021-05/#questions","title":"Questions","text":"<ul> <li>What does design need to consider as part of the hand-off to development process? </li> <li>How does the implementation planning process look like for design solutions? </li> <li>How do we test and refine design solutions as part of this process? </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#discussion_4","title":"Discussion","text":"<ul> <li>Waiting on the entire design to be done before starting frontend developmment seems like overkill</li> <li>Pavish and Ghislaine can work in parallel<ul> <li>e.g. Pavish can start on the basic table structure while Ghislaine is defining more complex interactions</li> </ul> </li> <li>There will always be iterative changes even after a module is developed</li> <li>There should be design review meetings to catch small issues (like selecting multiple options instead one)<ul> <li>Design reviews will be all four of us, since it impacts the backend</li> <li>We\u2019ll use existing Mathesar check-in meetings for design reviews, it will be an agenda item</li> <li>Ghislaine will post the link to the Figma project beforehand</li> </ul> </li> <li>Review meetings should take care of testing/refining desigh solutions<ul> <li>Once we see it live, there will be some refinements noticed that will involve additional issues being created.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#staging-environment","title":"Staging environment","text":"<ul> <li>We should set up a staging environment with real data<ul> <li>Consider the team using Mathesar to keep track of project related information<ul> <li>User interview ideas</li> <li>Non-code related todos</li> </ul> </li> <li>Have a large (millions of rows) database stored on staging so we can identify issues</li> <li>Set it up on RDS or GCP equivalent so that we can make sure it works</li> </ul> </li> <li>It would be good for all of us to have our own private instances of Mathesar as well that we use regularly</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#design-prototyping-sandbox","title":"Design Prototyping Sandbox","text":"<p>What environment can we create so that design interactions can be built and experienced as prototypes by the team or internal/external stakeholders.</p> <ul> <li>Would be good for Ghislaine to have access to our components so that she can design with HTML<ul> <li>Single source of truth for all styles</li> </ul> </li> <li>Ghislaine would be building static HTML files with some javascript from existing components, there\u2019s no need to edit existing files on production</li> <li>Potential solutions<ul> <li>We could have a Storybook for components, but it wouldn\u2019t work for entire application pages</li> <li>Ghislaine could download latest CSS from client builds</li> </ul> </li> </ul> <p>Solution: for now, just download latest CSS and apply to local HTML files</p> <ul> <li>Pavish can help Ghislaine set up a local development environment when ready</li> </ul> <p>Ghislaine will match CSS class names to Figma components.</p>"},{"location":"team/meeting-notes/2021/05/2021-05/#design-principles-closing-design-issues_1","title":"Design Principles &amp; Closing Design Issues","text":"<ul> <li>Ghislaine is working on these on parallel with Figma designs</li> <li>We\u2019ll discuss on Friday</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#mathesar-philosophy","title":"Mathesar Philosophy","text":""},{"location":"team/meeting-notes/2021/05/2021-05/#exposing-db-structure-via-object-view-of-data","title":"Exposing DB Structure via Object View of Data","text":"<ul> <li>Databases are different from spreadsheets because they\u2019re actually less table oriented<ul> <li>Fundamental structure is record, everything is relationship between records</li> <li>Tabular view is useful for some things, but is limited</li> </ul> </li> <li>Just because databases have tables, doesn\u2019t mean we should only be focused on tables or everything needs to be a table<ul> <li>Eventually we will be able to handle non-rectangular data, Postgres can do that</li> </ul> </li> <li>Table is the default view, but we\u2019ll support kanban, cards, calendar etc.</li> <li>Ghislaine will share paper on spreadsheet vs. record design from MIT<ul> <li>We need a record view</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#plugins","title":"Plugins","text":"<ul> <li>People should be able to build their own views and types as plugins, probably more<ul> <li>Maybe aggregations or groupings, other types of data manipulations</li> </ul> </li> <li>Too early to discuss plugin architecture in any detail</li> <li>Mathesar is a \u201cswiss army knife\u201d for data, people should be able to build their own set of tools, not just have a pre-configured set of tools</li> <li>We should handle reflection really well etc. to make Mathesar useful for power users </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#routing","title":"Routing","text":"<p>(Pavish demoed local Svelte-rendered Mathesar for CSV upload form)</p> <ul> <li>Currently working on table view</li> <li>Routing is handled client-side</li> <li>Need API for database name and table names in schemas<ul> <li>Kriti will work on this today</li> </ul> </li> <li>Discussed best way to render JSON data in the Django template<ul> <li>We will switch to using serializers to get data and pass it to the template via context</li> <li>this will also ensure that the format matches the API and allows consistency when working with the API</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#design-section-on-wiki","title":"Design section on wiki","text":"<p>(Kriti demoed work on Design section on wiki)</p> <ul> <li>Ghislaine will update wiki later with Design Principles &amp; Design Process</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#2021-05-03","title":"2021-05-03","text":""},{"location":"team/meeting-notes/2021/05/2021-05/#meetings","title":"Meetings","text":"<ul> <li>Meetings are three times a week now</li> <li>We should continue to use Mondays for planning the week out + any discussion.</li> <li>Wednesdays and Fridays should be for general updates/discussion/talking through problems. ideally, we\u2019ll have an agenda in advance (nothing formal, but someone should have a topic they want to talk about or brainstorm/bounce ideas off of people) and cancel the meeting if there\u2019s nothing to talk about.</li> <li>We\u2019re not going to cancel any meetings next week, just to see how it goes.</li> <li>We have to use the full hour, we\u2019ll end early if we\u2019re done with discussion.</li> <li>The plan is to have fewer meetings in the long term, doing things asynchronously is better for community involvement, documentation, etc.<ul> <li>It\u2019s important to have more meetings at this stage until we all fully grok the project and get to know each other better.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#last-week-retrospective_2","title":"Last week retrospective","text":""},{"location":"team/meeting-notes/2021/05/2021-05/#pavish_6","title":"Pavish","text":"<ul> <li>Set up frontend development environment and workflow - everything needed to get started with frontend</li> <li>Documentation - only updated README, see currently open PR</li> <li>Kicked off discussions for production build and E2E integration tests<ul> <li>Too early for this right now, but we should keep it in mind</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#ghislaine_6","title":"Ghislaine","text":"<ul> <li>A round of wireframes for data exploration, discussions with Kriti<ul> <li>Research revealed that BI platform vs. web analytics etc. all solve similar problems differently</li> <li>Went back to Dabble DB to look at it again with more information about what\u2019s under the hood for us<ul> <li>e.g. they don\u2019t have \u201ctables\u201d, we want to expose more of the DB structure</li> <li>they made different layout decisions</li> </ul> </li> </ul> </li> <li>Created a document: Initial Research and Wireframing Conclusions</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#brent_6","title":"Brent","text":"<ul> <li>Moved stuff over from the prototype repo to main repo<ul> <li>Prototype used SQLAlchemy 1.3, current repo uses 1.4, which implements the \u201c2.0 API\u201d and deprecates a bunch of things</li> <li>Took a while to port over, especially <code>copy</code> method, which was deprecated for being non-deterministic/imprecise, leading to unexpected behavior<ul> <li>We had to implement our own <code>copy</code> method in a simplified Mathesar Column class</li> </ul> </li> </ul> </li> <li>Ticketing</li> <li>Discussions<ul> <li>e.g. function signatures - Kriti &amp; Brent were using different types of signatures, and needed to get in sync</li> </ul> </li> <li>Moving over stuff from the prototype is done, except for Jupyter notebook and random table creation, which will not be moved over</li> <li>Put together demo for Ghislaine and Pavish</li> <li>A bunch of bug fixes</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#kriti_6","title":"Kriti","text":"<ul> <li>Worked mainly on the API<ul> <li>Mostly done<ul> <li>CRUD on records (no PUT (not necessary))</li> <li>Read-only on schemas and records</li> </ul> </li> </ul> </li> <li>Did work on testing<ul> <li>Django</li> <li>CSV uploading</li> <li>API</li> </ul> </li> <li>GH actions to run tests on PRs</li> <li>Simplified Issue templates a bit</li> <li>Meetings, 1:1s, planning, licensing discussions</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#this-weeks-plan_2","title":"This week\u2019s plan","text":""},{"location":"team/meeting-notes/2021/05/2021-05/#pavish_7","title":"Pavish","text":"<ul> <li>Implement routing on client (take over from server after initial page load)</li> <li>Table view using Svelte</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#ghislaine_7","title":"Ghislaine","text":"<ul> <li>Learned enough from the wireframing process, we can go higher-fidelity</li> <li>Will work on creating UI for inventory use case in Figma<ul> <li>No design system yet, since it\u2019ll just slow things down</li> </ul> </li> <li>User will be working with views</li> <li>Write down Mathesar principles to make decisions<ul> <li>Talk about how to close design issues</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#brent_7","title":"Brent","text":"<ul> <li>Writing tests for last week\u2019s functionality</li> <li>Types and type inference</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#kriti_7","title":"Kriti","text":"<ul> <li>Update wiki, roadmap, usecases &amp; concepts. Better documentation.</li> <li>Sync webapp and db tables</li> <li>GPL for Mathesar</li> <li>Update CSV import to save CSV file</li> <li>API for CSV import<ul> <li>One API for uploading CSV</li> <li>One API for showing 10-20 lines of CSV</li> <li>Status of CSV upload</li> <li>API to actually create table</li> </ul> </li> <li>If time permits, allow TSV import (to be co-ordinated with Brent)</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#community-readiness-check-in","title":"Community readiness check-in","text":"<ul> <li>License<ul> <li>GPL</li> </ul> </li> <li>Roadmap<ul> <li>Kriti to update wiki</li> </ul> </li> <li>Tickets<ul> <li>Still a few weeks away from making publicly contributable tickets</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#other-discussion_1","title":"Other Discussion","text":""},{"location":"team/meeting-notes/2021/05/2021-05/#url-routing","title":"URL Routing","text":"<ul> <li>Routes might need to be duplicated in both backend (Django URLs) and frontend, since we need to handle routing from both places depending on whether the user is already in the application</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#exposing-db-structure-vs-object-view-of-data","title":"Exposing DB Structure vs. Object View of Data","text":"<ul> <li>Not mutually exclusive to expose DB structure and let people work in different views</li> <li>Discussion will continue async</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#csv-uploads-type-inference","title":"CSV Uploads &amp; Type Inference","text":"<ul> <li>Current workflow is to upload a CSV file directly, we want to change it to store the CSV file, show 20-30 lines to the user, infer types, allow users to change types, and then create the table.<ul> <li>Type inference should be in the database, not Python so the fastest way to infer is to make a table full of strings first.</li> </ul> </li> <li>Type inference - public function signatures<ul> <li>Infer a type for a column</li> <li>Infer types for columns of an entire table</li> <li>Automated flow \u2013&gt; upon upload, show types to the user</li> </ul> </li> <li>Discussion will continue async</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#closing-design-issues","title":"Closing Design Issues","text":"<ul> <li>How to close design issues on GitHub? What needs to be done?</li> <li>Discussion will continue async</li> </ul>"},{"location":"team/meeting-notes/2021/05/2021-05/#matrix-related-discussions","title":"Matrix-related Discussions","text":"<ul> <li>Tech discussions should happen in the Mathesar public channel where possible.</li> <li>Set up a separate code review channel for PR review requests.</li> <li>Mittens says \u201cmiaow\u201d</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/","title":"June 2021 meeting notes","text":""},{"location":"team/meeting-notes/2021/06/2021-06/#2021-06-30","title":"2021-06-30","text":"<p>Please see 2021-06-30 retrospective &amp; plan discussion</p>"},{"location":"team/meeting-notes/2021/06/2021-06/#2021-06-23","title":"2021-06-23","text":"<p>We moved to using GitHub Discussions instead of having a synchronous meeting.</p> <p>Please see: 2021-06-23 retrospective &amp; plan discussion.</p>"},{"location":"team/meeting-notes/2021/06/2021-06/#2021-06-15","title":"2021-06-15","text":""},{"location":"team/meeting-notes/2021/06/2021-06/#ui-design-for-mvp","title":"UI Design for MVP","text":"<ul> <li>How do we determine the expected/frequent interface actions? </li> <li>Needs and usage patterns of different users</li> <li>Interface Specs + User Model (Goals, Outcomes, Actions, Reactions)</li> <li>Usability Testing and Interaction Costs</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#discussion","title":"Discussion","text":"<ul> <li>Let\u2019s not try to come up with a generic approach for how to approach all design specs, we don\u2019t need it at this time and it\u2019ll slow us down.</li> <li>We might need to consider usage patterns in some cases, if it affects implementation.</li> <li>We shouldn\u2019t make assumptions about the user.</li> <li>We then discussed in context of the filtering/sorting/grouping design review.</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#filteringsortinggrouping-design-review","title":"Filtering/Sorting/Grouping Design Review","text":"<ul> <li>The layout is not final, Ghislaine needs to finish editing records, etc. to come up with the final layout.</li> <li>Pavish is not going to worry about layout while implementing, filters will be implemented with a button to show/hide panel.</li> <li>Interactions are more important than layout at this stage.</li> <li>Pavish should feel free to make implementation decisions as needed and create intermediate stages where the UI doesn\u2019t match the UI that Ghislaine designs, the MVP and design should match by the end of shipping the MVP.</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#development-workflow","title":"Development Workflow","text":"<ul> <li>We probably don\u2019t need a weekly planning session, we can just pick issues from the next milestone once we\u2019re done with what we\u2019re working on.</li> <li>Kriti will aim to keep issues specced out a few milestones ahead.</li> <li>When you\u2019re ready to work on something:<ul> <li>move to \u201cActive\u201d project and remove from \u201cBacklog\u201d project.</li> <li>assign to yourself.</li> </ul> </li> <li>New format for retrospective &amp; weekly work, focused on type of work rather than who did the work.<ul> <li>Reasoning: we all participate in various kinds of work and it\u2019s finishing things that move the product forward.</li> </ul> </li> <li>We\u2019ll probably have around 300 issues to resolve in 5 months, which means we need to be closing 3-4 issues each per week.<ul> <li>Obviously this is a rough/imperfect measurement, but might be useful to keep in mind.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#retrospective","title":"Retrospective","text":"<p>This covers work since our last meeting.</p> <p>General comments:</p> <ul> <li>We did a good job on async discussions last week, both on design review and figuring out implementation on various issues.</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#product","title":"Product","text":"<ul> <li>GitHub issues with product specs were created through Initial Data Types milestone (which is #8 on the roadmap).</li> <li>Some issues for future milestones were also created, but only milestones #1-#8 should be viewed as complete<ul> <li>that is, relatively complete. It\u2019s expected that new issues may come up during implementation.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#design","title":"Design","text":"<ul> <li>Design for filtering, sorting and grouping of tables was completed and fully reviewed/finalized.</li> <li>Design specs for lookup field component were created and are actively undergoing review.</li> <li>Initial research for \u2018Add a Record\u2019 design.</li> <li>Definition of component library <ul> <li>started with typography and tested it with certain usecases</li> <li>Started working on color palette with adjectives for the product</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#development","title":"Development","text":"<ul> <li>DB Syncing may have been too large in scope for single PR<ul> <li>many conflicts whenever merging master into syncing branch</li> <li>more time spent keeping aligned with other work than producing the feature</li> </ul> </li> <li>Ongoing discussion about setting up the API to support filtering (almost resolved)</li> <li>PRs merged for filtering schemats and tables in API</li> <li>PR for supporting TSV file imports almost ready for merge, after various discussions and changes in implementation approach.</li> <li>Work on table pagination in the frontend is ongoing.</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#infrastructure","title":"Infrastructure","text":"<ul> <li>Wiki automation scripts cleaned up and finished (for now).</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#active-work","title":"Active Work","text":"<p>This is work planned for the upcoming week.</p>"},{"location":"team/meeting-notes/2021/06/2021-06/#product_1","title":"Product","text":"<p>No product work planned for this week, other than any incidental work that comes up during design.</p>"},{"location":"team/meeting-notes/2021/06/2021-06/#design_1","title":"Design","text":"<ul> <li>Finalize design for 2. Tables for File Import milestone:<ul> <li>Review and finalize design for lookup field component</li> </ul> </li> <li>Design for 4. Editable Tables milestone:<ul> <li>\u2018Add a Record\u2019</li> <li>Editing records</li> <li>Deleting records</li> </ul> </li> <li>Work on the testcases for the color palette and the spacing/grids guide in the component library</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#development_1","title":"Development","text":"<ul> <li>DB Syncing is almost done for schemata<ul> <li>We should use a PR to validate the different approach (i.e., with name as a cached property rather than field) before completing same for tables</li> </ul> </li> <li>Complete DB syncing for tables</li> <li>Continue frontend work on 1. Viewing Tables milestone:<ul> <li>Pagination for tables</li> <li>ARIA accessibility for tab and tree components</li> </ul> </li> <li>Backend work on 2. Tables for File Import milestone:<ul> <li>Add inference to table creation</li> <li>DB function to edit column names</li> <li>Column API</li> <li>Filters for table list API</li> <li>Finish TSV file upload </li> <li>Filters for record list API</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#infrastructure_1","title":"Infrastructure","text":"<ul> <li>Set up staging environment for Mathesar.</li> <li>Set up API documentation site.</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#meetings-and-meeting-time","title":"Meetings and meeting time","text":"<ul> <li>Current time overlaps with Openverse developer chat, which Dhruv participates in and Brent might like to go to.</li> <li>We\u2019re cancelling this meeting in lieu of weekly plan GitHub discussions</li> <li>People will schedule impromptu calls as needed to collaborate on specific work items, please don\u2019t hesitate doing this.</li> <li>We\u2019ll do social events for team bonding</li> <li>Galaxy Quest next Friday</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#2021-06-08","title":"2021-06-08","text":""},{"location":"team/meeting-notes/2021/06/2021-06/#welcome-dhruv","title":"Welcome Dhruv!","text":"<ul> <li>Dhruv is going to be contributing to engineering work</li> <li>Previously worked with Kriti and Brent at Creative Commons</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#meeting-format-and-communication-check-in","title":"Meeting format and communication check-in","text":"<ul> <li>How well are the weekly meetings working for everyone?<ul> <li>Better than 3 times a week</li> <li>Synchronous design review would be useful</li> </ul> </li> <li>Anything you\u2019d like to add or remove from the agenda?<ul> <li>Status updates doesn\u2019t seem like a good use of time.</li> <li>What should we do instead?<ul> <li>Having a meeting once a week seems useful, just to see each other.</li> </ul> </li> <li>Maybe focus the meeting on a process improvement.<ul> <li>More tangible results.</li> </ul> </li> <li>Don\u2019t forget to help Kriti take notes!</li> <li>Kriti also thinks status updates might not be the best use of time<ul> <li>Maybe shouldn\u2019t worry about always having something else to fill the time there.</li> </ul> </li> <li>Status updates could be more relevant if we have more dependencies/blockers.</li> <li>Write out status updates, take a moment to read them during the meeting, only discuss as needed.</li> </ul> </li> <li>Anything else we should discuss synchronously?<ul> <li>Design reviews?</li> <li>Ghislaine can share ahead a day ahead of time, once design is finalized, we could have a 20 min review</li> <li>Kriti: whole team might not need to attend</li> <li>Could be just Ghislaine and Pavish, other could be optional</li> </ul> </li> <li>Asynchronous communication<ul> <li>Let\u2019s try to use GitHub discussions for conversations.<ul> <li>We\u2019re all curious people who enjoy thinking about different things</li> <li>If we notice that a convo on Matrix is growing long, we should be assertive about moving it over to GH discussions</li> </ul> </li> <li>Threads and longer messages are better for people to participate in asynchronously.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#new-github-organization","title":"New GitHub organization","text":"<ul> <li>Milestones to represent roadmap items.<ul> <li>Everything we need for the MVP is there</li> <li>Deadlines should mean whole stack is done by then</li> <li>Design should be 2 weeks before</li> <li>Everyone please look at the roadmap asynchronously, make sure that things make sense.</li> <li></li> </ul> </li> <li>Backlog project reorganized for MVP work only.<ul> <li>Anyone can grab work from ready column</li> <li>Are we defining a triage process?<ul> <li>We won\u2019t define one for now, Kriti will handle triage of issues</li> </ul> </li> <li>Harder to define issues that are too far ahead</li> <li>We will add ordinal numbers to each road item<ul> <li>This will help with quickly sorting through things in the backlog view</li> </ul> </li> </ul> </li> <li>New Future project for post-MVP work.</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#new-matrix-channels","title":"New Matrix channels","text":"<ul> <li>Kriti set up <code>#code:matrix.mathesar.org</code> and <code>#design:matrix.mathesar.org</code> for conversations related to code or design.</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#retrospective_1","title":"Retrospective","text":""},{"location":"team/meeting-notes/2021/06/2021-06/#dhruvi","title":"Dhruvi","text":"<ul> <li>Did some reading about Design systems</li> <li>Started working on the typography </li> <li>Had 1:1 with Ghislaine and took feedback</li> <li>Could not do much due to College submissions</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#kriti","title":"Kriti","text":"<ul> <li>Updated documentation for new contributors</li> <li>Started converting roadmap to GitHub issues</li> <li>Various discussions/conversations/meetings/PR review etc.</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#pavish","title":"Pavish","text":"<ul> <li>Raised PR for readonly table</li> <li>Participated in some discussions/conversations</li> <li>Could not work much last week</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#ghislaine","title":"Ghislaine","text":"<ul> <li>Worked on filtering, sorting and grouping of tables</li> <li>1:1 with Dhruvi</li> <li>Initial feedback on filtering functionality layout and interactions</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#brent","title":"Brent","text":"<ul> <li>Worked on DB syncing<ul> <li>This will be a bit complex, and involve some changes to the schema and table models</li> <li>So far, the model changes are done, as well as some db-layer functions</li> </ul> </li> <li>Discussions</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#eamon","title":"Eamon","text":"<ul> <li>Finished most wiki automation scripts<ul> <li>Image organization</li> <li>Link rot detection</li> </ul> </li> <li>Started API work<ul> <li>Finished table creation from datafile endpoint</li> <li>Read lots of documentation</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#upcoming-work","title":"Upcoming work","text":""},{"location":"team/meeting-notes/2021/06/2021-06/#dhruvi_1","title":"Dhruvi","text":"<ul> <li>Work on Typography iterations </li> <li>Work on Color Schemes</li> <li>Have college exams this week so will be engaged there</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#kriti_1","title":"Kriti","text":"<ul> <li>Continue converting roadmap to GitHub issues (lots left to do)</li> <li>Setting up a Mathesar staging environment (needs to be behind auth).</li> <li>Set up API documentation if time permits</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#pavish_1","title":"Pavish","text":"<ul> <li>Work on GH issues that were spilled over from readonly table PR<ul> <li>Pagination</li> <li>Non-existent tables handling when present in url</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#ghislaine_1","title":"Ghislaine","text":"<ul> <li>Specs for filtering, sorting and grouping</li> <li>Review structure of design wiki and organize if needed</li> <li>Specs for lookup field component</li> <li>Start design for adding a new record to a table</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#brent_1","title":"Brent","text":"<ul> <li>DB syncing should be done in short order</li> <li>Going through many GH tickets, putting in order, starting some</li> <li>Focusing on backend work for CSV upload milestone.</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#eamon_1","title":"Eamon","text":"<ul> <li>Finish cleaning up wiki scripts</li> <li>Start filtering and sorting endpoints for tables and schemas</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#2021-06-01","title":"2021-06-01","text":""},{"location":"team/meeting-notes/2021/06/2021-06/#welcome-dhruvi","title":"Welcome Dhruvi!","text":"<ul> <li>Dhruvi is volunteering part-time to help with design</li> <li>Previously interned at Creative Commons</li> <li>Introductions</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#design-review-guidelines","title":"Design review guidelines","text":"<p>Please read the wiki page.</p>"},{"location":"team/meeting-notes/2021/06/2021-06/#yet-another-workflow-update","title":"Yet another workflow update","text":"<ul> <li>We have a lot to do to get to the MVP, we need to get ahead on product/design work.<ul> <li>Kriti will focus effort on converting roadmap to backlog of GitHub issues.<ul> <li>Both for design and development.</li> </ul> </li> <li>Aim is to help with consistent work output by allowing people to quickly work through issues and pick new ones.<ul> <li>Community contributors can also help.</li> </ul> </li> </ul> </li> <li>General principles for the MVP stage (and probably beyond):<ul> <li>Documentation is meant to be descriptive, not prescriptive.<ul> <li>Our aim is to write down what we need to make things easier for ourselves.</li> <li>Avoid rabbit holes (defining/planning out too far into the future), keep focus on getting a product out.</li> </ul> </li> <li>Iterate, don\u2019t try to get things perfect.<ul> <li>We are trying to make something that we can put in front of users quickly.</li> <li>We might have to change or throw away stuff later, that is absolutely fine.</li> </ul> </li> <li>Keep implementation simple.<ul> <li>Try to minimize assumptions about users, we cannot know what users want ahead of time.</li> <li>Given two options, if both rely on assumptions about users, choose the one that\u2019s simpler to implement.</li> </ul> </li> <li>There are probably exceptions to these, we don\u2019t know what they are.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#discussion_1","title":"Discussion","text":"<ul> <li>Applicable to cursor based pagination vs. limit/offset pagination.</li> <li>Note when we make decision between different implementations so that we can make sure to architect things in a way that we can change implementations later more easily.<ul> <li>Use Engineering Decisions wiki page.</li> </ul> </li> <li>User assumptions: things we don\u2019t know, e.g. if a user wants the ID visible or not.<ul> <li>It\u2019s not a user assumption when one option ends up with users losing data, and another doesn\u2019t. </li> </ul> </li> <li>Write down heuristics as we discuss them, not ahead of time.</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#new-labels","title":"New Labels","text":"<p>See: https://github.com/centerofci/mathesar/labels</p> <ul> <li>Added prefixes to different types of labels to make usage easier.</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#retrospective_2","title":"Retrospective","text":""},{"location":"team/meeting-notes/2021/06/2021-06/#brent_2","title":"Brent","text":"<ul> <li>Finished filtering and grouping logic in data layer</li> <li>Many discussions</li> <li>PR reviews</li> <li>Reading Django docs</li> <li>Working on DB object syncing flow</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#dhruvi_2","title":"Dhruvi","text":"<ul> <li>Introductory call with Ghislaine</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#eamon_2","title":"Eamon","text":"<ul> <li>Wiki automation scripts<ul> <li>Downloading images</li> <li>Organizing images</li> <li>Link rot detection</li> </ul> </li> <li>Reviewed Django and Django-REST</li> <li>Setup development environment</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#ghislaine_2","title":"Ghislaine","text":"<ul> <li>Pagination component specs</li> <li>Add table import feedback/review</li> <li>Discussions on pagination and naming convention for objects</li> <li>Design Review Guidelines</li> <li>Prepare first issue for Dhruvi</li> <li>Started work on Filter, Sort and Group Tables</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#kriti_2","title":"Kriti","text":"<ul> <li>API principles: https://wiki.mathesar.org/engineering/standards/api</li> <li>Many different conversations/discussions</li> <li>Ticket creation</li> </ul> <p>Time taken up by communication training, IT manager interviews, Memorial Day</p>"},{"location":"team/meeting-notes/2021/06/2021-06/#pavish_2","title":"Pavish","text":"<p>Couldn\u2019t work much last week.</p> <ul> <li>Implemented table &amp; tab sync with url</li> <li>Some discussions</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#upcoming-work_1","title":"Upcoming Work","text":""},{"location":"team/meeting-notes/2021/06/2021-06/#brent_3","title":"Brent","text":"<ul> <li>Continuing data syncing</li> <li>I\u2019ll be out tomorrow with dilated eyes until later in the day</li> <li>If time, minor performance modification w.r.t. getting records</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#dhruvi_3","title":"Dhruvi","text":"<ul> <li>Getting familiar with the concepts and roadmap</li> <li>Start working on the first task (Create a Design library)</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#eamon_3","title":"Eamon","text":"<ul> <li>Finish automation scripts (?)<ul> <li>Check for private images on public pages</li> <li>Fix link rot detection</li> </ul> </li> <li>Review Mathesar structure / API</li> <li>Get started on API work<ul> <li>Table creation</li> <li>TSV Support</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#ghislaine_3","title":"Ghislaine","text":"<ul> <li>Organize and close github design issues</li> <li>Review design wiki structure</li> <li>Design for filter, sort and group data</li> <li>Collaborate w Dhruvi on component library task</li> </ul>"},{"location":"team/meeting-notes/2021/06/2021-06/#kriti_3","title":"Kriti","text":"<p>FYI: Reassigned table creation API &amp; TSV file issue to Eamon</p> <ul> <li>Convert roadmap into specced out GitHub issues</li> <li>API documentation setup</li> <li>Meetings (external and internal)</li> </ul> <p>Time taken up by IT manager interviews and follow up until end of next week.</p>"},{"location":"team/meeting-notes/2021/06/2021-06/#pavish_3","title":"Pavish","text":"<p>Will not be able to allocate enough time this week as well.</p> <ul> <li>Continue working on readonly table view<ul> <li>Include import view within tab</li> <li>Store table state of open tabs in indexedDB and link with a Read/Write store</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/07/2021-07/","title":"July 2021 meeting notes","text":""},{"location":"team/meeting-notes/2021/07/2021-07/#2021-07-27","title":"2021-07-27","text":"<p>Please see 2021-07-27 planning discussion on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2021/07/2021-07/#2021-07-21","title":"2021-07-21","text":"<p>Please see 2021-07-21 planning discussion on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2021/07/2021-07/#2021-07-14","title":"2021-07-14","text":"<p>Please see 2021-07-14 planning discussion on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2021/07/2021-07/#2021-07-07","title":"2021-07-07","text":"<p>Please see 2021-07-07 planning discussion on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2021/08/2021-08/","title":"August 2021 meeting notes","text":""},{"location":"team/meeting-notes/2021/08/2021-08/#2021-08-31","title":"2021-08-31","text":"<p>Please see 2021-08-31 planning discussion on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2021/08/2021-08/#2021-08-25","title":"2021-08-25","text":"<p>Please see 2021-08-25 planning discussion on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2021/08/2021-08/#2021-08-17","title":"2021-08-17","text":"<p>Please see 2021-08-17 planning discussion on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2021/08/2021-08/#2021-08-10","title":"2021-08-10","text":"<p>Please see 2021-08-10 planning discussion on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2021/08/2021-08/#2021-08-03","title":"2021-08-03","text":"<p>Please see 2021-08-03 planning discussion on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2021/09/2021-09/","title":"September 2021 meeting notes","text":""},{"location":"team/meeting-notes/2021/09/2021-09/#2021-09-28","title":"2021-09-28","text":"<p>Please see 2021-09-28 weekly planning on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2021/09/2021-09/#2021-09-22","title":"2021-09-22","text":"<p>Please see 2021-09-22 weekly planning on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2021/09/2021-09/#2021-09-15","title":"2021-09-15","text":"<p>Please see 2021-09-15 weekly planning on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2021/09/2021-09/#2021-09-07","title":"2021-09-07","text":"<p>Please see 2021-09-07 weekly planning on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2021/09/2021-09/#2021-09-06","title":"2021-09-06","text":"<p>Meeting topic: \u201cState of Mathesar\u201d, part 2 - progress so far and next steps. Attendees: Brent, Ghislaine, Kriti, Pavish</p> <p>Please see the previous meeting\u2019s notes below to get full context for this meeting.</p>"},{"location":"team/meeting-notes/2021/09/2021-09/#process-retrospective","title":"Process Retrospective","text":""},{"location":"team/meeting-notes/2021/09/2021-09/#product-definition","title":"Product definition","text":"<p>Current process: Kriti making tickets</p>"},{"location":"team/meeting-notes/2021/09/2021-09/#issues","title":"Issues","text":"<ul> <li>Lots of tickets, huge volume</li> <li>Can\u2019t hash out the details ahead of time<ul> <li>e.g. money type ticket had potentially foreseeable issues, but only with serious time investment</li> <li>Missing details</li> <li>Interdependencies</li> </ul> </li> <li>Not enough frontend tickets<ul> <li>Tickets are for entire features</li> <li>More frontend tickets will be created after milestone 5</li> </ul> </li> <li>It\u2019s probably not worth the time to look through all tickets in detail ahead of time.<ul> <li>We need a different process for re-making a ticket once we start working on it and realize the issues with it.</li> <li>We can\u2019t spend an hour per ticket ahead of time, too many tickets.</li> </ul> </li> <li>Design tickets have the same issue with missing details and interdependencies, but it\u2019s assumed at the design-level tickets</li> <li>Issues open for community contributors (e.g. marked help wanted) need to be fully detailed.</li> </ul>"},{"location":"team/meeting-notes/2021/09/2021-09/#new-process","title":"New Process","text":"<ul> <li>Kriti will continue making tickets</li> <li>Hash out problems with Kriti as soon as they show up when you\u2019re implementing it.<ul> <li>Ad hoc calls or back and forth on the ticket.</li> </ul> </li> <li>Set up a new column in the Active project to put blocked tickets in, that way async communication can also happen and people can move on to other tickets.</li> </ul>"},{"location":"team/meeting-notes/2021/09/2021-09/#design-work","title":"Design work","text":"<ul> <li>We\u2019re focusing on designing features, not about how to guide non-technical users through the designs.<ul> <li>Do we need to complete the features first before guiding the users first?<ul> <li>We can\u2019t guide users until the product is fully finished.</li> <li>Some decisions need to be made with that in mind.</li> </ul> </li> <li>Two stage process:<ul> <li>Test with users and make improvements before release</li> <li>Continue to make improvements after release.</li> </ul> </li> </ul> </li> <li>Once we have all the pieces implemented, we can think through user scenarios and we\u2019ll be thinking about things as a \u201cuser flow\u201d rather than a feature.<ul> <li>e.g. user may not \u201ccreate a view\u201d, they\u2019ll end up with a view</li> <li>The good thing is that we\u2019re not doing anything too abstract right now, we do need to consider user flow when creating abstract things.</li> </ul> </li> <li>By the time we ship alpha or beta, we should have one global prototype.<ul> <li>UI revamp will affect them.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/09/2021-09/#design-review-and-collaboration","title":"Design review and collaboration","text":"<ul> <li>Better notifications for design review deadlines<ul> <li>Review cycle has been shortened to 2 days for all designs<ul> <li>This is to match PR review cycles</li> </ul> </li> </ul> </li> <li>Maybe use wiki repo PRs for design reviews?<ul> <li>Not accessible to the community, not a good option</li> </ul> </li> <li>The team can manage notifications better by using the GitHub notification inbox</li> <li>Ghislaine will post in standups that she\u2019s blocked a day ahead of time</li> <li>GitHub discussion title - use [Draft], [In Progress], [Complete] - or use labels</li> <li>The usual review process works well, Ghislaine and Pavish can do ad-hoc calls if needed.</li> <li>Pretty good feedback overall</li> <li>Mention things that are good about the design<ul> <li>Knowing what is good/intuitive is helpful to the design process</li> <li>UX is something you often notice only when it\u2019s missing / pissing you off</li> </ul> </li> <li>Currently not catching \u201cglobal\u201d flows (i.e., creating a table vs. view might confuse in combination)</li> </ul>"},{"location":"team/meeting-notes/2021/09/2021-09/#frontend-development","title":"Frontend development","text":"<ul> <li>Need to flesh out frontend tickets<ul> <li>APIs and design changes needed for the ticket</li> </ul> </li> <li>Having parallel file imports took a week, we probably didn\u2019t need it.<ul> <li>Figure issues out ahead of time</li> </ul> </li> <li>When starting a milestone, figure out everything for all the issues in that milestone and get it sorted before started on the milestone<ul> <li>After milestone 5, we have everything we need for milestone 5 (current milestone)</li> </ul> </li> <li>Sync design with frontend<ul> <li>Staging needs to be up, hopefully next week</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/09/2021-09/#backend-development","title":"Backend development","text":"<ul> <li>How to take a better approach to iteration?<ul> <li>Previous discussion about product planning process covers this.</li> <li>e.g. money type - currently, inference will be fairly naive. we can pull some parts out of current tickets because cost/benefit is not worth it.</li> </ul> </li> <li>Documentation of the API is a shambles<ul> <li>Wiki vs. navigatable API</li> <li>Separate tickets to update the docs so that it doesn\u2019t slip through the cracks</li> </ul> </li> <li>Refactoring (ongoing) will be helpful<ul> <li>Weird global variables like engines and connections to deal with</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/09/2021-09/#frontend-backend-collaboration","title":"Frontend &amp; backend collaboration","text":"<ul> <li>For all new frontend tickets, the APIs that are involved should be documented<ul> <li>(already discussed)</li> </ul> </li> <li>API PRs that involve new formats or make changes (e.g. Colin\u2019s recent PR), tag Pavish for review</li> <li>Eventually: contract testing APIs might be useful for async collaboration<ul> <li>not right now</li> <li>https://pactflow.io/blog/what-is-contract-testing/</li> </ul> </li> <li>Mentioned previously: frontend should look at APIs before starting a new milestone</li> </ul>"},{"location":"team/meeting-notes/2021/09/2021-09/#work-planning","title":"Work planning","text":"<ul> <li>This involves:<ul> <li>Standups</li> <li>GitHub workflow (labels, milestones, projects, etc.)</li> <li>Weekly planning</li> </ul> </li> <li>Discussion:<ul> <li>Working well</li> <li>More back and forth on standups?<ul> <li>Do we need to repeat what\u2019s in GitHub on standups?</li> <li>Maybe it should be more focused on blockers</li> </ul> </li> <li>Status report type standups may also be useful for community<ul> <li>Useful for Kriti to see work that\u2019s not been prioritized</li> </ul> </li> </ul> </li> <li>New standup format:<ul> <li>Completed (since last standup)</li> <li>Active (actively worked on, not everything in queue)</li> <li>Dependencies</li> </ul> </li> <li>Issue triage wiki page</li> <li>Weekly planning format and GitHub workflow is working very well</li> </ul>"},{"location":"team/meeting-notes/2021/09/2021-09/#communication","title":"Communication","text":"<ul> <li>Written communication<ul> <li>Check messages frequently</li> <li>for long-form, make sure to think through things before replying</li> <li>Explore if templates exist for discussions<ul> <li>maybe templates for wiki pages would also be useful</li> </ul> </li> <li>Respond/acknowledge with words instead of emojis so people get notified</li> <li>Try to over-communicate</li> </ul> </li> <li>Ad-hoc calls<ul> <li> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/09/2021-09/#hiring","title":"Hiring","text":"<ul> <li>Going well after first round interviews were divided between Kriti and Pavish<ul> <li>Continue to not put first round interviews on a single person</li> </ul> </li> <li>Should we continue to have contribution task?<ul> <li>High rate of candidate drop out due to effort</li> <li>Ensure all candidates have tasks with the same effort</li> <li>Maybe say that whatever they do in a given time frame is fine, even if it\u2019s not complete</li> </ul> </li> <li>Go back to previous process where we give all candidates their own repo and the same task.</li> <li>It is worth seeing how well they work with us because a bad hire would be very bad for us at this stage.</li> <li>Get backend engineer job up soon.</li> </ul>"},{"location":"team/meeting-notes/2021/09/2021-09/#community-management","title":"Community management","text":"<ul> <li>Some sort of mailing list or way of notifying people about designs, issues you need help with.</li> <li>Label for community input - for discussions and issues</li> <li>Can\u2019t spend a lot of active time on growing the community right now until alpha release comes out.<ul> <li>Automated script for community-friendly issues to create a mailing list</li> </ul> </li> <li>Eventually monthly community meetings or something like that</li> </ul>"},{"location":"team/meeting-notes/2021/09/2021-09/#team-events","title":"Team events","text":"<ul> <li>Great, period between it is fine</li> <li>Take turns organizing</li> </ul>"},{"location":"team/meeting-notes/2021/09/2021-09/#deadline-review","title":"Deadline Review","text":"<ul> <li>Review of current roadmap and update deadlines as needed.<ul> <li>Undo/Redo<ul> <li>High cost, high benefit</li> <li>would be good to have design aspects decided early</li> </ul> </li> </ul> </li> <li>Deadlines currently left unchanged since it\u2019s hard to anticipate how much time we\u2019ll need in advance</li> <li>We can\u2019t move many deadlines without cutting things, so we\u2019ll need to figure out what to cut in a month or so if we move out too many deadlines </li> </ul>"},{"location":"team/meeting-notes/2021/09/2021-09/#action-items","title":"Action Items","text":"<ul> <li>Everyone:<ul> <li>use new standup format<ul> <li>Completed, Active, Dependencies</li> </ul> </li> <li>post what you like about designs during design review</li> <li>create new tickets for documentation updates that are needed so that they don\u2019t fall through the cracks</li> <li>talk to Kriti ASAP if the ticket you\u2019re working on needs scope modified or design clarified.</li> <li>use words instead of emoji reactions to acknowledge</li> </ul> </li> <li>Brent:<ul> <li>think about team event</li> <li>make sure to ask Pavish to review backend tickets with API changes</li> </ul> </li> <li>Ghislaine:<ul> <li>use labels to mark status of GitHub Discussions for design review </li> <li>post design review reminders 1 day before deadline in standup </li> <li>set up a template or checklist for posting review requests</li> </ul> </li> <li>Kriti:<ul> <li>add new column to Active project</li> <li>set up community mailing list or some other form of updates (with automation if possible)</li> <li>follow up on setting up staging server</li> <li>update hiring process for next hire to use standardized task</li> <li>post backend job</li> </ul> </li> <li>Pavish:<ul> <li>review frontend tickets and related APIs before starting new milestones</li> <li>update frontend tickets with API and design changes needed before starting new milestones</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/09/2021-09/#2021-09-01","title":"2021-09-01","text":"<p>Meeting topic: \u201cState of Mathesar\u201d, part 1 - progress so far and next steps. Attendees: Brent, Ghislaine, Kriti, Pavish</p>"},{"location":"team/meeting-notes/2021/09/2021-09/#introduction","title":"Introduction","text":"<ul> <li>We\u2019ve been focusing mainly on day-to-day work for a while now.</li> <li>This meeting\u2019s goal is to take some time to look at the bigger picture.</li> </ul>"},{"location":"team/meeting-notes/2021/09/2021-09/#state-of-mathesar","title":"State of Mathesar","text":""},{"location":"team/meeting-notes/2021/09/2021-09/#where-we-are","title":"Where we are","text":"<ul> <li>The entire team has been working together for about 2.5 months</li> <li>6 milestones (4 feature milestones) and 200+ issues closed</li> <li>Until Monday, we had 20 more feature milestones to go.</li> <li>It would be untenable to complete those in 3 months, even with more team members.</li> <li>This was anticipated, our roadmap was fairly ambitious.</li> <li>Now we have 13 more to go, with the timeline extended to December. </li> </ul>"},{"location":"team/meeting-notes/2021/09/2021-09/#our-goals","title":"Our goals","text":"<ul> <li>Our timeline has not changed, ship an alpha version of Mathesar in 2021.</li> <li>Timeline can be extended from November to December, but we can\u2019t go longer than that.</li> <li>We only have funding (currently) through the end of 2022, it\u2019s essential that we have as much time as possible to find Mathesar some users.</li> <li>Our product goal is to show the value proposition of Mathesar in our alpha release.</li> </ul>"},{"location":"team/meeting-notes/2021/09/2021-09/#getting-to-our-goals","title":"Getting to our goals","text":"<p>Steps for getting to our goal (and agenda for this meeting):</p> <ul> <li>Make sure we\u2019re on the same page about the vision for Mathesar</li> <li>Organize our planned features into:</li> <li>Essential for alpha (alpha: release to a few specific users)</li> <li>Essential for the beta, but not alpha (beta: release to the public)</li> <li>Nice to have for the alpha or beta</li> <li>Talk through our process and come up with potential improvements to increase speed (without sacrificing quality).</li> <li>A secondary goal is to increase community-friendliness.</li> <li>Ensure our milestones and associated deadlines make sense.</li> </ul>"},{"location":"team/meeting-notes/2021/09/2021-09/#vision-for-mathesar","title":"Vision for Mathesar","text":"<p>Also doubles as the value proposition for Mathesar.</p> <ul> <li>Self-hosted</li> <li>Works with existing DBs</li> <li>Modular (<code>db</code> vs. API vs. client)</li> <li>Encourages exploration</li> <li>Works for non-technical users</li> <li>Works for technical users</li> </ul> <p>See also: Product Principles</p> <ul> <li>Are we sticking to these well? Any feedback?<ul> <li>We\u2019re all in agreement about the vision and product principles</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/09/2021-09/#planned-features","title":"Planned Features","text":"<ul> <li>Should we have features between alpha and beta or should beta just be focused on stabilizing the features in the alpha release.<ul> <li>Alpha doesn\u2019t include viz yet, but having those for beta might be valuable enough<ul> <li>maybe also plugins</li> </ul> </li> <li>When do we want to do beta release<ul> <li>March 2021</li> <li>Will that be enough time to build in features?<ul> <li>Maybe plugins and viz aren\u2019t too intensive?</li> <li>We\u2019ll also have a bigger team</li> </ul> </li> <li>We need time for public launch related tasks, e.g. branding, documentation</li> </ul> </li> </ul> </li> <li>Kriti will make updates to milestones based on categorization below</li> </ul>"},{"location":"team/meeting-notes/2021/09/2021-09/#alpha","title":"Alpha","text":"<ul> <li>Editable Tables</li> <li>Working with Tables</li> <li>Initial Data Types</li> <li>Working with Views</li> <li>Data Modeling</li> <li>Multiple Database Support</li> <li>User Management</li> <li>Computed Data</li> <li>Summarized Data</li> <li>Undo and Redo (DML)</li> <li>Bulk Operations on Records</li> <li>Better Editing Experience<ul> <li>(new milestone)</li> <li>Form based editing for records</li> </ul> </li> <li>Sharing<ul> <li>(new milestone)</li> <li>Sharing forms for people to enter data</li> <li>Sharing views publicly</li> </ul> </li> <li>Deployment</li> <li>Improvements for Non-Technical Users</li> <li>(new milestone) </li> <li>Will need usability testing with real users</li> <li>Will benefit from co-design from users</li> <li>Alpha Release</li> <li>Documentation</li> <li>Dedicated website</li> <li>Branding </li> <li>Target users currently using spreadsheets, Airtable, database GUI<ul> <li>Try to find problems users solve using those tools and explain how Mathesar can solve them.</li> <li>Our user experience is not as simple as Airtable in some ways, might be jarring.</li> <li>Focus on benefits from data integrity improvements (e.g. in COVID data)</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/09/2021-09/#beta","title":"Beta","text":"<ul> <li>API v1</li> <li>Undo and Redo (DDL)<ul> <li>(new milestone)</li> </ul> </li> <li>Plugin Architecture</li> <li>Graph Visualizations</li> <li>Beta Release<ul> <li>(new milestone)</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/09/2021-09/#post-beta","title":"Post-Beta","text":"<ul> <li>Calendar Visualization</li> <li>Kanban Visualization</li> <li>Data Export<ul> <li>We\u2019ll need an asynchronous layer to make this work well </li> </ul> </li> <li>Search (product-wide)<ul> <li>We have filters</li> <li>We need to start adding indices etc., will be complicated</li> </ul> </li> <li>Real-time Collaboration</li> <li>Spreadsheet-like Editing</li> </ul>"},{"location":"team/meeting-notes/2021/10/2021-10/","title":"October 2021 meeting notes","text":""},{"location":"team/meeting-notes/2021/10/2021-10/#2021-10-26","title":"2021-10-26","text":"<p>Please see 2021-10-26 weekly discussion on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2021/10/2021-10/#2021-10-19","title":"2021-10-19","text":"<p>Please see 2021-10-19 weekly discussion on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2021/10/2021-10/#2021-10-15","title":"2021-10-15","text":"<p>Topic: Views prototype design review Attendeees: Brent, Ghislaine, Kriti, Pavish, Sean</p> <p>Action items:</p> <ul> <li>Need to add full create view flow to the prototype</li> <li>Add setting lookup columns to the prototype</li> <li>Make sure to add all Figma flows to the prototype from other issues as well</li> <li>We need different flows for one-to-many and many-to-many relationships in views<ul> <li>Perhaps ask the user what type they want<ul> <li>They should also be able to modify this later</li> </ul> </li> <li>Don\u2019t automatically make mapping tables for one-to-many relationships</li> </ul> </li> <li>Separate relationships from views<ul> <li>When user wants to create a relationship, ask if you want to:<ul> <li>link to one record: create a FK in the current table</li> <li>link to multiple records: create a FK in the other (related) tables</li> <li>many to many: create a mapping table</li> </ul> </li> <li>Then we can suggest creating a view to show the summary view</li> <li>Views can have summary columns</li> </ul> </li> <li>Create new design issues and update existing issues for Views </li> <li>We\u2019ll close existing design discussions and open new ones</li> <li>Set up calls for reviewing future designs as needed (review async first)</li> </ul> <p>Feedback:</p> <ul> <li>Views should be about specific columns, not a whole table<ul> <li>(for some use cases)</li> </ul> </li> <li>Saving filters, sorts, etc. is also views, so that involves a whole table</li> <li>Don\u2019t constrain view creation to just one flow since they serve so many purposes</li> </ul> <p>Improvements to process:</p> <ul> <li>Be on the same page about the schema we\u2019re working with<ul> <li>e.g. we were all modeling track-album-artist differently in our heads, made talking about it difficult</li> </ul> </li> <li>Define design tickets in terms of user scenarios<ul> <li>Also specify functionality and technical constraints </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/10/2021-10/#2021-10-12","title":"2021-10-12","text":"<p>Please see 2021-10-12 weekly discussion on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2021/10/2021-10/#2021-10-08","title":"2021-10-08","text":"<ul> <li>Kriti\u2019s availability<ul> <li>Kriti\u2019s workload has been too heavy, leaving little time for focused work.</li> <li>Initiatives like \u2018Comms Assignee\u2019 useful to make workload more manageable.</li> <li>More PR reviews to be delegated to team members.  \u2013 using the \u2018assign\u2019 functionality</li> </ul> </li> <li>Milestone deadlines<ul> <li>All deadlines moved to end of December to reduce bureaucracy, deadlines are mostly for priority.</li> </ul> </li> <li>Weekly planning<ul> <li>Weeks will not be planned in advance, people should just move tasks to active when they need work </li> </ul> </li> <li>New project walkthrough<ul> <li>New GitHub project to start being used internally, public availability pending.</li> <li>New project to eventually replace current projects view.</li> </ul> </li> <li>UCB design project<ul> <li>We\u2019re working with UCB student design class on a project </li> <li>image view plugin design<ul> <li>let users view images linked to within Mathesar</li> </ul> </li> </ul> </li> <li>Hiring update and plan<ul> <li>Backend interviews ongoing </li> <li>Interviews will happen in parallel with code tasks</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/10/2021-10/#2021-10-05","title":"2021-10-05","text":"<p>Please see 2021-10-05 weekly planning on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2021/11/2021-11/","title":"November 2021 meeting notes","text":""},{"location":"team/meeting-notes/2021/11/2021-11/#2021-11-30","title":"2021-11-30","text":"<p>Topic: \u201cState of Mathesar\u201d: Mathesar progress and workflow check in. Attendees: Brent, Dominykas, Ghislaine, Kriti, Mukesh, Pavish, Sean</p> <p>Meeting notes follow.</p>"},{"location":"team/meeting-notes/2021/11/2021-11/#alpha-release-goals-timeline","title":"Alpha release goals &amp; timeline","text":""},{"location":"team/meeting-notes/2021/11/2021-11/#goals","title":"Goals","text":"<p>The goal for the alpha release is to demonstrate the value proposition of Mathesar:</p> <ul> <li>Works with existing databases</li> <li>Provides great UX for the features implemented</li> <li>Explains concepts to non-technical users without hiding or oversimplifying</li> <li>Data modeling flexibility</li> <li>Collaboration with other users</li> <li>User documentation about installing and using Mathesar<ul> <li>explain new schema installation</li> </ul> </li> </ul> <p>We want to implement enough features for users to be able to handle a simple inventory case. </p>"},{"location":"team/meeting-notes/2021/11/2021-11/#roadmap-timeline","title":"Roadmap &amp; Timeline","text":"<p>Here\u2019s the timeline as I see it (reflected on our Roadmap):</p> Milestone Timeframe Dates Notes Tables &amp; Data Types 4 weeks Nov 29 - Jan 14 Timing includes CCI winter break Views &amp; Data Modeling 8 weeks Jan 17 - Mar 11 Multiple Databases &amp; User Management 4 weeks Mar 14 - Apr 8 Collaboration (Sharing) &amp; Improved Editing 4 weeks Apr 11 - May 6 UX Improvements &amp; Deployment (Pre-Launch) 3 weeks May 9 - 27 <p>These are estimates.</p> <p>Notes:</p> <ul> <li>I\u2019ve moved \u201cBulk Operations on Records\u201d to beta from alpha.</li> <li>I created a new milestone for UI styling.</li> <li>Consider aiming at a specific Normal Form for data modeling milestone.</li> <li>Pavish has some ideas for data modeling UX, will share closer.</li> </ul>"},{"location":"team/meeting-notes/2021/11/2021-11/#discussion","title":"Discussion","text":"<ul> <li>We should be aiming to release an alpha as soon as possible. Can we shorten the above timeline?<ul> <li>Data Modeling could be moved to later, doesn\u2019t seem essential<ul> <li>Useful for CSV import flow</li> <li>Demonstrates value proposition for Mathesar, not present in similar tools</li> </ul> </li> <li>Multiple databases and user management can be post-alpha.<ul> <li>Allow user to configure database from frontend in alpha.</li> </ul> </li> <li>Collaboration can be moved out too.</li> </ul> </li> <li>When should we do UI styling - sooner or later? <ul> <li>After views</li> </ul> </li> <li>Kriti will update the roadmap after the call to move a bunch of stuff to post-alpha</li> <li>After tables, data types, views are done:<ul> <li>Go through entire user and installer end to end flow and implement what we need to</li> <li>Write documentation</li> </ul> </li> <li>Separate launch milestone</li> <li>We won\u2019t have a formal timeline, but we should be able to ship sooner if we only focus on tables, data types, and views before moving on to alpha release prep.</li> </ul>"},{"location":"team/meeting-notes/2021/11/2021-11/#alpha-launch-plan","title":"Alpha Launch Plan","text":"<ul> <li>Write documentation</li> <li>Show HN</li> <li>ProductHunt</li> <li>Find people active on\u00a0Twitter / Reddit</li> <li>Find users through CCI network and set up Mathesar servers for them</li> <li>Mukesh can find users </li> <li>Online conferences</li> <li>Google Summer of Code etc.</li> <li>Keep track of stories of people using Mathesar to help with funding</li> </ul>"},{"location":"team/meeting-notes/2021/11/2021-11/#long-term-vision-for-mathesar","title":"Long term vision for Mathesar","text":"<p>The alpha release is probably going to look like a database GUI but that is not our eventual goal. Mathesar is an ambitious product and we should all be on the same page about what we\u2019re aiming to do.</p> <ul> <li>Help users \u201cmake sense\u201d of data without knowing much.</li> <li>e.g. import data from other services and get insights from it immediately</li> <li>e.g. suggest improvements based on analyzing patterns automatically</li> <li>Allow users to learn and explore, learning more about databases and data analysis. </li> <li>Extendable by users through plugins and automation.</li> </ul>"},{"location":"team/meeting-notes/2021/11/2021-11/#workflow","title":"Workflow","text":"<ul> <li>GitHub Project workflow<ul> <li>sync between labels and status is one-way:<ul> <li>update the label, not the status (this should update the status)</li> </ul> </li> <li>Make sure to update \u201cactive\u201d when appropriate to avoid over running others\u2019 work.</li> </ul> </li> <li>Comms Assignee<ul> <li>https://wiki.mathesar.org/en/team/guide/comms-assignee</li> </ul> </li> <li>Weekly Discussion<ul> <li>moved to Monday</li> <li>It\u2019s totally okay if there\u2019s nothing notable to report on each week</li> <li>It\u2019s nice to see what other people are doing that week</li> </ul> </li> <li>Standup<ul> <li>Dependencies is helpful</li> <li>Helpful to see what people are working on to see if input is needed</li> <li>Completed section is not always informative for long running tasks<ul> <li>Focus on the part of the task that is completed or new requirements uncovered</li> </ul> </li> <li>Useful to coordinate frontend</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2021/11/2021-11/#communication","title":"Communication","text":"<ul> <li>Product and design review process</li> <li>Code architecture and spec process</li> <li>Issues</li> <li>Matrix vs. GitHub discussions<ul> <li>GitHub discussions notifications are lackluster</li> <li>Tag people in discussions more</li> <li>Notify others in Matrix that you\u2019ve started a discussion</li> </ul> </li> </ul> <p>We\u2019re out of time, please provide feedback on communication async.</p> <p>We should have a State of Mathesar meeting every month, it\u2019s useful.     - Consider inviting community eventually (\u2013Brent)</p>"},{"location":"team/meeting-notes/2021/11/2021-11/#2021-11-23","title":"2021-11-23","text":"<p>Please see 2021-11-23 weekly planning on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2021/11/2021-11/#2021-11-17","title":"2021-11-17","text":"<p>Please see 2021-11-17 weekly planning on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2021/11/2021-11/#2021-11-11","title":"2021-11-11","text":"<p>Please see 2021-11-11 weekly planning on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2021/11/2021-11/#2021-11-02","title":"2021-11-02","text":"<p>Please see 2021-11-02 weekly planning on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2021/12/2021-12/","title":"December 2021 meeting notes","text":""},{"location":"team/meeting-notes/2021/12/2021-12/#2021-12-20","title":"2021-12-20","text":"<p>Please see 2021-12-20 weekly planning (covers two weeks) on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2021/12/2021-12/#2021-12-13","title":"2021-12-13","text":"<p>Please see 2021-12-13 weekly planning on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2021/12/2021-12/#2021-12-06","title":"2021-12-06","text":"<p>Please see 2021-12-06 weekly planning on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2022/01/2022-01/","title":"January 2022 meeting notes","text":""},{"location":"team/meeting-notes/2022/01/2022-01/#2022-01-31","title":"2022-01-31","text":"<p>Please see 2022-01-31 weekly planning on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2022/01/2022-01/#2022-01-25","title":"2022-01-25","text":"<p>Topic: Functions/Filters API for the frontend - see this issue Attendees: Brent, Dominykas, Kriti, Mukesh, Pavish, Sean (partial)</p>"},{"location":"team/meeting-notes/2022/01/2022-01/#api-goals","title":"API Goals","text":"<p>We have two different goals for the APIs.</p> <ul> <li>Provide necessary abstractions for the front end, e.g. filtering, grouping. This is specific to our front end.</li> <li>Provide low level APIs to interact with database objects and concepts (without Mathesar-specific abstractions)</li> </ul> <p>These goals may necessitate separate APIs. After some discussion, we decided on having two separate API paths:</p>"},{"location":"team/meeting-notes/2022/01/2022-01/#abstractions-api","title":"Abstractions API","text":"<p>This is for Mathesar-specific functionality, examples include:</p> <ul> <li>Mathesar data types</li> <li>Filters</li> <li>Grouping</li> <li>\u201cLink Table\u201d APIs</li> </ul> <p>Goals:</p> <ul> <li>Limited functionality, strictness, typing</li> <li>Make things as easy as possible for the frontend to work with without knowing much</li> <li>Define things in terms of other abstractions (e.g. Filters should be related to Mathesar Types, not DB types)</li> <li>Dogfood DB APIs</li> </ul>"},{"location":"team/meeting-notes/2022/01/2022-01/#db-api","title":"DB API","text":"<p>This is for direct access to PostgreSQL functionality, examples include:</p> <ul> <li>Tables</li> <li>Schemas</li> <li>DB Functions</li> </ul> <p>Goals:</p> <ul> <li>Broad functionality, doesn\u2019t assume any UI</li> <li>Allow maximum power, focus on flexibility and lack of assumptions</li> <li>Allow DB reflection as much as possible</li> <li>(Eventually) allow composition</li> </ul>"},{"location":"team/meeting-notes/2022/01/2022-01/#what-is-a-filter","title":"What is a Filter?","text":"<ul> <li>For the purposes of the alpha release, we\u2019re defining filters as anything that can look at a single row and return a boolean.</li> <li>Functions that need global context (other rows or previous functions) do not count as filters</li> <li>\u201cHas Duplicates\u201d is not a filter.</li> </ul>"},{"location":"team/meeting-notes/2022/01/2022-01/#next-steps","title":"Next Steps","text":"<p>After much discussion, we decided on the following next steps:</p> <ul> <li>Dominykas will submit a PR for review that just contains the new functions API and get that merged</li> <li>Dominykas will set up a new PR for replacing current filtering functionality with new filters API, will also move Mathesar Types into abstractions namespace</li> <li>Kriti will create a design issue for \u201cHas Duplicates\u201d not being a filter</li> </ul>"},{"location":"team/meeting-notes/2022/01/2022-01/#2022-01-24","title":"2022-01-24","text":"<p>Please see 2022-01-24 weekly planning on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2022/01/2022-01/#2022-01-18","title":"2022-01-18","text":"<p>Topic: \u201cState of Mathesar\u201d: Mathesar progress and workflow check in. Attendees: Brent, Dominykas, Ghislaine, Kriti, Mukesh, Pavish, Sean</p> <p>Meeting notes follow.</p>"},{"location":"team/meeting-notes/2022/01/2022-01/#alpha-release-check-in","title":"Alpha release check-in","text":"<ul> <li>Current plan is to complete the following milestones:</li> <li>Working with Tables</li> <li>Initial Data Types</li> <li>Working with Views</li> <li>UI Styling</li> <li>Deployment</li> <li>Alpha Release</li> <li>Thoughts on how we\u2019re progressing?<ul> <li>Working with Tables is mostly done, default value</li> <li>Initial Data Types in progress, taking time (frontend)</li> <li>Working with Views is still being defined, so hard to say</li> <li>functionality first, don\u2019t think of all things DB views can do</li> <li>think of using the views to help user work with data.</li> <li>We\u2019ll do user testing on the alpha release<ul> <li>Discussions are open to anyone, but we need to prioritize building core features and might not be able to address user\u2019s input at this point</li> </ul> </li> <li>Seem to be moving slow<ul> <li>An opportunity to increase speed is to stop trying to implement database concepts with a high degree of accuracy, be more flexible about how we translate db concepts</li> </ul> </li> </ul> </li> <li>Questions and concerns?<ul> <li>FK work should be in a different milestone (not Views). Should move into \u201cWorking with Tables\u201d. Still will have it for alpha release.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/01/2022-01/#upcoming-hiring","title":"Upcoming Hiring","text":"<ul> <li>Does anyone have any thoughts on where we could use more help within the team?</li> <li>We have budget for a couple extra hires.</li> <li>Kriti: need technical writing help. Tutorials, marketing. Could be part time. Community management work too. Content marketer.<ul> <li>Sean enjoys this work.</li> </ul> </li> <li>After alpha, we might need more frontend work once we have the API more stabilized.</li> <li>Most of the issues we have right now can\u2019t be worked on in paralllel, so additional engineering help may not help at the moment.<ul> <li>Applies to both frontend and backend</li> </ul> </li> <li>We don\u2019t need another designer at this point either.</li> <li>Maybe someone with real-time colloboration experience when we\u2019re closer to that feature.</li> <li>Might be good to have an intern-wrangler if we\u2019re doing GSoC</li> </ul> <p>Conclusions: No hiring for the next couple of months</p>"},{"location":"team/meeting-notes/2022/01/2022-01/#team-workflow-check-in","title":"Team workflow check-in","text":"<p>Skipping these since we talked about them recently:</p> <ul> <li>Weekly planning discussions</li> <li>Standup</li> </ul>"},{"location":"team/meeting-notes/2022/01/2022-01/#review-vs-focused-work-balance","title":"Review vs. Focused work balance","text":"<ul> <li>How do we make sure that everyone has enough time for focused work but specs (for code, design, product), discussions, and code get reviewed speedily?<ul> <li>Most of the team is struggling with balancing review tasks with focused work</li> </ul> </li> <li>We spend a lot of time having discussions due to turnaround time.<ul> <li>Product things are a little subtle, takes some back and forth to clarify, takes so long.</li> <li>Not sure dedicating a day of discussion would fix it because of timezones.</li> </ul> </li> <li>Async is helpful to come up with more thoughtful responses</li> <li>Ideas:<ul> <li>Days of the week where everyone is focused.<ul> <li>e.g. Tue &amp; Thu are \u201cdiscussion days\u201d and MWF are \u201cfocused work\u201d</li> <li>Would exacerbate feedback loop timeline</li> <li>Might be better to have deadline for discussions</li> </ul> </li> <li>Maybe we can have discussions at this time of the day (9AM Eastern, 2PM UTC, 10PM HKT)</li> <li>Weekly meeting - reserved time, cancel if needed, be conservative about what added to the agenda<ul> <li>Only add things to the agenda if we\u2019ve tried to figure it out async</li> <li>Should this also be only when it\u2019s time-sensitive?  Or distracting?</li> <li>Hard to have time to think about the issue and form opinions during sync discussions</li> </ul> </li> <li>Don\u2019t seek consensus on everything from everyone (reduce number of reviewers)<ul> <li>Frontend code - approved by one of Sean or Pavish</li> <li>Backend code - approved by one of Brent, Kriti, (Mukesh and Dom for small features or non-product work)</li> <li>Design - Assign Kriti + one person from backend + one person from frontend (rotate)</li> <li>Always allowed to review if you have time, but only the person assigned has the responsibility. </li> <li>Latest specs are smaller</li> <li>Product specs - assign everyone since it affects the whole product, less frequent</li> </ul> </li> <li>Set short deadlines for reviewing issue descriptions or not at all</li> </ul> </li> </ul> <p>Conclusions:</p> <ul> <li>Reduce reviewers</li> <li>Schedule meetings ad-hoc (9AM Eastern, 2PM UTC, 10PM HKT)</li> <li>Summarize discussions and specs resolved in the weekly planning discussion</li> </ul>"},{"location":"team/meeting-notes/2022/01/2022-01/#comms-assignee","title":"Comms Assignee","text":"<ul> <li>Lean on the comms assignee more</li> <li>Comms assignee feels like a \u201ccleanup crew\u201d- - it feels like a mistake when they message you</li> <li>Would be nice to have the comms assignee be the point person, they\u2019re expected to ping you, it doesn\u2019t feel like something you\u2019ve missed.</li> </ul> <p>Conclusion:</p> <ul> <li>Let\u2019s see how the reduced reviewers work before changing comms assignee. We\u2019ll also have different stuff in our inbox with reduced reviewers.</li> <li>Remove yourself from auto-review-request for PRs if it will be helpful</li> </ul>"},{"location":"team/meeting-notes/2022/01/2022-01/#async-communication-improvements","title":"Async communication improvements","text":"<ul> <li>Make sure to document decisions.</li> <li>Please provide context when writing questions or comments. Assume your audience hasn\u2019t looked at this for a week.</li> <li>There\u2019s a lot of repetition </li> <li>The GitHub discussion format - can\u2019t see what\u2019s new since last check (replies could be in top-level comments on various threads)</li> <li>Matrix doesn\u2019t have threads.</li> <li>Avoid threads in discussions where possible</li> <li>Reminder that emojis don\u2019t send notifications, so if you want people to know you\u2019ve acknowledged something, also use text.</li> </ul>"},{"location":"team/meeting-notes/2022/01/2022-01/#code-for-japan-hackathon-planning","title":"Code for Japan hackathon planning","text":"<ul> <li>Code for Japan works on civic projects for Japan. We\u2019re signed up as a project. We want to increase awaerness of Mathesar from within Japan and get more contributors. Will be good prep for GSoC.</li> <li>Workshop to help attendees set up Mathesar locally</li> <li>Mukesh, Pavish, Brent</li> <li>Fill out HackMD document</li> <li>https://hackmd.io/@mathesar/BJa3U4pnY (internal collab)</li> <li>https://hackmd.io/@codeforjapan/SHD35th#2%E3%82%BF%E3%82%A4%E3%83%88%E3%83%AB (real one)</li> <li>Identify issues useful for beginner contributors</li> <li>Mukesh: Maybe we should have more documentation that gives bird\u2019s-eye view of the codebase<ul> <li>Document database model, services \u2013 what they do</li> <li>Kriti: Technical writer could help with this</li> <li>Kriti: don\u2019t think we need this for the hack-a-thon. Will be more work to maintain until the alpha release</li> </ul> </li> <li>Call with Joi already scheduled</li> <li>Mukesh, Pavish, Brent will meet to figure out the HackMD document</li> <li>Pavish will fill in the HackMD details and run them by the team</li> <li>We should get document to Joi by Thursday for the presentation. It should be in English. Joi will translate it to Japanese.</li> <li>Some good content already exists in the Mathesar Google Drive.</li> <li>Should test out development on Windows before the event.</li> </ul>"},{"location":"team/meeting-notes/2022/01/2022-01/#google-summer-of-code-planning","title":"Google Summer of Code planning","text":"<ul> <li>Links:<ul> <li>Website </li> <li>2022 announcement</li> </ul> </li> <li>Application in Feb 2022</li> <li>Will be open to non-students this year</li> <li>This would be our first year doing GSoC</li> <li>Project ideas brainstorm<ul> <li>Figuring out how to search through mapping tables</li> <li>Geometric types</li> <li>Suggesting columns to \u201cbreak out\u201d</li> <li>Breaking out columns to new table</li> <li>Some visualizations?  (maybe too core)</li> <li>integrating better text search (via text vectors, etc.)</li> </ul> </li> <li>Two lengths of projects: \u201cshort\u201d, \u201clong\u201d</li> <li>Projects should:<ul> <li>not be core priorities because they might not get finished</li> </ul> </li> <li>If accepted, should also set up guides<ul> <li>Examples from Creative Commons:<ul> <li>Internships Overview</li> <li>Applicant Guide</li> <li>Intern Guide</li> <li>Mentor Guide</li> </ul> </li> </ul> </li> <li>Who\u2019s interested in mentorship?</li> <li>Brent</li> <li>Pavish</li> <li>Mukesh</li> </ul> <p>Action items:</p> <ul> <li>Think about project ideas</li> <li>Kriti will make wiki page for them</li> </ul>"},{"location":"team/meeting-notes/2022/01/2022-01/#team-events","title":"Team Events","text":"<ul> <li>How are they going?</li> <li>What would you like to see more of?</li> <li>What would you like to see less of?</li> <li>Volunteers for organizing next few events?<ul> <li>Good</li> </ul> </li> <li>Figure out how to get to know each other more<ul> <li>1:1 conversations every week</li> </ul> </li> <li>Work from the Mathesar 8x8 room during common work times (low pressure)<ul> <li>Post when you\u2019re on</li> <li>I\u2019m thinking Fridays (Brent)</li> </ul> </li> <li>GeoGuessr was fun</li> <li>CodeNames was fun</li> <li>Kriti will schedule next one</li> <li>Charades</li> </ul>"},{"location":"team/meeting-notes/2022/01/2022-01/#action-items-summary","title":"Action Items summary","text":"<p>These are action items across all topics discussed:</p> <ul> <li>Kriti<ul> <li>Move FK-constraint related tickets to \u201cWorking with Tables\u201d milestone and update the deadline</li> <li>Summarize resolved discussions and specs in the weekly discussion</li> <li>Set up project ideas wiki page for GSoC</li> <li>Schedule next two team events: GeoGuessr and Charades</li> </ul> </li> <li>Ghislaine:<ul> <li>Update design review process to only include three required reviewers: Kriti, one backend, one frontend. We will rotate through backend and frontend representatives.</li> </ul> </li> <li>Pavish:<ul> <li>Coordinate Code for Japan hackathon planning<ul> <li>Fill out HackMD ASAP</li> <li>Identify beginner issues for contributors</li> <li>Plan out presentation before Friday morning meeting with Joi</li> <li>Coordinate testing out Windows setup</li> </ul> </li> </ul> </li> <li>Mukesh:<ul> <li>Submit codebase documentation to wiki via PR</li> </ul> </li> <li>Everyone:<ul> <li>People should feel free to schedule synchronous meetings to resolve issues, everyone is generally available at 9AM Eastern (2PM UTC, 10PM HKT) on weekdays.</li> <li>Please remove yourself from the appropriate review lists in our code review configuration if you don\u2019t want to review certain types of PRs.</li> <li>Avoid long threads in GitHub PRs and discusions if possible, try to keep everything in the main body.</li> <li>Schedule 1:1 conversations with other members of the team to get to know them better, maybe one a week.</li> <li>Please think of Google Summer of Code project ideas</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/01/2022-01/#2022-01-17","title":"2022-01-17","text":"<p>Please see 2022-01-17 weekly planning on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2022/01/2022-01/#2022-01-10","title":"2022-01-10","text":"<p>Please see 2022-01-10 weekly planning on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2022/01/2022-01/#2022-01-03","title":"2022-01-03","text":"<p>Please see 2022-01-03 weekly planning on GitHub Discussions.</p>"},{"location":"team/meeting-notes/2022/02/2022-02/","title":"February 2022 meeting notes","text":""},{"location":"team/meeting-notes/2022/02/2022-02/#asynchronous-discussions","title":"Asynchronous discussions","text":"<ul> <li>2022-02-28 weekly planning</li> <li>2022-02-21 weekly planning</li> <li>2022-02-14 weekly planning</li> <li>2022-02-07 weekly planning</li> <li>2022-02-03: Shipping more quickly</li> </ul>"},{"location":"team/meeting-notes/2022/02/2022-02/#2022-02-23","title":"2022-02-23","text":""},{"location":"team/meeting-notes/2022/02/2022-02/#discouraging-money-type-and-directing-user-towards-number-type-with-currency-display-option","title":"Discouraging Money type and directing user towards Number type with Currency display option","text":"<ul> <li>Added by: Pavish</li> <li> <p>Summary: </p> <ul> <li>The design spec: Update number type to support custom currency format introduces a Currency display option for Number. We also have a separate type for Money, which is restricted to one currency based on server locale.</li> <li>Having two different ways to represent monetary values might be confusing for users. Based on the current UX, users are bound to first use the Money type, which we\u2019d like to discourage.</li> <li>Relevant discussions and potential solutions are captured on the PR for the design spec</li> <li>We\u2019d like this discussion to yield a solution we\u2019d want to follow for the alpha</li> </ul> </li> <li> <p>Participants: Kriti, Ghislaine, Brent, Pavish</p> </li> </ul>"},{"location":"team/meeting-notes/2022/02/2022-02/#notes","title":"Notes","text":"<ul> <li>Create DB type for Money that\u2019s just an alias to Numeric<ul> <li>Move currency formatting options to it</li> </ul> </li> <li>The only time we\u2019ll use PostgreSQL money type is if custom type is not installed</li> <li>We will show the PostgreSQL money type if there\u2019s existing column<ul> <li>If people want to switch from an existing PG money type to our type, they have to switch to number and back to money</li> <li>We need a design for a warning for existing money type columns</li> </ul> </li> <li>Which display options to use will be discussed as part of spec review</li> <li>previous custom money type will be renamed to <code>multicurrency</code></li> </ul>"},{"location":"team/meeting-notes/2022/02/2022-02/#next-steps","title":"Next steps","text":"<ul> <li>Brent will make backend ticket and work on it</li> <li>Kriti will update design ticket</li> <li>Ghislaine will do a second round of the spec and re-request review</li> </ul>"},{"location":"team/meeting-notes/2022/02/2022-02/#query-builder-formulas","title":"Query Builder &amp; Formulas","text":"<ul> <li>Added by: Kriti </li> <li>Summary: I\u2019d like to go through the query builder flow and how formulas will work in Views. I\u2019m still figuring out how to represent formulas and I\u2019d like to talk through the following questions:<ul> <li>Should we have a textual representation of formulas or should they be GUI form only?</li> <li>For GUI form based formulas, how do we allow users to do math or combine AND/OR/NOT logic for booleans?</li> <li>For textual formulas, How do we represent links between tables in formulas?<ul> <li>e.g. if there are multiple ways to get to a table from another table, which way do we use?</li> </ul> </li> <li>Read beforehand:<ul> <li>The Query Builder</li> <li>Formulas</li> </ul> </li> <li>Reference for complicated relationships: Example Schema<ul> <li>e.g. </li> </ul> </li> </ul> </li> <li>Participants: Kriti, Ghislaine, Brent, Pavish, Mukesh, Dominykas, Sean</li> </ul>"},{"location":"team/meeting-notes/2022/02/2022-02/#notes_1","title":"Notes","text":"<p>Questions from Brent:</p> <ul> <li>Will we present foreign keys as directional?<ul> <li>Yes, it\u2019s been discussed</li> </ul> </li> <li>filters:  <code>WHERE</code>, <code>HAVING</code>, or both?<ul> <li>All current filter mentions refer to <code>WHERE</code>.</li> <li>It might be confusing to users to have <code>HAVING</code> filters, filtering output</li> <li>Maybe different words for filtering input and output</li> <li>Maybe show output filters within the summarization section so they know those filters are part of the summarization</li> </ul> </li> <li>Aggregation:  Are we not planning to give users the ability to look at proper joins?  I.e,. will they always only be able to get 1 row per reference table row?<ul> <li>We\u2019ll need to support this for \u201cputting back a de-normalized spreadsheet\u201d use case</li> <li>Product requirements should be updated to include \u201csingle row per unique pair\u201d as an aggregation option</li> </ul> </li> <li>Reference Table:  When starting from a formula, what if the function takes columns from different tables?<ul> <li>We\u2019ll need to pick a table that\u2019s used in the formula</li> <li>For now, we\u2019ll always be working from the perspective of a single table.</li> </ul> </li> <li>Generally:  How will we handle / present order and its effect on output?<ul> <li>Trying to make it flexible for the user, not depend on order too much.</li> <li>Implementation should encapsulate ordering problems (for the UI API)</li> </ul> </li> </ul> <p>Potential UX issues:</p> <ul> <li>What happens if the user deletes the first column? It\u2019ll change the entire query.</li> </ul> <p>Backend implementation:</p> <ul> <li>Trouble picturing how it\u2019ll come together</li> <li>Backend brainstorming call after design is finalized</li> <li>We can talk about whether we can put stuff off after alpha for now</li> </ul> <p>Editing View Data:</p> <ul> <li>Editing lists</li> <li>Editing direct representation</li> </ul> <p>Editing View Definition:</p> <ul> <li>We\u2019ll figure out how much we can do here once we\u2019ve figured out backend implementation<ul> <li>Ideal outcome is pre-filled query builder</li> </ul> </li> <li>People can edit it once we have a SQL editor, but that\u2019s not for the alpha.</li> <li>API will let frontend know if view definition is editable</li> </ul> <p>General observations:</p> <ul> <li>Might have been easier to start with the query builder before filter/sort/grouping</li> <li>It\u2019s hard to think through complex use cases at the beginning</li> <li>The most difficult thing should be parsing</li> </ul> <p>Formula feedback:</p> <ul> <li>Formula currently covers everything that\u2019s computed, each of which may need different UX</li> <li>List shouldn\u2019t be only a formula, it should be the default aggregation of multiple records. Should it be encapsulated as a formula or should we have a separate name for it?</li> </ul> <p>Formulas - GUI vs. Textual:</p> <ul> <li>We shouldn\u2019t do textual formulas, it\u2019s just dumbing down SQL</li> <li>We should stick to GUI</li> <li>Maybe a specialized UI for math alone?<ul> <li>We can allow people to enter mathematical operations as text<ul> <li>Need to parse column references</li> <li>maybe domain specific parsing for columns (e.g. @ or $)</li> </ul> </li> <li>possibility: interface to import columns you\u2019re interested in and name them</li> <li>Other option is formula pipeline and make addition etc. formulas<ul> <li>People would probably hate that</li> </ul> </li> </ul> </li> <li>Multiple formulas - avoid for the alpha since order matters</li> </ul> <p>Long term query builder features:</p> <ul> <li>Could we represent the query builder as a graph in the long term for a more powerful experience?</li> <li>We shouldn\u2019t try to make the GUI query builder work for all use cases</li> </ul>"},{"location":"team/meeting-notes/2022/02/2022-02/#next-steps_1","title":"Next Steps","text":"<ul> <li>Kriti will refine formulas further and open a GitHub discussion</li> </ul>"},{"location":"team/meeting-notes/2022/02/2022-02/#which-column-identifier-should-we-use","title":"Which column identifier should we use?","text":"<ul> <li>Added by: Mukesh</li> <li>Summary: Based on Issue #839, we have planned to make changes to way column\u2019s are referenced/accessed at the <code>db</code> layer.    The options are:</li> <li>Attnum - Stable Identifier which needs to be reflected and converted into column name when doing an operation on a column</li> <li>Column Name - Last piece of information used by most sql operations but Prone to changes, as any operation to column name will invalidate the reference.     Suggestions<ul> <li>Brent suggests using <code>attnums</code>. Since we would have lots of DDL operations, by using a stable identifier we don\u2019t have to worry about functions that alter a column name.</li> <li>Mukesh suggests using <code>column names</code>. As the column names are derived from <code>attnum</code> and number of functions that alter a column name are very few, we can be careful when dealing with such functions and use conventions to get around it. This would make the column access same as sqlalchemy and reduce any unwanted overhead</li> </ul> </li> <li>Participants: Mukesh, Brent, Kriti, Dominykas</li> </ul>"},{"location":"team/meeting-notes/2022/02/2022-02/#notes_2","title":"Notes","text":"<p>Concerns with using <code>attnums</code>:</p> <ul> <li>Not the way SQLAlchemy does things<ul> <li>SQLAlchemy is not created for DDL, it\u2019s optimized for DML</li> <li>SQLAlchemy uses attnum under the hood</li> </ul> </li> <li>Large codebase change for only a small number of column alteration operations<ul> <li>More queries</li> <li>Might make things harder for new contributors to know about attnums</li> </ul> </li> </ul> <p>Using <code>attnums</code> will probably actually make things easier for contributors since it\u2019ll be a single context-less pattern across the entire codebase and doesn\u2019t need the contributor to think about whether the column name is being altered</p> <p>Another option could be passing column objects to functions. Column name is fetched from the attnum internally.</p> <p>Performance hit is still there, but we\u2019re not sure if the performance hit is significant. In the long run, we could optimize this using the database or use a long term cache.</p> <p>We also noted that users directly using the <code>db</code> module will need to use <code>attnums</code>, which might be harder for some users. But we\u2019re not prioritizing <code>db</code> module usability, if we release it as its own module, we\u2019ll consider it then.</p> <p>Safety is </p> <p>What about usage of <code>tables.columns[column_name]</code>?</p> <p>If we adopt the convention of only calling one SQLAlchemy function per Mathesar function, it\u2019s fine to use this.</p> <p>Refactor priorities: 1. Make sure index is gone (replace with attnum if possible) 2. Make sure top-level (API-facing) functions take attnums as args 3. Make sure public functions take attnums as args 4. Reduce functions to one SQLAlchemy operation per function (makes taking attnum args easier)</p> <p>We also need to do this for tables and oids.</p>"},{"location":"team/meeting-notes/2022/02/2022-02/#next-steps_2","title":"Next steps","text":"<ul> <li>Use <code>attnums</code>, either directly or through column objects.</li> <li>Refactor the entire codebase for priorities 1 and 2 right now.</li> <li>Make issues for 3 and 4<ul> <li>We\u2019ll reevaluate priority of 3 and 4 later.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/02/2022-02/#2022-02-16","title":"2022-02-16","text":""},{"location":"team/meeting-notes/2022/02/2022-02/#ux-for-failure-to-save-a-cell","title":"UX for failure to save a cell","text":"<ul> <li>Added by: Sean</li> <li>Summary: To implement #775, I need some clarification on our desired UX for the situation where a user tries to create a blank record within a table that does not specify a default value for a NOT NULL column. We\u2019ll likely want to reuse this UX pattern in situations where the user edits an existing cell and enters invalid data (which is arguably simpler to consider, though not a pressing open issue). I\u2019d like to take a quick stab a clarifying this UX synchronously, or figure out the next steps towards doing more async design work if needed.</li> <li>Participants: Sean, Ghislaine, Pavish, Kriti, Dominykas</li> </ul>"},{"location":"team/meeting-notes/2022/02/2022-02/#notes_3","title":"Notes","text":"<ul> <li>We need cell-level errors for editing<ul> <li>Proposal: remove highlighting entire row, only highlight error cell</li> <li>This is fine, but we should have row highlighting in some way, the row number instead of the entire row</li> <li>Errors take precedence over save state in terms of colors</li> </ul> </li> <li>We need different errors for adding new records<ul> <li>We can use the same pattern for displaying individual errors</li> <li>We\u2019ll still have the whole row red since nothing would be saved at this point</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/02/2022-02/#outcome","title":"Outcome","text":"<p>Sean will implement front end changes to match the following specs:</p> <ul> <li> <p>(A) After editing an existing cell results in a validation error (either client-side or server-side):</p> <ul> <li>The cell background will be light red.</li> <li>A darker-red triangle will appear in the upper right corner of the cell. Hovering or clicking on the triangle will display an error message popover.</li> <li> <p>The row header (which displays the row index and deletion checkbox) will also have a light red background to better surface the error and help guide users towards thinking of their data in terms of records.</p> <p>Note: for the time being (and due to task prioritization), the row header will not display the triangle or display any error messages. We may choose to add more functionality here in the future to better surface error messages.</p> </li> <li> <p>Other cells which have contributed to the same error will also display the same error style and message (e.g. when a multi-column unique constraint fails.)</p> </li> </ul> </li> <li> <p>(B) After editing an existing cell succeeds:</p> <ul> <li>The cell background will turn green. No other cells will be re-styled.</li> </ul> </li> <li> <p>(C) After inserting a new record results in a validation error (either client-side or server-side):</p> <ul> <li>All the behavior from (A) will apply.</li> <li>Additionally, all cells in the row will have the light red background to communicate that no data has been saved.</li> </ul> </li> <li> <p>(D) After inserting a new record succeeds:</p> <ul> <li>All cells will have a green background.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/02/2022-02/#visual-design-and-improvisation","title":"Visual design and improvisation","text":"<ul> <li>Added by: Sean</li> <li>Summary: I\u2019d like to clarify the intended specificity of our visual designs. Rough like a wire frame? Pixel perfect like a mockup? Somewhere in the middle? This has been confusing to me thus far, and I\u2019ve gotten mixed messages.</li> <li>Originating discussion</li> <li>Participants: Sean, Ghislaine, Kriti, Pavish, Mukesh, Dominykas</li> </ul>"},{"location":"team/meeting-notes/2022/02/2022-02/#notes_4","title":"Notes","text":"<ul> <li>There\u2019s a tradeoff between being overly specific and not following the design at all<ul> <li>It\u2019s taken us a while to get the product and design process collaboration right</li> <li>We ended up with designs in the previous specs that were out-of-scope for the design issue, so improvisation was needed from both design and frontend to implement it.</li> <li>First step here is to improve the design creation process so that more specific designs can be produced, this is happening already.<ul> <li>Using Balsamiq for low fidelity wireframes</li> </ul> </li> </ul> </li> <li>Three phases of design:<ul> <li>Product design: user of goals</li> <li>UX design: fields and interactions</li> <li>Visual design: colors, fonts</li> </ul> </li> <li>Sean is most confused about visual design<ul> <li>Ghislaine is not focused on visual design at the moment.</li> <li>We\u2019re focused on UX design and visual design - interactions.</li> </ul> </li> <li>Should we treat output from Ghislaine as wireframes?<ul> <li>No, because there are some visual aspects to the design and we should follow them as closely as possible</li> <li>As long as we can follow them closely without compromising future work</li> <li>Improvisation should only be done at the visual level</li> </ul> </li> <li>We should eventually consider having UI guidelines and error states guidance for Mathesar clients that outside developers could build<ul> <li>Document error states associated with wireframes</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/02/2022-02/#e2e-testing-strategies","title":"E2E testing strategies","text":"<ul> <li>Added by: Sean</li> <li>Summary: We\u2019ve had some disagreement regarding E2E testing. <ul> <li>Here Mukesh wanted individual E2E tests to perform more actions and suggested Page Object Model to reduce repetition between tests \u2013 whereas Sean wanted E2E tests to be focused on narrow features, using Django to setup the necessary prerequisites.</li> <li>Here Mukesh expressed concern about creating too many E2E tests and suggested we prioritize E2E tests for the most common user scenarios \u2013 whereas Sean wanted to add E2E tests for some less-common user scenarios (e.g. attempting to add a unique constraint to a column with duplicate entries) with an eye towards prioritizing scenarios that touch a lot of different code.</li> </ul> </li> <li>Prompts for discussion:<ul> <li>Terminology \u2013 We seem to be using the terms \u201cE2E\u201d and \u201cIntegration\u201d synonymously. Is that a problem? Do we want to make a distinction?</li> <li>E2E test case setup \u2013 For one Playwright test which asserts that the user can delete a table row, what process do we want to use seed Mathesar with the data for the user to delete? Use the UI? Or do it through Django?</li> <li>E2E test quota \u2013 In Write integration tests for some important user scenarios, we\u2019ve agreed on a set of 15 E2E tests to write. After closing that ticket, how should we decide when to write E2E tests and how rigorous we want to be with them?</li> <li>Page Object Model \u2013 Mukesh has brought this testing pattern up several times with me. Playwright supports it. Is it something we\u2019d like to invest in soon? Or maybe later?</li> </ul> </li> <li>Participants: Sean, Mukesh, Pavish, Brent, Dominykas</li> </ul>"},{"location":"team/meeting-notes/2022/02/2022-02/#notes_5","title":"Notes","text":"<ul> <li>Naming Convention</li> <li>According to Pavish <code>E2E</code> and <code>integration</code> test would be written in the same fashion on the frontend with the only difference being integration test would mock the backend API, so with regards to the terminology, we should be calling our current testing strategy with playwright as End-to-End testing. And Sean seems to be on the same page</li> <li>Brent did not want to have a dogmatic approach to the naming convention, but he wanted to have a distinction. </li> <li>Mukesh wanted to have distinction between integration test and E2E, where playwright should be used for writing E2E test and integration test should be based on jsdom and api mocks</li> <li> <p>Mukesh expressed concerns that the E2E test is flaky as it has to deal with unpredictable things like http calls, cache, async queues. Moreover as the app adds in additional layer like <code>async queue</code> or a <code>caching layer</code>, the set-up and teardown would become complex and increases both the development/maintenence time as well as the time to run the tests(which won\u2019t be much of a concern, as we run only specific test related to the feature we are working on during development). So we should be writing E2E tests that should test high level features like deleting a row and more specific tests like deleting multiple rows should be done with the integration layer.</p> <ul> <li>For time being, Mukesh agreed to have integration test written with UI automation using <code>playwright</code>.</li> </ul> </li> <li> <p>Fixture</p> </li> <li> <p>Mukesh did not want to completely rely on fixtures, rather wanted to use fixtures sparsely. Reason being that fixtures interact with database directly, so if we introduce a intermediatery layer, like say a async queue, our current testing method would not accurately reflect what the user would be doing. For example if we introduce async task, there could be a delay with when the data is actually written to the database, but since the test cases bypasses these intermediate layer, the test could end up passing but the actual UX flow would be failing from user standpoint</p> </li> <li>According to Pavish, we would be testing the complex layer(cache, async queues) too and other tests would be based on that. So it shouldn\u2019t be a problem.</li> <li>Mukesh feels like those are the test we should be calling as E2E and the other test should be called as integration test and should not be written using playwright.</li> <li>Mukesh on the whole agrees with Pavish and Sean that we can use fixtures and write test cases as are writing them now, since the app is fairly simple, provided there is a backlog to revisit and discuss over the strategy once we get the alpha out.</li> <li>Brent understands the concern Mukesh brought up</li> </ul>"},{"location":"team/meeting-notes/2022/02/2022-02/#decisions","title":"Decisions","text":"<ul> <li>We will use \u201cEnd to end\u201d or \u201cE2E\u201d (and not \u201cintegration\u201d) when referring to the tests that we run via Playwright.</li> <li>It\u2019s okay to use pytest fixtures which call Django functionality to set up prerequisites for E2E tests. (Mukesh still feels this is not \u201cproper\u201d E2E testing, but accepts this pattern for the time being.)</li> <li>We didn\u2019t get time to discuss \u201cE2E tests quota\u201d in depth.</li> <li>We will talk about Page Object Model another time. It\u2019s up to Mukesh to bring this topic up by making specific suggestions for how we would use it.</li> </ul>"},{"location":"team/meeting-notes/2022/02/2022-02/#2022-02-10","title":"2022-02-10","text":"<p>Topic: Weekly sync meeting</p> <p>We\u2019re trying out weekly synchronous meetings to resolve things faster. Anyone can add agenda items ahead of time and we\u2019ll cancel the meeting if no agenda items are added 12 hours before the meeting.</p>"},{"location":"team/meeting-notes/2022/02/2022-02/#backend-plan-for-initial-data-types-milestone","title":"Backend plan for Initial Data Types milestone","text":"<ul> <li>Added by: Kriti</li> <li>Summary: We have a lot of backend work to complete for the Initial Data Types milestone, and the frontend is catching up to the backend quickly. We should coordinate on how we can split up the remaining items in the most efficient way.</li> <li>Participants: Brent, Dominykas, Kriti, Mukesh</li> </ul> <p>Notes:</p> <ul> <li>Backend priorities for this week</li> <li>We removed https://github.com/centerofci/mathesar/issues/648 from the milestone, will replace with a new issue for ensure default values work well with types</li> <li>Action items:<ul> <li>Brent:  File bug with SQLAlchemy for interval.</li> <li>Kriti:<ul> <li>update custom money type issue to use display options instead<ul> <li>create related design issue</li> </ul> </li> <li>create a separate issue for making sure all types have tests for default values<ul> <li>See <code>test_alter_column_casts_data_gen</code> in <code>test_cast.py</code> for the current tests on that</li> </ul> </li> </ul> </li> </ul> </li> <li>Plan:<ul> <li>Dominykas:<ul> <li>All filtering issues</li> <li>All data type API update issues</li> </ul> </li> <li>Brent:<ul> <li>INTERVAL</li> <li>Date &amp; time parsing spec and related updates</li> <li>All grouping issues</li> </ul> </li> <li>Mukesh:<ul> <li>Display options for money</li> <li>Replace column name usage with ID issue</li> <li>Display options for duration</li> <li>Default values testing and fixes</li> </ul> </li> </ul> </li> <li>Whoever is done first will start working on the foreign key APIs.</li> </ul>"},{"location":"team/meeting-notes/2022/02/2022-02/#google-summer-of-code-project-idea-brainstorming","title":"Google Summer of Code project idea brainstorming","text":"<ul> <li>Added by: Kriti</li> <li>Summary: I\u2019d like to spend some time brainstorming project ideas for Google Summer of Code. We can also review the existing ideas if time permits.</li> <li>Participants: Brent, Dominykas, Kriti, Mukesh, Pavish</li> </ul> <p>Notes:</p> <ul> <li>Current Project Ideas</li> <li>Dominykas likes automation hint reflection and SQL query builder</li> <li>SQL query builder difficulty is medium</li> <li>File and image types should be JS-heavy<ul> <li>Most of the work is the frontend</li> <li>Potentially use Django storage for the backend or a more generic Python library offering storage<ul> <li>Could only support a couple of storage options in the beginning if no suitable library can be found.</li> </ul> </li> <li>Can also specify external URLs</li> <li>Frontend shouldn\u2019t deal with complicated vendor-specific stuff like AWS tokens yet, use URLs instead</li> <li>Difficulty should be High</li> </ul> </li> <li>PostGIS idea could be hard, involves a fair bit of research<ul> <li>Integrate with different mapping services maybe?</li> </ul> </li> <li>Idea: Exporting data from Mathesar</li> <li>Idea: Async infrastructure for Mathesar<ul> <li>Better done by core team, will not add</li> <li>We also need caching infrastructure, separately</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/03/2022-03/","title":"March 2022 meeting notes","text":""},{"location":"team/meeting-notes/2022/03/2022-03/#asynchronous-discussions","title":"Asynchronous discussions","text":"<ul> <li>2022-03-28 weekly planning</li> <li>2022-03-21 weekly planning</li> <li>2022-03-14 weekly planning</li> <li>2022-03-07 weekly planning</li> </ul>"},{"location":"team/meeting-notes/2022/03/2022-03/#2022-03-25","title":"2022-03-25","text":""},{"location":"team/meeting-notes/2022/03/2022-03/#state-of-mathesar-check-in","title":"State of Mathesar check-in","text":"<ul> <li>Added by: Kriti</li> <li>Summary: Check in on alpha release goals and discuss progress. Also discuss hiring.</li> <li>Participants: Brent, Dominykas, Ghislaine, Kriti, Mukesh, Pavish, Sean, Han</li> </ul>"},{"location":"team/meeting-notes/2022/03/2022-03/#notes","title":"Notes","text":"<ul> <li>Alpha release check in<ul> <li>Milestones left:<ul> <li>Initial Data Types</li> <li>Links Between Tables</li> <li>Queries and Views</li> <li>UI Styling</li> <li>Deployment</li> <li>Alpha Release</li> </ul> </li> <li>Goals for alpha release:<ul> <li>NOT production ready</li> <li>Basic functionality that demonstrates our value proposition</li> <li>Allow users to connect existing DBs to Mathesar</li> <li>Build out support for designs, don\u2019t worry about extensibility yet</li> <li>Bugs and edge cases not being handled are okay</li> </ul> </li> <li>Check in:<ul> <li>How does everyone think it\u2019s going?<ul> <li>Slower than expected, Initial Data Types are taking longer</li> <li>Queries and Views are going to be a lot of work</li> <li>GSoC has slowed down coding time</li> <li>It took us a long time to get the query builder design, more interaction between product and design<ul> <li>Making the whole UX consistent based on new designs</li> <li>This might involve a lot of frontend work, we\u2019ll balance time</li> </ul> </li> </ul> </li> <li>Concerns? Questions? Ideas?<ul> <li>Should we assume we\u2019ll have future features when we\u2019re building current feature? (e.g. should we assume we\u2019ll have undo when building frontend UX)<ul> <li>Not right now</li> </ul> </li> </ul> </li> <li>Feature idea: usage data collection for beta? (opt-in)</li> </ul> </li> </ul> </li> <li>Upcoming hiring<ul> <li>Localization engineer<ul> <li>Requirements?<ul> <li>Frontend skills (JS + frontend framework, TypeScript)</li> <li>Python</li> <li>Error message localization?</li> <li>Bilingual in English and Japanese</li> <li>Japanese local knowledge</li> </ul> </li> </ul> </li> <li>Evangelist / Community Advocate<ul> <li>Videos, documentation, community management</li> <li>In a couple months</li> </ul> </li> <li>Design help<ul> <li>Contract work to help with Views and UI Styling</li> </ul> </li> <li>Engineers?<ul> <li>Frontend engineer, start hiring process soon</li> <li>Need to get better at parallelizing on the backend<ul> <li>Not enough codebase for another backend engineer to make sense any time soon</li> </ul> </li> </ul> </li> <li>Could contract out for public marketing website, including copy and graphic design, etc.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/03/2022-03/#data-explorer-ux","title":"Data Explorer UX","text":"<ul> <li>Added by:  Ghislaine</li> <li>Summary: An overview of Data Explorer\u2019s (visual query builder) user flow in preparation for spec review. Recommended reading before meeting: Data Explorer Spec</li> <li>Participants: Brent, Ghislaine, Kriti, Mukesh, Pavish, Sean, Han</li> </ul> <p>Ghislaine went over the wireframes and people asked questions about it and made some design suggestions. No major changes were suggested, a more detailed review will take place asynchronously on the pull request.</p>"},{"location":"team/meeting-notes/2022/03/2022-03/#2022-03-07","title":"2022-03-07","text":""},{"location":"team/meeting-notes/2022/03/2022-03/#column-identifier-discussion","title":"Column Identifier Discussion","text":"<p>Sync call to discuss on how to move forward with conflicting changes with Brent\u2019s work on grouping API and Mukesh\u2019s work on Mathesar 896 Change records api parameters to use column id instead of name #1047.</p> <ul> <li>Participants: Brent, Mukesh</li> </ul>"},{"location":"team/meeting-notes/2022/03/2022-03/#questions","title":"Questions","text":"<ol> <li>Will there be DDL outside of columns operation, should attnum be used outside columns operations - No</li> <li>DML should use column name or id? </li> </ol>"},{"location":"team/meeting-notes/2022/03/2022-03/#notes_1","title":"Notes:","text":"<ul> <li>Prefer to have attnums everywhere for consistency if possible.</li> <li>View are treated as table in postgres and view columns are stored in similar fashion, with each view column having a attnum as reference.</li> <li>Creating auxiliary hidden views without the knowledge of the users won\u2019t be a good idea as it would interfere with user\u2019s database and won\u2019t be optional like custom types.</li> <li>Suggestion to use Use autogenerated pseudo identifier for temporary aliased columns.</li> <li>We could have a feature where the frontend could supply the alias of the column, this could solve the issue dom was talking about. But it would be a problem if only backend has information about a computed/aliased column. For example if a function generates a temporary column.</li> </ul>"},{"location":"team/meeting-notes/2022/03/2022-03/#conclusion","title":"Conclusion","text":"<ul> <li>Put a pause on the making changes to the grouping response in PR. </li> <li>Records operations should be the only DML. Answers question (1)</li> <li>Maybe we need a directory to separate DML and DDL operations, some of the constraint operation can use a column DDL operation.</li> <li>Add it as a topic to our weekly meeting. </li> </ul>"},{"location":"team/meeting-notes/2022/03/2022-03/#2022-03-01","title":"2022-03-01","text":""},{"location":"team/meeting-notes/2022/03/2022-03/#display-options-discussion","title":"Display options Discussion","text":"<p>Sync call to discuss about display options validation especially around <code>datetime</code>, based on Matrix Discussion</p> <ul> <li>Participants: Kriti, Pavish, Mukesh, Dominykas, Sean</li> </ul>"},{"location":"team/meeting-notes/2022/03/2022-03/#notes_2","title":"Notes","text":"<ul> <li> <p>Validation</p> <ul> <li>We do generally want display options to be validated by the backend.</li> <li>For datetime types, it doesn\u2019t make sense to build in complete validation on the backend.<ul> <li>Formatting strings can contain arbitrary non-token information.</li> <li>We need to make sure frontend and backend validation matches and that\u2019s a lot of work - probably unnecessary, will probably lead to inconsistencies in the implementation.</li> <li>The backend will only validate length to make sure random data is not stored.</li> <li>Frontend will enforce additional rules.</li> <li>Frontend cannot strictly rely on data from the backend</li> </ul> </li> </ul> </li> <li> <p>Format</p> <ul> <li>Length = 255</li> <li>Only one string for format</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/04/2022-04/","title":"April 2022 meeting notes","text":""},{"location":"team/meeting-notes/2022/04/2022-04/#asynchronous-discussions","title":"Asynchronous Discussions","text":"<ul> <li>2022-04-04 weekly planning</li> </ul>"},{"location":"team/meeting-notes/2022/04/2022-04/#2022-04-13","title":"2022-04-13","text":"<ul> <li>Topic: New Team Workflow</li> <li>Summary: We\u2019ll be experimenting with splitting up into smaller teams and running a 3 week \u201ccycle\u201d from Apr 18 to May 6. This meeting is to discuss workflow changes and communication norms.</li> <li>Participants: Brent, Dominykas, Ghislaine, Kriti, Mukesh, Pavish, Sean</li> </ul>"},{"location":"team/meeting-notes/2022/04/2022-04/#helpful-reading","title":"Helpful reading","text":"<p>Our new workflow is inspired by the way Basecamp works.</p> <ul> <li>The Basecamp Guide to Internal Communication</li> <li>Group Chat: The Best Way to Totally Stress Out Your Team</li> <li>The concept of hill charts, we\u2019ll be considering them to track progress</li> <li>Book: Shape Up (free to read online)</li> </ul>"},{"location":"team/meeting-notes/2022/04/2022-04/#meeting-structure","title":"Meeting structure","text":"<ul> <li>We\u2019re going to stick to the scheduled time for each topic (agenda and times have been omitted in notes for brevity)</li> <li>Kriti will run the meeting</li> <li>We need volunteers to:<ul> <li>take notes - Brent</li> <li>keep time - Sean</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/04/2022-04/#our-current-problems","title":"Our current problems","text":"<ul> <li>Our pace is too slow, we\u2019re not completing features as quickly as we could.<ul> <li>We need to release soon and get Mathesar into real users\u2019 hands</li> </ul> </li> <li>All our discussions involve too many people <ul> <li>We need to make decisions more quickly</li> </ul> </li> <li>We\u2019re spending too much time debating small decisions<ul> <li>Not even sure if some results will matter, our decisions are temporary</li> <li>User feedback will challenge many of our assumptions</li> </ul> </li> <li>Kriti is a bottleneck<ul> <li>People should be empowered to make decisions independently</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/04/2022-04/#the-new-plan","title":"The new plan","text":"<p>To address these problems, we\u2019re going to try a 3 week work cycle starting next Monday.</p> <ul> <li>From Apr 18 to May 6.</li> <li>We\u2019ll split into smaller teams, each with a very specific goal.</li> <li>You do not need to worry about the big picture during cycles, only your team\u2019s goals for that cycle.</li> <li>After the cycle, we will have a cooldown period of 1-2 weeks to plan next steps<ul> <li>Cooldowns are for pausing and assessing the big picture</li> <li>Cooldown reduces discussion during cycle</li> </ul> </li> <li>If it works for us, we\u2019ll continue with working in cycles with cooldowns in between<ul> <li>Our eventual goal: 6-week cycles with 2-week cooldowns</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/04/2022-04/#team-responsibilities","title":"Team responsibilities","text":"<ul> <li>Each team will be assigned a project, either a set of features or one large feature.</li> <li>Teams will be small (~2 members)</li> <li>Teams are empowered to make whatever decisions are needed to complete their project.</li> </ul>"},{"location":"team/meeting-notes/2022/04/2022-04/#goals","title":"Goals","text":"<ul> <li>Team members do not have to do all the work related to their project, but the team is responsible for making sure it gets done.<ul> <li>This may change once we have a larger codebase where projects can be less tightly coupled.</li> </ul> </li> <li>Team members should use completing all functionality in the design specs in the frontend as the success criteria for their goal unless otherwise explicitly decided</li> </ul>"},{"location":"team/meeting-notes/2022/04/2022-04/#communication","title":"Communication","text":"<ul> <li>As a rule of thumb, team members should be communicating:<ul> <li>frequently between themselves</li> <li>rarely outside the team</li> </ul> </li> <li>Each team should decide how best to communicate internally (async, frequent calls, somewhere in between)</li> <li>Please do talk to members of other teams if:<ul> <li>You\u2019re both working on the same parts of the codebase and need to coordinate</li> <li>You\u2019re considering not following established API or code standards</li> <li>You\u2019re making product/design decisions that will be difficult-to-undo</li> <li>You need specialized knowledge that would take you a long time to acquire but someone else has at the tip of their tongue (e.g. someone who is familiar with particular parts of the codebase)</li> </ul> </li> <li>If you are talking to members of other teams, keep the number of people involved as small as possible to facilitate quicker conversations and decisions</li> </ul>"},{"location":"team/meeting-notes/2022/04/2022-04/#the-upcoming-cycle","title":"The Upcoming Cycle","text":"<p>Now that we\u2019ve gone over the concept of cycles generally, it\u2019s time to plan for this specific cycle.</p>"},{"location":"team/meeting-notes/2022/04/2022-04/#goals_1","title":"Goals","text":"<ul> <li>Product goals:<ul> <li>Finish the next two feature milestones: <ul> <li>Initial Data Types</li> <li>Links Between Tables</li> </ul> </li> <li>Have enough clarity to plan out the final pre-launch milestones during the next cooldown:<ul> <li>Queries and Views </li> <li>UI Styling</li> <li>Deployment</li> </ul> </li> </ul> </li> <li>Process goals:<ul> <li>Reducing product scope to fit into the cycle time<ul> <li>Example: If the date picker is going to take a week to implement, then we ship without the date picker. You\u2019re empowered to make the decision to cut it.</li> </ul> </li> <li>Reduce context switching during cycles</li> <li>Communication norm changes<ul> <li>Discuss in smaller groups</li> <li>Make decisions quickly</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/04/2022-04/#teams","title":"Teams","text":"<p>We will split into four teams, with the following team goals:</p> <ul> <li>Sean &amp; Mukesh<ul> <li>Data types - Number</li> <li>Data types - Money</li> <li>Data types - URI</li> <li>Data types - Email</li> <li>Data types - (loose ends)</li> <li>Foreign keys</li> </ul> </li> <li>Pavish &amp; Dominykas<ul> <li>Data types - Boolean</li> <li>Data types - Duration</li> <li>Data types - Date / Time</li> <li>Data types - Grouping</li> <li>Data types - Filtering</li> <li>Data types - Default values</li> </ul> </li> <li>Brent &amp; Ghislaine<ul> <li>Complete Queries and Views design prototypes and specs</li> <li>Complete Queries and Views backend technical spec</li> </ul> </li> <li>Kriti<ul> <li>Come up with use cases and personas for Mathesar</li> <li>General product plan for UI Styling &amp; Deployment milestones, informed by use cases and personas</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/04/2022-04/#cooldown","title":"Cooldown","text":"<p>The plan for our first cooldown is to plan out the next cycle, including:</p> <ul> <li>holding a retrospective on the first cycle went<ul> <li>check in on the concerns and distractions we discussed in this meeting</li> <li>we\u2019ll decide what processes to keep and change for the next cycle</li> </ul> </li> <li>reviewing product and design work generated during the first cycle<ul> <li>Queries &amp; Views design and backend spec</li> <li>product spec for UI Styling &amp; Deployment</li> </ul> </li> <li>finalizing implementation plan for Queries and Views</li> <li>figuring out next steps for UI Styling and Deployment milestones</li> <li>figuring out the teams, goals, and timeline for the next cycle</li> </ul>"},{"location":"team/meeting-notes/2022/04/2022-04/#potential-problems","title":"Potential problems","text":"<p>In this section, we brainstormed potential obstacles to reaching our goals for the cycle and talked through solutions. (Private) brainstorming document.</p>"},{"location":"team/meeting-notes/2022/04/2022-04/#distractions","title":"Distractions","text":"<ul> <li>Eliminated entirely<ul> <li>GSoC draft proposal review<ul> <li>Final submission date is Apr 18</li> </ul> </li> <li>Comms Assignee</li> <li>Weekly planning via GitHub discussions</li> </ul> </li> <li>Will only happen during cooldown period<ul> <li>Product and design review </li> <li>Team events</li> <li>Public speaking workshop</li> </ul> </li> <li>Changes to existing processes:<ul> <li>GitHub Issues<ul> <li>We will only make GitHub issues for issues that we\u2019re not immediately working on.<ul> <li>We don\u2019t need to spec out issues for core team work.</li> </ul> </li> <li>Feel free to use GH issues to get things out of your head.</li> <li>If it\u2019s a low priority and we don\u2019t want to deal with reviewing PRs for it, we will mark the issue as <code>status: draft</code></li> </ul> </li> <li>Troubleshooting E2E test failures<ul> <li>Feel free to disable brittle tests and create issues instead of spending time on them.</li> </ul> </li> </ul> </li> <li>No changes, but should naturally reduce with the new workflow:<ul> <li>Matrix usage</li> <li>GitHub Discussions usage</li> <li>Hard to keep track of new GitHub Issues</li> <li>Premature documentation / speccing</li> <li>Adding more tickets which aren\u2019t an immediate concern/premature</li> </ul> </li> <li>No changes:<ul> <li>Hiring &amp; interviews</li> <li>Code review process (for both core team and contributors)<ul> <li>We discussed eliminating code review for the core team, but some team members objected.</li> </ul> </li> <li>Weekly meeting on Wednesdays</li> <li>Standups</li> <li>API Spec reviews</li> <li>Picking final GSoC contributors</li> <li>Student Design Projects</li> </ul> </li> <li>Distractions that were tabled to address later:<ul> <li>Increasing scope of design issues / unexpected scenarios</li> <li>Having to change spec during implementation<ul> <li>Make it work in the short-term, file a bug for long-term issues</li> </ul> </li> <li>Keeping the roadmap and milestones updated</li> <li>Coordinating schedules to find a time for a sync discussion</li> <li>Unexpected Bugs with existing features</li> </ul> </li> </ul> <p>A word about GSoC:</p> <ul> <li>GSoC is lots of work, but busiest time is almost over<ul> <li>This is the irritating period, benefits are later<ul> <li>Develop long-term contributors</li> <li>Get word out</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/04/2022-04/#concerns","title":"Concerns","text":"<ul> <li>Visibility of internal work might suffer, we\u2019re open source<ul> <li>We don\u2019t get any community engagement in our day-to-day work discussions</li> <li>It might actually be better to be intentional about what we release to the community </li> </ul> </li> <li>A designer on each team might help unblock work and move faster<ul> <li>We\u2019ll figure that out after we see how this cycle goes</li> </ul> </li> <li>How do we make sure we estimating scope for a sprint correctly?<ul> <li>We\u2019re not trying to make the sprint fit the scope, we\u2019re trying to make the scope fit the sprint</li> <li>This is an experimental cycle, we will iterate on the planning process</li> </ul> </li> </ul> <p>Tabled for later discussion:</p> <ul> <li>User involvement / research</li> <li>Group chat v small group and direct chat</li> </ul>"},{"location":"team/meeting-notes/2022/04/2022-04/#new-tooling-discussion","title":"New tooling discussion","text":"<p>There was a proposal to replace the communication/organization tools used by the core team with Basecamp. We would use GitHub and Matrix only for community-related work.</p> <p>Benefits:</p> <ul> <li>Centralizing project-related comms and files<ul> <li>Design specs could be associated with projects</li> </ul> </li> <li>Centralizing most relevant notifications</li> <li>Automating standups</li> <li>Tracking non-code todo items (currently tracked ad-hoc via Matrix)</li> <li>Hill charts for progress tracking</li> <li>Ability to make projects public to share them with the community</li> </ul> <p>Concerns:</p> <ul> <li>Community visibility</li> <li>Yet another tool to checl</li> </ul> <p>Decision: Table the conversation until after the first cycle.</p>"},{"location":"team/meeting-notes/2022/04/2022-04/#next-steps-and-action-items","title":"Next steps and action items","text":"<p>We discussed a lot of things! Here are the key changes that will be happening:</p> <ul> <li>The cycle starts on Monday</li> <li>Priorities for this week:<ul> <li>GSoC draft proposal review</li> <li>Hiring preparation<ul> <li>Localization engineer job description</li> <li>Interview questions</li> </ul> </li> <li>Wrapping up current work that isn\u2019t related to your priorities</li> <li>Rearranging scheduled events as needed (e.g. team event)</li> </ul> </li> <li>Team organization:<ul> <li>Teams should meet and figure out a plan for how to meet their goals.</li> <li>This can happen either this week or early next week.</li> </ul> </li> <li>Distraction tracking:<ul> <li>Expected distractions during the cycle should be minimized to:<ul> <li>Code review</li> <li>Internal discussion needed to pick GSoC contributors </li> <li>Interviews</li> </ul> </li> <li>If any other distractions occur, note them for later review!</li> </ul> </li> <li>Process changes:<ul> <li>No more weekly planning discussion</li> </ul> </li> <li>No more comms assignee</li> </ul>"},{"location":"team/meeting-notes/2022/04/2022-04/#appendix-pre-meeting-notes","title":"Appendix: pre-meeting notes","text":"<p>This section preserves notes added prior to the meeting.</p>"},{"location":"team/meeting-notes/2022/04/2022-04/#pavishs-concerns","title":"Pavish\u2019s concerns","text":"<p>First cycle teams and goals I\u2019ve been thinking over this the past couple days. We are often overestimating our capacity and underestimating tasks. I\u2019ve been guilty of doing this myself. I don\u2019t want us repeating it for this new workflow.   - We have planned to complete all data types in the 3 weeks sprint.   - I have about 6 features to complete in this sprint.   - Here\u2019s how I can see the scenarios for just one feature - Date &amp; Time types:     - We need to search and come up with a datepicker component that suits our usecases.     - The analysis itself might take a day. A rough early analysis:       - The most suitable ones are jquery based.         - A lot of them aren\u2019t even supported anymore.         - Jquery itself is about 90kb in size minified.         - These date pickers come around 60kb to 300kb.         - For comparison, our entire application is around 420kb (When compressed: 100kb).         - These would bloat our build size up, and there will be a tradeoff to consider.         - Even the most leanest library comes around 50kb. Eg., Flatpickr, the best option I\u2019ve found so far.         - Most of these tie themselves to the input (including flatpickr) and perform their own validations. We cannot extend them, say for eg., entering \u2018yesterday\u2019 and treating it as a valid value, without forking these libraries.         - A few years ago, I spent a week trying to salvage existing date range pickers for a project I was working on, and finally ended up writing my own from scratch. Provided, that project required several specific usecases for the date range pickers.     - There is a good chance we may have to build our own components. If we can use an existing library, I\u2019d be very happy.     - I see this process (use an existing library or write our own) taking anywhere from 2 to 4 days with focused coding time.     - After the lower order components are ready, we need to implement each type: date, time, datetime.     - There are some issues here that I see now. We may have more while implementing:       - The design spec has separate date and time formats for dateTime.       - While implementing the backend, I remember we decided to have a single \u2018format\u2019 display option to give user maximum flexibility in the future.       - This may lead to a few back and forth between design, backend and frontend before we decide on what we actually are going to implement.       - Figuring out the cell input UX and interactions are left entirely to the developer, which will take additional time.       - Resolving all these and implementing this might take upto another 2 to 3 days.     - Overall, with fully focused time we\u2019ll need anywhere between 4 to 7 days to complete the date &amp; time types.     - Considering that we cannot always have that focused time due to other context switches such as GSoC, PR reviews, discussions, personal life stuff etc., it may extend to around 5 to 10 days.     - Our whole sprint is only for 3 weeks, which is 3 * 5 working days = 15 days. * This is just one example, I can see FK feature panning out to be more complex than we estimate at the moment. * I think we might need to plan out the tasks before starting the sprint including analyzing each feature with a little depth, so that we can estimate how many features we can actually complete during the sprint.</p> <p>Design process hurdles  * I\u2019ve been noticing issues that come up during implementation of a design, sometimes late in the implementation process.     * For eg., Only while implementing display options, I noticed that we need to validate both database and display options before hitting Save.     * While this may seem like evident now, it wasn\u2019t during the design stage or even during implementation of database options form.     * This lead to having to detach form logic from component (thereby losing the out-of-the-box features provided by the dom &amp; framework), and implement validation for it.     * While this task isn\u2019t complex, it still takes additional time, and caused UX issues to consider, like how do I show the user there\u2019s an error when the form\u2019s not visible?     * This leads to having to come up with a design improvisation during development, which takes time on it\u2019s own.     * These kind of scenarios lead to more conversations and debates on what is seemingly a small change in the end. * Some of the specs are not detailed enough.     * For eg., The date and time selector cell interaction is not detailed.     * This again leads to the developer improvising design during implementation phase, or a whole new cycle of design to development with a lot of discussions. Both of these take considerable time. * Here are some quotes from the book linked in the parent discussion: Shape Up.    * &gt; Wireframes too concrete      &gt; making the interface just so can require solving hidden complexities and implementation details that weren\u2019t visible in the mockup. When the scope isn\u2019t variable, the team can\u2019t reconsider a design decision that is turning out to cost more than it\u2019s worth.    * &gt; Words are too abstract:      &gt; \u201cBuild a calendar view\u201d or \u201cadd group notifications\u201d sound sensible, but what exactly do they entail? Team members don\u2019t have enough information to make trade-offs. They don\u2019t know what to include or leave out. A programmer who worked in that situation said: You\u2019re solving a problem with no context. You have to be a mind reader. It\u2019s like: \u201cwe\u2019ll know it when we see it.\u201d</p> <p>My suggestion * Each team needs a designer. Right now, there are 4 teams with 2 teams coding in parallel. The teams comprise of one frontend and one backend developer, they also need a designer. * Whenever a design problem is faced during implementation, that designer is responsible for fixing it. * We need to hire atleast one more full time designer. Ghislaine has a lot of parallel work and context switching is going to be hard for her.</p> <p>Use hill charts with our current workflow * I love the idea of using hill charts. * I often raise multiple PRs related to a single issue, which includes a lot of groundwork.  * While I work on an issue which requires groundwork, I\u2019d be the one implementing that groundwork and the issue later. I do not like taking additional time in creating issues for said pre-requisites. * The only major value of it is for everyone in the team to be upto date on what I\u2019m doing. I assume the standups and weekly meetings sufficient for that. * I see a lot of value in using hill charts, so that we can also track progress in such cases more efficiently.</p>"},{"location":"team/meeting-notes/2022/04/2022-04/#brents-concerns","title":"Brent\u2019s concerns","text":"<ul> <li>I think we can avoid converstion within ourselves, but it\u2019s a bit difficult to avoid with external community members. We should think about how to mitigate this.</li> <li>To me, the most valuable part of this, more than the deadlines or specific goals, is the focus on smaller-group communication. This is the part I personally want to focus on for our initial trial of this style, and where I\u2019m focusing my thoughts here. Concerns with that part of things:<ul> <li>I think public visibility is crucial for open source. </li> <li>I think the volume of public discussion right now actually reduces visibility of signal (in all the noise).</li> <li>I don\u2019t know how to make the parts we need to be visible to the public and other internal teammates visible without documenting after-the-fact.<ul> <li>\u2018watch-only\u2019 rooms for each smaller team? I.e., each smaller team communicates in a way that invites others to view but not participate. May be unworkable.</li> </ul> </li> </ul> </li> <li>Don\u2019t deal with in this cycle</li> </ul>"},{"location":"team/meeting-notes/2022/04/2022-04/#dominykas-concerns","title":"Dominykas\u2019 concerns","text":"<ul> <li>I agree wish Pavish about examining first cycle goals in detail to better estimate how long they will take;</li> <li>We\u2019ve not been shy about doing long-form write ups, which is good;<ul> <li>but I\u2019ve been often disappointed with the quality of my own writing;</li> <li>in my experience, I\u2019d say that the longer my write-up, the more likely I am to be misunderstood;<ul> <li>that\u2019s partly expected, because long explanations tend to introduce something new;</li> <li>at the same time, I\u2019m convinced that my writing skills (which has a lot of overlap with thinking skills) could be significantly improved;</li> </ul> </li> <li>I would be interested in honing my technical writing skills;</li> <li>I would be interested in starting a writing club or something similar with that objective.</li> </ul> </li> <li>I support using hill charts, and I\u2019m super interested in what other tools we can use to improve our workflow;</li> <li> <p>I like Basecamp\u2019s philosophy and approach;</p> <ul> <li>I can see why their articles were linked many times in this doc.</li> </ul> </li> <li> <p>Cycle isn\u2019t about estimating how long it takes to build, it\u2019s about figuring out what we can build in that timeframe</p> </li> <li>Transition period; experimental</li> </ul>"},{"location":"team/meeting-notes/2022/05/2022-05/","title":"May 2022 meeting notes","text":"<p>Information</p> <p>We switched to a new team workflow in April 2022. May 2022 meetings were focused on planning out Cycle 2 and involved much more whiteboarding and brainstorming.</p>"},{"location":"team/meeting-notes/2022/05/2022-05/#2022-05-31","title":"2022-05-31","text":"<p>Topic: Cycle 2 planning meeting Attendees: Brent, Dominykas, Ghislaine, Kriti, Mukesh, Pavish, Sean</p> <p>We discussed the goals and storyboard for a potential Mathesar demo. Please see the document below for more information.</p> <p>cycle_2_user_flow.pdf</p>"},{"location":"team/meeting-notes/2022/05/2022-05/#2022-05-11","title":"2022-05-11","text":"<p>Topic: Cycle 2 planning meeting Attendees: Brent, Dominykas, Ghislaine, Kriti, Mukesh, Pavish, Sean</p>"},{"location":"team/meeting-notes/2022/05/2022-05/#gsoc-candidate-and-mentor-selection","title":"GSoC candidate and mentor selection","text":"<p>Notes not shared since they involved personally identifiable information about candidates.</p>"},{"location":"team/meeting-notes/2022/05/2022-05/#user-flow-idea-pitches-and-selection","title":"User flow idea pitches and selection","text":"<p>We used a FigJam whiteboard to write down and pitch ideas (see homework from previous meeting).</p>"},{"location":"team/meeting-notes/2022/05/2022-05/#exercise-provisional-persona","title":"Exercise: provisional persona","text":"<p>We did a quick exercise on a FigJam whiteboard where we tried to brainstorm a potential user persona for the users we were trying to target Mathesar towards. </p>"},{"location":"team/meeting-notes/2022/05/2022-05/#2022-05-09","title":"2022-05-09","text":"<p>Topic: Cycle 2 planning meeting Attendees: Brent, Dominykas, Ghislaine, Kriti, Mukesh, Pavish, Sean</p>"},{"location":"team/meeting-notes/2022/05/2022-05/#retrospective","title":"Retrospective","text":"<ul> <li> <p>Based on your experience with the previous cycle, write down (on your own computer, do not share yet):</p> <ul> <li>What you\u2019d like to keep in future cycles</li> <li>What you\u2019d like to change in future cycles</li> <li>What you\u2019d like to completely eliminate in future cycles</li> <li>Any other thoughts you have</li> </ul> </li> <li> <p>Went well</p> <ul> <li>Less communication</li> <li>Targeted communication</li> <li>Collaborating with one other person consistently</li> <li>More code</li> <li>Autonomy is empowering</li> <li>Progress was faster, made decisions faster</li> <li>Sync comms are more scalable when smaller teams<ul> <li>MWF meetings more time efficient than always keeping an eye on comms</li> </ul> </li> <li>Single topic focus</li> </ul> </li> <li>Change<ul> <li>Sean: Standup pings</li> <li>Ghislaine: Standup: not enough to share</li> <li>Pavish: Need to prioritize better, still worked issue by issue rather than granularly working on parts of tasks</li> <li>Mukesh: Backlog was too big, had to switch context, also had to do PR reviews</li> <li>Mukesh: Figure out API specs at the start of the sprint<ul> <li>Sean: or move to cooldown</li> </ul> </li> <li>Brent: Cut off work coming into the beginning that\u2019s not part of that sprint</li> <li>Brent: Cross-team reviews are a major bottleneck</li> <li>Kriti: Figure out a better way to involve the community during the sprint</li> </ul> </li> <li>Eliminate<ul> <li>Brent: Cross-team dependencies, reduce or eliminate</li> </ul> </li> <li>Other thoughts<ul> <li>Planning needs to be improved (although not focus of the sprint)</li> <li>No place for unexpected discoveries that came out of brainstorming</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/05/2022-05/#presentation","title":"Presentation","text":"<p>Kriti presented a draft presentation of Mathesar\u2019s upcoming goals and roadmap. The presentation was too early and rough to be shared publicly. </p>"},{"location":"team/meeting-notes/2022/05/2022-05/#next-steps","title":"Next Steps","text":"<ul> <li>Homework: Review assigned final GSoC proposals (since the deadline ws coming up)</li> <li>Write down 1-3 ideas for Mathesar use cases. Be prepared to pitch your idea in 1 min or less during the meeting (you\u2019ll have 1 min per idea). Examples:<ul> <li>Warehouse manager wants to manage inventory</li> <li>School secretary wants to maintain student info</li> <li>Small business wants a quick and hackable sales dashboard</li> <li>Bibliophile wants to manage book collection</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/06/2022-06/","title":"June 2022 meeting notes","text":"<p>Information</p> <p>We switched to a new team workflow in April 2022. Because of this change, we did not have any large group meetings in June 2022.</p>"},{"location":"team/meeting-notes/2022/07/2022-07/","title":"July 2022 meeting notes","text":""},{"location":"team/meeting-notes/2022/07/2022-07/#2022-07-27-cycle-3-check-in","title":"2022-07-27 Cycle 3 check-in","text":"<p>We checked in on everybody\u2019s workload and the progress of features involved in the demo.</p>"},{"location":"team/meeting-notes/2022/07/2022-07/#brent","title":"Brent","text":"<ul> <li>Will run out of tasks before next meeting<ul> <li>Not worth it to work on frontend tasks, so plan is to work on bonus backend features (Data Modeling Suggestions)</li> </ul> </li> <li>Now assigned to help with any backend work for the Data Import<ul> <li>Only happy path work will be prioritized in Cycle 3</li> </ul> </li> <li>Will discuss Schema Homepage with Ghislaine before starting work on feature</li> <li>Will discuss product plan for Data Modeling Suggestions with Kriti &amp; Ghislaine before starting work on feature</li> </ul>"},{"location":"team/meeting-notes/2022/07/2022-07/#dhruvi","title":"Dhruvi","text":"<ul> <li>Data Import is progressing</li> <li>Brent now assigned as a design approver to help with backend concerns</li> <li>Once Pavish is back, will need to discuss the format of deliverable needed for implementation</li> </ul>"},{"location":"team/meeting-notes/2022/07/2022-07/#dom","title":"Dom","text":"<ul> <li>Will be done with Data Explorer and Filtering work very soon</li> <li>Next priority: Check in with Sean if frontend work is available</li> <li>Otherwise: Start on Dynamic Defaults backend work<ul> <li>Discuss with Kriti &amp; Ghislaine before starting work</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/07/2022-07/#ghislaine","title":"Ghislaine","text":"<ul> <li>On track with existing work</li> <li>Table Inspector planned to be done for Rajat to start work on next week</li> <li>No additional work needed</li> </ul>"},{"location":"team/meeting-notes/2022/07/2022-07/#mukesh","title":"Mukesh","text":"<ul> <li>Backend work on Column Extraction will be open for review soon</li> <li>Record Summary frontend and backend work pending, will be good until next week\u2019s meeting</li> </ul>"},{"location":"team/meeting-notes/2022/07/2022-07/#pavish","title":"Pavish","text":"<p>Skipped since Pavish is on vacation.</p>"},{"location":"team/meeting-notes/2022/07/2022-07/#rajat","title":"Rajat","text":"<p>Skipped since Rajat doesn\u2019t start until Monday.</p>"},{"location":"team/meeting-notes/2022/07/2022-07/#sean","title":"Sean","text":"<ul> <li>First priority is to get frontend tasks ready for Dom, Rajat, Mukesh</li> <li>Current work is on track and no additional work is needed</li> </ul>"},{"location":"team/meeting-notes/2022/07/2022-07/#2022-07-22-cycle-3-workflow","title":"2022-07-22 Cycle 3 workflow","text":"<p>Topic: Cycle 3 workflow and loose ends discussion Attendees: Kriti, Brent, Ghislaine, Mukesh, Pavish, Sean</p>"},{"location":"team/meeting-notes/2022/07/2022-07/#communication","title":"Communication","text":"<p>The Cycle 3 team needs to:</p> <ul> <li>know what everyone\u2019s currently working on </li> <li>raise blockers and dependencies</li> <li>keep track of progress on current cycle goals</li> <li>find work</li> <li>know all relevant product, design, and technical specs related to what they\u2019re implemented</li> <li>have asychronous long-form conversations to resolve non-urgent issues</li> <li>have synchronous conversations to resolve blockers</li> <li>have synchronous conversations to talk through problems</li> <li>document decisions from synchronous conversations for later reference</li> </ul> <p>The Mathesar community needs to know:</p> <ul> <li>what the current goals of the project are</li> <li>how they can help</li> <li>how to collaborate with core team members</li> </ul> <p>Considerations based on what was reported during the retrospective:</p> <ul> <li>The \u201cbig picture\u201d goals and storyboards are useful</li> <li>Focusing on one thing at a time works well</li> <li>Email is controversial, everyone but Pavish had an opinion. </li> <li>A shared schema/dataset is useful, we should formalize a workflow around it.</li> <li>Small group conversations are useful, but they can get inefficient if information only gets transferred in 1:1s</li> </ul>"},{"location":"team/meeting-notes/2022/07/2022-07/#communication-decisions","title":"Communication decisions","text":"<p>See the Moving forward column for how we plan to communicate about various things.</p> Type Purpose What we\u2019ve tried Moving forward Team Current Work Status Matrix standups, email standups Daily Matrix standups Team Blockers &amp; Dependencies direct comms, standups Direct comms Team Current cycle goals weekly planning GitHub discussions, delegated to sub-teams Weekly meeting check-in with spreadsheet Team Finding new work weekly planning GitHub discussions, delegated to sub-teams Weekly meeting check-in with spreadsheet Team Implementation details GitHub issues, direct comms, storyboard Delegated to feature teams Team Async long form - product GitHub discussions, email, Matrix mathesar-developers list Team Async long form - workflow GitHub discussions, email, Matrix core-team or community-team list Team Resolve blockers scheduled calls, direct comms, Matrix Delegated to feature teams Team Talk through problems ad-hoc Delegated to feature teams Team Document decisions wiki, GitHub discussions, email Wiki (meeting notes, specs) Community Current project goals developer mailing list, GitHub discussions mathesar-developers mailing list Community How to help GitHub issues, wiki keep current workflow Community How to collaborate wiki, Matrix, GitHub issues keep current workflow"},{"location":"team/meeting-notes/2022/07/2022-07/#notes","title":"Notes","text":"<ul> <li>Everyone except Mukesh hates GitHub Discussions</li> <li>Document decisions, but not so much that it slows work down.<ul> <li>Meeting notes should go on the wiki if you took them</li> <li>Specs should go on the wiki</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/07/2022-07/#organizing-work","title":"Organizing work","text":""},{"location":"team/meeting-notes/2022/07/2022-07/#design-process","title":"Design process","text":"<ul> <li>Design owner meets with design approvers to<ul> <li>understand the requirements</li> <li>decide on format of the deliverable</li> </ul> </li> <li>Design owner produces deliverable</li> <li>All approvers sign off on the deliverable</li> <li>Deliverables should be on the wiki wherever possible<ul> <li>proto-specs and early deliverables too</li> </ul> </li> <li>Frontend person starts work after deliverable is approved</li> <li>We will not be using the design prototype, Ghislaine will create prototypes and style the product directly<ul> <li>Backend will replace using prototype with using other design deliverables like spec, etc.</li> </ul> </li> <li>Ghislaine will work on styling the product when nothing is blocked</li> </ul>"},{"location":"team/meeting-notes/2022/07/2022-07/#front-end-blockages","title":"Front end blockages","text":"<p>Design and backend work blocking frontend work was a concern raised in the retrospective. How do we resolve this in Cycle 3?</p> <p>Not a concern for Cycle 3 since design and backend is currently ahead and frontend engineers are involved in design. We might need to think about it for Cycle 4.</p> <p>May also be less of a concern as the product matures and we can have \u201cthinner\u201d vertical slices with fewer dependencies.</p>"},{"location":"team/meeting-notes/2022/07/2022-07/#dataset-organization","title":"Dataset organization","text":"<p>During the retrospective, we talked about having a separate repo for sample schemas plus a process for changing it.</p> <p>It would be useful to have for Cycle 3. Brent will set it up</p> <ul> <li>generate checkouts data as well (should be separate SQL file so it can be loaded optionally)</li> <li>We won\u2019t be extending the library dataset, it will be frozen to what we need for the data.</li> <li>The repo can have additional data sets.<ul> <li>One column for each data type</li> <li>Lots of self-referential data?</li> </ul> </li> <li>We\u2019ll actually just use the mathesar repo since it\u2019s useful to load/unload data<ul> <li>Actually, we\u2019ll decide to use a separate repo and anything that needs to go into the Mathesar repo for tests etc. can be moved to it</li> </ul> </li> <li>Brent will make a GitHub issue to track this work</li> </ul>"},{"location":"team/meeting-notes/2022/07/2022-07/#eliminating-unnecessary-work","title":"Eliminating unnecessary work","text":"<p>During the retrospective, we seemed to all agree that we need:</p> <ul> <li>a tighter scope</li> <li>moving faster</li> </ul> <p>We did a good job of this during the paramaterized queries discussion. How can we continue that trend?</p> <p>Weekly discussions will help \u2013 ask \u201chow can we move faster or tighten scope?\u201d at each weekly meeting.</p>"},{"location":"team/meeting-notes/2022/07/2022-07/#loose-ends","title":"Loose ends","text":"<p>Other things that came up in the retrospective.</p>"},{"location":"team/meeting-notes/2022/07/2022-07/#2022-roadmap","title":"2022 roadmap","text":"<p>Any questions or comments about the roadmap?</p> <ul> <li>Add performance &amp; UX issues to Cycle 4<ul> <li>Perfomance might affect design (e.g. take things out)</li> <li>API goals should be 50ms or less (local DB client speed)<ul> <li>DML performance matters more than DDL performance</li> </ul> </li> </ul> </li> <li>Start Cycle 5 work in Cycle 4 (already the plan)</li> </ul>"},{"location":"team/meeting-notes/2022/07/2022-07/#demo-script","title":"Demo script","text":"<ul> <li>Many people wanted a fully-fleshed out demo script</li> <li>Kriti will work on this during Cycle 3</li> </ul>"},{"location":"team/meeting-notes/2022/07/2022-07/#document-to-organize-insights-from-storyboards","title":"Document to organize insights from storyboards","text":"<p>Do we want to do anything formal for this?</p> <p>Depends on what people need from the storyboard - unified insights doesn\u2019t seem that useful. This will be left up to individuals.</p> <p>PDF of storyboard with pages would be helpful if someone knows how to do it.</p> <p>Maybe move storyboard to spreadsheet with links to images if needed?</p> <p>We got way too excited about refactoring the storyboards and decided to not make any changes in the end. If there\u2019s a problem with discoverability, we will reevaluate.</p>"},{"location":"team/meeting-notes/2022/07/2022-07/#api-contract-testing","title":"API contract testing","text":"<p>What problem are we looking to solve here and is it worth prioritizing?</p> <p>E2E tests shouldn\u2019t test against the real API. Contract testing seems like a good idea in the long run.</p> <p>Not relevant for Cycle 3. </p>"},{"location":"team/meeting-notes/2022/07/2022-07/#2022-07-22-dependencies-meeting","title":"2022-07-22 dependencies meeting","text":"<p>Topic: Decide scope of Yurii\u2019s dependency project in the product and UI design Attendees: Kriti, Brent, Mukesh, Ghislaine</p> <p>Two types of dependencies:</p> <ul> <li>DB objects (tables, functions, etc.)</li> <li>Mathesar objects</li> </ul> <p>We need to portray <code>CASCADE</code> deletes (no-max-depth deletion of dependencies) differently from deleting Mathesar objects.</p>"},{"location":"team/meeting-notes/2022/07/2022-07/#brainstorming-about-dependencies-in-the-ui","title":"Brainstorming about dependencies in the UI","text":""},{"location":"team/meeting-notes/2022/07/2022-07/#brents-wish-list","title":"Brent\u2019s wish-list","text":"<ul> <li>Show \u201cwhat would be deleted\u201d</li> <li>Be able to use our own dependency tree to do the cascade delete, so that we don\u2019t end up deleting dependencies not shown on the UI</li> <li>User should understand the difference between data deletions and data view or structure deletions</li> <li>User should understand delinking deletions</li> <li>UI should be able to handle arbitrary depth</li> <li>Categorize different dependencies.<ul> <li>data vs. representation</li> <li>schemata</li> <li>tables</li> <li>constraints</li> <li>functions</li> <li>indexes</li> <li>columns (maybe we could just drop fkey columns pointing to a table we want to delete)</li> <li>sequences owned by table</li> <li>etc.</li> </ul> </li> <li>Dependencies of every type of object that can be directly deleted through Mathesar should be visible (even if we don\u2019t have mathesar models for dependent objects)</li> </ul>"},{"location":"team/meeting-notes/2022/07/2022-07/#kritis-wish-list","title":"Kriti\u2019s wish-list","text":"<ul> <li>We should track dependencies that are types of objects not handled by Mathesar\u2019s UI (functions, indexes, whatever)</li> <li>We should show object types that we do have in the UI in as much detail as possible</li> <li>We should tell users when there are dependencies on object types that we don\u2019t show in the UI (functions, etc.) and list them if we can</li> <li>We should also let the user know about non-DB object dependencies:<ul> <li>e.g. Mathesar queries, record summary templates</li> </ul> </li> <li>We need to handle issues with objects that the user doesn\u2019t have permissions for</li> </ul>"},{"location":"team/meeting-notes/2022/07/2022-07/#mukeshs-wish-list","title":"Mukesh\u2019s wish-list","text":"<ul> <li>We should be using Django objects in place of database identifier</li> <li>Other dependencies should just contain the name(best case)</li> <li>dependencies should be categorized</li> <li>Filters for getting only certain objects</li> </ul>"},{"location":"team/meeting-notes/2022/07/2022-07/#ghislaines-wish-list","title":"Ghislaine\u2019s Wish-List","text":"<ul> <li>Balance between risk of losing data and user inconvenience. We should avoid having the user take extra steps for minimal risk actions like columns, or summaries</li> <li>We need to handle bulk deletion scenarios. A user deleting multiple tables. Would we delete in steps and show dependencies for each? or a full list for all?</li> <li>Assuming that a constraint is deleted, user should be made aware of this when opening the table, not just at moment of deletion<ul> <li>Something like \u201cinformation about table changes\u201d when opening the table</li> <li>Could this need a way to relink the column with all the FK?</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/07/2022-07/#scope-of-the-gsoc-project","title":"Scope of the GSoC project","text":"<ul> <li>UI scope should be limited to using dependencies during deletion and related operations, we will not have any other UI that uses dependencies.</li> <li>Brent, Yurii, and Mukesh will meet to discuss possible merging of dependencies and table relationships</li> <li>The scope will include tracking dependencies of all objects that the Mathesar API handles, i.e.<ul> <li>DBs</li> <li>Schemas</li> <li>Tables</li> <li>Columns</li> <li>Constraints</li> </ul> </li> <li>The dependents tracked will include ALL objects, even if they\u2019re not handled by the Mathesar API</li> </ul>"},{"location":"team/meeting-notes/2022/07/2022-07/#not-in-scope","title":"Not in scope","text":"<ul> <li>Separate page to show entire schema / DB depdendency graph</li> <li>Tracking dependencies of records</li> <li>Viewing the dependency graph of a single object without triggering a deletion</li> </ul>"},{"location":"team/meeting-notes/2022/07/2022-07/#type-of-deletion","title":"Type of deletion","text":"<ul> <li>For the best UX, we should allow the users to delete multiple objects at once. It\u2019s annoying when projects only allow deletion of one object at once.</li> <li>We do need to support automatic deletions of dependent objects as long as we have clarity on what\u2019s getting deleted<ul> <li>If we don\u2019t have clarity, we should make that very very clear.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/07/2022-07/#priorities-for-the-gsoc-project","title":"Priorities for the GSoC project","text":"<ul> <li>Backend parity with Postgres dependency tracking (so that we don\u2019t have to resort to <code>CASCADE</code>)</li> <li>Backend for tracking Mathesar objects:<ul> <li>mapping tables and reverse dependencies</li> <li>queries</li> <li>record summaries</li> <li>etc.</li> </ul> </li> </ul> <p>We can ship the project in a few different milestones.</p> <p>Milestone 1: We show all the DB-only dependencies we can in the UI, allow users to use <code>CASCADE</code> if possible. </p> <p>Milestone 2: We track mapping tables and reverse dependencies and show them in the UI</p> <p>Milestone 3: We track Mathesar dependencies that are only in the service DB and show them in the UI (queries, record summaries)</p> <p>Milestone 4: We track dependent DB functions (things not tracked in <code>pg_depends</code>)</p> <p>Milestone 5: Parity with Postgres dependency tracking so that we can stop using <code>CASCADE</code></p>"},{"location":"team/meeting-notes/2022/07/2022-07/#2022-07-20-weekly-meeting","title":"2022-07-20 weekly meeting","text":""},{"location":"team/meeting-notes/2022/07/2022-07/#embedded-queries-vs-parameterized-queries","title":"Embedded Queries vs Parameterized Queries","text":"<ul> <li>Summary: Figure out where the feature boundary between embedded and parameterized queries is and what\u2019s actually essential for Cycle 3.</li> <li>Participants:: Kriti, Sean, Ghislaine, Pavish, Brent, Mukesh, Dhruvi</li> </ul> <p>We\u2019re all in agreement about the Record Page, which is a page that shows an individual record\u2019s details. There\u2019s a section in the page that shows a summary of related records and can allow records shown to be filtered.</p> <p>The goal of this meeting is to figure out how much of this to implement in Cycle 3, since we have a lot of work to do and we want to do the minimum necessary to get the demo use case working. </p>"},{"location":"team/meeting-notes/2022/07/2022-07/#product-and-design-concerns","title":"Product and design concerns","text":"<p>Record Page design spec so far.</p> <p>The product goal of embedded queries is to show a summary of related records on a record page. The data shown should match the links available via Data Explorer UI for consistency.</p>"},{"location":"team/meeting-notes/2022/07/2022-07/#seans-long-term-goals-for-the-record-page-ux","title":"Sean\u2019s long-term goals for the record page UX","text":"<ul> <li>Let\u2019s work from the Patrons record page as an example.</li> <li>A section of the Patrons record page displays related records which link to the patron.</li> <li>That section contains a list of queries.</li> <li>There are two types of queries within the list \u2013 \u201cauto-generated queries\u201d and \u201cmanually-generated queries\u201d.</li> <li>Both types of queries can be re-ordered within the list</li> <li>Auto-generated queries:<ul> <li>display a table of the related records with all columns.</li> <li>show on the record page by default according to the schema and thus will auto-update when the schema changes</li> <li>should meet user\u2019s needs in a majority of circumstances</li> <li>can be hidden via an icon button (and un-hidden via a dropdown menu higher up on the page)</li> </ul> </li> <li>Manually-generated queries<ul> <li>Can be renamed</li> <li>Can be edited</li> <li>Can be deleted</li> <li>Can be created from scratch using the data explorer</li> </ul> </li> <li>Reactions:<ul> <li>Other team members seem mostly in agreement with this UX vision</li> <li>Kriti would like a way to eventually display the related records in a list form (e.g. genres associated with a book). But we\u2019ll consider that use-case later.</li> <li>We may eventually want to design functionality for the user to add new related records from within the record page. For example, I may want to record a new checkout for a patron directly on the patron\u2019s page. We\u2019ll consider that use-case later.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/07/2022-07/#backend-concerns","title":"Backend concerns","text":"<ul> <li>Need to be able to add/remove initial columns according to user desire from a stored query</li> <li>Don\u2019t really need parameterized queries for the embedded queries. We can filter for the desired id using query string parameters when actually calling the query.</li> <li>Links to record:<ul> <li>call table endpoint, using filter for appropriate ID</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/07/2022-07/#decisions","title":"Decisions","text":"<ul> <li>We recognized that for our needs on the record page, we can handle the \u201cparameterization\u201d of queries using the \u201cfilters\u201d functionality that we already have.</li> <li>The \u201cauto-generated queries\u201d on the record page will be displayed using our basic records API. No need to create a query resource at all! Just fetch the records and apply a filter to the FK column.</li> <li>For cycle 3 we\u2019ll only focus on \u201cauto-generated queries\u201d. The \u201cmanually-generated queries\u201d functionality will be designed/implemented later.</li> <li>The output of the auto-generated queries can be further filtered, beyond the auto-added FK filter condition. Any additional filter conditions that the user adds will not persist. But this ad-hoc filtering functionality also gets us a bit closer to the final goal of displaying checked-out books on the Patrons record page \u2013 all without using the data explorer (or Mathesar \u201cqueries\u201d) at all!</li> </ul>"},{"location":"team/meeting-notes/2022/07/2022-07/#next-steps","title":"Next steps","text":"<ul> <li>The \u201cEmbedded Queries\u201d feature is now folded into the \u201cRecord Page\u201d feature. Because we\u2019re not actually using \u201cqueries\u201d for the functionality, we may use a name like \u201cTable Widgets\u201d (or similar) to refer to this functionality going forward.</li> <li>The \u201cParameterized Queries\u201d feature is removed entirely as it seems like we may never need it. When the time comes for us to implement \u201cmanually-generated queries\u201d, we will likely create basic query objects and then filter their results using the filtering functionality when displaying the query (not by altering the query definition).</li> <li>Brent is assigned to the Record Page backend since it doesn\u2019t involve the Data Explorer anymore. The only thing we need to do is to make the \u201cjoinable tables\u201d API work in both directions.</li> <li>Kriti will update the storyboard to remove the two features and update the flow according to the new implementation we decided on</li> </ul>"},{"location":"team/meeting-notes/2022/07/2022-07/#2022-07-19-cycle-3-planning","title":"2022-07-19 Cycle 3 planning","text":"<ul> <li>Participants:: Kriti, Sean, Ghislaine, Pavish, Brent, Mukesh, Dominykas, Rajat, Dhruvi</li> </ul> <p>We discussed the Cycle 3 storyboard, prioritized features, and assigned work to various team members. There were questions raised about the features \u201cEmbedded Queries\u201d and \u201cParameterized Queries\u201d, which we are going to schedule a separate meeting to iron out.</p> <p>Team members who are working on Cycle 3 can view the work assignment spreadsheet here.</p>"},{"location":"team/meeting-notes/2022/07/2022-07/#2022-07-18-cycle-2-retrospective","title":"2022-07-18 Cycle 2 retrospective","text":"<ul> <li>Participants:: Kriti, Sean, Ghislaine, Pavish, Brent, Mukesh, Dominykas</li> </ul> <p>We discussed what went well and what could have gone better in Cycle 2, plus ideas for how to improve our workflow in Cycle 3. We used a whiteboarding tool during the meeting and did not take additional notes since the meeting focused on team workflow.</p> <p>Core team members can view the whiteboard here.</p>"},{"location":"team/meeting-notes/2022/08/2022-08/","title":"August 2022 meeting notes","text":""},{"location":"team/meeting-notes/2022/08/2022-08/#2022-08-31-weekly-meeting","title":"2022-08-31 weekly meeting","text":"<ul> <li>Topic: New proposal for backend architecture, see Brent\u2019s email + implementation plan.</li> <li>Participants: Mukesh, Dom, Brent, Kriti, Sean, Pavish</li> </ul> <p>We discussed Brent\u2019s proposed architecture. Everyone is on board with the plan. Items discussed:</p> <ul> <li>Would exposing OIDs and attnums directly in the API cause security issues?<ul> <li>Potentially, since OIDs are smallints and roll over, but attack potential seems low-risk.</li> <li>The backend simplication is worth it.</li> <li>Trivial to fix by encrypting database identifiers.</li> </ul> </li> <li>We will probably need some combination of Django / DRF permissions and database roles, even if we do most of the work in the database.<ul> <li>This is so that we can unify permissions for Mathesar-specific objects like Explorations</li> </ul> </li> <li>This isn\u2019t a panacea, there will probably be complications while refactoring and we\u2019ll probably have a whole new set of problems later<ul> <li>But it\u2019ll be good to have new problems instead of these ones</li> </ul> </li> <li>psycopg3 has async capabilities and prepared queries, could be used for better performance in the future</li> </ul> <p>We also discussed backend performance fixes:</p> <ul> <li>Global metadata should make a huge difference in performance (we anticipate 5 sec API calls going down to 1 sec)</li> <li>Pre-fetching data in APIs should make a significant difference as well (1 sec to 200 ms)</li> <li>We\u2019d like to do both of thse before we can do a live demo of Mathesar</li> </ul> <p>We don\u2019t want to \u201cgo backwards\u201d too much from our planned architecture, but we\u2019ll make the following exceptions:</p> <ul> <li>Backend performance fixes, since the live demo is necessary for product goals</li> <li>Implementing users and permission without using DB roles \u2013 only database and schema level permissions to keep things as simple as possible.</li> </ul> <p>In terms of implementation, we need to get everything for Cycles 4 and 5 done before we can start on the refactor proposed by Brent. This includes:</p> <ul> <li>the performances fixes above</li> <li>Users &amp; Permissions</li> <li>Mathesar installation issues (upgrading Mathesar, easily installing it)</li> <li>Backend needed for sharing feature</li> </ul> <p>Once we\u2019re done with these, any available backend engineers can start incrementally implementing the refactor. We\u2019ll plan this out further when we get to it.</p> <p>Next steps for now are that Mukesh and Dom will meet and divide up the backend performance work between them. Brent will start on Users &amp; Permissions work.</p>"},{"location":"team/meeting-notes/2022/08/2022-08/#2022-08-30-cycle-4-planning","title":"2022-08-30 Cycle 4 planning","text":"<p>Attendees: Brent, Dominykas, Ghislaine, Kriti, Pavish, Sean, Mukesh, Rajat</p>"},{"location":"team/meeting-notes/2022/08/2022-08/#retrospective","title":"Retrospective","text":"<ul> <li>Please see this FigJam file (only accessible to core team)</li> <li>Lots of things went well, more than last time. Some common sentiments:<ul> <li>Communication patterns are better</li> <li>Spec process is smoother</li> <li>Feature spreadsheet is great</li> <li>Progress on difficult features</li> <li>Targeted assignments are working well, less noise</li> </ul> </li> <li>Things that could have been better (highlights):<ul> <li>The spreadsheet didn\u2019t track all work, excluded some progress from seeming meaningful</li> <li>Mukesh and Dom on frontend seems like a bad use of time/resources</li> <li>Backend and frontend both need to spend time on testing, refactoring, etc.</li> <li>No-one specifically assigned to the \u201cglobal view\u201d of the demo working</li> </ul> </li> </ul> <p>Please see the FigJam for all the notes.</p>"},{"location":"team/meeting-notes/2022/08/2022-08/#cycle-4-plan","title":"Cycle 4 plan","text":"<p>We went over the items in the Cycle 4 spreadsheet to:</p> <ul> <li>Discuss all the items planned for Cycle 4</li> <li>Update progress</li> <li>Update or make assignments</li> </ul> <p>We now have specific items and assignees for things like:</p> <ul> <li>Demo Video Readiness</li> <li>Mathesar Website</li> <li>Live Demo Readiness (covers all UX issues and completing features)</li> </ul> <p>\u201cUX Design\u201d work is now \u201cPlanning &amp; UX Design\u201d and encompasses coming up with a list of deliverables and other planning work.</p> <p>Mostly the list looks fine. API &amp; DB performance items are tentative and will be broken down into more detailed pieces after tomorrow\u2019s weekly meeting.</p> <p>Everyone had enough work except for Brent (now assigned to Users &amp; Permissions) and Pavish (now assigned to Demo Video Readiness).</p> <p>We will triage the issues in the Cycle 4 milestone on GitHub when we get to the planning phase of \u201cLive Demo Readiness\u201d.</p>"},{"location":"team/meeting-notes/2022/08/2022-08/#workflow-changes","title":"Workflow changes","text":"<p>Our workflow will mostly remain the same. </p> <ul> <li>We\u2019ll continue to have weekly meetings, although we\u2019ll try to make them shorter and more relevant for everyone.</li> <li>We\u2019ll maintain a document for things to talk about in the next cooldown period so that we don\u2019t distract ourselves with non-urgent or irrelevant conversation during the cycle.</li> </ul> <p>Other issues from the retrospective should be addressed by:</p> <ul> <li>Having explicit items in the work tracking spreadsheet to cover marketing and other work (all work should be covered in the spreadsheet)</li> <li>Assigning specific people to \u201cglobal view\u201d tasks like making sure everything needed for the demo video is in place</li> <li>Deciding on the backend architecture we\u2019re aiming for and fitting new work into it.</li> <li>Thinking of the Cycle 4 spreadsheet as a prioritized list, not as a set of goals that we have to get to 100% on everything.</li> <li>Figuring out next steps for performance and testing issues, which are explicitly tracked on the spreadsheet.</li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#2022-08-30-front-end-team","title":"2022-08-30 Front end team","text":""},{"location":"team/meeting-notes/2022/08/2022-08/#imperative-upwards-data-flow-from-input-components","title":"Imperative upwards data flow from input components","text":"<ul> <li>Sean would like to standardize a pattern for input components to use events or props to inform their parent of changes to their value.</li> <li>Decision: For consistency, all our input components will dispatch <code>artificialInput</code> and <code>artificialChange</code> events. This pattern will allow consuming components to listen only to those events in order to access the input\u2019s value directly (within the <code>detail</code> property of the event).</li> <li>Next steps: Sean will create a ticket for this.</li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#separating-layout-css-from-aesthetics-css","title":"Separating layout CSS from aesthetics CSS","text":"<ul> <li>Rajat would like to to encapsulate layout CSS properties like display, padding, and margin in re-usable component.</li> <li>I propose the following component: Stack. This can be used to stack things on top of each other or next to each other. <code>&lt;Stack gutter={15} direction=\"vertical\" gap={15}&gt;{children}&lt;/Stack&gt;</code>.</li> <li>This will provide the following benefits:<ul> <li>Less CSS footprint.</li> <li>Standard way of creating space between the elements.</li> <li>Less clutter for the designer to do asthetic CSS changes.</li> <li>One can also read the layout while reading the code without referring to CSS classes again and again.</li> <li>Easier review of the layout CSS during PR reviews.</li> <li>Increased development speed</li> </ul> </li> <li>Detailed explanation of this idea can be found here: https://every-layout.dev/layouts/stack/.</li> <li>Decision: We\u2019ll give this a try incrementally.</li> <li>Next steps: Rajat will create the component(s).</li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#testing","title":"Testing","text":"<ul> <li>Pavish wants more test coverage for front end to prevent regressions.</li> <li>We all discussed various strategies.</li> <li>We will try to write more unit tests for components using Testing Library. We will use the \u2018msw/node\u2019 package to mock API data when needed. Example.</li> <li>We will also explore the possibility of using Playwright from node with mocked data to perform higher-level tests against the whole app.</li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#new-coding-standards-proposed","title":"New coding standards proposed","text":"<ul> <li>Sean has proposed two new coding standards.<ul> <li>Prefer <code>await</code> over <code>.then</code> when possible</li> <li>Prefer <code>function</code> over <code>const</code></li> </ul> </li> <li>Decision: Approved. Sean merged the PR.</li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#2022-08-24-cycle-3-check-in","title":"2022-08-24 Cycle 3 check-in","text":"<p>Attendees: Brent, Dominykas, Ghislaine, Kriti, Pavish, Sean, Mukesh, Dhruvi</p>"},{"location":"team/meeting-notes/2022/08/2022-08/#cycle-3-progress","title":"Cycle 3 progress","text":"<ul> <li>Data Explorer (backend 100%, frontend very close)</li> <li>Column extraction (backend 100%, frontend 20%)</li> <li>Record summary (backend 90% frontend 70%)</li> <li>Record selector (backend 100%, frontend 95%)</li> <li>Record page (backend 100%, frontend 40%)</li> <li>Grouping (backend 98%, frontend 100%)</li> <li>Filtering (backend 100%, frontend 100%)</li> <li>Data Import (Design is in progress, frontend should be quick to implement)</li> <li>Styling (frontend 15%)</li> <li>Schema page (0, 0, but Ghislaine has started work)</li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#work-assignment-changes","title":"Work assignment changes","text":"<ul> <li>Consider changing owner of record summary feature from Mukesh to Sean<ul> <li>Sean and Mukesh will decide on this after a meeting later today</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#plan-for-cycle-4","title":"Plan for Cycle 4","text":"<ul> <li>Once we get to 100% on all the required features, we will go through the demo and find UX issues that are blocking it<ul> <li>Hopefully Thursday or Friday next week</li> </ul> </li> <li>We\u2019ll prioritize those issues for Cycle 4</li> <li>Cycle 4 will also handle performance issues, including better handling of SQLAlchemy metadata and performant reflection</li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#back-end-meeting-2022-08-15","title":"Back end meeting 2022-08-15","text":"<p>Attendees: Brent, Dominykas, Mukesh</p> <p>We realized that there\u2019s a real feeling of time crunch that makes Dom reluctant to request code review, and all of us reluctant to spend enough time on doing the review for large PRs, or even moderately-sized ones. Turnaround is quite slow due to TZs, and even getting a fairly easy PR merged can take multiple days, which is a problem in our current situation. This is why Brent is going to push for sync review when when he feels his willingness to spend the time on it waning. It will be a time-saver in the long run that way.</p> <p>Dom thinks we should stick with having the author decide whether PR will be reviewed or not. Brent agrees, but thinks we should be more pro-review that previously.</p> <p>Mukesh advocates for TDD. He thinks that it tends to lead to smaller PRs, since you end up (usually) with checkpoints where you can merge. Might be worth considering for those advantages, but can also be constraining.</p> <p>Idea: use TODOs to avoid getting sucked into larger projects, and also to avoid breaking flow to create issues.</p> <p>Dom\u2019s action items:</p> <ul> <li>Create TODO comments in code as working, collect into issues at a later time.</li> </ul> <p>Brent\u2019s action items:</p> <ul> <li>set up sync call when noticing demoralization while reviewing</li> <li>Also use TODO comments</li> </ul> <p>Mukesh\u2019s action items:</p> <ul> <li>Continue using TDD, help others understand where it\u2019s most useful.</li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#2022-08-10-cycle-3-check-in","title":"2022-08-10 Cycle 3 check-in","text":"<p>Attendees: Brent, Dominykas, Ghislaine, Kriti, Pavish, Rajat, Sean, Mukesh</p>"},{"location":"team/meeting-notes/2022/08/2022-08/#cycle-3-progress_1","title":"Cycle 3 progress","text":"<p>We made progress on the following:</p> <ul> <li>Data Explorer (backend and frontend both over 90%)</li> <li>Navigation (design finalized, implementation almost complete)</li> <li>Table Inspector (design almost finalized, implementation starting soon)</li> <li>Record Summary (backend at 85%)</li> <li>Record Selector (frontend at 85%)</li> <li>Filtering (design finalized, implementation in progress)</li> <li>Data Import (design in progress)</li> <li>Styling (Ghislaine has started work)</li> <li>Data Modeling Suggestions (requirements worked out)</li> <li>Dynamic Defaults (requirements and backend plan worked out)</li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#work-assignment-changes_1","title":"Work assignment changes","text":"<ul> <li>Mukesh assigned to Column Extraction front end</li> <li>Dom will switch to frontend issues after Sean finishes Navigation</li> <li>Brent will focus on general backend support for Cycle 3 and take over any work from Dom or Mukesh as needed</li> <li>Dhruvi may need extra work, we\u2019ll figure that out during the week since she\u2019s not here today</li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#collaboration-needed","title":"Collaboration needed","text":"<ul> <li>Data Explorer<ul> <li>Brent and Dom will meet to discuss bug</li> </ul> </li> <li>Table Inspector<ul> <li>Ghislaine, Kriti, Sean, Rajat, Pavish will meet to resolve open questions</li> </ul> </li> <li>Styling<ul> <li>Ghislaine, Sean, Rajat, Pavish to meet tomorrow once Ghislaine has her branch ready</li> <li>The goal is to discuss how to structure CSS in our codebase</li> </ul> </li> <li>Column Extraction<ul> <li>Spec should be ready by Friday to unblock Mukesh</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#cycle-3-extension","title":"Cycle 3 extension","text":"<p>We decided to extend Cycle 3 by 1 week to Aug 26. Since Record Page and Data Import are still at 0% and won\u2019t be started until the end of the next week at the earliest, giving ourselves another week should get us much closer to completing our work.</p> <p>This is a one-time extension, Cycle 3 will definitely end on Aug 26.</p>"},{"location":"team/meeting-notes/2022/08/2022-08/#2022-08-05-dynamic-defaults","title":"2022-08-05 Dynamic Defaults","text":"<p>Topic: Backend planning for Dynamic Defaults feature Attendees: Dominykas, Brent, Kriti</p> <ul> <li> <p>First steps:</p> <ul> <li>Create a Django Column DD field that holds a DBFunction</li> <li>Have it define Postgres column\u2019s DD</li> </ul> </li> <li> <p>Dominykas\u2019 plan:</p> <ul> <li>Store dynamic default (DD) in Column Django model<ul> <li>as a DBFunction</li> <li>Make sure frontend knows whether default is static or dynamic</li> </ul> </li> <li>Don\u2019t declare which DBFunctions are good as DDs<ul> <li>for the sake of implementation speed</li> </ul> </li> <li>Hardcode DBFunctions to use on the frontend<ul> <li>for the sake of implementation speed</li> </ul> </li> <li>Don\u2019t reflect third-party defaults, only defaults created in Mathesar<ul> <li>to be clear, we can reflect an SQL always</li> <li>it\u2019s just that we can\u2019t offer a nice UX for third-party DDs</li> </ul> </li> <li>Once we want to provide \u201cnon-malicious tampering\u201d guarantees (in the future)<ul> <li>meaning guarantee that a third-party has not accidentally messed with it</li> <li>we can wrap the DD SQL expression in a special SQL function that<ul> <li>has an argument holding the JSON for the DBFunction</li> <li>has an argument holding the SQL expression for the DBFunction</li> </ul> </li> </ul> </li> <li>Extend table columns endpoint\u2019s \u201cdefault\u201d sub-dict<ul> <li>to describe whether it\u2019s a first- or third-party DD</li> </ul> </li> </ul> </li> <li>For Cycle 3:<ul> <li>Implementing the plan, but not tampering guarantees</li> <li>Making tickets for tampering guarantees</li> </ul> </li> <li>After Cycle 3<ul> <li>Implement tampering guarantees</li> <li>Extend the system to handle more types of defaults and sequences<ul> <li>e.g. ID column sequences</li> </ul> </li> <li>Could be good first-time contributor tickets once infrastructure is set up</li> </ul> </li> <li> <p>Caveats:</p> <ul> <li>Dynamic defaults likely won\u2019t reflect in the same form as created<ul> <li>Some are created as python functions, reflected as string</li> <li>Could be optimized in unclear ways</li> </ul> </li> </ul> </li> <li> <p>Current blob: <pre><code>GET http://localhost:8000/api/db/v0/tables/2/columns/\n...\n        {\n            \"id\": 7,\n            \"name\": \"id\",\n            \"type\": \"integer\",\n            \"type_options\": null,\n            \"display_options\": null,\n            \"nullable\": false,\n            \"primary_key\": true,\n            \"valid_target_types\": null,\n            \"default\": {\n                \"value\": \"nextval('\\\"Library Management\\\".\\\"Publishers_id_seq\\\"'::regclass)\",\n                \"is_dynamic\": true\n            }\n        },\n...\n</code></pre></p> </li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#needed-tickets","title":"Needed tickets","text":"<ul> <li>Guarantee wrapper</li> <li>showing non-dynamic, dynamic (Mathesar), dynamic (3rd-party) for API</li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#reference-dynamic-defaults-proto-spec","title":"Reference: Dynamic Defaults Proto-Spec","text":""},{"location":"team/meeting-notes/2022/08/2022-08/#problem","title":"Problem","text":"<p>We are considering implementing Dynamic Defaults as it increases the usability of adding new records.</p> <p>For the purposes of the demo we need the following defaults</p> <ul> <li>Current date and time<ul> <li><code>NOW()</code></li> </ul> </li> <li>Current date and time + a specific duration (e.g. 14 days)<ul> <li><code>NOW() + '2 weeks'::INTERVAL</code></li> </ul> </li> </ul> <p>The dynamic default options will depend on the field\u2019s data type.</p> <p>We should consider implementing dynamic defaults using the same formulas that we plan to implement in the future</p>"},{"location":"team/meeting-notes/2022/08/2022-08/#proposed-user-flow","title":"Proposed User Flow","text":"<ul> <li>User selects a column</li> <li>The inspector panel displays the properties for that column</li> <li>User toggles the \u201cDefault Value\u201d option</li> <li>The user selects from a list of preset options</li> </ul> <p>Formulas to use from our Formulas</p> <ul> <li>Current date and time: \u201cCurrent date &amp; time\u201d formula</li> <li>Current date and time + duration: \u201cAdd Duration to Date\u201d formula</li> <li>A specific date and time: static default (not dynamic)<ul> <li>show date time picker</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#2022-08-04-data-modeling-schemas","title":"2022-08-04 Data Modeling &amp; Schemas","text":"<p>Topic: Resolve product and design questions for Brent\u2019s upcoming work Attendees: Kriti, Ghislaine, Brent</p>"},{"location":"team/meeting-notes/2022/08/2022-08/#data-modeling-suggestions","title":"Data modeling suggestions","text":"<p>\u201cSuggest Candidate Columns to Create Separate Table\u201d internship report</p>"},{"location":"team/meeting-notes/2022/08/2022-08/#questions","title":"Questions","text":"<ul> <li>Better to extract too few columns or too many?</li> <li>How fiddly should the feedback loop of deciding which columns to extract be?</li> <li>Brent\u2019s proposed process:<ul> <li>Suggest set of columns to extract</li> <li>Explain to user why those are useful</li> <li>User adds or removes columns</li> <li>Analyze in second round</li> </ul> </li> </ul> <ul> <li>Alternate process (more manual):<ul> <li>Have the user guide more of the column extraction</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#discussion","title":"Discussion","text":"<ul> <li>Brent\u2019s first proposed process is preferable from a UX perspective, having the user make repeated decisions is not ideal<ul> <li>Second round is not necessary, let\u2019s stick to one round.</li> </ul> </li> <li>It\u2019s better to be conservative with suggestions, better to suggest fewer columns than potentially unrelated data</li> <li>Eventually explore ProbComp integration</li> <li>Number / Date &amp; Time (non-categorical data) should be avoided during suggestions, since it\u2019s too risky and will involve additional statistical analysis to get right<ul> <li>Not even if they\u2019re directly correlated to categorical data columns (e.g. if there\u2019s a person\u2019s name and birthday, we only suggest name, not birthday)</li> <li>Brent will check for easy wins if there\u2019s not too much effort involved</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#schema-homepage","title":"Schema homepage","text":"<ul> <li>Schemas will now have descriptions, stored in DB comments<ul> <li>Mathesar won\u2019t own the description, other clients can edit it</li> <li>UX should make it clear that this data can be edited outside of Mathesar (maybe mention that it\u2019s stored as a DB comment)</li> </ul> </li> <li>We should also do this for tables and columns at the same time, since it\u2019s a very similar implementation</li> <li>We can easily get the count for both Mathesar-specific data like Explorations and for DB objects<ul> <li>We can be more precise with DB objects</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#2022-08-04-table-inspector-meeting","title":"2022-08-04 Table Inspector meeting","text":"<p>Topic: Resolve major questions remaining before finalizing the table inspector spec Attendees: Ghislaine, Kriti, Sean, Rajat</p>"},{"location":"team/meeting-notes/2022/08/2022-08/#spec-overview","title":"Spec Overview","text":"<p>We took a quick look at the current spec and content.</p>"},{"location":"team/meeting-notes/2022/08/2022-08/#selection-modes","title":"Selection Modes","text":"<ul> <li>Do we agree or have any concerns with the proposed selection modes?<ul> <li>Selection triggers might not be the best way to trigger inspector modes. </li> <li>A tabbed panel that groups properties by level (table, column, record, cell) might be better.</li> <li>Column and Row information will be derived from selected cells.</li> <li>The selection status would change based on active tab</li> </ul> </li> </ul> <ul> <li>Are we planning to provide keyboard and touch device interactions for selections in this cycle?<ul> <li>No</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#contextual-menus-and-inspector-interactions","title":"Contextual Menus and Inspector Interactions","text":"<ul> <li>Will the user be able to trigger the inspector panel via contextual menu actions?<ul> <li>Yes, but will not be part of Cycle 3.</li> <li>We discussed the concept of adding an option like \u201cShow Column Properties\u201d in the inspector to open it with a chosen tab.</li> </ul> </li> <li>Do we need to incorporate contextual menu actions into the spec?<ul> <li>Not for this cycle.</li> </ul> </li> </ul> <p>We want to do this, but not in Cycle 3.</p>"},{"location":"team/meeting-notes/2022/08/2022-08/#defining-actions-and-the-actions-panel","title":"Defining Actions and the Actions Panel","text":"<ul> <li>Do we agree with the proposed use of actions to represent data transformation or modeling tasks?<ul> <li>Yes, we agreed</li> <li>We need to make sure actions are consistent, e.g. Set to NULL is probably a property because it\u2019s related to the cell value</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#ways-to-enable-inspector","title":"Ways to Enable Inspector","text":"<ul> <li>Do we agree or have any concerns with the proposed inspector states and triggers?<ul> <li>Not selection triggered</li> <li>User can toggle</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#decisions","title":"Decisions","text":"<p>Out of Scope (for this spec / Cycle 3)</p> <ul> <li>Context menu changes for opening the inspector</li> <li>Keyboard and touch interactions</li> <li>Selecting disjoint cells and columns (will defer to keyboard interactions)</li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#reference","title":"Reference","text":""},{"location":"team/meeting-notes/2022/08/2022-08/#seans-proposed-cell-only-selection","title":"Sean\u2019s proposed \u201cCell-only selection\u201d","text":"<p>For the sake of brainstorming, I present a rough design which unifies the selection behavior for cells, rows, and columns. I\u2019m not attached to this design, but rather putting it forward to demonstrate an alternate approach that may lead to even better design ideas collaboratively.</p> <ul> <li>Cells can be selected \u2013 but rows and columns cannot.</li> <li>Multiple cells can be selected via the same UX as LibreOffice Calc. Clicking on a row/column header selects all the cells within the row/column.</li> <li>As with LibreOffice Calc, the row/column headers visually indicate which rows and columns contain the current selection.</li> <li>When at least one cell is selected, an \u201cActions\u201d sidebar appears on the right.</li> <li>The Actions sidebar can be hidden and re-shown by clicking on arrows. Its visibility state persists in local storage.</li> <li>If the actions sidebar is hidden, then all cells have a context menu which shows the contents of the actions sidebar. Opening the context menu from a selected cell maintains the current selection. Opening the context menu from an un-selected cell changes the selection to contain only that cell.</li> <li>The actions sidebar contains collapsible sections for \u201cCells\u201d, \u201cRows\u201d, and \u201cColumns\u201d. Each section heading also displays the number of entities currently selected, e.g. \u201cCells (3)\u201d.</li> <li>The \u201cCells\u201d section contains actions like \u201cSet to NULL\u201d, \u201cSet to DEFAULT\u201d, \u201cSet to Now\u201d, \u201cCopy Down\u201d, \u201cCopy\u201d, \u201cPaste\u201d and other actions depending on type.</li> <li>The \u201cRows\u201d section contains actions like \u201cDelete\u201d, \u201cDuplicate\u201d</li> <li>The \u201cColumns\u201d section contains all the UI currently in the column header menu, plus the new UI for extracting columns.</li> <li>To aid in the discoverability and usability of selecting multiple cells in nonadjacent blocks, the Actions sidebar also contains a button labelled \u201cGrow Selection\u201d which displays above the Cell/Row/Column sections. When the user clicks \u201cGrow Selection\u201d, the button visually pulses indicating that a special (and persistent) mode has been enabled, and the user can select cells as they would with <code>Ctrl</code> pressed in LibreOffice Calc. A help message also displays below the button when grow-selection mode is enabled.</li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#2022-08-03-cycle-3-check-in","title":"2022-08-03 Cycle 3 check-in","text":""},{"location":"team/meeting-notes/2022/08/2022-08/#check-in-on-everyones-work","title":"Check in on everyone\u2019s work","text":""},{"location":"team/meeting-notes/2022/08/2022-08/#brent","title":"Brent","text":"<ul> <li>Was blocked on summarization until today, unblocked now</li> <li>Made progress on setting up library dataset, pretty much done<ul> <li>Not sure if it works on Windows, but that\u2019s not relevant for Cycle 3</li> </ul> </li> <li>Reviewed Maria\u2019s work for Data Modeling Suggestions<ul> <li>Meeting with Kriti &amp; Ghislaine tomorrow to discuss product work</li> </ul> </li> <li>Schema homepage on backburner since it\u2019s quick</li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#dhruvi","title":"Dhruvi","text":"<ul> <li>Data Import work is moving along<ul> <li>Deliverable will be a spec</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#dominykas","title":"Dominykas","text":"<ul> <li>Filtering almost done, need to meet with Pavish<ul> <li>Will be scheduled soon</li> </ul> </li> <li>Dynamic Defaults<ul> <li>Thinking about implementation constraints</li> <li>Will meet with Kriti and/or Ghislaine to discuss product concerns this week</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#ghislaine","title":"Ghislaine","text":"<ul> <li>Navigation spec should be merged today</li> <li>Table Inspector<ul> <li>Draft of spec ready</li> <li>Need to meet with Rajat and Sean about deliverable</li> </ul> </li> <li>Column Extraction<ul> <li>depends on table inspector, will need separate spec</li> </ul> </li> <li>Schema Page<ul> <li>not yet started</li> </ul> </li> <li>Styling<ul> <li>not yet started, hopefully this week</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#mukesh","title":"Mukesh","text":"<ul> <li>Column Extraction pretty much done, awaiting final review from Brent</li> <li>Record Summary backend work is close as well</li> <li>Record Summary frontend work is not yet started, will take up the rest of the week</li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#pavish","title":"Pavish","text":"<ul> <li>Data Explorer will occupy time until next meeting, including Filtering</li> <li>Grouping &amp; summarization in Data Explorer are next</li> <li>Data Import has not been started</li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#rajat","title":"Rajat","text":"<ul> <li>Currently working on introductory tasks, making progress</li> <li>Next task: Table Inspector<ul> <li>Read spec</li> <li>Meet with Ghislaine &amp; Sean</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#sean","title":"Sean","text":"<ul> <li>Need to resolve Navigation work assignment (see next agenda item)</li> <li>Record Selector work is moving along</li> <li>Record Page has not been started yet, would be good to do after Navigation</li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#navigation-work","title":"Navigation work","text":"<p>Difficult for Sean to coordinate with Pavish due to TZs. Navigation work seems to involve fiddly modifications of lots of code that Pavish originally wrote, thus it would be quicker with coordination.</p>"},{"location":"team/meeting-notes/2022/08/2022-08/#options","title":"Options","text":"<ul> <li>Sean and Pavish find a better meeting time (difficult)</li> <li>Pavish takes navigation, give some work to Sean in return</li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#decision","title":"Decision","text":"<ul> <li>Sean and Pavish will meet and discuss in a separate call</li> </ul>"},{"location":"team/meeting-notes/2022/08/2022-08/#renaming-queries-to-explorations-in-the-ui","title":"Renaming Queries to Explorations in the UI","text":"<p>Thumbs up all around</p>"},{"location":"team/meeting-notes/2022/08/2022-08/#data-import-work","title":"Data Import work","text":"<ul> <li>Design constraint: <ul> <li>We want to make sure that the user understands that they cannot navigate away from the page during the import process.</li> <li>A modal is one way to do this, but it\u2019s just a suggestion</li> </ul> </li> <li>It will significantly simplify code on the frontend if we can stop portraying import as asynchronous like we\u2019ve been doing</li> <li>We discussed rethinking the import flow to allow the user to having more stopping points in the import process since it\u2019s synchronous<ul> <li>they can see the files they\u2019ve uploaded</li> <li>they can decide to import a specific file into a table</li> <li>they can control the inference process and whether/when it happens</li> </ul> </li> <li>We decided not to rethink the flow since it complicates Cycle 3 work and is irrelevant to our use case. </li> <li>We will need to update the import flow to account for importing data into existing tables (Anish\u2019s work), so we can think through all this then.</li> </ul>"},{"location":"team/meeting-notes/2022/09/2022-09/","title":"September 2022 meeting notes","text":""},{"location":"team/meeting-notes/2022/09/2022-09/#2022-09-28-weekly-meeting","title":"2022-09-28 weekly meeting","text":""},{"location":"team/meeting-notes/2022/09/2022-09/#team-goals-discussion","title":"Team goals discussion","text":"<p>Attendees: Entire core team</p> <p>We discussed the team goals document (only accessible to the core team), which outlines priorities for the rest of 2022 and criteria for what is critical for the live demo and first release.</p> <p>The core team will be using this document as a guide from now on. We will need to come up with a new set of goals and priorities once we have completed our first release.</p>"},{"location":"team/meeting-notes/2022/09/2022-09/#live-demo-readiness-check-in-next-steps","title":"Live demo readiness check in &amp; next steps","text":"<p>Attendees: Entire core team</p> <p>What are next steps for getting ready for the live demo?</p> <ul> <li>Kriti will close demo video milestone</li> <li>Kriti will take a quick look at the live demo milestone and boot out tickets that don\u2019t meet the criteria established above<ul> <li>This is a one time thing</li> <li>Everyone on the team will be responsible for making sure their work fits in the live demo</li> </ul> </li> <li>We need a round of usability testing to flesh out the remaining Styling tickets (for column extraction and the exploration page)<ul> <li>Kriti will send out instructions for what to do via email</li> <li>Looking for volunteers<ul> <li>Sean</li> <li>Brent</li> <li>Rajat</li> <li>Ghislaine</li> <li>Dom</li> <li>Pavish</li> </ul> </li> <li>We don\u2019t need so many people, Kriti will pick a subset of people and mention them in the email<ul> <li>Dom notes that he has relatively fresh eyes since he hasn\u2019t used the frontend much</li> </ul> </li> <li>Goal for this round is \u201cI don\u2019t understand\u201d / UX improvements</li> </ul> </li> <li>After the styling work has been implemented in the product, we will do another round of usability testing of the entire product focused on finding bugs</li> <li>We can bring in CCI / external parties to do this</li> <li>We\u2019ll organize this later</li> </ul>"},{"location":"team/meeting-notes/2022/09/2022-09/#hacktoberfest","title":"Hacktoberfest","text":"<p>Attendees: Entire core team</p> <p>Should we participate in Hacktoberfest?</p> <p>No, we need to focus on the live demo. Maybe next year.</p>"},{"location":"team/meeting-notes/2022/09/2022-09/#backend-problems-discussion","title":"Backend problems discussion","text":"<p>Attendees: Kriti, Brent, Mukesh, Dom, Sean</p> <p>Dom started this topic as \u201cImportance of refactorability\u201d with the following explanation:</p> <p>Our workflow makes us extra-sensitive to refactorability, I argue; I\u2019d like to reach a common understanding between (at least) backend devs regarding this topic.</p> <p>We didn\u2019t have enough time to have a thorough discussion, so we instead focused on documenting problems that the backend team has been facing. We\u2019re going to set up a separate meeting to resolve the problems.</p> <p>Problems:</p> <ul> <li>Need a common understanding of how important refactorability is<ul> <li>We refactor often</li> <li>Refactoring seems hard, accumulate technical debt fast</li> <li>How can we make it less expensive to refactor?</li> </ul> </li> <li>Different people find different approaches easy or hard,<ul> <li>What\u2019s hard for one person is easy for someone else</li> </ul> </li> <li>Our frameworks don\u2019t make sense for our product<ul> <li>Refactoring within these frameworks is probably just another temporary solutions</li> </ul> </li> <li>Discoverability is a problem<ul> <li>Small functions</li> <li>We don\u2019t have a structure that we\u2019ve agreed on, what\u2019s our \u201catom?\u201d</li> <li>People misusing functions or not knowing it\u2019s there</li> <li>Helper functions in a module, but need to be used in a bunch of different modules</li> <li>Discoverability is about good namespacing<ul> <li>It\u2019s not that we have a lot of functions<ul> <li>It\u2019s that they\u2019re namespaced unintuitively</li> </ul> </li> <li>Boolean switches are a bad way to namespace</li> <li>Our namespacing has been very lazy<ul> <li>Needlessly big files with varied content<ul> <li>E.g. most <code>base.py</code> files</li> </ul> </li> <li>We should aim for small <code>base.py</code> files<ul> <li>They\u2019re the files that should tie a module together</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li>Wait until we have a proper architecture before we decide on how to refactor<ul> <li>Counter argument<ul> <li>We need good refactorability to get to a good architecture<ul> <li>Currently we\u2019re just too burdened</li> </ul> </li> <li>No stability in foreseeable future</li> </ul> </li> </ul> </li> <li>Overengineering early is a problem, not knowing what things are going to be<ul> <li>What is overengineering in this context?</li> </ul> </li> <li>Brent doesn\u2019t know how error infrastructure works,<ul> <li>but needs to know to find badly caught errors</li> <li>Doesn\u2019t work in some ways</li> <li>Error infrastructure seems more complicated that needed<ul> <li>Deep inheritance trees</li> </ul> </li> <li>This is a problem with a bunch of different places in our code</li> <li>It\u2019s intimidating<ul> <li>But, once Mukesh showed me how to use it<ul> <li>I\u2019ve been using it fine</li> </ul> </li> </ul> </li> </ul> </li> <li>\u201cI might repeat this, pulling this out to a separate function\u201d<ul> <li>Too early</li> <li>Dom<ul> <li>I pull out stuff based on readability usually, not reuse<ul> <li>When you\u2019re doing stuff,</li> <li>and you encapsulate it into a named method,</li> <li>that\u2019s an opportunity to tell the reader what you\u2019re doing.</li> </ul> </li> <li>So, for me, there\u2019s no \u201ctoo early\u201d</li> </ul> </li> </ul> </li> <li>Some people are more or less familiar with Django/Python idioms</li> </ul> <p>Next steps: Kriti will schedule backend meeting.</p>"},{"location":"team/meeting-notes/2022/09/2022-09/#2022-09-22-styling-planning","title":"2022-09-22 Styling planning","text":"<p>Attendees: Pavish, Sean, Rajat, Ghislaine</p> <p>We discussed on styling deliverables and planning out frontend implementation.</p>"},{"location":"team/meeting-notes/2022/09/2022-09/#plan","title":"Plan","text":"<ul> <li>Ghislaine will provide high-level information on all different types of layouts, so the frontend team can start implementing the lower level components</li> <li>For each page in the figma designs, one or more of the frontend devs will take control of reviewing them thoroughly. This will be a general review.</li> <li>Rajat will be incharge of the entire styling implementation. He will be working on most of it, and he can also delegate the tasks to the rest of the frontend team. The call rests on him.</li> <li>Before implementation:</li> <li>Rajat will ask any design questions on the figma file, which may affect the implementation process. Ghislaine will be incharge of answering them.</li> <li>Rajat will create GH tickets for implementation work. Pavish or Sean will review the proposed architectural changes if any, or answer any questions on the GH issue, before approving it to start implementation.</li> <li>The implementation tickets will be separated by new components needed, architectural changes, new features, and pure styling work.</li> <li>During implementation:</li> <li>Sean and Pavish will act in a supporting role, taking up any issue Rajat wants to delegate, answer any questions, or help designing the architecture.</li> </ul>"},{"location":"team/meeting-notes/2022/09/2022-09/#2022-09-21-weekly-meeting","title":"2022-09-21 weekly meeting","text":""},{"location":"team/meeting-notes/2022/09/2022-09/#demo-video-plan","title":"Demo video plan","text":"<ul> <li>The new plan is to make a short product introduction video using the Figma mockups we\u2019re creating for styling the product.</li> <li>This will allow engineering to focus on the live demo and allow us to launch the marketing website sooner.</li> </ul>"},{"location":"team/meeting-notes/2022/09/2022-09/#live-demo-readiness-plan","title":"Live demo readiness plan","text":"<p>Three stages:</p> <ul> <li>Stage 1: Continue to work on usability testing using the library storyboard and get everything to work and look good.</li> <li>Stage 2: Usability testing on all other features we\u2019ve implemented so far, get it all to work and look good.</li> <li>Stage 3: Logistics for the live demo (e.g. how do we allow many different users to look at our live demo at the same time?)</li> </ul> <p>We will probably need to cut scope for the live demo. We\u2019ll talk through what\u2019s essential at next week\u2019s meeting. Kriti will send an agenda and things to think about beforehand.</p>"},{"location":"team/meeting-notes/2022/09/2022-09/#issuepr-triage","title":"Issue/PR triage","text":"<ul> <li>We\u2019re removing <code>CODEOWNERS</code> files from repos to avoid unwanted notifications.</li> <li>Sean will take over triaging issues and making sure they are assigned to someone for review.<ul> <li>Everyone is still responsible for assigning reviewers for their own PRs, Sean is just a last resort.</li> </ul> </li> <li>Rajat will be the backup person for triaging issues in case Sean is unavailable.</li> </ul>"},{"location":"team/meeting-notes/2022/09/2022-09/#current-work-check-ins","title":"Current work check-ins","text":"<ul> <li>We\u2019re abandoning the \u201ceveryone go around and talk about your work\u201d part of this meeting. We\u2019ll instead focus on blockers, dependencies, and questions that the entire team is needed for.</li> <li>Brent: Users &amp; Permissions is on pause because of live-demo readiness bugs, is this okay?</li> <li>Yes, this is fine. Once Dom or Mukesh is freed from performance work, we should then have someone dedicated to Users &amp; Permissions</li> <li>Brent will need to schedule a call for deciding how to merge in Users &amp; Permissions since it will break everyone\u2019s workflows to need authentication</li> <li>Rajat: Plan is to start DB page styling on Friday, are there other priorities?</li> <li>Frontend team will meet to discuss how to break up styling work tomorrow</li> <li>Ghislaine will also attend</li> <li>Dom: There\u2019s a failing test with moving columns that\u2019s preventing merge of the metadata performance issue. Okay to merge it anyway and fix the moving columns issue later?</li> <li>Yes, that is fine. We\u2019ll make a ticket for it.</li> <li>Mukesh has some time to debug this now.</li> <li>Mukesh is making good progress on the performance issues, has reduced queries from 400 to 200. Remaining queries are related to Dom\u2019s work.</li> <li>Code is not very readable but since it\u2019s related to Django-SQLAlchemy syncing, and we plan to remove that whole part of our architecture fairly soon, readability is not a concern.</li> </ul>"},{"location":"team/meeting-notes/2022/09/2022-09/#2022-09-16-demo-readiness","title":"2022-09-16 demo readiness","text":"<p>Attendees: Brent, Ghislaine, Kriti, Pavish, Sean (partial)</p> <p>We went through usability testing notes on Figma and decided which issues were problems. Relevant issues were later transferred into GitHub.</p>"},{"location":"team/meeting-notes/2022/09/2022-09/#table-page","title":"Table Page","text":"<ul> <li>no changes needed to URL</li> </ul>"},{"location":"team/meeting-notes/2022/09/2022-09/#table-inspector","title":"Table Inspector","text":"<ul> <li>Table constraints: move to separate location<ul> <li>Location for demo video</li> <li>For live demo, separate constraints by type</li> </ul> </li> <li>Links section<ul> <li>should exist,</li> <li>should show both directions</li> </ul> </li> <li>Columns tab<ul> <li>Make different interactions have different styling</li> <li>Try making interactions as similar as possible</li> <li>unique constraint should be positive in both places or negative in both places</li> <li>Reason for two places: multicolumn uniqueness constraints</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/09/2022-09/#screen-8","title":"Screen 8","text":"<ul> <li>Improve navigation (general)<ul> <li>specifically, navigating to import place</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/09/2022-09/#screen-20","title":"Screen 20","text":"<ul> <li>Column name running out<ul> <li>We\u2019d like to persist column width settings for demo video</li> </ul> </li> <li>Record selector discoverability<ul> <li>Magnifying glass not exactly obvious</li> <li>improve finding record selector</li> </ul> </li> <li>Record link vs. record selector icons distinction isn\u2019t obvious</li> <li>Help content<ul> <li>hard to understand that this does searching and also adding</li> <li>adding and selecting should be more distinct</li> </ul> </li> <li>White space<ul> <li>we agree this is a problem</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/09/2022-09/#screen-22","title":"Screen 22","text":"<ul> <li>Want to add type when creating column</li> <li>Improve modal for linking table</li> <li>improve table load (or get rid of that) when creating link</li> <li>one-to-one record not working</li> </ul>"},{"location":"team/meeting-notes/2022/09/2022-09/#screen-26","title":"Screen 26","text":"<ul> <li>Styling<ul> <li>assess and improve</li> </ul> </li> <li>queries<ul> <li>more help (\u201cwhy are these there?\u201d)</li> </ul> </li> <li>Brent TODO file bug for missing records (or wrong count)</li> </ul>"},{"location":"team/meeting-notes/2022/09/2022-09/#screen-27","title":"Screen 27","text":"<ul> <li>Bug for NOW() (confusing behavior)</li> </ul>"},{"location":"team/meeting-notes/2022/09/2022-09/#screen-28","title":"Screen 28","text":"<ul> <li>Icons aren\u2019t obvious or clear in their use</li> <li>sequential loading of related records is confusing</li> </ul>"},{"location":"team/meeting-notes/2022/09/2022-09/#screen-30","title":"Screen 30","text":"<ul> <li>Dropdown options are confusing</li> <li>preproc is confusing</li> </ul>"},{"location":"team/meeting-notes/2022/09/2022-09/#screen-32","title":"Screen 32","text":"<ul> <li>Go with count for default aggregation</li> </ul>"},{"location":"team/meeting-notes/2022/09/2022-09/#screen-34","title":"Screen 34","text":"<ul> <li>Help user understand single vs. multiple results</li> <li>Help user understand why some not available</li> </ul>"},{"location":"team/meeting-notes/2022/09/2022-09/#2022-09-14-demo-readiness","title":"2022-09-14 demo readiness","text":"<p>Attendees: Brent, Ghislaine, Kriti, Pavish, Rajat, Sean</p> <p>We did some live usability testing, but didn\u2019t get into any action items.</p> <p>Sean volunteered to split some tickets into \u201cdemo video\u201d and \u201clive demo\u201d.</p>"},{"location":"team/meeting-notes/2022/09/2022-09/#2022-09-14-weekly-meeting","title":"2022-09-14 weekly meeting","text":"<p>We talked through progress for Cycle 4. Nothing major to report.</p>"},{"location":"team/meeting-notes/2022/09/2022-09/#scope-and-expectations-for-cycle","title":"Scope and expectations for cycle","text":"<ul> <li> <p>Topic summary: keeping scope and expectations limited for current cycle (and any before release)</p> </li> <li> <p>Triggered by https://github.com/centerofci/mathesar/issues/1632 but not specific to it</p> </li> <li>Not clear why it\u2019s blocking the demo video</li> <li>Action item: If putting something into Demo video, live demo, or initial release milestones, please indicate why it\u2019s absolutely crucial for those milestones</li> </ul>"},{"location":"team/meeting-notes/2022/09/2022-09/#2022-09-07-demo-video-readiness","title":"2022-09-07 demo video readiness","text":"<p>Attendees: Kriti, Ghislaine, Pavish, Brent, Rajat (partial), Sean (partial)  </p> <ul> <li>Demo should start with the Database page.</li> <li>Database page design should be updated to include user onboarding elements. <ul> <li>Each schema should include a count of tables and explorations</li> <li>Public schema will have a default description that might not be helpful for users.<ul> <li>From a product perspective we\u2019d like users to create a new schema</li> </ul> </li> <li>New schema action should be more prominent</li> <li>We need to design for various states:<ul> <li>Empty public schema</li> <li>Public schema with tables</li> </ul> </li> </ul> </li> </ul> <p>We switched to taking notes directly on the storyboard at this point.</p>"},{"location":"team/meeting-notes/2022/09/2022-09/#github-issue","title":"GitHub issue","text":"<p>We created a GitHub issues with todos to do before the next meeting.</p> <p>Please see https://github.com/centerofci/mathesar/issues/1604</p>"},{"location":"team/meeting-notes/2022/09/2022-09/#live-demo-issues","title":"Live demo issues","text":"<p>We won\u2019t be handling this just yet, but making notes so we don\u2019t forge</p> <ul> <li>error handling checking and improvements in the backend</li> </ul>"},{"location":"team/meeting-notes/2022/09/2022-09/#next-steps","title":"Next steps","text":"<ul> <li>Work on https://github.com/centerofci/mathesar/issues/1604</li> <li>Next meeting on Wednesday</li> <li>We\u2019ll continue going through the storyboard and creating todos until we do a first pass of the full storyboard</li> <li>Then we\u2019ll go through and do a second pass on the storyboard</li> </ul>"},{"location":"team/meeting-notes/2022/09/2022-09/#2022-09-07-weekly-meeting","title":"2022-09-07 weekly meeting","text":"<p>Attendees: Kriti, Ghislaine, Pavish, Brent, Rajat, Sean, Mukesh, Dominykas</p>"},{"location":"team/meeting-notes/2022/09/2022-09/#weekly-check-in-and-planning","title":"Weekly check-in and planning","text":"<ul> <li>Data Explorer - done, remaining polish will be folded into Demo Video Readiness</li> <li>Table Inspector:<ul> <li>Design is almost done, waiting on data type inspector PR</li> <li>Development almost done, PR in review</li> </ul> </li> <li>Column Extraction:<ul> <li>Sean will prioritize frontend</li> </ul> </li> <li>Record Summary:<ul> <li>Backend: Mukesh and Sean to discuss if there\u2019s more work remaining. If there\u2019s more work, it\u2019s a priority for Mukesh</li> <li>Frontend: Sean will prioritize</li> </ul> </li> <li>Record Selector: no change</li> <li>Record Page: <ul> <li>Frontend PR merged, now 75% done</li> <li>A bunch of polish and smaller issues left</li> </ul> </li> <li>Data Import:<ul> <li>Pavish will take over on getting the design spec merged</li> <li>Pavish will work on the frontend</li> </ul> </li> <li>Schema Page:<ul> <li>Almost done, just need schema descriptions</li> <li>Brent is working on the backend</li> </ul> </li> <li>Database Page:<ul> <li>same as schema page</li> </ul> </li> <li>Exploration Page:<ul> <li>Pavish is working on this</li> </ul> </li> <li>API performance<ul> <li>Mukesh is working on this</li> <li>Prototype works well</li> </ul> </li> <li>DB performance<ul> <li>Dom is working on this, slow going since it involves entire codebase</li> </ul> </li> <li>Users &amp; Permissions: no progress</li> <li>Demo Video Readiness:<ul> <li>Kriti wrote up some notes</li> <li>Meeting today to figure out next steps</li> <li>We still have a bunch of features to build (column extraction, etc.)</li> </ul> </li> <li>Demo Video Production and Mathesar Website: no real updates to report</li> </ul>"},{"location":"team/meeting-notes/2022/09/2022-09/#data-explorer-navigation","title":"Data explorer navigation","text":"<ul> <li>Summary: Continuing from Can we remove the \u201cClose\u201d button on Explorations?</li> <li>Participants: Sean, Pavish, Kriti, Ghislaine</li> </ul> <p>Summary of decisions is here: https://github.com/centerofci/mathesar/issues/1601#issuecomment-1239754189</p>"},{"location":"team/meeting-notes/2022/09/2022-09/#2022-09-02-record-summaries-in-data-explorer","title":"2022-09-02 Record Summaries in Data Explorer","text":"<ul> <li>Topic: Record summaries in Data Explorer</li> <li>Participants: Brent, Mukesh, Pavish, Sean</li> <li>Time: ~90 minutes</li> </ul> <p>The discussion split into the following sub-topics: 1. If, and if so, how should Record Summaries be displayed in Data Explorer. 2. What should the default aggregation be, when the user clicks on the Summarize option after grouping a table, as per screen 31 and 32 of our storyboard figjam file. 3. Storyboard ordering for the Demo video. 4. Allowing operations across schemas in Mathesar.</p>"},{"location":"team/meeting-notes/2022/09/2022-09/#1-if-and-if-so-how-should-record-summaries-be-displayed-in-data-explorer","title":"1. If, and if so, how should Record Summaries be displayed in Data Explorer.","text":"<p>When a user adds the id column of a table in the Data Explorer, should we show the id directly as an integer or should we show a Record Summary?   * Arguments supporting keeping id columns as integers and not showing Record Summary     - Data Explorer is meant to allow the user form any query structure they want, and there are valid usecases where we may want to directly display the id, even if not the most common.     - Users can add any column they want in the Data Explorer, which would make the purpose of Record Summaries moot within Data Explorer.     - Internally, calculating Record Summaries requires running a query. In this case, we\u2019d run a query within a query, which isn\u2019t performant.   * Arguments supporting showing Record Summaries as they shown are in tables     - It would appear &amp; function similar to tables maintaining uniformity across the product.     - From the user standpoint, they can always expect the same behaviour, avoids confusion.     - Users can configure templates for Record Summaries however they want, which can include additional text. We don\u2019t want them repeating it everything they create an Exploration, with an additional transformation.   * Decision     - We show the Record Summary in Data Explorer.     - However, we have an option to toggle it, in the column properties pane.     - Since the user can add the same column multiple times, they can add the \u2018id\u2019 column which will show the Record Summary, and they can add it again as a new column and toggle summaries to be \u2018off\u2019 and that will show an integer.     - We arrived at this after a lot of to-and-fro discussing several alternatives, we didn\u2019t document them.     - This will be hard to implement and we\u2019d prefer not to do it for the live demo (and preferably the initial release even).   * Next Steps     - Since we cannot complete implementing Record Summaries for the demo video, we started Discussion #2 to figure out how we handle the summarization scenario from the storyboard.</p>"},{"location":"team/meeting-notes/2022/09/2022-09/#2-what-should-the-default-aggregation-be-when-the-user-clicks-on-the-summarize-option-after-grouping-a-table-as-per-screen-31-and-32-of-our-storyboard-figjam-file","title":"2. What should the default aggregation be, when the user clicks on the Summarize option after grouping a table, as per screen 31 and 32 of our storyboard figjam file.","text":"<ul> <li>Option1: We select a single additional column and aggregate it to count.<ul> <li>Needs no additional work.</li> </ul> </li> <li>The fastest solution to the problem.</li> <li> <p>All of us in the call were in favour of it.</p> </li> <li> <p>Option 2: If we have to show the columns aggregated to list, how would we do it?.</p> <ul> <li>We identify the columns that are used in Record Summary, and select them in the query instead of the id columns.</li> </ul> </li> <li>When the user summarizes the checkouts table, they will see a list of patron first names, and last names (considering these are the columns used by Record Summary) in the Data Explorer results. The id column will not be part of the query\u2019s initial columns.</li> <li>This will provide them with similar information to Record Summaries.</li> <li> <p>This is the quickest way of implementing list aggregation for this user scenario, without needing Record Summaries.</p> </li> <li> <p>Decision &amp; Next steps</p> <ul> <li>This is a product level decision.</li> </ul> </li> <li>Brent and Pavish will discuss this on the upcoming \u2018Demo video readiness check-in call\u2019 on Tuesday (2022-09-06).</li> </ul>"},{"location":"team/meeting-notes/2022/09/2022-09/#3-storyboard-ordering-for-the-demo-video","title":"3. Storyboard ordering for the Demo video.","text":"<p>The previous discussion yielded another one on the user flow in the demo video. We introduce Data Explorer in Storyboard screens 31 and 32 through summarizing a grouped table result. * Summarization is not the best way to introduce Data Explorer since it involves several configurations being displayed to the user, which may come across as Data Explorer being hard to use or unintuitive. * The primary usecase of the Data Explorer is to be able to join tables together. Our UX is designed to make this usecase the simplest operation. It would be better if we started with this. * We can include summarization &amp; navigating via grouped table result after we first introduce Data Explorer with simpler flows. * All of us in the call were in agreement with this. * Next steps     - Brent and Pavish will discuss this on the upcoming \u2018Demo video readiness check-in call\u2019 on Tuesday (2022-09-06).</p>"},{"location":"team/meeting-notes/2022/09/2022-09/#4-allowing-operations-across-schemas-in-mathesar","title":"4. Allowing operations across schemas in Mathesar.","text":"<p>We took some liberty discussing bugs when this came into question, which resulted from the discrepancy in scoping queries between the backend and the frontend. * Currently queries on the backend are not scoped within a Schema. They exist directly under the Database level. * The UX treats Schemas to be the parent of Queries. * This is a product level discussion. * Next steps     - Sean will send a mail regarding this.</p>"},{"location":"team/meeting-notes/2022/10/2022-10-04-backend/","title":"2022-10-04 backend meeting","text":"<p>Topic: The backend codebase is not in a very good state right now. What can we do to increase future feature velocity, and when should we do it? Attendees: Brent, Dom, Kriti, Mukesh, Sean</p>"},{"location":"team/meeting-notes/2022/10/2022-10-04-backend/#potential-agenda","title":"Potential agenda","text":"<p>Written before the meeting</p> <ul> <li>Brainstorm about what\u2019s slowing us down</li> <li>Create a list of current problems with the code<ul> <li>What are our current architectural issues?</li> </ul> </li> <li>Prioritize<ul> <li>What do we need to fix for the live demo?</li> <li>What do we need to fix for the first release?</li> <li>What should we prioritize immediately afterwards?</li> </ul> </li> <li>What process changes do we need to make?</li> </ul>"},{"location":"team/meeting-notes/2022/10/2022-10-04-backend/#brainstorming-whats-slowing-us-down","title":"Brainstorming: what\u2019s slowing us down?","text":"<p>Kriti\u2019s notes:</p> <ul> <li>Disagreements about architecture and readability</li> <li>Brittle or hard-to-extend infrastructure (\u201coverengineering\u201d)<ul> <li>Hard to work with code that someone else wrote?</li> <li>Potentially related to the lack of thorough code review and feedback</li> </ul> </li> <li>Issues taking too long to fix, big PRs, people disappearing into an issue for weeks or months</li> <li>Refactors creeping into solving issues</li> <li>Lack of \u201crefactorability\u201d</li> <li>Lack of discoverability</li> <li>Working around SQLAlchemy</li> <li>Lack of standards or style guide?<ul> <li>To get us on the same page</li> </ul> </li> </ul> <p>Dom\u2019s notes:</p> <ul> <li>We\u2019ve not been providing feedback to each other</li> <li>Trouble with keeping PRs small<ul> <li>Would be interested in process-aided solutions</li> </ul> </li> </ul> <p>Brent\u2019s notes:</p> <ul> <li>small changes need to touch large portion of codebase</li> <li>Long loops mean diverging from codebase, misunderstandings, sunk-cost fallacy</li> <li>Generally overcomplicated codebase, given our feature set</li> <li>review process takes too long</li> <li>no process for \u201cstopping bleeding\u201d</li> <li>bus factor is high. Leads to \u201conly one can work on that part\u201d attitude</li> </ul> <p>Mukesh\u2019s notes:</p> <ul> <li>Fighting the framework</li> <li>Complicated codebase due to the need for certain features</li> <li>Breaking rules but not sure which one is important</li> </ul>"},{"location":"team/meeting-notes/2022/10/2022-10-04-backend/#problems-to-solve","title":"Problems to solve","text":"<p>Based on the above brainstorming, here are the problems we need to solve and some discussion around them:</p> <ul> <li>Get on the same page on what style etc. we\u2019re aiming at<ul> <li>Style may not be a tight enough word here</li> </ul> </li> <li>Get on the same page on what things matter for style and what things don\u2019t</li> <li>Get better at feedback and PR reviews<ul> <li>We have had a \u201clooks good to me\u201d culture on the backend team</li> <li>See this PR review from Sean as a good example of what we could do: https://github.com/centerofci/mathesar/pull/1568</li> <li>We don\u2019t want to have only cathartic airing of grievances meetings, we want to build competency/consensus<ul> <li>Feedback is a gift for the person you\u2019re giving it to, it helps them learn and grow</li> </ul> </li> <li>How much should we focus on feedback?<ul> <li>No feedback on current codebase, that will be covered when we talk about current codebase complexities</li> <li>We should focus on thorough and honest feedback for new PRs<ul> <li>This should be more manageable because we are also tightening up feedback cycles</li> </ul> </li> </ul> </li> </ul> </li> <li>Tightening up feedback cycles for PRs (make PRs small)<ul> <li>Idea: walk through PRs once a week, even if you\u2019re not ready to submit it<ul> <li>Hard to see where to split out PRs and make them smaller</li> <li>Would benefit from a regular meeting to walking through the code for current work to get perspective</li> </ul> </li> <li>Pair programming could be useful also</li> <li>1:1s within backend team have been helpful<ul> <li>Make them more targeted to current problems</li> </ul> </li> <li>Meetings where we demand feedback on a regular basis<ul> <li>\u201cDemand feedback\u201d was a action item from public speaking training meetings as well, useful here</li> </ul> </li> </ul> </li> <li>Identify and fix current codebase complexities<ul> <li>We shouldn\u2019t touch this until we fix some of the above problems</li> <li>It will only complicate things</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/10/2022-10-04-backend/#next-steps","title":"Next steps","text":"<p>Live demo &amp; first release are still top priorities, most time/effort will still be focused on them. Here\u2019s some small changes we\u2019ll make:</p> <ul> <li>We will schedule another backend meeting in 3 weeks</li> <li>To increase velocity, reach out to the person that has the most expertise in a particular part of the codebase and get them to help you with tasks so they are completed quickly.<ul> <li>We\u2019ll work to break down this \u201conly one can work on that part\u201d through the next few steps.</li> </ul> </li> <li>Creating backend standards / style guide:<ul> <li>Everyone should individually write down notes on what makes code readable</li> <li>We can use that to identify what we disagree on and figure out next steps</li> <li>We\u2019ll discuss this at the next meeting</li> </ul> </li> <li>Be more honest while giving feedback<ul> <li>Everyone should keep this in mind</li> <li>No one will be insulted, no pre-filtering is necessary</li> <li>It will help us understand each other\u2019s preferences</li> <li>We\u2019ll discuss how this is going at the next meeting</li> </ul> </li> <li>Tightening up feedback cycles<ul> <li>Brent &amp; Dom, Brent &amp; Mukesh already have 1:1s<ul> <li>Brent will ask questions about current work in 1:1s</li> <li>Focus these 1:1s on feedback and walking through code together</li> <li>Get perspective on how to split up PRs</li> </ul> </li> <li>Dom &amp; Mukesh should also set up a similar weekly 1:1</li> <li>We\u2019ll discuss how this went at the next meeting</li> </ul> </li> <li>Identify and fix current codebase complexities<ul> <li>We\u2019re not tackling this right now</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/10/2022-10-05-weekly/","title":"2022-10-05 weekly meeting","text":""},{"location":"team/meeting-notes/2022/10/2022-10-05-weekly/#cycle-4-retrospective","title":"Cycle 4 Retrospective","text":"<p>Attendees: Brent, Dom (partial), Ghislaine, Kriti, Mukesh, Pavish, Rajat</p> <p>We wrote down notes in a FigJam document ahead of time (only accessible to core team).</p>"},{"location":"team/meeting-notes/2022/10/2022-10-05-weekly/#what-went-well","title":"What went well","text":"<ul> <li>Marketing and website related work was great<ul> <li>Various team members understood the product vision better</li> <li>We have a better idea of how to explain Mathesar in a succinct way or to less technical users</li> <li>Nice to have space for big-picture conversations</li> </ul> </li> <li>We\u2019re done with essential features, only polish and bugs left</li> <li>Styling looks great!</li> <li>We\u2019re getting better at keeping scope of tasks smaller, feels more productive<ul> <li>Fixed a bunch of bugs</li> </ul> </li> <li>We have authentication now!</li> <li>We\u2019re making progress on improving processes and feedback on the backend team</li> </ul> <p>See also: shout outs section on the FigJam document.</p>"},{"location":"team/meeting-notes/2022/10/2022-10-05-weekly/#what-could-have-gone-better","title":"What could have gone better","text":"<ul> <li>PR reviews remain slow for some team members\u2019 work</li> <li>Backend performance progress has been slow / hard to follow</li> <li>We didn\u2019t track the cycle very well<ul> <li>Didn\u2019t have a specific goal for the cycle</li> <li>Didn\u2019t track progress</li> </ul> </li> <li>Plans changed mid-cycle, disrupted workflow</li> </ul>"},{"location":"team/meeting-notes/2022/10/2022-10-05-weekly/#ideas","title":"Ideas","text":"<ul> <li>Shorter cycles? Maybe 2 weeks each, focused on a specific goal?</li> <li>Bring back the spreadsheet!</li> <li>Tighten feedback loops on the backend team<ul> <li>We already discussed this yesterday at the backend meeting, just reiterating</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/10/2022-10-05-weekly/#cycle-5-planning","title":"Cycle 5 Planning","text":"<p>Attendees: Brent, Dom, Ghislaine, Kriti, Mukesh, Pavish, Rajat, Sean (partial)</p> <p>Plan for Cycle 5: we\u2019re going to launch our live demo and website on Nov 22, in whatever state it is. We have 6.5 weeks to get Mathesar in the best shape we can get it.</p> <p>Concerns:</p> <ul> <li>This is Thanksgiving week<ul> <li>We won\u2019t be needing to fix anything over a holiday, this is not something any external users will be relying on.</li> </ul> </li> <li>Are we planning to share on Hacker News? Our performance may not be good enough for a large audience.<ul> <li>No, we\u2019ll wait until our first release so people can download/install it</li> <li>Live demo will be shared with a small number of people we already know<ul> <li>Can also use it for usability testing</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/10/2022-10-05-weekly/#what-work-is-left","title":"What work is left?","text":"<ul> <li>Live demo deployment logistics<ul> <li>where?</li> <li>testing</li> <li>who?</li> <li>scale?</li> <li>dataset </li> </ul> </li> <li>Performance work<ul> <li>Brent: We should consider changing tactics for performance improvements. </li> <li>Picking off low-hanging fruit seems not to be working.</li> <li>Need separate call to decide on the approach here</li> <li>Replacing pages depending on multiple APIs on the frontend with a single API might be useful for frontend performance<ul> <li>We shouldn\u2019t do this until after the live demo, will need more discussion and work</li> </ul> </li> </ul> </li> <li>Finish the styling in Figma</li> <li>Implement the styling in the product</li> <li>Usability testing &amp; QA</li> <li>Bugs<ul> <li>How do we track bugs in the spreadsheet?<ul> <li>Group bugs into meta issues based on some criteria and assign those to people</li> </ul> </li> <li>Frontend needs to help prioritize backend bugs<ul> <li>We\u2019ll a bug prioritization session (async) and that will help with grouping</li> </ul> </li> <li>We need to find more bugs, we haven\u2019t been using the product much<ul> <li>Do QA session earlier rather than later</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/10/2022-10-05-weekly/#organizing-work-in-a-spreadsheet","title":"Organizing work in a spreadsheet","text":"<p>How do we organize the buckets of work?</p> <ul> <li>Features should be tracked separately</li> <li>Styling \u2013 one row per feature</li> <li>Live demo logistics</li> <li>Performance<ul> <li>Backend and frontend</li> </ul> </li> <li>Usability testing, QA, website work as well</li> <li>Bugs \u2013 chunk them as described above</li> </ul> <p>Next steps: Kriti will organize bug triage and make a spreadsheet, will send it out.</p>"},{"location":"team/meeting-notes/2022/10/2022-10-05-weekly/#how-should-we-track-and-prioritize-work","title":"How should we track and prioritize work?","text":"<ul> <li>Use a spreadsheet</li> <li>Prioritize work and assign responsibility at the weekly meeting</li> <li>Should we split the cycle into smaller 2 week chunks<ul> <li>No, if we track progress like we used to, a longer cycle is fine.<ul> <li>We lost track this time because we didn\u2019t use a spreadsheet.</li> </ul> </li> <li>2 week cycle planning might hurt our velocity because of the planning and syncing up involved.</li> <li>Let\u2019s try the longer cycle and circle back</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/10/2022-10-05-weekly/#plan-for-performance-work","title":"Plan for performance work","text":"<p>Attendees: Brent, Dom, Kriti, Mukesh</p> <p>Rethinking performance work:</p> <ul> <li>Get what we have merged in - Mukesh and Dom\u2019s PRs<ul> <li>Then call it a day</li> <li>Dom\u2019s metadata improvements have massive improvements based on Brent\u2019s testing<ul> <li>Not sure if we\u2019ll need any additional improvements for the demo</li> </ul> </li> </ul> </li> <li>Notes about implementation<ul> <li>Once we figure out the prefetch approach for each type of action, we can use it for different APIs easily</li> <li>We can try to get reflection down to constant instead of exponential time, but this is difficult</li> </ul> </li> <li>We can eke out more performance improvements, but is it a good use of our time?</li> </ul> <p>Plan:</p> <ul> <li>Get current PRs merged in as highest priority<ul> <li>Brent will take responsibility for Dom\u2019s PR</li> <li>Dom will take responsibility for Mukesh\u2019s PR</li> </ul> </li> <li>Then, test current APIs on the staging server<ul> <li>Mukesh will do this<ul> <li>We\u2019ll use the staging server since it\u2019s most comparable to live demo.</li> <li>Use Developer Tools \u201cNetwork\u201d tab to log times.</li> </ul> </li> <li>Make a spreadsheet with list of APIs over 1 second</li> <li>Ask the frontend for input on what to prioritize<ul> <li>We\u2019ll use a similar process as we do for bug prioritization</li> </ul> </li> </ul> </li> </ul> <p>Backend buckets for Live Demo:</p> <ul> <li>Bugs - 2 people can easily help with this, there are a lot</li> <li>Deployment - 1 person needs to focus a bunch of time on this</li> </ul> <p>But, there\u2019s more performance work we could do! There are known bugs and issues!</p> <ul> <li>If there\u2019s an issue worth prioritizing, it\u2019ll show up on the frontend</li> <li>It doesn\u2019t matter if there\u2019s other bugs or issues you know about, it\u2019s not worth working on them right now</li> </ul>"},{"location":"team/meeting-notes/2022/10/2022-10-12-weekly/","title":"2022-10-12 weekly meeting","text":"<p>Attendees: entire core team</p>"},{"location":"team/meeting-notes/2022/10/2022-10-12-weekly/#go-over-spreadsheet","title":"Go over spreadsheet","text":"<ul> <li>We went over the Cycle 5 progress spreadsheet (only accessible to core team) that tracks the work we need to do for the live demo.</li> <li>The goal was to finalize task assignments and priorities</li> </ul>"},{"location":"team/meeting-notes/2022/10/2022-10-12-weekly/#outcomes","title":"Outcomes","text":"<ul> <li>Owners of each item don\u2019t necessarily do all the work, they are responsible for making sure the work gets done and following up with any helpers</li> <li>No need to add helpers to frontend items, PR reviewers can be assigned adhoc.</li> <li>Bugs or styling - what should be done first? We\u2019ll decide this on a case by case basis.<ul> <li>Table Inspector styling and critical bugs should be done close to each other. </li> </ul> </li> <li>Table inspector bugs - there should be a call set up between Rajat and Pavish to check the edge cases and plan the work. Cell selection work needs to be done by Rajat, Pavish can help with some other things.</li> <li>Data explore work needs to be planned out further. There will be a meeting right after this call. Attendees: Dom/Kriti/Pavish/Brent/Ghislaine.</li> <li>Table page styling - assigned to Rajat for now. But we will re-assess next week based on people\u2019s workloads.</li> <li>Pavish can help Rajat with the DB page bug assigned to him. </li> </ul>"},{"location":"team/meeting-notes/2022/10/2022-10-12-weekly/#figure-out-plan-for-usability-testing","title":"Figure out plan for usability testing","text":"<p>When to do it and how to do it?</p> <ul> <li>We shouldn\u2019t do another round of usability testing until styling work is complete. Styling work is addressing concerns brought up in the first round so more testing will be redundant.</li> <li>Should we have a deadline e.g. Nov 1 where we then start usability testing?<ul> <li>Seems a bit all-or-nothing, we can start usability testing as things get done</li> </ul> </li> <li>Kriti will coordinate weekly usability testing sessions based on what\u2019s done each week<ul> <li>Will assign specific testers (half the team each week)</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/10/2022-10-19-weekly/","title":"2022-10-19 weekly meeting","text":""},{"location":"team/meeting-notes/2022/10/2022-10-19-weekly/#cycle-5-progress-check-in","title":"Cycle 5 progress check in","text":"<p>Participants: Entire core team</p> <p>We\u2019re making progress, lots of green in the spreadsheet. </p> <p>Discussion</p> <ul> <li>Bugs should be closed if we can\u2019t reproduce them easily, see discussion on mailing list<ul> <li>Brent will handle closing AttributeError from columns endpoint</li> </ul> </li> <li>Error \u201ccursor already closed\u201d moved to urgent priority since it seems likely to occur in the live demo</li> <li>DB page &amp; schema page styling PRs are open</li> <li>No usability testing this week since styling PRs are not merged yet</li> <li>Mathesar website update:<ul> <li>Second round of copy has been reviewed, final draft is pending</li> <li>We have someone to help with demo video production, we\u2019ll start that process in early November<ul> <li>The idea is to record the demo ASAP after Nov 22.</li> </ul> </li> <li>Kriti may recruit people to help with script review or other video production tasks</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/10/2022-10-19-weekly/#aggregationgrouping-behavior-for-columns-from-base_table","title":"Aggregation/grouping behavior for columns from base_table","text":"<p>Summary: This discussion is to resolve questions on how to decide which columns to group or aggregate when a summarization transform is added, and this depends on the grouped column. We also intend to resolve how we\u2019d handle columns from tables with one-to-one relationship with the base_table/table of the first column. The outcome will impact our UX. Participants: Pavish, Dominykas, Brent, Kriti, Sean, Ghislaine</p> <p>We discussed this for a while, mainly to help us all understand the problem better. Conclusions and next steps:</p> <ul> <li>Design should include selecting multiple grouping columns / which columns are grouped vs. aggregation<ul> <li>Design feedback: Checkboxes are not the best way to separate the columns into two groups</li> </ul> </li> <li>Backend will apply sensible grouping by default, the user can change it based on the design above<ul> <li>Pavish, Brent, Dom will discuss separately and determine implementation details</li> <li>Algorithm: columns involved in Unique constraints and PK columns / one-to-one should automatically be in grouping columns</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/10/2022-10-19-weekly/#automatic-aggregation","title":"Automatic aggregation","text":"<p>Summary: This discussion is to understand how we plan to implement automatic list aggregation, such as whether it would use a join or a subquery. This would depend on the first added column. The outcome will impact our UX. Participants: Pavish, Dominykas, Brent, Kriti, Ghislaine</p> <p>Not much discussion here. Since the aggregation depends on the first added column, we need to help the user choose one from the base table. Next steps:</p> <ul> <li>Design: First column MUST be from the base table <ul> <li>A concern was raised that this might annoy the user, but they can change the base table if they want to start from a different column</li> <li>We\u2019re helping the user set up their query the right way by constraining options</li> </ul> </li> <li>Design: Ensure that columns from base table can\u2019t be deleted<ul> <li>at least one must remain</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/10/2022-10-19-weekly/#overriding-sqlalchemy-metadata-reflection","title":"Overriding SqlAlchemy metadata reflection","text":"<p>Summary: SqlAlchemy reflects unwanted metadata which leads to a lot of queries when reflecting a Table. This becomes a bottleneck when reflecting a lot of Tables and since SqlAlchemy does not reflect all the tables at once, these queries stack up and can sometimes lead to 100+ queries. We can override the reflection function to allow us to selectively choose the metadata we want to reflect. This could lead to a reduction of 20-30% of the queries. Participants: Mukesh, Dominykas, Brent, Kriti</p> <p>Discussion:</p> <ul> <li>This is not worth the trouble.</li> <li>We don\u2019t want to override framework behavior, and we don\u2019t want to further invest in metadata at this time.</li> <li>There was lots of disagreement on how slow the API actually is, but the conclusion was that we can throw hardware at the problem for the live demo.</li> <li>We\u2019re not prioritizing really fast performance for the first release.</li> </ul>"},{"location":"team/meeting-notes/2022/10/2022-10-26-weekly/","title":"2022-10-26 weekly meeting","text":""},{"location":"team/meeting-notes/2022/10/2022-10-26-weekly/#cycle-5-progress-check-in","title":"Cycle 5 progress check-in","text":"<p>Participants: Entire core team (Kriti was out)</p>"},{"location":"team/meeting-notes/2022/10/2022-10-26-weekly/#how-are-we-feeling-about-progress","title":"How are we feeling about progress?","text":"<ul> <li>Rajat feels good / safe</li> <li>Dom feels okay; subject to meeting</li> <li>Sean feels mostly okay<ul> <li>worried about prioritization</li> </ul> </li> <li>Lots of DE work generated by styling / UX </li> <li>Backend no new bugs, only fixing please</li> </ul>"},{"location":"team/meeting-notes/2022/10/2022-10-26-weekly/#data-explorer-styling-backend-work-needed","title":"Data Explorer styling - backend work needed","text":"<p>Summary: This meeting is to quickly go through the Data Explorer styling updates in the figma file and come up with backend work needed. Figma link: https://www.figma.com/file/xHb5oIqye3fnXtb2heRH34/Styling?node-id=1384%3A6672.</p> <p>Participants: Pavish, Dominykas, Brent, Ghislaine</p> <ul> <li>Auto guess and include grouped and aggregated columns in query run response when grouped by a single column. We could use an additional property to determine if guessing is required.</li> <li>New transformation to hide columns.</li> <li>Description for explorations.</li> <li>Make display_name a separate query property.</li> <li>Don\u2019t allow deleting last base_table column.</li> <li>Ability to skip invalid transformations (eg., filters with a column which is no longer present) and provide information regarding them in response. (UX discussion needed).</li> <li>Question: Is sort transform present? Yes.</li> <li>Info: Based on new design, grouping by multiple columns is now allowed. All of the columns should be present as either a grouped or an aggregated column.</li> <li>Filters on Array?</li> <li>(Anything else we find during the meeting)</li> <li>Auto-aggregation: Continued in next agenda item.</li> </ul>"},{"location":"team/meeting-notes/2022/10/2022-10-26-weekly/#data-explorer-auto-aggregation-behavior-of-summarization-over-auto-aggregated-columns","title":"Data Explorer - auto-aggregation &amp; behavior of summarization over auto-aggregated columns","text":"<p>Summary: This meeting is to determine the behavior of summarization over an auto-aggregated column. Kriti had some thoughts over it during the styling meetings, and we\u2019d be discussing over it.</p> <p>Participants: Pavish, Dominykas, Brent, Ghislaine</p> <ul> <li>Base table column would always be present, so a column with multiple values are auto-aggregated. No additional configuration from user.</li> <li>User is allowed to group or aggregate over such auto-aggregated columns.</li> <li>Book is base_table. Author columns are auto-aggregated while adding.   <code>Book.Name | Book.Publication_Year | Author.Name (auto-aggregated)    ----------|-----------------------|-------------------------------    Book1     | 2020                  | A, B, C    Book2     | 2021                  | A, B    Book3     | 2020                  | A, B, C    Book4     | 2020                  | A    Book1     | 2022                  | A, B, D    Book5     | 2022                  | A, B</code>    Group by Author.Name, aggregate other columns by list:    <code>Author.Name | Book.Name      | Book.Publication_Year    ------------|----------------|-----------------------    A, B, C     | Book1, Book3   | 2020 (Is a single value instead of two, Union of 2020, 2020)    A, B        | Book2, Book5   | 2021, 2022    A           | Book4          | 2020    A, B, D     | Book1          | 2022</code>    Group by Book.Name, aggregate other columns by list:    <code>Book.Name | Book.Publication_Year | Author.Name    ----------|-----------------------|-------------------------------    Book1     | 2020, 2022            | A, B, C, D (Union of A, B, C and A, B, D)    Book2     | 2021                  | A, B    Book3     | 2020                  | A, B, C    Book4     | 2020                  | A</code></li> </ul>"},{"location":"team/meeting-notes/2022/11/2022-11-02-weekly/","title":"2022-11-02","text":""},{"location":"team/meeting-notes/2022/11/2022-11-02-weekly/#cycle-5-progress-check-in","title":"Cycle 5 progress check-in","text":"<p>Participants: Core team, Kriti out</p> <ul> <li>Brent:</li> <li>worried about live demo</li> <li> <p>worried about bugs</p> </li> <li> <p>Mukesh:</p> </li> <li>worried about not much (except bugs)</li> <li> <p>moving into Users and Permissions</p> </li> <li> <p>Rajat:</p> </li> <li>Constraints modal (styling)<ul> <li>not likely done by Dday, need to prioritize</li> </ul> </li> <li> <p>Navigation (styling)</p> <ul> <li>not likely done by DDay, need to prioritize</li> </ul> </li> <li> <p>Pavish:</p> </li> <li>Pretty terrified<ul> <li>DE increasing scope, but confident we\u2019ll be able to make it before 22nd</li> </ul> </li> <li>May not have time to put into data import page<ul> <li>depends on the design</li> </ul> </li> <li> <p>Not going to be able to help with column types or table page</p> </li> <li> <p>Sean:</p> </li> <li>Hard to tell;</li> <li>Design implementations remaining</li> <li> <p>Would help for prioritization to have more designs ready</p> </li> <li> <p>General discussion</p> </li> <li>Deprioritizing table linking modal UX</li> <li>Moved constraints modal down</li> </ul>"},{"location":"team/meeting-notes/2022/11/2022-11-02-weekly/#ux-implementation-details-for-auto-aggregation","title":"UX &amp; Implementation details for auto-aggregation","text":"<p>Participants: Pavish, Dominykas, Brent, Ghislaine, Mukesh</p> <ul> <li>We realized summarization suggestions are a prerequisite</li> <li>Finalized some expectations around the summarization suggestions</li> <li>backend will always assume \u201cpartial\u201d (and any non-specified columns will be automatically assigned to either \u201cgroup_by\u201d or \u201caggregation\u201d sets)</li> <li>new required field: \u2018base_grouping_column\u2019 that the suggestion algo needs to make above assignments</li> <li>This allows adding more initial columns after the fact, and assigning them appropriately.</li> <li>For now, no multiple summarization (we realized that even including auto-agg, multiple summarizations would be rarely needed (2A above)</li> <li>Still working through some implementation details of auto-aggregation setup.</li> </ul>"},{"location":"team/meeting-notes/2022/11/2022-11-09-weekly/","title":"2022-11-09 weekly meeting","text":""},{"location":"team/meeting-notes/2022/11/2022-11-09-weekly/#cycle-5-progress-check-in","title":"Cycle 5 progress check-in","text":"<ul> <li>Required participants: Entire core team</li> </ul>"},{"location":"team/meeting-notes/2022/11/2022-11-09-weekly/#sean","title":"Sean","text":"<ul> <li>Reining in linked table dialog</li> <li>Working on record summary UI</li> <li>Will work on styling after</li> </ul>"},{"location":"team/meeting-notes/2022/11/2022-11-09-weekly/#dom","title":"Dom","text":"<ul> <li>Working on DE summarization suggestions</li> <li>Was worried because spec kept changing, but now pretty confident</li> <li>DE work will probably take rest of cycle, might have a little time at the end</li> </ul>"},{"location":"team/meeting-notes/2022/11/2022-11-09-weekly/#pavish","title":"Pavish","text":"<ul> <li>DE will take rest of cycle</li> <li>Not sure if can get to Data Import page or Table Page help this cycle<ul> <li>We can talk about Sean / Rajat taking it on if it\u2019s higher priority</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/11/2022-11-09-weekly/#ghislaine","title":"Ghislaine","text":"<ul> <li>No concerns</li> <li>Things that could slow me down \u2013 iterating over previous designs that should be finalized</li> <li>Linked table design needs to be finalized</li> <li>Ghislaine can help with consistency issues in the codebase<ul> <li>e.g. fix \u201cred everywhere\u201d problem directly in the codebase</li> <li>Pavish has fixed this in his PR via updating state of the button</li> </ul> </li> <li>Website work coming up</li> </ul>"},{"location":"team/meeting-notes/2022/11/2022-11-09-weekly/#rajat","title":"Rajat","text":"<ul> <li>Not in a good state, lots of half-done things</li> <li>Table inspector urgent priority issue - PR created</li> <li>Will be in a better state by the end of the week<ul> <li>Schema page - prioritize this, there are other dependencies on this <ul> <li>Icon work is not necessary because of Pavish\u2019s work in a different PR</li> </ul> </li> <li>Table Inspector</li> <li>half of table page</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/11/2022-11-09-weekly/#brent","title":"Brent","text":"<ul> <li>On hold on bug squashing unless something really urgent pops up</li> <li>In live demo mode</li> <li>Kriti &amp; Mukesh provided feedback on current PR, needed to re-org PR<ul> <li>Some Ansible changes are necessary</li> </ul> </li> <li>We will deploy live demo work on staging<ul> <li>Everyone will have their own copy of the data set</li> <li>Data is tied to your session cookie</li> </ul> </li> <li>Nothing changes on local development, unless you change the environment variables</li> <li>Should we do a different server instead of staging?<ul> <li>We want the core team to try and find bugs, so staging seems best</li> <li>We can still access current databases with direct URLs, so we won\u2019t lose access to data</li> <li>We can set up a separate team instance for our use</li> </ul> </li> <li>Will display options and record summary templates be preserved? Can we load them?<ul> <li>Haven\u2019t tested this.</li> <li>Will spend some time adding some scripting to set up record summary and display options<ul> <li>Shouldn\u2019t be impossible</li> </ul> </li> </ul> </li> <li>Will need to test live demo PR with database roles permissions PR<ul> <li>Merge live demo first</li> </ul> </li> <li>Front end work needed for live demo:<ul> <li>Explain that installation is happening during login</li> <li>Banner for live demo</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/11/2022-11-09-weekly/#mukesh","title":"Mukesh","text":"<ul> <li>Progress steady with users and permissions<ul> <li>Aiming to finish backend work before end of the cycle</li> </ul> </li> <li>Then work on deployment related tasks<ul> <li>installation file idempotency</li> <li>backup</li> </ul> </li> <li>Concerns about metadata:<ul> <li>Should be request based, not global</li> <li>In Brent\u2019s queue</li> </ul> </li> <li>Can we move live demo to a separate server later?<ul> <li>We may not want to auto-deploy to live demo server</li> <li>Yes, that\u2019s the plan</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/11/2022-11-09-weekly/#kriti","title":"Kriti","text":"<ul> <li>Working with lawyer on user agreement</li> <li>Working with demo video team - process starts tomorrow</li> <li>Speccing out deployment tasks in more detail</li> <li>Working with Ghislaine on the website starting next week</li> <li>De-prioritizing team usability testing until after live demo, we\u2019ll make it a goal for the first release<ul> <li>We have too much to do before then</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/11/2022-11-17-weekly/","title":"2022-11-17 weekly meeting","text":""},{"location":"team/meeting-notes/2022/11/2022-11-17-weekly/#cycle-5-progress","title":"Cycle 5 progress","text":"<ul> <li>Brent check-in<ul> <li>live demo server up</li> <li>variable available to flag for front end</li> <li>password is changed on demo server</li> </ul> </li> <li>Sean check-in<ul> <li>recent slow-down due to unexpected rabbit hole</li> <li>Feeling good about high priority tasks</li> <li>We\u2019ve had more external contributors<ul> <li>quality has been better</li> <li>paying off by taking things off internal plate</li> </ul> </li> <li>Things are looking really good due to design implementation</li> <li>working on record summary (template config)</li> <li>small things on record page</li> <li>after that: styling</li> </ul> </li> <li>Ghislaine<ul> <li>Last week, had better productivity</li> <li>Working on website</li> <li>work is clear</li> <li>will contribute to styling work after website</li> </ul> </li> <li>Anish<ul> <li>Got exploration descriptions merged</li> <li>Working on Array filtering for live demo</li> </ul> </li> <li>Mukesh<ul> <li>working on users and permissions</li> <li>DBs, Schemas in the works</li> <li>Brent has concerns about current approach, we\u2019ll discuss later in the meeting</li> </ul> </li> <li>Pavish<ul> <li>Not sure if there\u2019s time for data import styling</li> <li>Working on DE summarization FE changes</li> <li>Working on live demo banner</li> </ul> </li> <li>Dom<ul> <li>working on summarization transform in DE</li> <li>Now going back to clean up some things that were rushed to unblock Frontend</li> <li>DE \u201cstyling\u201d changes</li> <li>Full backlog</li> <li>Summarization should be working by 22nd</li> <li>Styling less certain, will discuss priorities with Pavish</li> </ul> </li> <li>Rajat<ul> <li>Schema page is looking good</li> <li>Table Inspector page is in review<ul> <li>A couple things for table inspector still in the queue</li> </ul> </li> <li>working on table page and navigation<ul> <li>aiming to be done by 22nd end of day</li> </ul> </li> </ul> </li> <li>Kriti<ul> <li>Demo video<ul> <li>We have a demo script revision from production company</li> <li>Met with prod company last week, walked them through product</li> </ul> </li> <li>Working on website<ul> <li>Had a design session with Ghislaine</li> <li>Evaluating vendors</li> </ul> </li> <li>Working on legal agreement for providing professional services to early adopters</li> <li>Wrote up notes on deployment (private document)<ul> <li>Will clean up notes</li> <li>Will schedule a discussion with backend team to figure out how to implement all this</li> </ul> </li> <li>Sean suggested looking into getting notifications from HN for Mathesar mentions before launch, Kriti will add todo for it</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/11/2022-11-17-weekly/#website-walkthrough","title":"Website walkthrough","text":"<ul> <li>Using Jekyll</li> <li>Looks pretty good to this editor</li> <li>Figma link (if you have access): https://www.figma.com/file/sooLN8FTgUSAuWSnHqcDVY/Website?node-id=0%3A1&amp;t=KwdzRO5IIQ96sadM-1</li> </ul>"},{"location":"team/meeting-notes/2022/11/2022-11-17-weekly/#cycle-6-planning","title":"Cycle 6 planning","text":"<ul> <li>Cycle 5 ends this week</li> <li>We\u2019ll be doing Cycle 6 planning next week</li> <li>Basic goal for Cycle 6: \u201cGet Mathesar ready to share on Hacker News\u201d<ul> <li>Complete styling</li> <li>Deployment tasks</li> <li>Documentation</li> <li>Website refinement</li> </ul> </li> <li>We\u2019ll have a hard deadline of Dec 23, CCI goes on winter break for the week afterwards.</li> <li>We will launch in January.</li> </ul>"},{"location":"team/meeting-notes/2022/11/2022-11-17-weekly/#throw-targeted-error-message-for-columns-no-longer-present-in-the-query","title":"Throw targeted error message for columns no longer present in the Query","text":"<p>We\u2019re having some disagreements regarding #1905; specifically, what information we want to convey about queries whose dependency columns or tables are missing; Figma Design is showing a list of columns that are missing from the query. But Mukesh wants to show a warning(using dependency graph UI) right when a column referenced by a query is deleted instead of throwing up an error after the column is deleted. Since a dependency graph is not feasible  right now, can we settle for showing up only the one deleted column at a time as it is much easier on the backend?</p>"},{"location":"team/meeting-notes/2022/11/2022-11-17-weekly/#decision","title":"Decision","text":"<ul> <li>We shouldn\u2019t spend a lot of time figuring out one error message, we have bigger priorities</li> <li>We\u2019ll proceed with showing one column only for now<ul> <li>Ghislaine will adjust error message in Figma design</li> <li>We recognize this isn\u2019t optimal UX - we would like users to have a one-click recovery option<ul> <li>Mukesh will create issue to track improving error recovery for users, we can prioritize this separately</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/11/2022-11-17-weekly/#style-duplication-between-django-templates-and-svelte-code","title":"Style duplication between django templates and svelte code","text":"<p>Attendees: Pavish, Sean, Rajat</p> <p>Summary: We would want to use styles defined in our svelte side of the frontend, in the login page. We might also want to place the live demo banner on the django templates. This discussion is regarding the benefits of using django templates for these and overlooking the style duplication for now, or whether we should move these to svelte instead.</p>"},{"location":"team/meeting-notes/2022/11/2022-11-17-weekly/#decision_1","title":"Decision","text":"<ul> <li>The frontend team is okay with the duplication, since it\u2019ll be quite minimal.</li> <li>We will continue using django templates for the login page and banner.</li> </ul>"},{"location":"team/meeting-notes/2022/11/2022-11-17-weekly/#users-and-permissions-for-production","title":"Users and permissions for production","text":"<ul> <li>Attendees: Brent, Kriti, Ghislaine, Mukesh, Dom (partial)</li> </ul> <p>Brent has concerns about our expectations and assumptions about what we mean by \u201cproduction environment\u201d, and how far we want to go with the Django-managed permissions model</p>"},{"location":"team/meeting-notes/2022/11/2022-11-17-weekly/#notes","title":"Notes","text":"<ul> <li>We\u2019re relying on our permissions to make sure that users can\u2019t perform DDL operations</li> <li>Postgres permissions are much more battle-tested than the Django permissions in our product</li> <li>We\u2019re requiring root access to the database during setup, so the user will only depend on our code to make sure unexpected DDL operations don\u2019t happen<ul> <li>We\u2019re still an alpha product</li> <li>We don\u2019t want to lose or unexpectedly change user data</li> </ul> </li> <li>We should set expectations / warnings appropriately in our documentation</li> <li>Mukesh also has concerns about our long term plan of \u201cbundling\u201d Postgres permissions within our user roles, but since that plan is still ill-defined and not blocking anything, we decided not to discuss it right now.</li> </ul>"},{"location":"team/meeting-notes/2022/11/2022-11-17-weekly/#decision_2","title":"Decision","text":"<ul> <li>We\u2019ll proceed with our current permission model</li> <li>We\u2019ve added the following to our first release requirements:<ul> <li>Document how to set up Mathesar with a \u201cno DDL\u201d user so that DDL operations are not even possible</li> <li>We may also want to document how to set up Mathesar with a read only user</li> <li>The frontend should disable the appropriate options when Mathesar is set up without full access to the database.<ul> <li>We\u2019ll do some testing.</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/11/2022-11-17-weekly/#data-sets-discussion","title":"Data sets discussion","text":"<ul> <li>Attendees: Brent, Kriti, Ghislaine, Mukesh</li> </ul> <p>We need to decide what data sets we\u2019ll have in the live demo. This also affects website work since we have a \u201cuse cases\u201d section on the website homepage.</p>"},{"location":"team/meeting-notes/2022/11/2022-11-17-weekly/#brainstorming","title":"Brainstorming","text":"<ul> <li>Library management<ul> <li>purpose: show inventory management and managing rentals</li> </ul> </li> <li>\u201cAcademics\u201d data set<ul> <li>purpose: show off Mathesar technical features (self-referential FKs)</li> </ul> </li> <li>Event planning data set<ul> <li>Speakers, talks, rooms, tracks</li> <li>Make explorations for \u201cfirst day speakers\u201d, \u201croom A schedule\u201d, \u201ceveryone talking during time B\u201d</li> </ul> </li> <li>Project management + CRM data set<ul> <li>Task: description, start date, due date, completed, assignee</li> <li>Projects with deadlines</li> <li>Tasks can belong to Projects</li> <li>Exploration: non-completed tasks</li> </ul> </li> <li>Movie collection and rating<ul> <li>Showcase hobby related data set</li> </ul> </li> <li>GPT labeling use case?<ul> <li>Mukesh will make an example schema for this before we decide</li> </ul> </li> <li>Calorie tracking app<ul> <li>Would be useful for a large set of people</li> <li>Would be good to have calculated columns in the future</li> </ul> </li> <li>No expense tracking (we don\u2019t have calculated fields, not clear how we can demonstrate that it\u2019s better than a spreadsheet)<ul> <li>Potentially add in the future</li> </ul> </li> <li>In the future, we should push that it\u2019s a \u201cunified\u201d interface that combines CRM and event planning and payroll and whatnot (run your entire business database)</li> <li>UI for data populated by script \u2013 e.g. price tracker or something<ul> <li>The purpose would be to showcase Mathesar as a UI for data in Postgres</li> </ul> </li> <li>Roster - grades, teachers, students, absentee</li> <li>Disaster preparedness<ul> <li>Resources for where to get things like food etc.</li> <li>We should do this once we have Location data type</li> </ul> </li> </ul> <p>Not sure if we should do project management since it\u2019s so common and there are a lot of specialized software for it, Mathesar might not look good. Roster might be better</p>"},{"location":"team/meeting-notes/2022/11/2022-11-17-weekly/#decisions","title":"Decisions","text":"<p>Prioritized list of data sets.</p> <ul> <li>Library management system</li> <li>Movie collection <ul> <li>Can base it on CC0 dataset here https://www.kaggle.com/datasets/rounakbanik/the-movies-dataset</li> <li>Please don\u2019t use JSON fields, we don\u2019t have a good UI for them yet, convert them into relational data</li> </ul> </li> <li>Event planning - conference<ul> <li>Might be cute to do \u201cMathesarCon\u201d, talk names can reference our features </li> <li>Kriti can help with copy if needed</li> </ul> </li> <li>\u201cUI for data entered outside Mathesar\u201d (price tracker or something similar)<ul> <li>Maybe use https://zapier.com/apps/postgresql/integrations (make it friendly for non-technical users)</li> </ul> </li> <li>Calorie tracking</li> <li>Roster data set</li> </ul> <p>Even just the top 4 would be great.</p> <p>Deprioritized \u201cacademics data set\u201d since demo use cases should be based around use cases </p>"},{"location":"team/meeting-notes/2022/11/2022-11-28-planning/","title":"2022-11-28 planning meeting","text":"<p>Attendees: Entire core team + Anish</p>"},{"location":"team/meeting-notes/2022/11/2022-11-28-planning/#cycle-5-retrospective","title":"Cycle 5 retrospective","text":""},{"location":"team/meeting-notes/2022/11/2022-11-28-planning/#notes","title":"Notes","text":"<ul> <li>FigJam file with everyone\u2019s notes (link is not public)</li> <li>126 items closed!</li> <li>Many shoutouts!</li> <li>Styling work bleeding into feature work will hopefully smooth out once design and styling are less global. <ul> <li>Styling work was badly named, it involved usability improvements as well</li> <li>Not much to learn from for the next cycle, seems like a one-time problem</li> </ul> </li> <li>We agreed on removing issue priorities for features \u2013 lower priority issues will be moved out of the milestone instead</li> <li>Design decisions are being made without enough context, sometimes leads to overthinking things<ul> <li>not sure who our users are</li> <li>leads to difficulty when deciding complexity of feature</li> <li>Especially tricky for link table dialogue</li> <li>Hopefully access to users helps with this problem</li> <li>This should be our last cycle without access to users</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/11/2022-11-28-planning/#cycle-6-planning","title":"Cycle 6 planning","text":""},{"location":"team/meeting-notes/2022/11/2022-11-28-planning/#work-tracking","title":"Work tracking","text":"<p>We\u2019re going to be tracking work in Mathesar! Here\u2019s the relevant table, grouped by due date and assignee</p> <ul> <li>As always, the \u201cAssignee\u201d is the owner, responsible for making sure the task gets finished and coordinating with whoever they need to.<ul> <li>Don\u2019t have to implement everything, but do have to coordinate</li> </ul> </li> <li>We now have due dates for each task (or rather, \u201cdue weeks\u201d, they\u2019re all Fridays)<ul> <li>Use it for tracking estimates</li> <li>Due date =&gt; due week. More granular dates will be too much to manage. </li> <li>Due date in the planning sheet is also for prioritization and time-boxing tasks so that there\u2019s enough time for later tasks.</li> <li>Implementers should update dates in Mathesar after this call.</li> </ul> </li> <li>New \u201cRequirements\u201d tasks in Mathesar, this is equivalent to a product spec. Rest of the team should start getting into requirements.<ul> <li>Deliverable is descriptions of<ul> <li>how the feature will work</li> <li>design work required</li> <li>backend work required</li> <li>frontend work required</li> </ul> </li> <li>Kriti will work with the assignees and help </li> <li>Attempting to make things less dependent on Kriti</li> </ul> </li> <li>If you see something in the First Release milestone that doesn\u2019t seem relevant, please kick it to a later milestone.</li> <li>Work Type: Styling =&gt; implementing the designs. Work Type: Frontend =&gt; non-styling.<ul> <li>Most of the bugs will be fixed as part of the re-design. Lets keep then as 0% until the re-designs are done. </li> <li>If a new feature needs to be styled, it\u2019s \u201cFrontend\u201d work, not \u201cStyling\u201d work</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/11/2022-11-28-planning/#accountability","title":"Accountability","text":"<p>We need to be accountable for estimates and communicate proactively about delays in work. </p> <ul> <li>If you estimate that work will be done in X days and it\u2019s not done by then and you haven\u2019t communicated why it\u2019s taking longer, you come across as unreliable</li> <li>Optimism doesn\u2019t help us plan, and doesn\u2019t help us identify problems<ul> <li>If something is taking much longer than planned, we might need to change the plan</li> </ul> </li> <li>It\u2019s better to under-promise &amp; over-deliver</li> <li>Takeaways:<ul> <li>Make better estimates (include buffer)</li> <li>Communicate proactively in the core-team email list if things are going to take longer<ul> <li>Explain why</li> <li>Request help if needed</li> <li>Request change of plan if needed</li> </ul> </li> <li>Try to think of due date as a time box<ul> <li>reduce scope to fit due date (preferable to moving due date)</li> </ul> </li> </ul> </li> <li>Brent brought up that due date should come from bottom up, not top down<ul> <li>Current due dates are meant as a starting point, implementers should update these to what they feel they can meet</li> <li>We discussed the idea of setting due dates to <code>NULL</code> unless the implementer can commit to them, but the issue is that many of our tasks are defined vaguely and can consume whatever time they\u2019re given</li> <li>Due dates are meant as a time box \u2013 e.g. we have a week for live demo work. We could spend a month refining data sets for the live demo, but whatever we can do in a week is probably good enough and that time would be better spent on other release blocking tasks. The due date is meant to convey that.</li> <li>We\u2019re open to other ideas that solve the same problems, but we couldn\u2019t think of any at the meeting.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2022/11/2022-11-28-planning/#coming-up-in-2023","title":"Coming up in 2023","text":"<p>We\u2019ve been working towards the release for so long, and we\u2019re almost there! Here\u2019s what\u2019s coming up next.</p> <ul> <li>First week of January</li> <li>Publicize our release on Hacker News &amp; Reddit</li> <li>Plan out Cycle 2023-01</li> <li>Jan 9 - Feb 3: Cycle 2023-01 (4 weeks) with the goals of:</li> <li>Get our codebase in shape for rapidly iterating on new features and regular releases<ul> <li>Includes new git workflow setup (we should start treating <code>master</code> as stable and work off of <code>develop</code>)</li> </ul> </li> <li>Get our community work organized to deal with (hopefully) a bunch of new users<ul> <li>Includes applying for GSoC 2023</li> </ul> </li> <li>Get on the same page as a team about the plan for 2023<ul> <li>Brainstorm Mathesar long term vision, business plan, and pitch to funders</li> <li>Plan for sustainabiliy <ul> <li>setting up SaaS version</li> <li>offering services / consulting</li> <li>philanthropic funding to cover costs until self-sustainable</li> </ul> </li> <li>2023 feature roadmap \u2013 should be fairly flexible and based on user needs</li> </ul> </li> <li>Feb / Mar 2023: start pitching potential funders<ul> <li>Kriti is already doing a bunch of groundwork for this</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/01/2023-01-05-planning/","title":"2022-01-05 release planning meeting","text":"<p>Meeting Owner: Kriti Attendees: Entire core team</p>"},{"location":"team/meeting-notes/2023/01/2023-01-05-planning/#tracking-work-comms","title":"Tracking work &amp; comms","text":"<p>Time: 10 min Desired outcome: We decide on a process for tracking release-related work and we each understand it.</p> <p>Sean has proposed tracking work using smaller GitHub milestones instead of using a Mathesar table. Milestones would have associated deadlines.</p> <ul> <li>Pros: Work tracking is not duplicated </li> <li>Cons: May be harder to see the release as a whole</li> </ul> <p>Kriti is also proposing using the <code>mathesar-developers</code> list for most email unless it NEEDS to be private.</p>"},{"location":"team/meeting-notes/2023/01/2023-01-05-planning/#pre-meeting-prep","title":"Pre-meeting prep","text":"<p>Please write down your opinion about the proposals. If you don\u2019t have an opinion, that\u2019s fine, write that down.</p> <ul> <li>Anish: did not attend meeting</li> <li>Brent: <ul> <li>I\u2019m fine with using smaller GH milestones. I agree that using the developers mailing list is best.</li> <li>Reply to Kriti: for dogfooding: If we\u2019re serious about offering a hosted version, that will be plenty of dogfood (after a fashion)</li> </ul> </li> <li>Dom: <ul> <li>I\u2019m in favor of trying to not duplicate work tracking (I ran into some confusion caused by the duplication); I also don\u2019t want to update the Mathesar table every day (but I do update the Github issues as part of my workflow); no opinion on mailing list to use;</li> </ul> </li> <li>Ghislaine:<ul> <li>Agree with using GH milestones</li> </ul> </li> <li>Kriti:<ul> <li>Using only GitHub milestones would be less work for me and makes sense, although I would like to find something other use case to dogfood Mathesar</li> </ul> </li> <li>Mukesh: <ul> <li>I am fine with GH milestone and <code>mathesar-developers</code> email.</li> </ul> </li> <li>Pavish:</li> <li>I have no major concerns with using GH milestones. I use the table in Mathesar to get an idea of progress as a whole, which also lets me know if someone is available to help me with/pick up tasks. Only using GH makes that harder.</li> <li>+1 for using <code>mathesar-developers</code> list for most emails.</li> <li> <p>Rajat: </p> <ul> <li>Strong agree for GH milestones. Gives me a better view of what all I have created a PR for and what all work is left for me. I do not have to regulary update %ages(which mostly are inaccurate). Plus a single place for me to track progress and read issue details is definitely less messy. </li> <li>Agreed on using <code>mathesar-developers</code> list for most emails.</li> </ul> </li> <li> <p>Sean:</p> <ul> <li>Milestones: \u2705</li> <li>mathesar-developers: \u2705</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/01/2023-01-05-planning/#notes","title":"Notes","text":"<ul> <li>Seems to be general consensus around using GH milestones<ul> <li>We\u2019ll use those. Kriti will set them up</li> <li>Need volunteers for helping triage - Sean volunteered</li> <li>Not everything needs to be in specific milestones</li> <li>We can pull from the larger milestones into granular weekly milestones</li> <li>We are not deleting current milestones yet</li> <li>Global view will be in the GH project</li> </ul> </li> <li>Regarding dogfooding<ul> <li>Waiting for documentation to be finished so we can set it up on our own servers and test installation</li> <li>Sean imagines some system where instead of syncing between GH issues and projects, we could sync between issues and mathesar<ul> <li>Replacement for projects</li> <li>customizable</li> <li>GitHub doesn\u2019t support multi-repo milestones so this would be useful</li> </ul> </li> <li>Mukesh imagines using Mathesar for error logging<ul> <li>Kriti: But will this use case help make Mathesar better for our target users?</li> </ul> </li> <li>Further dogfooding discussion was put in the parking lot</li> </ul> </li> <li>Mailing list<ul> <li>Please default to developer mailing list</li> <li>Core team list only when things need to be private</li> <li>Rule of thumb: \u201cbusiness\u201d discussions are private, everything else is public</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/01/2023-01-05-planning/#release-approach-goals","title":"Release approach &amp; goals","text":"<p>Time: 30 min Desired outcome: Each person in the room should understand the broader goals and approach to our release. The goals and approach should be finalized. </p> <p>The work we need to do before our first release:</p> <ul> <li>Get website &amp; live demo ready for usability testing</li> <li>Perform usability testing on website &amp; live demo</li> <li>Get installation, upgrade, and associated documentation ready for testing</li> <li>Get people to test installation workflow</li> <li>Get product ready for usability testing</li> <li>Perform usability testing on product</li> <li>Complete users &amp; permissions</li> <li>Fix issues resulting from all testing - website, product, documentation</li> <li>Work on marketing &amp; launch prep</li> <li>Work on legal prep (e.g. privacy policy)</li> <li>Publish release</li> </ul> <p>(we also need to work on our GSoC application in this time period)</p> <p>Goal of first release:</p> <ul> <li>Launch on HN &amp; selected subreddits</li> <li>Get users!</li> </ul> <p>Goal after first release:</p> <ul> <li>Work with users to make our product useful</li> <li>Launch hosted version</li> </ul> <p>Initial milestones:</p> <ul> <li>Get website &amp; live demo ready for usability testing</li> <li>Get product ready for usability testing</li> <li>Get installation, upgrade, and associated documentation ready for testing</li> <li>Complete users &amp; permissions</li> </ul>"},{"location":"team/meeting-notes/2023/01/2023-01-05-planning/#pre-meeting-prep_1","title":"Pre-meeting prep","text":"<p>Do the tasks and plan above make sense? Are we missing anything? Are there additional things that we should work on?</p> <ul> <li>Anish: did not attend meeting</li> <li>Brent:<ul> <li>What\u2019s meant by \u2018complete\u2019 users and permissions? I think we should scope that; Are there missing pieces that are blocking release?</li> <li>I think \u2018upgrade\u2019 needs to be separated from \u2018installation\u2019 in our minds (maybe it already is, but the merged bullet point worries me).</li> </ul> </li> <li>Dom:<ul> <li> <p>Launch hosted version</p> <ul> <li>Hosted means self-hosted here?</li> </ul> </li> <li>When do we plan to do the first release? There\u2019s probably not a hard-set date.</li> </ul> </li> <li>Ghislaine:<ul> <li>Plan looks good to me.</li> </ul> </li> <li>Kriti:<ul> <li>N/A, since I wrote everything above</li> </ul> </li> <li>Mukesh:         - They make sense. Don\u2019t have any opinions.</li> <li>Pavish:<ul> <li>They make sense to me.</li> <li>I can\u2019t think of anything we need additionally.</li> </ul> </li> <li>Rajat:<ul> <li>Makes sense to me. </li> <li>The previous email sent by Kriti does not talk about the timelines around fixing issues found in usability testing. I understand that is because we do not know what those issues are as of now(until we do the usability testing). Rest all is good. </li> </ul> </li> <li>Sean: \u2705</li> </ul>"},{"location":"team/meeting-notes/2023/01/2023-01-05-planning/#notes_1","title":"Notes","text":"<ul> <li>installation/upgrade/deployment<ul> <li>A bit muddled</li> <li>Most of these don\u2019t involve frontend work, only upgrade does</li> <li>We\u2019ll clarify requirements for this next week sometime</li> </ul> </li> <li>usability testing<ul> <li>Use a service that crowd-sources usability testing</li> <li>Set up tests, give tasks, look at videos</li> <li>Task-oriented rather than general</li> <li>Need to make sure we have time to fix problems that we find</li> </ul> </li> <li>Launch timing<ul> <li>We haven\u2019t set a launch date yet because we\u2019re not sure how much time it\u2019ll take to fix things</li> <li>We should not launch later than the end of Feb. Earliest could be end of Jan</li> <li>The milestones \u201c01. First Release\u201d and \u201c2023-01 Public Launch\u201d will both get sorted into weekly milestones to be completed before the launch</li> </ul> </li> <li>Documentation testing<ul> <li>Find someone with relevant experience from upwork and ask them to install using the docs</li> </ul> </li> <li>Users/permissions<ul> <li>We can parallelize with usability concerns</li> </ul> </li> <li>Need to put together GSoC org application</li> <li>Next goal after launch: sustainability<ul> <li>SAAS more reliable than consulting</li> <li>According to external advice, consulting can be arbitrarily complicated and isn\u2019t commonly a revenue generator, distracts from core product work</li> </ul> </li> <li>Hosted version<ul> <li>Need more staff (Kriti agrees)</li> <li>Need to really focus on performance</li> <li>Need to differentiate ourselves from others doing hosted versions</li> <li>Kriti has done some early modeling to try determining a pricing structure, but it\u2019s too early to share now</li> <li>Want this to be feasible by EOY</li> <li>Need to make sure that the hosted version will be good enough that people will pay for it, so core product should be made useful for real users before hosted version</li> </ul> </li> <li>Nature of milestones: Feature vs. Timeline<ul> <li>Timeline is needed</li> <li>Weekly sprints</li> <li>We\u2019ll keep using the GH project to track the \u201cFeature\u201d for each ticket</li> <li>First milestone starts next week</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/01/2023-01-05-planning/#work-assignments","title":"Work assignments","text":"<p>Time: 10 min Desired outcome: Everyone knows what they\u2019re working on for the initial milestones, milestones have appropriate deadlines, AND everyone understands what completing the milestone entails.</p> <ul> <li>Get website &amp; live demo ready for usability testing - DEADLINE Jan 13<ul> <li>Website design:<ul> <li>Ghislaine</li> </ul> </li> <li>Website copy:<ul> <li>Kriti</li> </ul> </li> <li>Website frontend help:<ul> <li>Pavish</li> </ul> </li> <li>Data sets:<ul> <li>Brent</li> <li>Dom</li> <li>Pavish + Ghislaine (if needed to smooth data set loading experience)</li> </ul> </li> </ul> </li> <li>Get product ready for usability testing - DEADLINE ???<ul> <li>Frontend:<ul> <li>Sean will triage first release and public launch milestones</li> <li>Sean will do this triage work ASAP, then we\u2019ll figure out a deadline for addressing all the outstanding tickets</li> </ul> </li> <li>Backend: May not need anyone, TBD, Mukesh is the logical person since otherwise he\u2019s working on a lower priority goal.</li> </ul> </li> <li>Get installation, upgrade, and associated documentation ready for testing - DEADLINE Jan 20<ul> <li>Frontend: <ul> <li>Sean</li> </ul> </li> <li>Backend:<ul> <li>Mukesh, Dom, Brent</li> </ul> </li> <li>Design:<ul> <li>Ghislaine</li> </ul> </li> </ul> </li> <li>Complete users &amp; permissions - DEADLINE ???<ul> <li>Requirements: Pavish<ul> <li>Deadline will be determined after Pavish works on requirements</li> </ul> </li> <li>Frontend: Pavish, Rajat, Sean</li> <li>Backend: Mukesh on standby</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/01/2023-01-05-planning/#action-items","title":"Action Items","text":"<ul> <li>Kriti will create weekly milestones in GitHub</li> <li>Sean will triage existing issues</li> <li>Kriti will set up meeting to clarify installation / deployment / upgrade requirements</li> </ul>"},{"location":"team/meeting-notes/2023/01/2023-01-18-fe-new-feature-rfc/","title":"2023-01-18 Frontend meeting on RFCs","text":"<p>Attendees: Core frontend team</p>"},{"location":"team/meeting-notes/2023/01/2023-01-18-fe-new-feature-rfc/#problem","title":"Problem","text":"<ul> <li>Frontend currently has one person owning and working almost entirely by themselves on a feature.</li> <li>This improves velocity, however it is troublesome for the long run.</li> <li>When the person is not available, it becomes a bottleneck for the entire team.</li> <li>The current approach makes it harder for multiple people to collaborate when starting on a new feature.</li> <li>When the feature is considerably large, the person cannot immediately get additional support during the implementation phase, since the rest of the team has little knowledge of the planned implementation details.</li> </ul>"},{"location":"team/meeting-notes/2023/01/2023-01-18-fe-new-feature-rfc/#desired-outcome","title":"Desired outcome","text":"<ul> <li>An RFC like process to ensure the entire team has an overview of the implementation details for new features.</li> <li>We begin this process starting with the Users &amp; Permissions feature.</li> <li>This process will only be applicable for new features and major refactoring.</li> <li>When the feature is already implemented to a usable level, it\u2019s relatively easier for others to jump in and add enhancements, since they have access to working code. This is further enabled by descriptive GH issues. We\u2019re not changing this process.</li> </ul>"},{"location":"team/meeting-notes/2023/01/2023-01-18-fe-new-feature-rfc/#decisions","title":"Decisions","text":"<ul> <li>Before we start work on a feature, the feature owner will raise a PR on our wiki with a descriptive RFC document which explains \u2018what\u2019 needs to be done.</li> <li>The RFC will include sub-tasks. The feature will be split into medium-sized (relative to size of feature) chunks, not too small or big.     &gt;   - For eg., with Users and Permissions, the tasks will be split as:     &gt;     - Base work and stores needed for user profile     &gt;     - Utilites for user permissions     &gt;     - Account profile route &amp; page     &gt;     - Users route &amp; page     &gt;     - Login page rerouting &amp; UI after password change     &gt;     - Work on each route &amp; page in app to change view based on permission level     &gt;     - Modal for editing access level in DB page     &gt;     - Modal for editing access level in schema page  </li> <li>The RFC will not go into depth on the implementation details since it will hinder our speed at the current stage of our product.</li> <li>It\u2019ll target on high level details and on modules which affect the rest of the application.</li> <li>It\u2019ll target details that are common/used by more than one of the medium-sized chunks.</li> <li>It\u2019ll include TS interfaces, pseudo-code, and algorithms, wherever applicable.</li> <li>It will involve figuring out a high-level architecture, which is subject to changes.</li> <li>The RFC can be updated multiple times during the course of implementation, if need arises. <ul> <li>For eg,. with Users and Permissions, the details would be like:</li> <li>We\u2019ll need a store for user profile, containing username, id, email etc.,<ul> <li>We\u2019ll have utility methods for current user\u2019s permissions which will part of the store.</li> </ul> </li> <li>This store will be in App context rather than being imported directly.</li> <li>There will no stores for users listing. The users page and modals will always make API calls upon initialization.</li> <li>The RFC will contain TS interfaces for the user profile store and the permission utilities.</li> <li>The RFC will contain details on how the permission checks will be done on each page of the app.</li> </ul> </li> <li>Once the RFC is reviewed and merged, we\u2019ll create a meta ticket on GH that contains the above medium-sized chunks as tasks.</li> <li>This ticket will order the tasks based on priority and mention which tasks block others.</li> <li>If the feature is to be worked on by multiple people, we\u2019ll assign a developer for the each of the sub tasks.</li> <li>The developer assigned to a task follows the RFC, but gets to decide on deeper implementation details without any need to update the RFC.</li> <li>However, if they encounter a scenario which affects other tasks/has higher implications, they will update the RFC and let the rest of the people involved know.</li> <li>The developer can further split their tasks into multiple issues if they wish, and control the scope of their tasks.</li> <li>They can decide to de-prioritize portions of their tasks (or in applicable cases, the entire task itself) and move them to later milestones.</li> </ul>"},{"location":"team/meeting-notes/2023/01/2023-01-20-partial-user-input-of-dates/","title":"2023-01-20-partial-user-input-of-dates","text":"<p>A meeting about how to handle partial user input of dates</p>"},{"location":"team/meeting-notes/2023/01/2023-01-20-partial-user-input-of-dates/#meeting-details","title":"Meeting details","text":"<ul> <li>Attending: Sean, Pavish, Dom, Brent, Mukesh, Anish</li> <li>Facilitator: Sean</li> </ul>"},{"location":"team/meeting-notes/2023/01/2023-01-20-partial-user-input-of-dates/#problem","title":"Problem","text":"<ul> <li> <p>We have this ticket that we can\u2019t agree how to fix:</p> <p>InvalidDatetimeFormat error when attempting to filter on a partially-entered date</p> </li> </ul>"},{"location":"team/meeting-notes/2023/01/2023-01-20-partial-user-input-of-dates/#solution","title":"Solution","text":"<p>Primarily:</p> <ul> <li>Parse user entry of dates on the front end</li> </ul> <p>Secondarily (to mitigate against similar issues):</p> <ul> <li>Fix API error response when filtering on an invalid date</li> <li>Keep records in store while fetching</li> </ul>"},{"location":"team/meeting-notes/2023/01/2023-01-20-partial-user-input-of-dates/#approaches-we-decided-against","title":"Approaches we decided against","text":"<ul> <li> <p>\u274c Improve the API error response so that the front end can more gracefully handle this error scenario. Then modify the front end to avoid wiping out the records data when it receives an error.</p> <ul> <li> <p>When the ticket was originally opened, this approach was not considered viable due to performance problems with the API. Now those performance concerns seem to have vanished with the recent reflection improvements. But\u2026</p> </li> <li> <p>This will require a bit of work on the front end due to 1893.</p> </li> <li> <p>Plus it doesn\u2019t give the user good feedback. If there are multiple filter conditions, we won\u2019t be able to show them which one is invalid.</p> </li> </ul> </li> <li> <p>\u274c Validate partially-entered dates with Postgres on the backend before running the query, then remove problematic filter conditions before running the query</p> <ul> <li> <p>Users might enter an invalid value, expecting to see filtered data and become confused </p> </li> <li> <p>Running multiple DB queries in sequence, is not great for performance.</p> </li> </ul> </li> <li> <p>\u274c Add a submit button to the filtering UI</p> <ul> <li> <p>This might work okay for the filtering dropdown, but it would not work very well for the Record Selector.</p> </li> <li> <p>Can we submit on blur in the Record Selector? No because we want \u201csearch as you type\u201d for text columns, and using an inconsistent submission UX across different column types would be confusing.</p> </li> </ul> </li> <li> <p>\u274c Force user to enter dates via the date-picker widget</p> <ul> <li>This is bad UX. Lots of clicks to enter very distant dates. Bad a11y too. Relevant HN post</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/01/2023-01-20-partial-user-input-of-dates/#out-of-scope","title":"Out of scope","text":"<p>This came up too, but we cut off conversation since it\u2019s an independent issue</p> <ul> <li>Entering \u2018now\u2019 on a datetime column without timezone support shows different time from what user expects</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-01-team/","title":"2023-02-01 Team Meeting","text":""},{"location":"team/meeting-notes/2023/02/2023-02-01-team/#gsoc-project-ideas-next-steps","title":"GSoC Project Ideas &amp; Next Steps","text":""},{"location":"team/meeting-notes/2023/02/2023-02-01-team/#notes","title":"Notes","text":"<ul> <li>GSoC deadline: Tue, Feb 7</li> <li>Aim to complete project idea documentation by Friday, Feb 3</li> <li>Ideas that won\u2019t impact team\u2019s workflow and won\u2019t interfere with other important tasks should be prioritized. </li> <li>List of ideas can be found in the email thread</li> <li>In general, we should research the ideas from an architecture stand-point to make it easier for contributors.</li> <li>Consider the ROI of educating the interns against the value of the output. How much time we invest / what do we get?</li> <li>Dom thinks we should try out things (be more experimental) in the projects so that we learn from them.<ul> <li>We decided against this because the program is aimed at beginners and it\u2019s better to have clear outcomes.</li> </ul> </li> <li>Anish likes the concept of extending current features/work</li> <li>Anish thinks people will have a preference for easier projects</li> <li>Goal is to end up with 10-20 ideas on the wiki for GSoC</li> <li>For project ideas, use the template on the wiki.</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-01-team/#current-ideas-feedback","title":"Current Ideas &amp; Feedback","text":""},{"location":"team/meeting-notes/2023/02/2023-02-01-team/#moving-type-inference-to-sql-declined","title":"Moving type inference to SQL (declined)","text":"<p>Brent: We have to be aware of pre-requisites that we have to do internally before an intern can take on this. Once we know how to resolve the pre-requisite it will be ok, otherwise it might be frustrating. Advice is to not do it.</p> <p>Mukesh: Agrees with Brent on the pre-requisites. Interns will need to understand a lot about the codebase. It might take months.</p> <p>Anish: most difficult part would be figuring out where the feature fits in product-wise and code-wise.</p>"},{"location":"team/meeting-notes/2023/02/2023-02-01-team/#casting-functions-parallelizable","title":"Casting functions parallelizable","text":"<p>Mukesh: This might be suitable as it requires less understanding of the codebase.</p> <p>Brent: We have a lot of casting functions, and they are inherently complicated. A deeper understanding might be required.</p>"},{"location":"team/meeting-notes/2023/02/2023-02-01-team/#table-splitting-column-logic-to-db-declined","title":"Table splitting / column logic to DB (declined)","text":"<p>Same as type inference challenges</p>"},{"location":"team/meeting-notes/2023/02/2023-02-01-team/#json-ui-experience","title":"JSON UI experience","text":"<p>Pavish: It will involve work on the editor, and could increase front-end size. We cannot afford to do that now as it will require architectural work on the front-end.</p> <p>Sean: Not worried about increase in size of bundle. Doesn\u2019t think it will be architecturally challenging. </p> <p>Brent: Depends on the scope</p>"},{"location":"team/meeting-notes/2023/02/2023-02-01-team/#importing-data-into-existing-tables-ui","title":"Importing data into existing tables UI","text":"<p>No feedback.</p>"},{"location":"team/meeting-notes/2023/02/2023-02-01-team/#adding-summarization-functions","title":"Adding summarization functions","text":"<p>Brent: Concerned about this being too easy. Might not last enough to cover all summer. </p>"},{"location":"team/meeting-notes/2023/02/2023-02-01-team/#kanban-view","title":"Kanban view","text":"<p>Pavish: This will take lots of product decisions, discussions, lots of implementation time. Estimate: 6 months, if multiple internal people are doing it. We don\u2019t currently have any visualizations, and that\u2019s going to be tough to get started.</p>"},{"location":"team/meeting-notes/2023/02/2023-02-01-team/#dark-mode","title":"Dark mode","text":"<p>Sean: This is a good one, goal is clear. We want dark mode and people will understand that. </p>"},{"location":"team/meeting-notes/2023/02/2023-02-01-team/#documenting-the-component-library","title":"Documenting the component library","text":"<p>Sean and Pavish don\u2019t like it.</p>"},{"location":"team/meeting-notes/2023/02/2023-02-01-team/#persisting-common-ui-configuration","title":"Persisting common UI configuration","text":"<p>Kriti: Concerned about the speccing work required.</p> <p>Pavish: Don\u2019t need to spec architecture, just need to spec requirements.</p>"},{"location":"team/meeting-notes/2023/02/2023-02-01-team/#refactor-store-systems-preloading","title":"Refactor store systems &amp; preloading","text":"<p>Kriti: Skeptical about giving a task that starts with \u201cRefactor\u201d</p> <p>Pavish: We\u2019d need to completely spec it out, then just have the intern implement.</p>"},{"location":"team/meeting-notes/2023/02/2023-02-01-team/#file-attachment-datatype","title":"File attachment datatype","text":"<p>Pavish: It depends on how we want the UX to be. Complexity will depend on how sophisticated the features will be. </p> <p>Brent: nervous if we want front and back end.</p>"},{"location":"team/meeting-notes/2023/02/2023-02-01-team/#location-data-type","title":"Location data type","text":"<p>Pavish: complexity depends on UX.</p> <p>Brent: nervous if we want front and back end.</p> <p>Mukesh: Concerned about how quickly we might need this and if we should wait before working on this.</p>"},{"location":"team/meeting-notes/2023/02/2023-02-01-team/#realtime-collaboration","title":"Realtime collaboration","text":"<p>Too big (Brent, Kriti, others agree)</p>"},{"location":"team/meeting-notes/2023/02/2023-02-01-team/#share-tablesexplorations-publicly","title":"Share tables/explorations publicly","text":"<p>Kriti: If we do this, avoid architectural changes Mukesh: worried about making it indexable</p>"},{"location":"team/meeting-notes/2023/02/2023-02-01-team/#read-only-db-views","title":"Read-only DB views","text":"<p>If we make the product &amp; UX decisions, this would be an easy / nice intern project (Pavish, Brent agree)</p>"},{"location":"team/meeting-notes/2023/02/2023-02-01-team/#nominated-projects","title":"Nominated Projects","text":"<p>After feedback, here are projects we think are worthwhile + the person assigned to writing them up on the wiki.</p> <ul> <li>JSON editing<ul> <li>Sean</li> </ul> </li> <li>Dark mode<ul> <li>Sean</li> </ul> </li> <li>Importing data into existing UI<ul> <li>Pavish</li> </ul> </li> <li>UI config<ul> <li>Pavish</li> </ul> </li> <li>Location data type<ul> <li>Mukesh</li> </ul> </li> <li>Casting functions parallelizable<ul> <li>Dom</li> </ul> </li> <li>Kanban <ul> <li>Rajat</li> <li>May not do this depending on concerns raised after Rajat writes up idea</li> </ul> </li> <li>DB view support<ul> <li>Brent</li> </ul> </li> <li>API documentation<ul> <li>Mukesh</li> </ul> </li> <li>Summarization<ul> <li>Brent</li> </ul> </li> </ul> <p>We need more to get to 10-20 ideas total. Everyone is encouraged to write up project ideas. Our discussion today should help with figuring out what kinds of ideas are viable.</p>"},{"location":"team/meeting-notes/2023/02/2023-02-01-team/#next-steps","title":"Next steps","text":"<ul> <li>People assigned to specific projects will write wiki pages on them by Friday<ul> <li>Use the template</li> </ul> </li> <li>New project ideas should also be put in the wiki by Friday</li> <li>Kriti will review ideas on Friday and provide feedback, revisions as needed</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-01-team/#launch-plans-update","title":"Launch plans &amp; update","text":""},{"location":"team/meeting-notes/2023/02/2023-02-01-team/#notes_1","title":"Notes","text":"<ul> <li>Quick update from Kriti:<ul> <li>Website is done, will implement feedback and illustrations</li> <li>Usability testing on website done, usability testing on product in progress</li> <li>Output of product usability testing will be list of potential changes before launch</li> <li>Important: Users and Permissions</li> <li>Important: Installation and Upgrade</li> <li>Set a launch date once we understand the feedback of usability testing (and the resulting scope of needed changes).</li> <li>Demo video is progressing</li> </ul> </li> <li>Hoping to launch in 3rd week of Feb.</li> <li>People are concerned about 3rd week of Feb. launch date.<ul> <li>Too much work.</li> <li>Working with potential GSoC contributors is eating up time.</li> </ul> </li> <li>After launch, we need a process to iterate quickly based on feedback. We\u2019ll need to discuss how to move faster.<ul> <li>Defer conversation until launch.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-08-launch-planning/","title":"2023-02-08 launch planning meeting","text":""},{"location":"team/meeting-notes/2023/02/2023-02-08-launch-planning/#general-update-and-qa","title":"General update and Q&amp;A","text":"<p>Kriti gave an update on</p> <ul> <li>Launch goals</li> <li>Funding plan</li> <li>Usability testing strategy</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-08-launch-planning/#launch-goals","title":"Launch goals","text":"<ul> <li>Get early adopters that are really excited about Mathesar and can help us alpha-test it</li> <li>Post Mathesar on HN, Reddit</li> <li>Get people to install and use it</li> <li>Website ready</li> <li>Documentation for at least one way to install</li> <li>Only have stuff in Launch blockers that block user from deciding whether to install Mathesar<ul> <li>Small usability issues and bugs don\u2019t block users from deciding to install Mathesar</li> </ul> </li> <li>Initial target users: Software engineers<ul> <li>Reducing target audience size</li> <li>Only aiming now for HN-user types, engineers (since they are the ones deciding whether to install Mathesar)</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-08-launch-planning/#funding","title":"Funding","text":"<ul> <li>For Non-profit projects, the important thing is impact<ul> <li>Theory of change</li> </ul> </li> <li>Can\u2019t do anything until we launch</li> <li>Need to show that we\u2019ve shipped something</li> <li>Need to show people are interested in it.</li> <li>Kriti wants to do pitches in March/April</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-08-launch-planning/#usability-testing","title":"Usability testing","text":"<ul> <li>Using tool: Playbook UX</li> <li>We provide tasks. People record themselves doing it.</li> <li>We also ask questions via the tool.</li> <li>Goal is to find people similar to initial target audience (HN denizens)</li> <li>Main focus is on high-impact changes which might affect adoption</li> <li>Also provides insights which we can do post-launch</li> <li>Current testing strategy is unmoderated. We might want to do some moderated tests later.</li> <li>We\u2019ve been refining tests. First test didn\u2019t go great.</li> <li>We\u2019re also focusing on the right segment of users for the tests.</li> <li>Sean thinks usability tests on installation would be quite useful.<ul> <li>Kriti plans to find people on Upwork for that.</li> <li>It\u2019s on the plan for launch.</li> </ul> </li> <li>For more open-ended instructions, we\u2019d need a bigger sample size to get good info.</li> <li>The test is designed as a narrative<ul> <li>Exploring existing Mathesar Con data set</li> <li>Adding a table called \u2018Sponsors\u2019</li> <li>Assigning Sponsors to talks</li> <li>Creating an exploration at prompt</li> </ul> </li> <li>Each test is giving us a 20-minute video of someone using Mathesar</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-08-launch-planning/#launch-plan","title":"Launch plan","text":"<p>We\u2019re going to launch on Feb 27.</p> <p>Blockers NEED to get done before launch.</p>"},{"location":"team/meeting-notes/2023/02/2023-02-08-launch-planning/#blockers","title":"Blockers","text":"<ul> <li>Users &amp; Permissions (Pavish, Rajat, Sean)<ul> <li>Pavish &amp; Kriti met Tue to cut scope a bit</li> </ul> </li> <li>Deployment (Brent, Dom, Mukesh)<ul> <li>Brent &amp; Kriti met Tue to cut scope</li> <li>Only \u201cDeployment Type 1\u201d</li> </ul> </li> <li>Usability testing issues (Ghislaine)<ul> <li>https://github.com/centerofci/mathesar/issues/2413</li> <li>More incoming \u2013 no major changes planned</li> </ul> </li> <li>Deployment usability testing (Kriti)</li> <li>Demo video (Kriti)</li> <li>Update README (Kriti)</li> <li>Complete website (Kriti &amp; Ghislaine)<ul> <li>Link to docs</li> <li>Integrate demo video</li> </ul> </li> <li>Reset migrations (???)</li> <li>Create and publish release (Kriti)<ul> <li>Think about versioning (semantic versioning may not be appopriate for applications)</li> </ul> </li> <li>Document upgrade process (Brent)</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-08-launch-planning/#nice-to-have","title":"Nice to have","text":"<ul> <li>Upgrades in UI (Sean)</li> <li>Additional deployment types (Brent, Dom, Mukesh)</li> <li>\u201cHigh\u201d items in Backlog milestone (Pavish, Rajat, Sean, Ghislaine)</li> <li>Pre-launch publicity (Kriti)</li> <li>Process for publishing releases on DockerHub </li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-08-launch-planning/#process","title":"Process","text":"<ul> <li>Currently ad-hoc process for launch</li> <li>We\u2019ll discuss improving velocity in a more permanent way after launch</li> <li>Considering meetings 2-3 times a week to stay focused.<ul> <li>Everyone agrees, we\u2019ll set these up.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-08-launch-planning/#gsoc-community-work","title":"GSoC / community work","text":"<ul> <li>We\u2019ll stop reviewing community work until launch.</li> <li>Anish will handle community communication until launch.<ul> <li>Kriti will support as needed.</li> <li>Everyone else should ignore community work until we launch.</li> </ul> </li> <li>If we get into GSoC, we\u2019ll review and update project ideas after launch.</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-08-launch-planning/#next-steps","title":"Next steps","text":"<ul> <li>Update launch milestone in GitHub to be accurate.</li> <li>Kriti will set up meetings</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-08-launch-planning/#current-status","title":"Current status","text":"<ul> <li>Users and permissions<ul> <li>Try to get this done before any other frontend work, it\u2019s in blockers</li> <li>Rajat\u2019s PR is open for styling</li> </ul> </li> <li>Deployment<ul> <li>There\u2019s a preliminary writeup in #2034</li> <li>New Docker setup for prod is finally merged<ul> <li>Brent will send email to mailing list with dev changes</li> </ul> </li> <li>install script is looking good, almost done (Mukesh)</li> <li>Documentation is pending<ul> <li>Port needs to be documented so that people can run things on different ports if needed </li> <li>Make sure we\u2019re clear about using WSL in Windows</li> <li>Make prerequisites of bash and Docker clear</li> </ul> </li> <li>Install script will be friendlier for Windows too</li> <li>Documentation for happy path - ETA Friday or early next week</li> <li>Next steps:<ul> <li>Get install.sh done and merged</li> <li>Get Watchtower (upgrade library) done and working with the current setup</li> <li>Documentation</li> </ul> </li> <li>Upgrade UI is blocked on discussion<ul> <li>Mukesh, Brent, Dom, Sean, Kriti should meet</li> </ul> </li> <li>Docker won\u2019t pull the new image unless you give it a \u201cbuild\u201d argument</li> <li>Installation flow</li> <li>Write up for user flow is in #2034</li> <li>We need to make sure we\u2019re not building frontend files in the npm container<ul> <li>Use pre-built files</li> <li>Double check run.sh - it might be cruft</li> <li>We need to revert package lock changes</li> </ul> </li> <li>Make sure to involve frontend engineers in installation review (probably Pavish)</li> </ul> </li> <li>Usability testing<ul> <li>Next steps<ul> <li>Finish writing notes for completed tests</li> <li>Write up tasks for what we need to fix before launch<ul> <li>Critical</li> <li>Easy to implement</li> </ul> </li> <li>Write up other, non-blocking tasks</li> </ul> </li> </ul> </li> <li>Deployment usability testing<ul> <li>Wait until we have docs</li> </ul> </li> <li>Demo video<ul> <li>Going back and forth on feedback</li> <li>Doing a new voiceover</li> <li>We seem to have a voiceover sample that works</li> <li>Should have v2 soon (hopefully final)</li> </ul> </li> <li>Need to update <code>README.md</code> - not started</li> <li>Website<ul> <li>Changes implemented</li> <li>Updating illustrations - in review</li> <li>Once we have docs and demo video, need to integrate</li> </ul> </li> <li>Not started:<ul> <li>Reset migrations</li> <li>Create and publish release (Kriti)</li> <li>Document upgrade process (Brent)</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-10-launch-check-in/","title":"2023-02-10 launch check-in","text":""},{"location":"team/meeting-notes/2023/02/2023-02-10-launch-check-in/#general-check-in","title":"General check in","text":"<ul> <li>GH project: Kriti updated the GH project, made issues for things we need to do. GH proj should be primary source of truth.</li> <li>Users/Perms: Pavish has assigned out all the rest of the work. It\u2019s coming along nicely. Should be completed by the end of next week. No other back-end issues are blocking Users/Perms FE work now. Mukesh is on standby to fix backend issues if needed. We should do some manual QA testing after we\u2019re done.</li> <li>Installation: Docker setup merged. Install script in draft PR form. We adjusted some tasks within GH during the meeting. We\u2019re focusing only on \u201cDeployment type 1\u201d. Maybe Dom could work on other deployment types?</li> <li>Updates Still working on Watchtower.</li> <li>Docs Brent has started working on docs content. Docs content is so far limited to install process. Still need to flesh out the \u201cwrapper\u201d docs content, with top-level stuff.</li> <li>Usability testing: Finished first round. See notes Nothing seems to be blocking the launch so far. We have things to work on later though. </li> <li>Deployment testing Blocked on docs being done. We\u2019re working on getting machines for Mac/Linux/Windows to test on various platforms based on instructions in docs.</li> <li>Demo video: New voiceover is done. They\u2019re working on the edit.</li> <li>Website: Looking good. New illusstrations are done. Basically the website is done!</li> <li>Funding: Kriti set up GH sponsors and OpenCollective. Still some more work to do as far as fleshing out profiles and funding platforms being integrated into other things</li> <li>Other tasks: (in case anyone runs out of work)<ul> <li>Load-testing the demo site?</li> <li>Other deployment types?</li> <li>We\u2019ll chat as-needed to figure this out.</li> </ul> </li> <li>Need to create tasks for:<ul> <li>We need to find some time to QA Users &amp; Permissions thoroughly after work is done</li> <li>Users &amp; Permissions documentation<ul> <li>Might also do in-app documentation</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-10-launch-check-in/#how-do-permissions-affect-edits-to-metadata","title":"How do permissions affect edits to metadata","text":"<ul> <li>Summary: We have user roles: \u201cManager\u201d, \u201cEditor\u201d, and \u201cViewer\u201d. Can an Editor modify metadata like Explorations, and column display settings? I predict that some users will want to grant this permission and some will not. Short of adding another role, we should take our best guess as to the behavior that most users will want, making sure we\u2019re all on the same page as a team.</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-10-launch-check-in/#notes","title":"Notes","text":"<ul> <li>Editors can edit metadata. </li> <li>Schema/table names and descriptions are not considered metadata (since they\u2019re stored in the user database).</li> <li>We may want more granular permissions later, but we hope this will be okay for now</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-10-launch-check-in/#planning-for-upgrades-via-ui","title":"Planning for upgrades via UI","text":"<ul> <li>Summary: tie up the loose ends with the design for the in-app upgrade process</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-10-launch-check-in/#notes_1","title":"Notes","text":"<ul> <li>Disagrements on fetching latest version info<ul> <li>Kriti doesn\u2019t want a cron job since it adds deployement complexity. Instead, we could fetch latest versions when an admin user is logged in.</li> <li>Dom has already impelented caching. Is the cron job already implemented?<ul> <li>Cron job is not implemented</li> </ul> </li> <li>Mukesh suggests we send requests from the frontend in a loop with some timeout which triggers fetching latest versions.</li> <li>Final decision is to not have a cron job.</li> </ul> </li> <li>UX for updates<ul> <li>Would contain \u2018Last checked time\u2019.</li> <li>Would have a button that says \u2018Check for updates now\u2019.</li> <li>TTL checks for latest versions is left upto the frontend team for now.</li> </ul> </li> <li>Sean and Dom will decide on next steps and update GitHub issues with the latest plan</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-13-launch-check-in/","title":"2023-02-13 launch check-in","text":""},{"location":"team/meeting-notes/2023/02/2023-02-13-launch-check-in/#general-check-in","title":"General check-in","text":""},{"location":"team/meeting-notes/2023/02/2023-02-13-launch-check-in/#users-permissions","title":"Users &amp; Permissions","text":"<ul> <li>Pavish: looking pretty good, PRs are awaiting review</li> <li>Rajat: Working on Table Inspector permissions \u2013 hasn\u2019t started, has been reviewing designs</li> <li>Access control waiting for PR 2443 to be merged (blocking other work)<ul> <li>Other permissions issues shouldn\u2019t be started until 2443 is merged</li> </ul> </li> <li>Rajat should prioritize PR review</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-13-launch-check-in/#deployment-and-installation","title":"Deployment and Installation","text":"<ul> <li>Brent: Working through <code>install.sh</code>, reviewing PR #2444, relevant to documentation</li> <li>Moved some tickets from \u2018blockers\u2019 to \u2018nice to have\u2019</li> <li>There\u2019s a PR for compressing static assets</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-13-launch-check-in/#load-testing-live-demo","title":"Load testing live demo","text":"<ul> <li>Dom\u2019s getting started with that.</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-13-launch-check-in/#upgrade","title":"Upgrade","text":"<ul> <li>Sean\u2019s getting started</li> <li>Final say on user flow will live in #277</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-13-launch-check-in/#product-usability-testing","title":"Product Usability testing","text":"<ul> <li>Done for now</li> <li>People were having real trouble renaming a table, wanted to put a table name in when creating from scratch.<ul> <li>Had trouble changing the table name later.</li> </ul> </li> <li>Ghislaine will create an issue for setting table name when creating a table</li> <li>Will be launch nice to have</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-13-launch-check-in/#website","title":"Website","text":"<ul> <li>Waiting on docs and demo video to be done for integrating</li> <li>Some issues with OpenGraph tags</li> <li>Some issues reported by Google search console<ul> <li>Just for mathesar.org, not for demo (or staging)</li> </ul> </li> <li>Got great feedback on current version of website</li> <li>We should probably update website copy to mention SaaS version coming soon + </li> <li>Add social proof section of website<ul> <li>Testimonials</li> <li>Feedback quotes</li> <li>Try to do this in a tasteful way</li> <li>Suggested by multiple people</li> </ul> </li> <li>Usability note:<ul> <li>How to get back to the site from the demo?</li> <li>Maybe even for general installations of the app.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-13-launch-check-in/#analytics","title":"Analytics","text":"<ul> <li>Nice to put some on live demo website</li> <li>Mukesh will work on this after Kriti creates an issue</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-13-launch-check-in/#error-logging-and-reporting","title":"Error logging and reporting","text":"<ul> <li>Might be useful for tracking down bugs, etc.</li> <li>Only useful for demo at the moment, need to think about self-hosted</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-13-launch-check-in/#users-permissions-qa","title":"Users &amp; Permissions QA","text":"<ul> <li>Anish will document what needs to be tested </li> <li>Kriti will provide feedback</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-13-launch-check-in/#launch-milestone-updates","title":"Launch milestone updates","text":"<ul> <li>Kriti will make some issues for new things mentioned above</li> <li>We\u2019ll kick out extra users &amp; permissions and deployment types from launch nice-to-haves</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-13-launch-check-in/#schema-sharing-modal-design","title":"Schema Sharing Modal Design","text":"<p>Attendees: Pavish, Kriti, Rajat</p> <ul> <li>The schema sharing modal design doesn\u2019t show people with DB access, should we show it?</li> <li>Yes, it should be similar to how \u201cAdmin\u201d is shown, but it should be \u201cDB Manager\u201d, \u201cDB Editor\u201d, \u201cDB Viewer\u201d</li> <li>Users cannot edit DB roles.</li> <li>Users can add schema roles for people who already have DB roles. This will just show as \u201cEditor\u201d, \u201cManager\u201d, \u201cViewer\u201d.</li> <li>Pavish may improvise some help text.</li> <li>In general it\u2019s fine to improvise design work on this feature.</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-15-launch-check-in/","title":"2023-02-15 launch check in","text":""},{"location":"team/meeting-notes/2023/02/2023-02-15-launch-check-in/#general-check-in","title":"General check in","text":""},{"location":"team/meeting-notes/2023/02/2023-02-15-launch-check-in/#users-and-permissions","title":"Users and permissions","text":"<ul> <li> <p>Pavish is out sick. From matrix: There\u2019s a bit of a delay. I\u2019m working on a PR containing the items assigned to me, I\u2019m not confident that they\u2019ll be merged by end of this week. I should have the PR open by this weekend.</p> </li> <li> <p>Sean\u2019s work went swimmingly. So well, he\u2019s out of work and plans to take on tasks from Pavish/Rajat as needed</p> </li> <li>Rajat has a PR in for documentation of access control, other PR for Table pages\u2019 access control(s) coming tomorrow</li> <li>Anish: Users and permissions PR is ready for review by Pavish<ul> <li>Pavish is out; someone else should probably jump onto reviewing this.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-15-launch-check-in/#live-demo","title":"Live Demo","text":"<ul> <li>Dom: Did some load testing</li> <li>Initial load testing uncovered a few issues</li> <li>There are a few open items there<ul> <li>Dom is debugging issues found</li> </ul> </li> <li>Since Dom is out Thu/Fri, Mukesh or Brent should take over if needed<ul> <li>Issue status will be documented</li> </ul> </li> <li>Some frontend improvements are also available to take on.</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-15-launch-check-in/#upgrades","title":"Upgrades","text":"<ul> <li>Sean has been working on front end implementation, ahead of a fully functional API.</li> <li>To discuss the process for testing upgrades Sean, Brent, and Dom met after the meeting separately, with Kriti attending for some of the discussion. Outcomes were as follows\u2026</li> <li>Release data<ul> <li>The front end will fetch release info directly from GitHub. No need to proxy through our backend anymore. Dom will remove existing proxy code and forward instructions to Sean for fetching release info from the GitHub API. Dom will also make changes so that the tag name of the current release is included in the common-data blob.</li> </ul> </li> <li>Testing on upgrades on live releases<ul> <li>Before doing any Mathesar publicity, we will publish two releases to GitHub and DockerHub so that we can fully test the in-app upgrade process, ensuring it works smoothly from start to finish.</li> <li>Before tagging any releases, we will reset migrations.</li> </ul> </li> <li>Executing an upgrade<ul> <li>Currently, we have an API endpoint at /api/ui/v0/upgrade/ which accepts GET requests.</li> <li>We need to change this to POST instead</li> <li>Testing this endpoint needs to be done in prod mode, not dev. Setting up Mathesar in prod mode is now a bit tricky, especially if you want to keep any data you have in your docker volume.</li> <li>When hitting this endpoint, the response status is 200 and the response body is empty. We\u2019re fairly certain that the endpoint gives this same response regardless of success or failure scenarios, and it seems like we probably won\u2019t have any control to easily modify that behavior. This setup is a temporary solution anyway, so we don\u2019t want to put much work into polishing it.</li> <li>The lack of response info means that the UX will be devoid of any error information if something goes wrong during an upgrade. After a failed upgrade, the user will see the page refresh. If Mathesar is still running, then they\u2019ll see the upgrade screen again, showing that an upgrade is available. We\u2019re planning to cross our fingers and hope the upgrade works for people, because we likely don\u2019t have the time to handle failure scenarios more gracefully.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-15-launch-check-in/#deployment-and-installation","title":"Deployment and installation","text":"<ul> <li><code>install.sh</code> v1 is ready<ul> <li>Please test, command in Mathesar - Code channel on Matrix</li> <li>Took a lot longer than anticipated</li> <li>There are a lot of different ways that people run Docker, turns out</li> </ul> </li> <li>Documentation is in a branch<ul> <li>Sean volunteered to review</li> </ul> </li> <li>Kriti will look for someone on Upwork to test installation in various environements</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-15-launch-check-in/#usability-improvements","title":"Usability improvements","text":"<ul> <li>Ghislaine made an issue for specifying table name when creating a table<ul> <li>She\u2019s working on design for it</li> </ul> </li> <li>There are some open usability improvements issues for the frontend team, please take them on if there are no pending issues for users/permissions</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-15-launch-check-in/#demo-video","title":"Demo video","text":"<ul> <li>Demo video V2 is open for review</li> <li>Lacks polish, rethinking the plan of integrating it into our website.<ul> <li>re-recorded audio but not video</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-15-launch-check-in/#website","title":"Website","text":"<ul> <li>Making some updates to the website to mention a hosted version coming up.</li> <li>Ghislaine and Kriti will work on this.</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-15-launch-check-in/#analytics-for-live-demo-server","title":"Analytics for live demo server","text":"<ul> <li>Mukesh has been reading docs and writing up an email for what\u2019s needed.</li> <li>If we want more detailed events, we may need more than Simple Analytics</li> <li>Kriti suggests a call instead of email</li> <li>Mukesh prefers email</li> <li>Decision: start with email, take it from there</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-15-launch-check-in/#is-github-prioritization-working","title":"Is GitHub prioritization working?","text":"<ul> <li>Yes, people can find what they need on GitHub</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-17-launch-check-in/","title":"2023-02-17 launch check in","text":""},{"location":"team/meeting-notes/2023/02/2023-02-17-launch-check-in/#upcoming-meetings","title":"Upcoming meetings","text":"<ul> <li>Monday\u2019s launch check in is moved to Tuesday because of US holiday</li> <li>Next week\u2019s community team event is moved one week since we have a lot to do before launch. It\u2019s now on March 3.</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-17-launch-check-in/#general-check-in","title":"General check in","text":""},{"location":"team/meeting-notes/2023/02/2023-02-17-launch-check-in/#users-permissions","title":"Users &amp; Permissions","text":"<ul> <li>PRs open for items assigned to both Rajat and Sean.</li> <li>Pavish should have PRs ready by Monday.</li> <li>QA: Anish is working on the document. We could start it on Tuesday.</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-17-launch-check-in/#installation-deployment","title":"Installation &amp; Deployment","text":"<ul> <li>Docs and install script are done. Kriti will take a look at it after it\u2019s merged.</li> <li>We\u2019ll get feedback from people from Upwork once ready.<ul> <li>Kriti has interviewed and selected a bunch of people to test the installation process.</li> </ul> </li> <li>Next steps: implement installation with connecting existing DBs, and setting up domains<ul> <li>Kriti will make sure issues exist for these</li> <li>Update existing Deployment Type 2 issue</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-17-launch-check-in/#live-demo","title":"Live demo","text":"<ul> <li>Analytics PR is merged.</li> <li>Mukesh is trying to figure out how to integrate it with the FE.</li> <li>Next steps: Kriti will deploy and test it.</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-17-launch-check-in/#website","title":"Website","text":"<ul> <li>There\u2019s a PR to update CTAs, to inform about the sass version, docs integration etc.,</li> <li>Most blockers are complete.</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-17-launch-check-in/#documentation","title":"Documentation","text":"<ul> <li>Need to add HTTPS redirect</li> <li>Improvements waiting to be merged</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-17-launch-check-in/#usability-improvements","title":"Usability improvements","text":"<ul> <li>All remaining issues are assigned.</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-17-launch-check-in/#upgrades","title":"Upgrades","text":"<ul> <li>Sean: Coming along well. No additional help is needed at the moment.</li> <li>There\u2019s a bit of work on the FE since the logic is shifted to FE.</li> <li>There should be a PR on Monday.</li> <li>Inorder to test, there should be atleast two releases published to GH.</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-17-launch-check-in/#release","title":"Release","text":"<ul> <li>Brent is assigned to resetting migrations and creating first release</li> <li>ETA early next week</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-17-launch-check-in/#publicity","title":"Publicity","text":"<ul> <li>Kriti is coming up with plans for publicity.<ul> <li>HN, email posts, social media posts etc.,</li> </ul> </li> <li>We\u2019ll discuss about how to distribute comments on thread between team members next week.</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-17-launch-check-in/#priorities-per-person","title":"Priorities per person","text":""},{"location":"team/meeting-notes/2023/02/2023-02-17-launch-check-in/#anish","title":"Anish","text":"<ul> <li>QA plan for users &amp; permissions</li> <li>Usability issues</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-17-launch-check-in/#brent","title":"Brent","text":"<ul> <li>Keep an eye on deployment/documentation feedback</li> <li>Double-check that we can deploy (type 1) on GCP, with domain, https etc. work</li> <li>Reset migrations</li> <li>Publish 2 test releases (comms with Sean)</li> <li>Update script/docs to handle deployment type 2</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-17-launch-check-in/#dom","title":"Dom","text":"<ul> <li>Upgrade support for Sean</li> <li>Load testing live demo</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-17-launch-check-in/#ghislaine","title":"Ghislaine","text":"<ul> <li>Website &amp; design</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-17-launch-check-in/#kriti","title":"Kriti","text":"<ul> <li>A number of things related to usability testing, website, publicity, sponsorship etc.,</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-17-launch-check-in/#mukesh","title":"Mukesh","text":"<ul> <li>Analytics</li> <li>Help Brent with installation</li> <li>Talk to Kriti if further work needed</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-17-launch-check-in/#pavish","title":"Pavish","text":"<ul> <li>Users &amp; Permissions issues</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-17-launch-check-in/#rajat","title":"Rajat","text":"<ul> <li>Users &amp; Permissions review</li> <li>Usability issues</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-17-launch-check-in/#sean","title":"Sean","text":"<ul> <li>Upgrades</li> <li>Live demo</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-17-launch-check-in/#version-number-format","title":"Version number format","text":"<ul> <li>Added by: Sean</li> <li>Summary: I need to know the format we\u2019re using for the version number. With our recent decesion to push more upgrade logic to the front end, the front end needs to parse the version number to determine whether the latest version is an upgrade.</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-17-launch-check-in/#notes","title":"Notes","text":"<ul> <li>Kriti did some research on versioning, let\u2019s use SemVer</li> <li>First testing release 0.0.1, second testing release: 0.0.2</li> <li>First actual alpha release: 0.1.0</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-17-launch-check-in/#adding-analytic-events-to-the-frontend","title":"Adding Analytic Events to the frontend","text":"<ul> <li>Added by: Mukesh</li> <li>Attendees: Mukesh, Sean, Pavish, Kriti (partial)</li> <li>Summary: Need input from frontend team to decide on architecture to implement custom events for demo server.</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-17-launch-check-in/#notes_1","title":"Notes","text":"<ul> <li>Decided against implementing analytics in the backend because frontend has a lot of events that are not visible to backend.</li> <li>Analytics events are better captured on the frontend, as we have a better context of the user actions and can also capture events that don\u2019t make any backend API calls. </li> <li>Kriti: if this is going to be very complicated to implement, we can skip it for launch.</li> <li>Pavish suggested using global function which would be called any time we want to track a custom event. </li> <li>This global function would send the events to our analytic platform only during the demo build and will be empty for other build types. Sean agrees with the suggested approach</li> <li>Mukesh needs to figure out a way to avoid typescript complaining about the missing global function. </li> <li>It is better to use a wrapper function called <code>sendAnalytics</code> and call any analytics related code within that function, so that any logic related to analytics is encapsulated properly.</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-21-launch-check-in/","title":"2023-02-21 launch check in","text":""},{"location":"team/meeting-notes/2023/02/2023-02-21-launch-check-in/#general-check-in","title":"General check in","text":""},{"location":"team/meeting-notes/2023/02/2023-02-21-launch-check-in/#users-permissions","title":"Users &amp; Permissions","text":"<ul> <li>There\u2019s a open PR with rest of pending items</li> <li>If we want to change UX as per Kriti\u2019s comments, won\u2019t take long<ul> <li>pending confirmation</li> <li>let\u2019s go ahead with UX changes</li> </ul> </li> <li>Hopefully merged today or tomorrow</li> <li>Docs for this are currently assigned to Kriti; </li> <li>Don\u2019t include unconfirmed tables issue #2520<ul> <li>There\u2019s a PR \u2013 pending review;</li> <li>nice-to-have</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-21-launch-check-in/#installation-deployment","title":"Installation &amp; Deployment","text":"<ul> <li>SSL wasn\u2019t working, but it\u2019s fixed<ul> <li>PR is in, not quite working, but it\u2019ll be sorted by tomorrow</li> <li>Mukesh\u2019s approach is better</li> <li>that will make deployment work on a server with a domain</li> </ul> </li> <li>next priority: deployment type 2<ul> <li>connect existing database</li> <li>not very difficult</li> </ul> </li> <li>library.mathesar.org will be used for testing deployment types</li> <li>static files not loading issue was breaking Docker image, that\u2019s fixed<ul> <li><code>master</code> builds Docker image that functions</li> </ul> </li> <li>Usability testing: seems to be going well.<ul> <li>We can work on this after deployment type 2</li> </ul> </li> <li>Deployment type 3:<ul> <li>Mostly should work, needs either documentation on environment variables, or convenience scripts to wrap commands in proper environment (e.g., read from .env file)</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-21-launch-check-in/#live-demo","title":"Live demo","text":"<ul> <li>Load testing has multiple issues</li> <li>When initializing multiple users at once, demo server doesn\u2019t return requests</li> <li>Front end issues are further out in the queue</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-21-launch-check-in/#website","title":"Website","text":"<ul> <li>404 page PR is submitted</li> <li>Integrating documentation is happening today</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-21-launch-check-in/#documentation","title":"Documentation","text":"<ul> <li>Integrating into website</li> <li>Documenting type 2 and 3 deployments</li> <li>Update <code>README.md</code> (issue #2495)</li> <li>Ghislaine working on styling <ul> <li>could integrate feedback from usability testers</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-21-launch-check-in/#usability-improvements","title":"Usability improvements","text":"<ul> <li>PRs are in for all blocking issues</li> <li>People should be reviewing today or tomorrow</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-21-launch-check-in/#upgrades","title":"Upgrades","text":"<ul> <li>Sean opened a PR over the weekend.</li> <li>The releases exist, but <ul> <li>We should delete them</li> <li>Merge the upgrades frontend PR #2514,<ul> <li>Change POST request to GET</li> </ul> </li> <li>Make some new releases,</li> <li>Make sure it works through manual QA.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-21-launch-check-in/#release","title":"Release","text":"<ul> <li>Migrations are reset</li> <li>Create and publish first release</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-21-launch-check-in/#publicity","title":"Publicity","text":"<ul> <li>The HN post is in the works</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-21-launch-check-in/#priorities-per-person","title":"Priorities per person","text":""},{"location":"team/meeting-notes/2023/02/2023-02-21-launch-check-in/#anish","title":"Anish","text":"<ul> <li>Reviewing #2520</li> <li>Community work</li> <li>QA for Users and Permissions</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-21-launch-check-in/#brent","title":"Brent","text":"<ul> <li>Testing deployment type 1 with SSL</li> <li>Deployment type 2</li> <li>Propose release process</li> <li>Implement deployment usability testing fixes as needed</li> <li>Website bio double-check</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-21-launch-check-in/#dom","title":"Dom","text":"<ul> <li>Rewrite upgrade endpoint from GET to POST in caddyfile </li> <li>Demo bottleneck hunting</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-21-launch-check-in/#ghislaine","title":"Ghislaine","text":"<ul> <li>Style Wiki and Documentation</li> <li>Update bios on website</li> <li>Alternative design for CTA</li> <li>Table rename prompt design</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-21-launch-check-in/#kriti","title":"Kriti","text":"<ul> <li>Keep people unblocked</li> <li>Plan for QA and docs</li> <li>Write README, HN post, etc.</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-21-launch-check-in/#mukesh","title":"Mukesh","text":"<ul> <li>Get the analytics PR #2513 merged into the frontend codebase</li> <li>Start working on Deployment Type 3 work</li> <li>Log more analytic events</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-21-launch-check-in/#pavish","title":"Pavish","text":"<ul> <li>Review and merge upgrades PR</li> <li>Get users &amp; permissions PR merged - fix review comments if any</li> <li>Review other launch PRs</li> <li>Avoid merging / worrying about PRs not involved with launch</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-21-launch-check-in/#rajat","title":"Rajat","text":"<ul> <li>General usability testing</li> <li>Docs for users and permissions</li> <li>QA for users and permissions</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-21-launch-check-in/#sean","title":"Sean","text":"<ol> <li>PR review for Pavish/Rajat</li> <li>Live demo usability improvements</li> </ol>"},{"location":"team/meeting-notes/2023/02/2023-02-21-launch-check-in/#testing-docker-images-github-releases","title":"Testing Docker images, Github Releases","text":"<p>Summary: Follow up on Brent\u2019s email, decide on next steps</p> <ul> <li>Process proposed in email seems very bureaucratic</li> <li>Big picture: We need to know our master branch produce deployments that function.</li> <li>How often do we need to test that install.sh works?</li> <li>Should we test on every PR?<ul> <li>Setting up CI for this would be tricky</li> </ul> </li> <li>Should we test before every release?<ul> <li>If we identify problems, it could take some time to diagnose and fix if the problem was introduced a long time before.</li> </ul> </li> <li>Brent is interested in a using a separate Docker repo (not a separate GitHub repo). We might need separate images for separate deployment types</li> <li>Kriti: I don\u2019t think manually testing every day before release is a priority. And I don\u2019t think setting up automated testing is a priority right now either.</li> <li>Main thing we need to discuss right now: What\u2019s the process for cutting a release?</li> <li>Do we really need a separate Docker repo to test the releaes?<ul> <li>We could use a separate tag in the same Docker repo.</li> <li>We have the non-pro version of Docker. It\u2019s not great for managing tags.</li> </ul> </li> <li>Brent: We should make it so that install.sh takes a tag name as an argument. Then the docs instructions would tell users to run install.sh with a tag name that we manually set into the docs content.</li> <li>Dom: we\u2019ll need to consider how the upgrade process works with Watchtower, may not work unless we use a consistent tag for latest version (rather than version number based tags).</li> <li>Lots of complexity to consider, can\u2019t resolve now.</li> <li>Next step: Brent will write a wiki page proposing a step-by-step process for how to cut a release.<ul> <li>We\u2019ll discuss once that\u2019s ready </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/","title":"2023-02-22 launch check-in","text":""},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/#general-check-in","title":"General check in","text":""},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/#users-permissions","title":"Users &amp; Permissions","text":"<ul> <li>Frontend work mostly merged</li> <li>PR is open for UX change<ul> <li>Should be merged soon, pending review</li> <li>Should be reviewed after the upgrades stuff</li> </ul> </li> <li>For QA and documentation, Kriti has a spreadsheet set up</li> <li>Should have the documentation before tomorrow\u2019s meeting</li> <li>Pavish wants to add some tootips to help users understand what permissions do</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/#installation-deployment","title":"Installation &amp; Deployment","text":"<ul> <li>Everything is working for Type 1</li> <li>SSL is working, tested on GCP. Turned off in localhost.</li> <li>Brent\u2019s working on Type 2</li> <li>Deployment usability testing can be restarted</li> <li>Kriti talked with Mukesh about deployment type 3<ul> <li>We havea temp working on documenting the steps Ansible goes through for type 3</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/#live-demo","title":"Live demo","text":"<ul> <li>We narrowed the problems down to reflection being very inefficient.</li> <li>Demo analytics has been merged<ul> <li>If time, add more analytics events</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/#website","title":"Website","text":"<ul> <li>Kriti posted new 404 in matrix yesterday</li> <li>PR is submitted (draft) for integrating docs into the website.<ul> <li>Should be merged after the docs look nicer</li> </ul> </li> <li>Draft PR for social proof section.</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/#documentation","title":"Documentation","text":"<ul> <li>Wiki is now styled with our colors, etc.</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/#usability-improvements","title":"Usability improvements","text":"<ul> <li>\u201cUse 404 page in app\u201d is in progress</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/#upgrades","title":"Upgrades","text":"<ul> <li>Sean is addressing review feedback</li> <li>Kriti will figure out QA plan once merged.</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/#release","title":"Release","text":"<ul> <li>Document release process</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/#publicity","title":"Publicity","text":"<ul> <li>No update</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/#priorities-per-person","title":"Priorities per person","text":""},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/#anish","title":"Anish","text":"<ul> <li>Completing QA spreadsheet</li> <li>Getting #2520 merged in</li> <li>Community work</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/#brent","title":"Brent","text":"<ul> <li>Deployment type 2</li> <li>Propose/document release process</li> <li>Deployment usability test fixes</li> <li>Website bio</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/#dom","title":"Dom","text":"<ul> <li>Find and fix demo server bottlenecks</li> <li>Figure out how to make demo server unlikely to break (reliable)</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/#ghislaine","title":"Ghislaine","text":"<ul> <li>Update docs styling</li> <li>Alternative CTA design</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/#kriti","title":"Kriti","text":"<ul> <li>Keep people unblocked</li> <li>Deployment usability testing</li> <li>Deployment Type 3</li> <li>Testing upgrades</li> <li>Update README, HN post, etc.</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/#mukesh","title":"Mukesh","text":"<ul> <li>Help Dom with live demo throughput issue</li> <li>Deployment Type 3 <ul> <li>install.sh improvements</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/#pavish","title":"Pavish","text":"<ul> <li>Make changes based on outcome of permissions agenda item</li> <li>Re-review and merge Upgrades PR</li> <li>Ensure schema access control modal UX PR is merged (address review feedback if any)</li> <li>Add more analytics events</li> <li>Add in-app help tooltips for permissions, if time permits</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/#rajat","title":"Rajat","text":"<ul> <li>Get consistent 404 page PR merged - Usability testing.</li> <li>Documentation for users and permissions.</li> <li>QA user and permissions.</li> <li>QA the platform in general. </li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/#sean","title":"Sean","text":"<ul> <li>Review Update schema access control modal UX</li> <li>Live demo UX improvements</li> <li>Review Consistent 404 pages across client and server</li> <li>Review Add Deployment docs</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/#permissions-clarifications","title":"Permissions - clarifications","text":"<ul> <li> <p>Summary: </p> <ol> <li>Can a schema manager edit schema name &amp; description?<ul> <li>We have options to do this at both the schema page &amp; db page.</li> <li>Currently, the UI allows schema managers to do this at the schema page, but not at the DB page. We need to make this consistent.</li> <li>The product spec does not provide clarification into names and descriptions. This is a DDL operation on the schema itself, and based on the spec it should only be allowed if the user has manager access on the DB. However, the backend allows this.</li> </ul> </li> <li>If we allow editing, should we allow delete? The backend allows this, the frontend doesn\u2019t. The spec says we shouldn\u2019t allow this.</li> </ol> </li> <li> <p>It\u2019s okay if the schema manager can edit/delete the schema.</p> <ul> <li>Requires a quick change on frontend work</li> </ul> </li> </ul> <p>We also discussed https://github.com/centerofci/mathesar/issues/2537 - conclusion was that the backend behavior/product spec makes sense but we need a better UX. We won\u2019t worry about it for launch - users and permissions just needs to be working; not necessarily really smooth.</p>"},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/#demo-server-readiness","title":"Demo server readiness","text":"<ul> <li>Summary: What steps do we need to take to make demo work during launch?</li> <li>Participants: Dom, Brent, Kriti, Mukesh, Pavish, Sean (partial)</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/#problems","title":"Problems","text":"<ul> <li>Performance is a problem:<ul> <li>Request timeouts due to reflection</li> <li>bogging down on reflection</li> <li>Multiple servers hooked up to same DB doesn\u2019t help</li> </ul> </li> <li>Too many connections<ul> <li>Increase connection limit?</li> <li>Optimize connection management in the code</li> <li>Reduce timeout of Postgres sessions<ul> <li>Slow down demo server, but won\u2019t crash it.</li> </ul> </li> </ul> </li> <li>Figure out how to set up load balancer if we need it.</li> <li>Note: ensure the ArXiv data loader doesn\u2019t write to the template</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/#load-tests","title":"Load tests","text":"<ul> <li>https://github.com/centerofci/mathesar-scripts/tree/master/demo-loadtest</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/#process","title":"Process","text":"<ul> <li>Getting the demo server 100% reliable before Monday is not a reasonable goal.</li> <li>We shouldn\u2019t be trying to identify all issues at once.</li> <li>We need to rapidly iterate on fixes and load testing.</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-22-launch-check-in/#tasks","title":"Tasks","text":"<ol> <li>Figure out setting up (sticky sessions) load balancer and additional servers in GCP - Mukesh</li> <li>Optimize Postgres settings - session timeout, connection limit, etc. - Dom<ul> <li>Connections may be memory intensive, pay attention to that.</li> <li>Postgres connections according to docs, 128 MB<ul> <li>Not seeing that in production, 0.3% of 8 GB</li> <li>300 connections will use ALL the memory</li> </ul> </li> </ul> </li> <li>Optimize reflection in the Mathesar codebase - Dom</li> <li>Optimize connection management in the Mathesar codebase - Mukesh</li> <li>Load test more and find other problems - Dom</li> </ol>"},{"location":"team/meeting-notes/2023/02/2023-02-23-launch-check-in/","title":"2023-02-23 launch check in","text":""},{"location":"team/meeting-notes/2023/02/2023-02-23-launch-check-in/#general-check-in","title":"General check in","text":"<ul> <li>Two working days left!</li> <li>Kriti extended current iteration to 2023-02-27</li> <li>Some items in Launch nice-to-haves are moved to next week\u2019s iteration (e.g. load testing optimizing reflection)</li> <li>Only left things in the current milestone that seem to have a reasonable chance of getting done</li> <li>This view is up to date: https://github.com/orgs/centerofci/archive/projects/1/views/47</li> <li>What if demo site is not ready for lots of traffic?<ul> <li>We still launch. If it crashes, then oh well. Demo is just a nice-to-have.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-23-launch-check-in/#users-permissions","title":"Users &amp; Permissions","text":"<ul> <li>QA plan is coming along.</li> <li>Rajat will review the QA plan.</li> <li>Anish and Rajat will handle the QA work.</li> <li>Will be done by tomorrow</li> <li>Mukesh and Anish are doing some review work for users and permissions</li> <li>Reviewers are encouraged to push changes to the PR just so we can get the PRs merged quickly</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-23-launch-check-in/#documentation","title":"Documentation","text":"<ul> <li>Still some outstanding work for documenting users and permissions</li> <li>Kriti is reviewing users &amp; permissions docs</li> <li>Sean reviewing README PR</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-23-launch-check-in/#installation-deployment","title":"Installation &amp; Deployment","text":"<ul> <li>Deployment type 2 is working, tested locally, tested on GCP test server. PR is submitted, awaiting review.</li> <li>Documented differences (in same PR) so users can understand the permissions needed by the user.</li> <li>We have hired someone from Upwork to write some more installation docs</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-23-launch-check-in/#live-demo","title":"Live demo","text":"<ul> <li>We need to discuss some design/UX issues </li> <li>Timing for improvements to live demo: We are okay pushing some imprvements to the live demo after the release, but we want to get as much in before the release as possible</li> <li>Load balancer is in progress<ul> <li>Need to figure out how to determine when to scale.</li> </ul> </li> <li>We\u2019ll chat about load balancing implementation details later</li> <li>We\u2019re hoping to have some improvements completed tomorrow</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-23-launch-check-in/#website","title":"Website","text":"<ul> <li>Waiting to work out installation issues before we integrate the docs</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-23-launch-check-in/#upgrades","title":"Upgrades","text":"<ul> <li>Still need to QA the upgrade process</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-23-launch-check-in/#release","title":"Release","text":"<ul> <li>no updates</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-23-launch-check-in/#publicity","title":"Publicity","text":"<ul> <li>no updates</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-23-launch-check-in/#misc","title":"Misc","text":"<ul> <li>Issue with \u201cSchemas (0)\u201d displaying sometimes for demo users and local installations<ul> <li>Sean experiencing this locally too</li> <li>We\u2019ve had some reports from live demo users that have hit this bug</li> <li>Sean will hop on a call today with a back-end engineer to troubleshoot</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-23-launch-check-in/#priorities-per-person","title":"Priorities per person","text":""},{"location":"team/meeting-notes/2023/02/2023-02-23-launch-check-in/#anish","title":"Anish","text":"<ul> <li>Finish all the QA testing tasks </li> <li>Takeover #2520</li> <li>Community work</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-23-launch-check-in/#brent","title":"Brent","text":"<ul> <li>Recreating schema missing/uncreatable bug</li> <li>Solving schema missing / uncreatable bug</li> <li>Writing up release plan</li> <li>Keeping an eye on Deployment type 2 reviews, working towards merge</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-23-launch-check-in/#dom","title":"Dom","text":"<ul> <li>Test in-app updating (with real Github releases)</li> <li>Fix Arxiv dataset in demo</li> <li>Work on reflection in demo</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-23-launch-check-in/#ghislaine","title":"Ghislaine","text":"<ul> <li>Update style for docs</li> <li>Alternative design for CTA</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-23-launch-check-in/#kriti","title":"Kriti","text":"<ul> <li>Help move forward installation and deployment</li> <li>Help with upgrades if needed</li> <li>Demo analytics testing</li> <li>Publicity work</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-23-launch-check-in/#mukesh","title":"Mukesh","text":"<ul> <li>Review deployment type 2</li> <li>Work on Load balancer for demo server<ul> <li>Have a basic loadbalancer setup</li> <li>Figure out the health check to scale theinstances</li> <li>Point the mathesar domain to the loadbalancer IP</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-23-launch-check-in/#pavish","title":"Pavish","text":"<ul> <li>Test Upgrades</li> <li>On-call for Users &amp; Permissions issues</li> <li>Add more Analytics events</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-23-launch-check-in/#rajat","title":"Rajat","text":"<ul> <li>Review the QA plan</li> <li>Do the remaining QA items for users and permissions</li> <li>Review related changes on users and permissions documentation. </li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-23-launch-check-in/#sean","title":"Sean","text":"<ul> <li>Live demo usability<ul> <li>Figure out how to navigate from the live demo back to Mathesar.org</li> <li>Allow users to sign up for Mathesar mailing list from live demo</li> </ul> </li> <li>Review Deployment docs</li> <li>Review README updates</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-23-launch-check-in/#upgrade-testing-procedure","title":"Upgrade testing procedure","text":"<p>Participants: Pavish, Dom, Sean, Kriti Summary: figure out how to test upgrades and who\u2019s going to work on it.</p> <ul> <li> <p>Preparation:</p> <ul> <li>Dom: Make sure there are two releases (both on Github and Dockerhub)<ul> <li>with different versions strigs/tags in code, in git and in docker</li> </ul> </li> <li>Dom: Figure out steps to switch between releases in dev<ul> <li>so that we can trigger in-app updating and then \u201crewind\u201d</li> </ul> </li> </ul> </li> <li> <p>Testing process:</p> <ol> <li>Dom Call the upgrade endpoint to double-check that it still works</li> <li>Pavish Install that release locally and test upgrade</li> </ol> </li> </ul> <p>https://github.com/centerofci/mathesar/issues/2534 has been updated accordingly</p>"},{"location":"team/meeting-notes/2023/02/2023-02-23-launch-check-in/#live-demo-navigation-changes-ux","title":"Live Demo navigation changes UX","text":"<p>Participants: Sean, Kriti, Ghislaine</p> <p>Sean, Kriti, and Ghislaine looked at in-progress work and finalized UX for changes to the live demo banner. Related issues:</p> <ul> <li>https://github.com/centerofci/mathesar/issues/2468</li> <li>https://github.com/centerofci/mathesar/issues/2494</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-23-launch-check-in/#live-demo-load-balancing-strategy","title":"Live Demo load-balancing strategy","text":"<p>Attendees: Kriti, Mukesh, Dom, Brent, Sean</p> <ul> <li>We need to figure out when we trigger adding a new server in our autoscaling policy</li> <li>Lots of back and forth discussion</li> <li>Because of reflection bugs, demo server will be unresponsive once we hit a certain number of DBs created, even if there\u2019s only a single user using it.<ul> <li>It is unclear if we can use memory / CPU / number of processes as an indicator of this<ul> <li>Dom thinks we can\u2019t</li> <li>Unresponsiveness should be able to be correlated with something</li> </ul> </li> <li>We could add an endpoint that indicates if there are too many databases and use that as a healthcheck to trigger scaling up</li> <li>It would be best if we didn\u2019t need to add a new endpoint and we could use an existing indicator</li> </ul> </li> <li>Conclusion: Mukesh will load test as needed and identify the best metric<ul> <li>Dom pushed the latest tests to <code>mathesar-scripts</code> repo</li> </ul> </li> <li>Setting up infrastructure is the most important thing, we can change autoscaling policy anytime</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-23-launch-check-in/#schema-bug-debugging-session","title":"Schema bug - debugging session","text":"<p>Participants: Brent, Sean, Kriti, Mukesh</p> <ul> <li>Related to https://github.com/centerofci/mathesar/issues/2523</li> <li>Sean screenshared and showed bug happening locally<ul> <li>This is because demo mode is broken, https://github.com/centerofci/mathesar/issues/2559 created to track it</li> </ul> </li> <li>Brent identified issue happening for production, because of collectstatic</li> <li>Ideally, we should be building static files as part of the release, not during install process</li> <li>Brent will figure it out tomorrow, he has enough info</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-24-launch-update-email/","title":"2023-02-24 launch update email","text":"<p>We discussed launch in an internal email instead of having a meeting. Highlights:</p> <p>The only remaining launch blockers are: 1. Getting installation working smoothly. 2. Figuring out our release process and publishing our release. 3. Completing QA for users &amp; permissions + fixing any issues. 4. Completing QA for upgrades + fixing any issues. 5. Writing up our launch related posts.</p> <p>However, we\u2019re going to need an extra day or two to get the installation working smoothly before we cut the release. Installation isn\u2019t something we can quickly fix on-the-fly after we launch. So [Kriti is] going to move our target launch date to Wednesday or Thursday next week.</p> <p>Here is the plan for next week:</p> <ul> <li>Monday\u2019s launch check in cancelled because I don\u2019t think there\u2019s much for the entire team to discuss.</li> <li>Brent, Mukesh, and Kriti will work on installation and release. I don\u2019t think these tasks can be parallelized further.</li> <li>Dom will continue work on increasing live demo throughput and support testing upgrades.</li> <li>Pavish will continue work on testing upgrades and any users/permissions issues.</li> <li>Anish will complete users and permissions QA.</li> <li>Kriti will also work on writing up launch related posts.</li> </ul> <p>Team members who are free should work on (in priority order): 1. Supporting team members working on launch blockers, if requested 2. Any available tasks in Launch Nice to Haves: https://github.com/orgs/centerofci/archive/projects/1/views/45 3. Reviewing community PRs and generally engaging with the community. 4. Reviewing GSoC project ideas and making sure the implementation details look good 5. Reviewing our documentation and making improvements.     (i) some ideas here are moving documentation from various READMEs in the repo to docs.mathesar.org. We\u2019ve already done this with local setup documentation.     (ii) another idea is adding documentation about our codebase. This will be helpful for community contributors. 6. Creating well-specced out issues for community members to work on (or looking at older issues and speccing them out well enough). 7. Working on high-priority Backlog items.     (i) Pavish &amp; Ghislaine \u2013 you may want to work on a solution to this https://github.com/centerofci/mathesar/issues/2537 so we don\u2019t have to have a note in the docs about it.</p> <p>We also decided to have a <code>develop</code> branch as our default branch for merging PRs. <code>master</code> will be dedicated to release-blocking issues. This is a temporary workflow, we\u2019ll decide on a permanent Git workflow after launch.</p>"},{"location":"team/meeting-notes/2023/02/2023-02-27-deployment-check-in/","title":"2023-02-27 deployment check-in","text":"<p>Participants: Kriti, Mukesh, Brent</p>"},{"location":"team/meeting-notes/2023/02/2023-02-27-deployment-check-in/#plan-for-today","title":"Plan for today","text":"<p>We plan to get these done by Tuesday AM (US Easttern)</p> <p>Brent:</p> <ul> <li>https://github.com/centerofci/mathesar/issues/2576</li> <li>https://github.com/centerofci/mathesar/issues/2572</li> <li>https://github.com/centerofci/mathesar/issues/2582</li> <li>https://github.com/centerofci/mathesar/issues/2586</li> <li>Keep release process wiki updated<ul> <li>Have a target list of supported platforms</li> </ul> </li> </ul> <p>Mukesh:</p> <ul> <li>https://github.com/centerofci/mathesar/issues/2585</li> <li>https://github.com/centerofci/mathesar/issues/2570, after Kriti triages</li> </ul> <p>Kriti:</p> <ul> <li>Triage Wolfgang\u2019s feedback and add to https://github.com/centerofci/mathesar/issues/2570</li> <li>Release process</li> <li>Update docs</li> <li>Test deployment again if more PRs are merged and time permits</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-27-deployment-check-in/#tomorrow","title":"Tomorrow","text":"<ul> <li>Brent will ping Pavish to test on Apple Silicon</li> <li>Entire team should test installation</li> <li>If all goes well, we can release on Wednesday</li> </ul>"},{"location":"team/meeting-notes/2023/02/2023-02-27-deployment-check-in/#low-priority","title":"Low priority","text":"<p>We are not working on these yet, we\u2019ll discuss tomorrow.</p> <ul> <li>https://github.com/centerofci/mathesar/issues/2427</li> <li>https://github.com/centerofci/mathesar/issues/2571 <ul> <li>Solve using documentation (easy to do for Mac)</li> </ul> </li> </ul> <p>Kicked out of launch or closed:</p> <ul> <li>https://github.com/centerofci/mathesar/issues/2565</li> <li>https://github.com/centerofci/mathesar/issues/2511</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-02-launch-check-in/","title":"2023-03-02 launch check-in","text":""},{"location":"team/meeting-notes/2023/03/2023-03-02-launch-check-in/#publicity-plan","title":"Publicity Plan","text":"<ul> <li>Draft document (not publicly accessible)</li> <li>Decide what we\u2019re posting when.<ul> <li>HN &amp; CCI blog later</li> <li>Rest TBD</li> </ul> </li> <li>Decide how we\u2019re going to handle responding.<ul> <li>Coordinate on Matrix Marketing channel if we\u2019re responding</li> <li>Tag people if you don\u2019t know the answer</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-02-launch-check-in/#demo-server-plan","title":"Demo server plan","text":"<ul> <li>Load balancer not sorted out<ul> <li>Session stickiness doesn\u2019t work, user is switched to a new server when CPU limit is hit.</li> </ul> </li> <li>Upgrade Postgres on demo server and use session timeout<ul> <li>Postgres 14 needed</li> </ul> </li> <li>Brent will double check that demo server is in a good state now</li> <li>No more load testing on the demo server - treat as production now<ul> <li>Use mathesar.dev for testing if needed</li> </ul> </li> <li>Mukesh will coordinate meeting for next steps<ul> <li>Dom, Pavish, Mukesh, Brent (optional, interested)</li> <li>Discuss Postgres 14 / pgbouncer / vertical scaling of Postgres DB<ul> <li>OIDs may not work with pgbounder</li> </ul> </li> <li>Outcome: come up with a plan, present to Kriti for sign off</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-02-launch-check-in/#work-plan-process","title":"Work Plan &amp; Process","text":"<ul> <li>What should we be working on for the next few days?</li> <li>How will we track work and priorities in GitHub?</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-02-launch-check-in/#notes","title":"Notes","text":"<ul> <li>Demo mode improvements</li> <li>Community<ul> <li>Community PR review</li> <li>GSoC project idea review</li> </ul> </li> <li>Upgrades<ul> <li>Figuring out upgrading docker-compose.yml and .env files</li> <li>If auto-upgrade is not possible (for these two files), we should show that in the UI and ask user to manually upgrade</li> <li>Make upgrade work with new database types etc.</li> </ul> </li> <li>Documentation<ul> <li>Improve installation documentation</li> <li>Documentation for getting library data </li> <li>Get docs out of codebase and into MkDocs</li> <li>Demo mode documentation</li> <li>Frontend &amp; backend codebase structure</li> </ul> </li> <li>Installation<ul> <li>Make Mathesar work with localhost DBs<ul> <li>Document edge cases and names</li> </ul> </li> <li>Figure out installation without Docker</li> <li>Figure out some \u201cone click/command deployment\u201d</li> <li>Figuring out installing a specific version</li> </ul> </li> <li>Release process automation</li> <li>Users &amp; Permissions - make frontend / backend consistent</li> <li>GitHub process<ul> <li>Release based milestones</li> <li>0.1.1 milestone for now</li> <li>Use weekly iterations</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-02-launch-check-in/#further-planning","title":"Further planning","text":"<p>What do we need to figure out now that we\u2019ve launched? We won\u2019t talk about these now, but it would be good to get a list of things we need to talk about next week.</p> <ul> <li>Launch retrospective</li> <li>Permanent Git workflow</li> <li>Process for building new features</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-02-launch-check-in/#release-process-improvement-idea","title":"Release process improvement idea","text":"<ul> <li>Added by: Brent</li> <li>Summary: Given the current release debacle, I think we should have a testing of the release strategy.</li> <li>Expected time: 10-20 minutes</li> </ul> <p>This was deferred until later discussion. We\u2019ll discuss when we have a launch retrospective.</p>"},{"location":"team/meeting-notes/2023/03/2023-03-07-priorities-workflow-meeting/","title":"2023-03-07 priorities &amp; workflow meeting","text":""},{"location":"team/meeting-notes/2023/03/2023-03-07-priorities-workflow-meeting/#current-top-goal-user-growth","title":"Current top goal: user growth","text":"<p>Goal Get people using Mathesar!</p> <p>This will help with sustainability (funding &amp; future revenue).</p> <p>How we do this:</p> <ul> <li>Find a way to track user growth</li> <li>Spread the word about Mathesar</li> <li>Help people set up Mathesar if they ask</li> <li>Fix issues people report and make releases quickly</li> <li>Base our roadmap on feedback we receive</li> <li>Do usability testing with existing users, feed any improvements into our release cycle</li> <li>Improving our community</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-07-priorities-workflow-meeting/#questions-notes","title":"Questions &amp; notes","text":"<ul> <li>How do we know how many users we have?<ul> <li>We still need to figure out how to measure this.</li> <li>We have analytics for the website, but this doesn\u2019t tell us how many people are using Mathesar</li> <li>We are wary of putting any telemetry in the product itself</li> <li>If we allow installation and distribution through Linux package repositories, we\u2019d get some metrics on installation</li> <li>Could track unique cloners from GH for any install method that uses <code>git clone</code></li> </ul> </li> <li>We should prioritize supporting users who are encountering difficulties with installation and deployment. This will help adoption.</li> <li>We should prioritize issues that people report (e.g. bugs etc)</li> <li>How are we going to get feedback from non-users about features that are preventing them from adoping Mathesar?<ul> <li>We have a roadmap which links to GH discussion topics. People can upvote the topics. This process is modeled after https://js.wiki/feedback/</li> </ul> </li> <li> <p>Rajat</p> <ul> <li>\u201cDo usability testing with existing users, feed any improvements into our release cycle\u201d - I am curious how do we do this with a real user? Kriti: the way we\u2019ve done it in the past\u2026 incentivise users with a gift card or similar. Then invite them to join a scheduled discussion session. \u201cRocket Surgery Made Easy\u201d, a short, easy-to-read book has some good advise here.</li> </ul> </li> <li> <p>Mukesh     &gt; \u201cFix issues people report and make releases quickly\u201d</p> </li> <li>Prioritizing features to build         - We have features requests which would take us in a different direction, for example changing our current install script meant for easy one-click installation where users let us do the necessary steps needed to run mathesar to a detailed multi-step process where we inform the user what is being done. I don\u2019t want us to chase two rabbits at time. </li> <li>Brent<ul> <li>We need to cultivate our user feedback<ul> <li>Consider where and how we\u2019re trying to get feedback</li> <li>Try and present ourselves in a way to gather useful feedback</li> <li>Guide users into giving useful feedback (problems, not features) </li> </ul> </li> </ul> </li> <li>Pavish: SaaS userbase may not care about the same things as hosted version</li> <li>Anish<ul> <li>Will it help us to look at feedback from other mature alternatives like(Airtable, Baserow and so.) to prioritize what features we should implement? </li> <li>Maybe we can prioritise features that people have been asking for a long time but it hasn\u2019t yet been implemented.</li> <li>Right now we\u2019ll prioritize feedback from people actually using Mathesar. But later we\u2019ll try to branch out and get more feedback from other users too.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-07-priorities-workflow-meeting/#project-based-workflow","title":"Project-based workflow","text":"<p>This is a new proposed structure for all new work in Mathesar.</p> <p>Each new feature, or other initiative is a \u201cproject\u201d. Even funding can be a project!</p>"},{"location":"team/meeting-notes/2023/03/2023-03-07-priorities-workflow-meeting/#attributes","title":"Attributes","text":"<p>Projects have the following attributes:</p> <ul> <li>Responsibilities<ul> <li>Owner: Person that\u2019s directly responsible for the project.</li> <li>Approver(s): People responsible for approving the project.</li> <li>Contributor(s): People working on the project.</li> </ul> </li> <li>Problem: The problem solved by this project.</li> <li>Outcome: The expected outcome of this project.</li> <li>Solution: A spec or description of the solution.</li> <li>Timeline: Timeline for shipping this project.</li> <li>Risks: Any risks posed by the project, or the specific implementation.</li> <li>Issues: Associated GitHub issues</li> <li>Wiki pages: Associated wiki pages</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-07-priorities-workflow-meeting/#process","title":"Process","text":"<ul> <li>We set up a place on the wiki to document projects.</li> <li>We have regular meetings/emails to decide on what projects we\u2019re going to work on, and who will own them. </li> <li>The owner writes up a document following the project template. The detail in the document should match the timeline of the project<ul> <li>e.g. a 1 week project needs less detail; a 6 week project needs more</li> </ul> </li> <li>Contributors and approvers review &amp; approve the project.</li> <li>We work on the project, cutting scope as needed to ship it within the timeline.</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-07-priorities-workflow-meeting/#questions-notes_1","title":"Questions &amp; notes","text":"<ul> <li>Kriti wants to not be involved in everything. She can be involved in prioritization. Projects will be more autonomous.</li> <li>Pavish:<ul> <li>How do we decide on the timeline on writing up the document?<ul> <li>Based on the RFC I wrote for Users &amp; Permissions, this takes considerable time, since planning it out was the major part of the work.</li> </ul> </li> <li>Would the project detail cover implementation details?<ul> <li>What is the depth of information covered here?</li> </ul> </li> <li>What happens to the timeline calculation when we hit a roadblock during implementation?</li> <li>We might need someone to do manual QA on the projects, if applicable, and it\u2019s better if they\u2019re not the owner or the contributors.</li> </ul> </li> <li>Pavish concerned about the time it takes to write the specs<ul> <li>Writing the full technical spec is part of the project implementation</li> <li>Kriti: specs don\u2019t need to be too involved for smaller projects. Could be similar to what we write for a GSoC project idea</li> </ul> </li> <li>Mukesh<ul> <li>Can we add a pre-requisite attribute? This will give us an idea of the timeline. </li> <li>Sean: I think projects should be as self-contained as possible.</li> <li>Kriti: Sure \u2013 the project attributes listed above are only the \u201crequired\u201d attributes. We can add other attributes to specific projects as needed.</li> </ul> </li> <li>Projects can only have one owner</li> <li>Brent: What if we want to have ongoing projects without a clear end date?<ul> <li>e.g. \u201cImproving Mathesar\u2019s compatibility with pre-existing databases\u201d</li> <li>Kriti: All projects should have a specefic desired outcome</li> <li>Consider a \u201ctheme\u201d attribute to projects</li> <li>No ongoing project</li> </ul> </li> <li>Kriti: We should try to scope projects to take 3 - 4 weeks to complete</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-07-priorities-workflow-meeting/#release-strategy","title":"Release strategy","text":"<ul> <li>When should we do releases?</li> <li>Options:<ul> <li>Specific cadence</li> <li>When a project gets merged</li> <li>When an important bug fix gets merged</li> </ul> </li> <li>How do we decide when a bug fix is important enough to cut a release?</li> <li>Releases should have owners<ul> <li>Decide what goes into the release<ul> <li>What should be prioritized for the release</li> </ul> </li> <li>Coordinate with everyone involved</li> <li>Make the release</li> <li>Team agrees with each release having an owner</li> </ul> </li> <li>Should we have a regular schedule for releases?</li> <li>Sean: I think we should wait a bit before planning out how we do releases</li> <li>Mukesh: do we want to do \u201cThemed releases\u201d?</li> <li>Kriti will take responsibility for the next release. She will delegate heavily</li> <li>Pavish: minor versions would be better suited for a regular schedule. Major releases could be done without a regular schedule</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-07-priorities-workflow-meeting/#specific-project-ideas","title":"Specific project ideas","text":"<p>I\u2019m not suggesting we prioritize all of these right now. This is just to give an idea of what projects could be, and pick priorities from them. We could even add others.</p> <ul> <li>Funding - high priority</li> <li>Sponsorships</li> <li>Localization of UI - contractual obligation</li> <li>SaaS version of Mathesar</li> <li>Demo server improvements - low priority</li> <li>Removing SQLAlchemy</li> <li>Using Postgres users for users &amp; permissions</li> <li>User growth &amp; understanding user feedback<ul> <li>Decide on metrics for user growth<ul> <li>Should be driven by questions we have</li> </ul> </li> <li>We need to have a more specific project here (e.g. \u201cgrow Mathesar to X users\u201d)</li> </ul> </li> <li>Installation improvements<ul> <li>We need to have a more specific project outcome here</li> </ul> </li> <li>Community improvement projects<ul> <li>e.g. GSoC org admin</li> <li>e.g. go through old issues and update them to be relevant from contributors</li> <li>e.g. revamp community team with clear roles &amp; responsiblities for each type of community member</li> <li>e.g. document frontend &amp; backend codebase structure</li> <li>e.g. establish process for issue &amp; PR triage</li> </ul> </li> <li>Individual features on our roadmap</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-07-priorities-workflow-meeting/#questions-notes_2","title":"Questions &amp; notes","text":"<ul> <li>Kriti will start an email thread about project ideas to help us plan</li> <li>Pavish:<ul> <li>I think we should prioritize ironing out issues when connecting with existing DBs. Based on the comments, a number of users were primarily interested in using Mathesar for their existing DBs (we have to take into account that these users are primarily developers).<ul> <li>We currently do not support multi-column PKs.<ul> <li>I saw somewhere a contributor is attempting to fix an issue related to this, but that just disables editing tables which has multi-column PKs. This might be fine for a while.</li> </ul> </li> <li>We need to improve the reflection &amp; metadata mechanism, a button to manually reload may not be feasible for the first stable release.</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-07-priorities-workflow-meeting/#git-workflow","title":"Git workflow","text":"<p>We need to decide on our permanent Git workflow for releases.</p> <p>Options:</p> <ul> <li>git flow<ul> <li>This is our current workflow with our <code>develop</code> branch</li> </ul> </li> <li>GitLab release flow</li> </ul> <p>Not discussed at the meeting, will be discussed via email.</p>"},{"location":"team/meeting-notes/2023/03/2023-03-07-priorities-workflow-meeting/#release-testing-strategy","title":"Release testing strategy","text":"<ul> <li>Added by: Brent</li> <li>Summary: Given the current release debacle, I think we should have a testing of the release strategy.</li> <li>Expected time: 10-20 minutes</li> </ul> <p>Not discussed at the meeting, will be discussed via email.</p>"},{"location":"team/meeting-notes/2023/03/2023-03-08-removing-sqlachemy-meeting/","title":"Removing SQLAlchemy meeting 2023-03-08","text":"<p>Related to the \u201cRemoving SQLAlchemy\u201d project, I think it would be good to get the back end team together to look at the \u2018big picture\u2019 w.r.t. performance and cleanliness in the back end of Mathesar. </p>"},{"location":"team/meeting-notes/2023/03/2023-03-08-removing-sqlachemy-meeting/#get-buy-in-on-getting-rid-of-sqlalchemy","title":"Get buy-in on getting rid of SQLAlchemy","text":"<p>Proceeding with this project is going to be a huge pain. We should make sure we\u2019re all committed.</p> <ul> <li>SQLAlchemy enforces maintaining state in the Python layer</li> <li>We want to not maintain that state<ul> <li>No Table objects (for state)</li> <li>No Column objects (for state)</li> </ul> </li> <li>SQLAlchemy is \u2018fat\u2019, opaque, stateful and too magic (Dom)</li> <li>Removing SQLAlchemy and have less or no states are two different problem<ul> <li>SQLAlchemy is the reason for the massive performance problems we have</li> <li>Maintaining a state can also be done without SQLAlchemy and we might end up needing it based on our alogorithms and usecases(for exmaple, compiling a summary templates).</li> </ul> </li> <li>Maintaining a state has more impact on developer velocity than the performance.</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-08-removing-sqlachemy-meeting/#deal-with-concerns-about-removing-sqlalchemy","title":"Deal with concerns about removing SQLAlchemy","text":"<p>We need to brainstorm about what problems this will entail, and figure out how to deal with them.</p> <ul> <li>Much harder to support dbs beyond Postgres</li> <li>If we keep OIDs as DB-level IDs, <ul> <li>we will need to create some infrastructure on Postgres to translate between oids and names</li> </ul> </li> <li>We\u2019ll have to write a query builder (or choose a suitable one)</li> <li>Makes the project less approachable</li> <li>It\u2019s currently everywhere in the codebase (VERY large project)</li> <li>We need to replace every possible piece of SQLAlchemy that we use.</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-08-removing-sqlachemy-meeting/#can-we-split-the-remove-sqlalchemy-project","title":"Can we split the \u201cRemove SQLAlchemy\u201d project?","text":"<p>If we split it, each piece should be self-contained and valuable by itself.</p> <ul> <li> <p>Create SQLAlchemy-free translation between OIDs and Names</p> </li> <li> <p>From Dom\u2019s email:</p> <ul> <li>Reduce our Django code; use database identifiers on the frontend</li> <li>Use only Postgres permissions for permissions</li> <li>Replace SQLAlchemy with Psycopg3</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-08-removing-sqlachemy-meeting/#dependencies-discussion","title":"Dependencies discussion","text":"<p>What dependencies are there between the removal of SQLALchemy and other back end work?</p>"},{"location":"team/meeting-notes/2023/03/2023-03-08-removing-sqlachemy-meeting/#brainstorm-other-possible-performance-improvements","title":"Brainstorm other possible performance improvements","text":"<p>(only if time)</p> <p>We should keep these improvements focused on the back end, and take as an assumption that we\u2019re removing SQLAlchemy.</p> <ul> <li>Don\u2019t use OIDs in the code base<ul> <li>avoids a reflection round trip the easy way</li> <li>Makes it impossible to have the front end update a renamed table with a new name (or does it?)</li> </ul> </li> <li>Don\u2019t use Django IDs (for identifying database objects)</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-08-removing-sqlachemy-meeting/#notes","title":"Notes","text":"<ul> <li>Removing SQLAlchemy and having less/no state are two different problem<ul> <li>SQLAlchemy is the reason for the massive performance problems we have</li> <li>Maintaining a state can also be done without SQLAlchemy and we might end up needing it based on our alogorithms and usecases(for exmaple, compiling a summary templates). </li> </ul> </li> <li>Maintaining a state has more impact on developer velocity than the performance and Trying to fix both the problems will be a big undertaking and might take a long time.</li> <li>Suggestion (Mukesh): We can have a simple datastructure which would hold only the properties of database object and will contain functions that can abstract away the oid &lt;-&gt; name conversion logic as a replacement.</li> <li>We need to come up with a alternate for the replacing SQLAlchemy. None of the querybuilders fit with our requirement based on Brent\u2019s research and Mukesh agreed with it.</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-13-backend-meeting/","title":"2023-03-13 backend meeting","text":"<p>Attendees: Anish, Brent, Dominkyas, Mukesh, Sean</p> <ul> <li>Brent - Having gone back and forth between oids and names, it looks like solving this issue or figuring our the solution won\u2019t be a easy and quick task. So we should be okay with having a data structure as mentioned by Dom in his email</li> <li>Dom - When will the tuple be converted.</li> <li>Brent - Have converter function that converts oid/names -&gt; data structure. Will be useful in case we want to </li> <li>Sean - Moving to names will be heavier lift.</li> <li>From product perspective, we should be open for concurrent operations(realtime collaboration) . So we can\u2019t use names</li> <li>It would be better if we can have one datastructure throughout the frontend till the database functions. But having the conversion on the database might be a pain.</li> <li>Having a datastructure doesn\u2019t seem to give a proper value add</li> <li>It also needs a conversion on the database, similar to using <code>oid</code> and have postgres functions convert it but more painful as it needs a frontend changes too.</li> <li>Move possible python functions to Postgres functions</li> <li>We are learning the features to implement based user feedback. So the solution should be flexible. </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-13-backend-meeting/#action-items","title":"Action Items","text":"<ul> <li>Figure out the functions that can be moved to postgres and write issues - Anish &amp; Brent</li> <li>Figure out how we want to write SQL in python - Mukesh</li> <li>Figure out how to introduce <code>oid, names, attnum</code> data structure - Brent</li> <li>Kicking holes in issues and ideas: Figuring out the pros/cons of these things. - Dom </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-15-core-team-meeting/","title":"2023-03-15 core team meeting","text":"<p>Attendees: All core team members + Anish</p>"},{"location":"team/meeting-notes/2023/03/2023-03-15-core-team-meeting/#bigger-picture-plan-for-mathesar","title":"Bigger-picture plan for Mathesar","text":"<p>General plan: </p> <ul> <li>Things are still in flux</li> <li>Figuring out how to grow the project</li> <li>Figuring out what our structure should be</li> <li>Trying to get to a small core of users that really like us over competition</li> <li>Brent:<ul> <li>What\u2019s the nature of intended (hopeful) user base?<ul> <li>Big institutions e.g. Smithsonian?</li> <li>Bunches of home users</li> <li>SaaS</li> </ul> </li> </ul> </li> <li>Kriti:<ul> <li>For initial phase, targeting home users</li> <li>Main aim is to have self-hosted version; SaaS is just to support self-hosted</li> </ul> </li> <li>Pavish:<ul> <li>For v1 are we going to focus on stabilizing current feature set?</li> <li>For v1 are we going to be developing new features?</li> </ul> </li> <li>Kriti:<ul> <li>Didn\u2019t mean to imply no new features</li> <li>New features should be rooted in user feedback</li> <li>Whose problems are being solved best by us currently, and how can we enhance that / support those users better.</li> </ul> </li> <li>Pavish:<ul> <li>With home users, it\u2019s going to be hard to understand them (compared to SaaS)</li> </ul> </li> <li>Kriti:<ul> <li>We don\u2019t need to grow right now</li> <li>We need a small committed core of users</li> <li>We have a mailing list we haven\u2019t tapped</li> <li>We could survey them</li> <li>Someone on Reddit:<ul> <li>Want to build a small DB-backed app for a radio station</li> <li>One requirement: uploading files</li> </ul> </li> <li>Joi:<ul> <li>Wants to have a file storage type (image-specific in his case)</li> </ul> </li> </ul> </li> <li>Sean:<ul> <li>tension between two quite different use-cases for Mathesar<ul> <li>standalone: Mathesar is the reason there\u2019s a postgres DB</li> <li>admin: Postgres already exists, and Mathesar is included on top</li> </ul> </li> <li>Picking a use-case, putting all effort into one bucket<ul> <li>Better for that use case</li> <li>More useful for some users, but cuts others out</li> </ul> </li> </ul> </li> <li>Kriti:<ul> <li>We want to make mathesar work for all those use cases (in the end)</li> <li>We should use one use-case to focus on once we know which is best</li> <li>At the moment, we don\u2019t have enough info to decide.</li> <li>We\u2019ve seen examples of both</li> <li>Slight inkling is to focus on connecting DBs.</li> </ul> </li> <li>Mukesh:<ul> <li>Still figuring out our niche</li> <li>How much data do we need to figure it out?</li> </ul> </li> <li>Kriti:<ul> <li>Tracking feedback and understanding users should be a top priority</li> <li>We don\u2019t have to stop feature development</li> <li>Should focus on features useful for multiple cases</li> <li>These use cases converge down the road: mathesar-only users at the beginning might want to integrate with other tools</li> </ul> </li> <li>Mukesh:<ul> <li>spreading thin slows down trajectory</li> </ul> </li> <li>Brent:<ul> <li>Want to continue async</li> </ul> </li> <li>Rajat:<ul> <li>We need to record user info/attributes:<ul> <li>titles,</li> <li>companies,</li> <li>etc.</li> </ul> </li> </ul> </li> <li>Kriti:<ul> <li>Not recording that yet.</li> </ul> </li> <li>Brent volunteers to maintain ongoing HackMD moving forward. Will start an email thread, too.</li> <li>Ghislaine:<ul> <li>Wants to make sure we\u2019re still innovating; need to leave space for our own imagination, not always chasing user feedback.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-15-core-team-meeting/#selecting-projects","title":"Selecting projects","text":"<ul> <li>Sean wants to get rid of some rows in projects table<ul> <li>Releases</li> <li>Understand Mathesar Users    </li> </ul> </li> <li>After we decide who owns various ongoing things, we\u2019ll figure out tracking</li> <li>Selected projects<ul> <li>Funding</li> <li>Removing SQLAlchemy</li> <li>Localization</li> <li>Installation improvements</li> <li>GSoC</li> <li>User feedback process</li> <li>Frontend performance (Tables)</li> <li>File &amp; image types</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-15-core-team-meeting/#assigning-responsibilities","title":"Assigning responsibilities","text":""},{"location":"team/meeting-notes/2023/03/2023-03-15-core-team-meeting/#notes","title":"Notes","text":"<ul> <li>We assigned one owner to each responsibility.</li> <li>We started assigning helpers to responsibilities too, but we didn\u2019t have enough time to finish. We\u2019ll continue this process async.</li> <li>Next steps: Sean will add some content to the wiki, documenting all this and providing a starting point for project-specific information to grow.</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-15-core-team-meeting/#interests-and-assignments","title":"Interests and assignments","text":"Responsibility Anish Brent Dom Ghislaine Mukesh Pavish Rajat Sean Kriti \u267b\ufe0f User feedback \u2755 \u265f\ufe0f \u2755 \u2705 \u2b50 \u2b50 \u2b50 \u2755 \u2755 \u267b\ufe0f Team management \u2755 \u2755 \u2764\ufe0f \u2755 \u2755 \u2755 \u2755 \u2705 \u2755 \u267b\ufe0f Marketing \u2b50 \u2755 \u2764\ufe0f \u2b50 \u2755 \u2b50 \u2705 \u2764\ufe0f \u2755 \u267b\ufe0f Repo admin \u2755 \u2755 \u2764\ufe0f \u2755 \u2755 \u2705 \u2764\ufe0f \u2764\ufe0f \u2755 \u267b\ufe0f Release management \u2755 \u2764\ufe0f \u2764\ufe0f \u2755 \u2b50 \u2705 \u2764\ufe0f \u2755 \u2755 \u267b\ufe0f Assisting installs \u2755 \u265f\ufe0f \u2764\ufe0f \u2755 \u2705 \u2764\ufe0f \u2764\ufe0f \u2764\ufe0f \u2755 \ud83c\udfc6 GSoC admin \u2b50 \u2b50 \u2705 \u2755 \u2b50 \u2755 \u2b50 \u2755 \u2755 \ud83c\udfc6 Improve install \u2b50 \u2b50 \u2755 \u2755 \u2705 \u265f\ufe0f \u2b50 \u2755 \u2755 \ud83c\udfc6 Funding \u2b50 \u2755 \u2755 \u2b50 \u2b50 \u2b50 \u2755 \u2b50 \u2705 \ud83c\udfc6 Removing SQLAlchemy \u2755 \u2705 \u2755 \u2755 \u2755 \u2755 \u2755 \u2755 \u2755 \ud83c\udfc6 Localization \u2755 \u2755 \u2755 \u2755 \u2755 \u2755 \u2705 \u2755 \u2755 \ud83c\udfc6 User feedback process \u2755 \u2755 \u2755 \u2705 \u2755 \u2755 \u2755 \u2755 \u2755 \ud83c\udfc6 FE performance \u2755 \u2755 \u2755 \u2755 \u2755 \u2705 \u2755 \u2755 \u2755 \ud83c\udfc6 File &amp; image types \u2755 \u2755 \u2755 \u2755 \u2755 \u2755 \u2755 \u2705 \u2755 <p>Key:</p> <ul> <li>Types<ul> <li>\u267b\ufe0f Ongoing responsibility</li> <li>\ud83c\udfc6 Project responsibility</li> </ul> </li> <li>Decisions<ul> <li>\u2705 = Owner</li> <li>\u265f\ufe0f = Helper</li> </ul> </li> <li>Preferences<ul> <li>\u2764\ufe0f = Want to own or help</li> <li>\u2b50 = Want to help</li> <li>\u2755 = Not interested</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-15-core-team-meeting/#definitions","title":"Definitions","text":"<p>Ongoing responsibilities are defined as:</p> <ul> <li> <p>Marketing</p> <ul> <li>Receive the firehose of Syften notifications</li> <li>Eagerly reply to to threads as needed, seeking to ameliorate people\u2019s concerns and amplify people\u2019s excitement.</li> <li>Generate new posts periodically (once our installation process is improved)</li> <li>Make improvements to Mathesar.org as needed (running all changes by Kriti first)</li> <li>Monitor \u201chello@mathesar.org\u201d and \u201cRequest a free install\u201d form and follow up with people as needed.</li> <li>Track publicity for archival purposes</li> <li>Forward noteworthy publicity to the rest of the team as needed</li> </ul> </li> <li> <p>Repo admin</p> <ul> <li>Receive the firehose of GitHub notifications and take action on items as necessary.</li> <li>Triage new issues and PRs</li> <li>Actively shepherd PRs towards closing to help prevent them from going stale</li> <li>Troubleshoot GitHub actions and make improvements where necessary</li> </ul> </li> <li> <p>Release management </p> <ul> <li>Decide what goes in each release</li> <li>Decide when to release</li> <li>Publish each release, delegating tasks as needed</li> <li>Keep the team informed so that everyone knows the correct release to target with new tickets and new PRs</li> <li>Document our release process and support the team with questions about it</li> <li>Document our git branch strategy and support the team with questions about it</li> <li>Keep our broader goals and strategies in-mind, potentially planning multiple major/minor/point releases ahead.</li> <li>Decide when to update the staging and demo servers and delegate that work as needed</li> </ul> </li> <li> <p>Team management</p> <ul> <li>Schedule and facilitate team meetings</li> <li>Monitor people\u2019s standups and hold regular 1/1 meetings with all team members ensuring everyone is productive, happy, and accountable</li> <li>Schedule team/community events and make sure they have facilitators</li> </ul> </li> <li> <p>Assisting installs</p> <ul> <li>Help find notable use cases for Mathesar, and drive whatever needs to be built to make those use cases work.     e.g. we talked about using Mathesar in the Chelsea Project to share wastewater data. someone needs to look at the data, get it into Mathesar, talk to Sam to get her requirements for what she wants sharing to look like, break it down into features for Mathesar, etc.</li> <li>there\u2019s other use cases too that Kriti doesn\u2019t have the bandwidth to follow up on</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-15-responsibilities-projects-meeting/","title":"Core team meeting 2023-03-17","text":"<p>Attendees:  Brent, Dom, Ghislaine, Kriti, Mukesh, Pavish, Rajat, Sean</p>"},{"location":"team/meeting-notes/2023/03/2023-03-15-responsibilities-projects-meeting/#responsibilities-redistribution-follow-up","title":"Responsibilities redistribution follow-up","text":""},{"location":"team/meeting-notes/2023/03/2023-03-15-responsibilities-projects-meeting/#questions-clarifications-decisions","title":"Questions, clarifications, decisions","text":"<ul> <li>Sean: For projects, where should the source of truth be for assignments? In a central table? Or in each project\u2019s page?<ul> <li>Decision: We\u2019ll get rid of the grid, putting all project responsibilities in their respective pages</li> </ul> </li> <li>Sean: Can we use the word \u201cleader\u201d instead of \u201cowner\u201d? It seems more natural when referring to a specific role e.g. \u201cMarketing team leader\u201d instead of \u201cMarketing team owner\u201d<ul> <li>Decision: We\u2019ll continue using the word \u201cOwner\u201d</li> </ul> </li> <li>Sean: Can we merge \u201cApprover\u201d and \u201ccontributor\u201d into \u201chelper\u201d? Projects can be more specific if needed, but having only \u201chelper\u201d seems simpler as we\u2019re looking at many projects at a high level<ul> <li>Decision: For ongoing responsibilities, we\u2019ll use \u201chelper\u201d. For projects, we\u2019ll have more specific roles, per project</li> </ul> </li> <li>Sean: We have \u201cUser Feedback\u201d responsibility and \u201cFeedback kickoff\u201d project. Do we need to be tracking both right now? Should we at least ensure the same people are assigned to both?<ul> <li>Decision: Yes, we\u2019ll continue to track the separately, we\u2019ll have the same people assigned to both</li> </ul> </li> <li>Sean: What is the boundary between \u201cUser Feedback\u201d and \u201cInstallation Help\u201d?<ul> <li>Decision: some users might fall into both categories, in which case they\u2019ll participate in both processes separately</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-15-responsibilities-projects-meeting/#assign-helpers","title":"Assign helpers","text":"<ul> <li>We took some time to adjust the people assigned to owning and helping with various roles, making lots of small decisions as we went</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-15-responsibilities-projects-meeting/#file-data-types-vs-frontend-usability-improvements","title":"\u201cFile data types\u201d vs \u201cFrontend Usability Improvements\u201d","text":"<ul> <li> <p>Sean: email with concerns about File data types project</p> </li> <li> <p>Frontend Usability Improvements would be:</p> <ul> <li>Design UX for clipboard interactions. In particular, this issue has a comment from one of our sponsors saying, \u201cThis is for me a killer feature\u201d.</li> <li>Allow content in selected cells to be copied and pasted elsewhere</li> <li>Allow dragging to select cells from active cell</li> <li>Cell selection is stuck in drag mode after closing the record selector</li> <li>Allow users to add/remove filter conditions via the column header menu</li> <li>Persist column widths via API</li> <li>Make all sidebar panes resizable</li> <li>Persist sidebar widths in localStorage</li> </ul> </li> <li> <p>Decision: We\u2019ll do \u201cFrontend Usability Improvements\u201d</p> </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-15-responsibilities-projects-meeting/#funding-thoughts-and-update","title":"Funding thoughts and update","text":"<p>Kriti gave an update about some of her plans and thinking for the upcoming funding project</p>"},{"location":"team/meeting-notes/2023/03/2023-03-17-installation-improvements-meeting/","title":"Installation Improvements Meeting","text":""},{"location":"team/meeting-notes/2023/03/2023-03-17-installation-improvements-meeting/#meeting-information","title":"Meeting Information","text":"<p>Meeting Purpose: Brainstorm Installation Improvements</p> <p>Attendees: Brent, Kriti, Mukesh, Pavish</p>"},{"location":"team/meeting-notes/2023/03/2023-03-17-installation-improvements-meeting/#projects","title":"Projects","text":"<p>We need to split \u201cinstallation improvements\u201d into smaller projects:</p>"},{"location":"team/meeting-notes/2023/03/2023-03-17-installation-improvements-meeting/#ideas","title":"Ideas","text":"<ul> <li>Simplify Docker images - ideally one Docker image<ul> <li>Seems very important, will simplify all the other setups</li> <li>Cannot do Watchtower</li> <li>Can do DB + service</li> <li>Ideally:<ul> <li>Single Docker image</li> <li>Will come with DB for Django</li> <li>User can create DB or </li> </ul> </li> </ul> </li> <li>Provide a single Docker Compose file <ul> <li>Ensure comments</li> </ul> </li> <li>Set up configuration file for Mathesar installation<ul> <li>e.g. mathesar.conf (e.g. yaml file)</li> <li>We could turn this into .env</li> <li>Simplify how we configure environment variables (database URLs)</li> </ul> </li> <li>Consider setting up a UI</li> <li>Consider removing interactive installer<ul> <li>Hard to maintain</li> <li>Developers are used to config files</li> </ul> </li> <li>Consider removing Caddy<ul> <li>Not useful for local infrastructure</li> <li>Not useful for cloud providers</li> <li>Should be add on, not the default</li> </ul> </li> <li>Install Mathesar using Helm chart<ul> <li>depends on the single Docker image</li> </ul> </li> <li>Use podman for Mathesar<ul> <li>Will \u201cjust work\u201d if we have a Docker image</li> <li>May not be necessary if we remove interactive installer</li> </ul> </li> <li>Install Mathesar without Docker</li> <li>Provide minimal Docker setup without optional services like Caddy</li> <li>Figure out general upgrade infrastructure<ul> <li>Installation flexibility means less upgrade help</li> <li>Remove Watchtower</li> </ul> </li> <li>Create packages / add to repos<ul> <li>Arch User Repository</li> <li>Set up .deb files</li> <li>Set up Flatpak</li> <li>Need automation for all this</li> <li>yum (redhat/fedora)</li> <li>homebrew?</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-17-installation-improvements-meeting/#discussion","title":"Discussion","text":"<ul> <li>Why use Caddy?<ul> <li>Load balancing</li> <li>DDoS attacks</li> <li>Static files</li> <li>SSL certificate</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-17-installation-improvements-meeting/#selected-ideas-and-prioritization","title":"Selected ideas and prioritization","text":"<p>We ran out of time. Mukesh will follow up on using the new projects framework to create and prioritize installation related projects. Once he\u2019s done with the write up, we will review.</p> <ol> <li>Document how to run current docker image without docker compose     a. Document configuration of this setup</li> </ol>"},{"location":"team/meeting-notes/2023/03/2023-03-17-installation-improvements-meeting/#assisting-installs","title":"Assisting installs","text":"<ul> <li>Brent will be taking the lead for now and keeping Mukesh informed.</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-17-installation-improvements-meeting/#inspiration","title":"Inspiration","text":"<ul> <li>https://docs.nocodb.com/getting-started/installation/</li> <li>https://baserow.io/docs/installation%2Finstall-with-docker-compose</li> <li>https://matrix-org.github.io/synapse/latest/setup/installation.html</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-17-installation-improvements-meeting/#mukeshs-email","title":"Mukesh\u2019s email","text":"<p>Sent to the core team list prior to the meeting.</p> <p>During our Alpha release, we managed to release a one-line bash command for setting up Mathesar. But the installation process is opinionated and cannot be easily configured which is what the users expect based on the feedback we received from various sources.</p> <p>Our Users want to:</p> <ul> <li>Install Mathesar on a Kubernetes or similar infrastructure</li> <li>Run Mathesar without administrative access which is required by our installation script.</li> <li>Install only the Mathesar web server without any additional services like Caddy, and Watchtower which are currently installed alongside the Mathesar webserver by our installation script.</li> <li>Run Mathesar without using Docker</li> <li>Directly modify the configuration variables/files instead of having to use the installation script.</li> </ul> <p>Problems that are stopping the user from their goals:</p> <ul> <li>Our installation Documentation is incomplete</li> <li>Only Docker-based installation is listed in our docs</li> <li>There isn\u2019t much information about Mathesar services or about the configuration files</li> <li>There isn\u2019t much information on what the installation script does which makes it hard for users to trust</li> <li>Configuration files don\u2019t have enough comments, preventing users from tinkering.</li> <li>The installation script is tightly coupled, preventing them from using it with their own setup. It sets up the configuration file, downloads the docker-compose file, sets up the Mathesar database, and so on. The user cannot use the script to do only certain tasks, for example, they cannot use the script to only create a configuration file and skip other steps.</li> </ul> <p>Other problems:</p> <ul> <li>Our installation script does not allow for edits. Making the user start fresh if they made a mistake.</li> <li>Our upgrades are tightly coupled with the Watchtower upgrade service(?), so Mathesar might not work(?) if they install only certain services.</li> </ul> <p>Based on the above feedback, we can understand that</p> <ul> <li>The users are technical enough and would like to tinker with the configuration</li> <li>They want to use Mathesar with their own setup</li> <li>Security conscious</li> </ul> <p>Here is what is done to fix the above problems</p> <ul> <li>Kriti mentioned that she has a lot of thoughts on improving our installation process, so Brent, Kriti, Mukesh, and Pavish will be having a meeting today to get a brain dump from Kriti.</li> <li>I will be creating a list of issues based on the discussion from the meeting and update this email thread with the next set of actions items after the meeting</li> <li>I will be coordinating with Marius de Beer who is currently writing documentation for \u201cInstalling Mathesar on various Linux Distro with/without Docker\u201d to make sure the documentation and improvements to the installation process are in sync. </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-20-handling-regressions/","title":"Handling regressions in 0.1.1","text":""},{"location":"team/meeting-notes/2023/03/2023-03-20-handling-regressions/#2023-03-20-handling-regressions-in-011","title":"2023-03-20 Handling regressions in 0.1.1","text":"<p>Meeting attendees: Pavish, Sean, Rajat</p>"},{"location":"team/meeting-notes/2023/03/2023-03-20-handling-regressions/#brainstorm-best-strategy-to-revert-the-column_reorder-changes","title":"Brainstorm: Best strategy to revert the column_reorder changes","text":"<ul> <li>If there aren\u2019t merge conflicts, we\u2019ll try to revert entirely</li> <li>If there are, we can comment it out</li> <li>When picking the feature, we\u2019ll open a new PR</li> <li>Sean will be commenting on the contributor\u2019s PR mentioning why we had to revert. We\u2019ll also ask them if they\u2019re interested in continuing it.</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-20-handling-regressions/#brainstorm-best-strategy-to-review-full-changesets-for-releases","title":"Brainstorm: Best strategy to review full changesets for releases","text":"<ul> <li>All of us will look at the full changeset (PR) and comment if we notice any red flags or have questions</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-20-handling-regressions/#brainstorm-frontend-testing-strategy-e2e-tests","title":"Brainstorm: Frontend testing strategy - E2E tests","text":"<ul> <li>We\u2019re scratching everything clean and starting from point zero</li> <li>We\u2019ll rethink the entire testing strategy from the beginning<ul> <li>Do we need E2E test or do we come up with integ tests?</li> <li>Do we rely on the backend or mock the APIs?</li> <li>Since our routing and common data logic is shared between python and JS, what\u2019s the best way to run frontend tests?</li> <li>If we do decided on E2E, do we go with playwright and have manual tests or use a tool like Cypress to make things easier for us?</li> </ul> </li> <li>We\u2019ll think on this individually and have another call before <code>0.1.2</code><ul> <li>It won\u2019t be possible to introduce a new testing strategy by then, but we can still decide on what it needs to be</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-20-handling-regressions/#brainstorm-release-process-updates-to-prevent-issues-like-these","title":"Brainstorm: Release process updates to prevent issues like these","text":"<ul> <li>Staging should on develop (check if it is)</li> <li>A buffer period makes sense, but only if we\u2019re dog-fooding Mathesar more<ul> <li>The core team should be using Mathesar for something (the <code>develop</code> branch)</li> </ul> </li> <li>Smoke tests should be improved. We\u2019ll think of testing User flows instead of the \u2018do-whatever-and-try-to-break\u2019 strategy. Eg., We can test with the user flow that we used for the demo video.</li> <li>Each PR should include information on the features it touches. This will help reviwers and during releases, when we do manual smoke tests.</li> <li>We\u2019ll continue to think on this and coming up with ideas</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-21-release-plan-0_1_2/","title":"2023-03-21 Plan for 0.1.2","text":"<p>Attendees: Pavish, Kriti</p> <p>Main focus of the release is to improve Installation and fix any critical user-reported bugs.</p> <p>Performance issues should be moved to 0.1.3. Non-installation projects should also be targeted for 0.1.3.</p>"},{"location":"team/meeting-notes/2023/03/2023-03-21-release-plan-0_1_2/#issues-yet-to-be-createdplaced-in-milestone","title":"Issues yet to be created/placed in milestone:","text":"<ul> <li>Check-in with Mukesh to create issues for items discussed during installation call</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-21-release-plan-0_1_2/#must-have-subject-to-discussion-with-mukesh","title":"Must have (subject to discussion with Mukesh):","text":"<ul> <li>Being able to run docker image directly</li> <li>Other deployment types already planned out</li> <li>UI to simplify installation &amp; connection to DB</li> <li>Switch between multiple databases</li> <li>Documentation related to installation</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-21-release-plan-0_1_2/#must-have-or-atleast-do-analysis","title":"Must have or atleast do analysis:","text":"<ul> <li>People asking for Kubernetes installation options<ul> <li>Check if this is feasible for 0.1.2</li> <li>Kubernetes manifests and helm charts</li> </ul> </li> <li>A fat docker image with Postgres?<ul> <li>Seemingly lower priority (based on the installation call) but needs more thought</li> </ul> </li> <li>All new user reported issues which are less work and high impact<ul> <li>We\u2019ll add them to the milestone as users raise issues</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-21-release-plan-0_1_2/#nice-to-have-yet-to-create-issues","title":"Nice to have (yet to create issues):","text":"<ul> <li>Modify upgrade UI to only show it in environments where one-click-upgrade is possible<ul> <li>Show instructions for other environments</li> </ul> </li> <li>Upgrades without docker?<ul> <li>We need to start thinking on how this would work</li> <li>Even if we don\u2019t have a solution in 0.1.2, we need to start thinking about this</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-21-release-plan-0_1_2/#to-remove","title":"To remove:","text":"<ul> <li>Remove the frontend performance issue out of 0.1.2<ul> <li>This will take time and we already have considerable frontend work planned for 0.1.2 for the installation UI.</li> <li>We\u2019ll plan to take this up for 0.1.3</li> </ul> </li> </ul> <p>Also discussed,</p>"},{"location":"team/meeting-notes/2023/03/2023-03-21-release-plan-0_1_2/#011","title":"0.1.1","text":"<ul> <li>ETA Thursday</li> <li>Release notes will be reviewed today</li> <li>Perhaps enabling reordering columns can be part of Sean\u2019s usability improvements project?<ul> <li>Pavish will talk to Sean about it.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-27-installation-improvements-in-0-1-2/","title":"Installation improvements planned for 0.1.2","text":"<p>Date: 2023-03-27 Attendees: Mukesh, Pavish</p>"},{"location":"team/meeting-notes/2023/03/2023-03-27-installation-improvements-in-0-1-2/#priority","title":"Priority","text":"<ul> <li>Documentation for setting up Mathesar using a Mathesar Service Docker Image</li> <li>Documentation for setting up Mathesar without using the install.sh script for docker-compose</li> <li>Documentation for setting up Mathesar without Docker</li> <li>UI for setting up/connection to user DB<ul> <li>Show in the UI for using the same django DB server to create new db if user wants to</li> <li>Show an option to connect to different server </li> </ul> </li> <li>Mention in UI that we add custom types (optional) and casting functions (mandatory) in the user DB</li> <li>Update upgrade UI to mention instructions on how to perform an update in non-docker (docker-compose) environments</li> <li>Make our config file easier to for users to understand<ul> <li>This should no longer be a concern once we have the UI for installation</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-27-installation-improvements-in-0-1-2/#requires-discussion","title":"Requires discussion","text":"<ul> <li>Discuss storing connection string<ol> <li>Stored encrypted and decrypted while making connection, or</li> <li>Connection through encrypted channel?<ul> <li>Setup is complicated</li> <li>Requires changes to user db</li> </ul> </li> </ol> </li> <li>Create desktop packages / add to repos<ul> <li>Requires a lot of work and attention</li> <li>Should we prioritize this anytime soon?</li> <li>For 0.1.2, it\u2019s not possible</li> </ul> </li> <li>Do we need an image for DB + webserver?</li> <li>Consider removing the interactive installer<ul> <li>Removing this would not a priority once documentation is updated for all setup options</li> </ul> </li> <li>Use podman for Mathesar<ul> <li>Having a single Docker image should solve this. We can add documentation saying users can use either Docker or Podman</li> </ul> </li> <li>Helm chart, Kubernetes manifest<ul> <li>Not possible for 0.1.2</li> <li>Maybe as a community specified installation option</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-27-installation-improvements-in-0-1-2/#notes","title":"Notes","text":"<ul> <li>Marius Documentation https://github.com/mariusdebeer/mathesar/blob/master/docs/docs/installation/ubuntu-manual.md</li> <li>Add agenda to Wednesday meeting</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-29-team-meeting/","title":"2023-03-29 Team meeting","text":""},{"location":"team/meeting-notes/2023/03/2023-03-29-team-meeting/#projects-responsibilities-check-in","title":"Projects &amp; responsibilities check-in","text":"<ul> <li>Summary: I\u2019d like to check in with everyone on the status of planned projects and ongoing responsibilities</li> <li>Participants: everyone</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-29-team-meeting/#ghislaine","title":"Ghislaine","text":"<ul> <li>Ghislaine: for user feedback, I was planning to check in every couple weeks to see what action items we have. Wondering how to turn user feedback into action items.<ul> <li>Kriti: Makes sense to do it ad-hoc for now but gradually move towards more of a process.</li> <li>Ghislaine: It\u2019s more interesting once we can see patterns, so we\u2019ll keep collecting user feedback for now and look for action items once we can see patterns.</li> <li>Kriti: It would be good to document your processes on the wiki page. Ghislaine.</li> </ul> </li> <li>Ongoing responsiblitity and project pages are both very close to being completed and approved. Project page has some feedback to address. Will work on that today.</li> <li>Project is for establishing the \u201cprocess\u201d. Ongoing responsibility is for doing the process. Project should be done pretty soon.</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-29-team-meeting/#kriti","title":"Kriti","text":"<ul> <li>I have marketing. Wrote up notes on process. Didn\u2019t get any feedback, so assuming it\u2019s approved. Ties into user feeback.<ul> <li>Sean: I looked over it. Looked good.</li> </ul> </li> <li>Funding: still working to document the funding project. Hoping to have that completed this week.</li> <li>Approved some projects and responsibilities. Waiting to hear back from other people.</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-29-team-meeting/#dom","title":"Dom","text":"<ul> <li>GSoC is now an ongoing responsibility. This is taking up a lot of time/energy</li> <li>I have some items in backlog that are delayed due to GSoC. Ping me with questions/concerns</li> <li>GSoC ongoing responsibility documentation is done. More updates will be made as-needed</li> <li>Backup and restore project documentation has not begun yet. This is taking a back seat to GSoC at the moment.</li> <li>Kriti: if GSoc is still taking up lots ot time, check in with us later.</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-29-team-meeting/#pavish","title":"Pavish","text":"<ul> <li>Most of my time has been reviewing PRs</li> <li>release management<ul> <li>Scope of release management seems larger that what I expected</li> <li>\u201cChoosing the issues for the release\u201d is still a \u201cfuzzy\u201d responsibility that I\u2019m trying to figure out.</li> <li>Would like to choose a theme for each release and build the tickets around that theme.</li> <li>Still working to figure out the process</li> <li>Once the process is more figured out, then I\u2019ll document it. Going to be a while before I\u2019m fully set up with the process.</li> </ul> </li> <li>Installation improvements:<ul> <li>More work on this will come after \u201cRelease Management\u201d settles down</li> </ul> </li> <li>Front end performance<ul> <li>This is on hold at the moment due to other things</li> </ul> </li> <li>Comments<ul> <li>Kriti: might make sense to document what you already have while it\u2019s fresh in your mind. Fine to document what you already have.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-29-team-meeting/#rajat","title":"Rajat","text":"<ul> <li>Repo admin<ul> <li>PR is open for responsibilities documentation. This is reviewed. Need to merge.</li> <li>Work is going okay so far.</li> <li>Sometimes contributors have specific questions and I\u2019m not sure who to direct those questions to<ul> <li>Kriti: you can ask me if you need.</li> </ul> </li> </ul> </li> <li>Localization<ul> <li>started working on documentation. Will have draft to propose by the end of this week.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-29-team-meeting/#sean","title":"Sean","text":"<ul> <li>Usability improvements project<ul> <li>Documented and approved by Kriti</li> <li>It\u2019s well specified and Sean\u2019s starting work on that</li> </ul> </li> <li>Team management ongoing responsibility<ul> <li>Not put work into it yet, waiting till everyone settles down with the projects &amp; responsibilities</li> <li>There\u2019s no plan to document this<ul> <li>Kriti: It\u2019s fine not to document this</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-29-team-meeting/#mukesh","title":"Mukesh","text":"<ul> <li>Installation assisting (ongoing)<ul> <li>This is Brent\u2019s responsibility, but Mukesh is helping while Brent is on leave</li> <li>Had a call with Dan and Dan\u2019s friend. Planning to check in with them weekly. Tried out Mathesar locally.</li> <li>Mukesh: I\u2019ll be documenting this after doing some more work on installation improvements</li> <li>Kriti: I think Brent should document this once he\u2019s back \u2013 Mukesh: ok</li> <li>Kriti: We have three requests for installations</li> </ul> </li> <li>Installation Improvements (project)<ul> <li>Would like to come up with proposals for what needs to be done</li> <li>Kriti: This should be highest priority. We should try to split this into multiple projects</li> <li>Mukesh: I\u2019d like to split it up, but I\u2019ll need to figure out what needs do be done first</li> <li>Would like to have some project documentation completed by the end of this week.</li> <li>Pavish: I see a high priority for improving installation-related documentation. I suggest prioritizing this. Who is working on this?<ul> <li>Marius has done some work on this</li> <li>Mukesh will be pulling in other people as needed</li> <li>Pavish &amp; Kriti: since users are actively requesting documentation improvements, we should be actively working on this in parallel with the broader planning-related tasks</li> </ul> </li> </ul> </li> <li>Remove SQLAlchemy<ul> <li>Working on researching a replacement query builder</li> <li>Kriti: I would recommend deprioritizing this in favor of others</li> </ul> </li> <li>The last week has mostly been GSoC and PR-review work</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-29-team-meeting/#anish","title":"Anish","text":"<ul> <li>Working on Make Deployment Type 2 work with DBs on localhost (connecting Mathesar to local database)</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-29-team-meeting/#high-level-questions","title":"High level questions","text":"<ul> <li>Ghislaine: If I want to create a new project, how do I do that?<ul> <li>Kriti: We don\u2019t have a process yet for how to do this. Until we do, talk to me.</li> </ul> </li> <li>Pavish: When people work on the same issue, I still don\u2019t know how we should handle this.</li> <li>Tabled for async discussion</li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-29-team-meeting/#where-to-put-what-kind-of-docs","title":"Where to put what kind of docs","text":"<ul> <li>Participants: Sean, Kriti</li> <li> <p>Summary: </p> <p>Since we are working on cleaning up and fleshing out our documentation, I want to seek some clarity on the scope of our different docs sources, attempting to eliminate ambiguity and disagreement.</p> <p>Currently we put documentation in the following places</p> docs site markdown near code wiki HackMD Administrator docs X Developer docs X X X Code docs X Team docs X X <p>Kriti said</p> <p>Rather than spreading documentation across the wiki / docs / repo READMEs, I think we should standardize on the docs site.</p> <p>I\u2019d prefer to use the docs site only for administrator docs (e.g. install/upgrade) and user docs (which we don\u2019t have yet). I\u2019d prefer to put developer docs in markdown near code. Why?</p> <ul> <li> <p>Sometimes we have highly specific markdown files like this one that would feel awkward in the docs site. Putting this documentation content as close as possible to the code that it documents is a great way to keep it up-to-date and discoverable. If we keep that file in its place and also choose to move some of the README content into the docs site then it seems a little hard to draw a clear/consistent line between the two. What about this README, for example? It\u2019s much higher-level, but still not top-level.</p> </li> <li> <p>The docs site is published from the <code>master</code> branch, and that\u2019s important because we want to ensure that it reflects the latest released version of Mathesar so that docs readers who are installing or using Mathesar don\u2019t see content before it\u2019s actually applicable. But what\u2019s \u201capplicable\u201d to developers is not the latest released version \u2013 it\u2019s the development version. Here\u2019s a PR that made a some docs improvement for developers. We merged it last week but it\u2019s still not published because the author targetted <code>develop</code> (by default) and I failed to notice/think that perhaps it should have targetted <code>master</code> instead. EDIT: I just found another such PR after investigating a complaint about incorrect documentation.</p> </li> </ul> <p>To be clear: I very much support the initiative to move dev docs out of the wiki. I would just rather put them in plain markdown files within the codebase instead of putting them into the docs site.</p> <p>Putting content into the docs site certainly has its benefits. I have more thoughts about some of the nuance and gray area, and I think it might be best to chat about it so that we can agree on some guidelines as we flesh out our docs.</p> </li> </ul>"},{"location":"team/meeting-notes/2023/03/2023-03-29-team-meeting/#notes","title":"Notes","text":"<ul> <li>Sean and Kriti discussed this</li> <li> <p>Kriti\u2019s points:</p> <ul> <li>Discoverability is very important. We need to make sure that if docs content is outside of mkdocs that readers can still discover it somehow.</li> <li>Django docs is a good example of versioned docs that has a <code>dev</code> version too</li> <li>NocoDB has docs with dev docs published. They don\u2019t appear to have them versioned</li> <li>Our main readme shouldn\u2019t be too bloated. It should link to other things</li> <li>Material foor MkDocs appears to have a way to set up versioning</li> </ul> </li> <li> <p>Sean\u2019s points</p> <ul> <li>I\u2019d rather not set up versioned docs right now. I\u2019ll do some research into that versioning system to see how easy it might be to implement</li> </ul> </li> <li> <p>OUTCOME</p> <ul> <li>Kriti is open to Sean\u2019s proposal to put docs content in unpublished markdown files, but would like to see a more detailed plan that specifies where content would go and how it would be discoverable</li> <li>Sean will open a PR to the wiki documenting/proposing more specific guidelines for where we would put stuff</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/04/2023-04-03-installation-plan-finalization/","title":"2023-04-03 Installation plan finalization","text":""},{"location":"team/meeting-notes/2023/04/2023-04-03-installation-plan-finalization/#mukeshs-reply-to-email","title":"Mukesh\u2019s reply to email:","text":"<ul> <li>The documentation plan is same</li> <li>The install.py should be moved from startup script to the UI</li> <li>We need swiching databases</li> </ul> <p>UI for switching database needs to be separate from installation.</p>"},{"location":"team/meeting-notes/2023/04/2023-04-03-installation-plan-finalization/#configuring-databases-from-ui","title":"Configuring databases from UI:","text":"<ul> <li>Kriti: What does it solve? How are we going to store credentials in DB with the security risks involved?</li> <li>Mukesh: We require some plugin architecture to be solve the user requirement from the GH ticket. We should probably not store it in DB for now. For 0.1.2, it can be query string in each url, like a JWT with connection string, username and password.</li> <li>Kriti: This doesn\u2019t seem related to installation but towards authentication.</li> <li>For installation, it\u2019s configuring databases and switching dbs.</li> <li>We should do the switching databases.</li> <li>Mukesh: We don\u2019t need UI for installing types. It is useful when adding a database without using the config file</li> </ul>"},{"location":"team/meeting-notes/2023/04/2023-04-03-installation-plan-finalization/#plan-for-012","title":"Plan for 0.1.2","text":"<ul> <li>Documentation on setting up Mathesar with the Mathesar Service Docker Image</li> <li>User will have to run install.py</li> <li>Documentation without using install.sh</li> <li>Our own docker-compose services, without install script</li> <li>We\u2019re skipping UI for installing types</li> <li>Documenting our config files so user can manually edit them</li> <li>Documenting setting up Mathesar without Docker</li> <li>Documenting upgrades and changes in UI to add instructions for non-docker-compose environments<ul> <li>We\u2019ll repurpose https://github.com/centerofci/mathesar/issues/2646 for the UI instructions</li> </ul> </li> <li>Consider removing interactive installer</li> <li>We can defer removing it, but we\u2019ll document it\u2019s limitations i.e not able to support multiple DBs, is not flexible etc., Point users to documentations.</li> <li>Separate docker-compose file for production</li> <li>User feedback from HN, not tracked at the moment.</li> <li>We should separate dev docker-compose with prod.</li> <li>We should probably have profiles for service+DB, and service+DB+watchtower+caddy</li> <li>UI for switching databases</li> </ul>"},{"location":"team/meeting-notes/2023/04/2023-04-03-installation-plan-finalization/#for-013-or-later","title":"For 0.1.3 or later","text":"<ul> <li>Helm chart</li> <li>Kriti: Atleast we should test the initial version and maintain this, since a few people asked for this explicitly. Can\u2019t we automate this?</li> <li>Mukesh: Automating &amp; maintaining this is going to be extra work.</li> <li>We\u2019ll try to check if we can hire someone from Upwork to do this.</li> <li>SSO related stuff<ul> <li>Fetching Db credentials from various source.</li> </ul> </li> <li>Getting feedback from 0.1.2, and having a quick default way to install Mathesar.</li> <li>We don\u2019t have enough information to do this for 0.1.2.</li> <li>Single Docker image for DB + webserver?</li> <li>Kriti: Why are we deprioritizing this?</li> <li> <p>Mukesh: We could have two docker images, one with DB, one without DB.</p> </li> <li> <p>Create desktop packages / add to repos (.deb, flatpak, etc.)</p> </li> <li>Consider simplifying config file - needs more discussion</li> </ul>"},{"location":"team/meeting-notes/2023/04/2023-04-03-installation-plan-finalization/#testing","title":"Testing","text":"<ul> <li>We require people to test the installation options. We\u2019d hire them from Upwork.</li> <li>We\u2019ll setup a channel in Matrix to do this.</li> <li>Kriti will setup the channel.</li> <li>Pavish will co-ordinate testing.</li> <li>We\u2019ll perform testing after documentation is solid.</li> <li>We could have Marius take a second look at documentation.</li> <li>Mukesh: This would be helpful.</li> <li>Mukesh would provide a draft and Marius would look at it, detail and polish it.</li> </ul>"},{"location":"team/meeting-notes/2023/04/2023-04-03-installation-plan-finalization/#release","title":"Release","text":"<ul> <li>Mukesh will update the installation project</li> <li>Pavish will create a project for 0.1.2 and include switching dbs in the project</li> <li>We\u2019ll have the issues created, projects approved, 0.1.2 milestone cleaned up, and a deadline needs to be decided by the end of this week.</li> <li>Time should include testing, post-test issues etc.,</li> </ul>"},{"location":"team/meeting-notes/2023/05/2023-05-03-team-meeting/","title":"2023-05-03 Team meeting","text":""},{"location":"team/meeting-notes/2023/05/2023-05-03-team-meeting/#quick-save-functionality-backend-concerns-and-clarifications","title":"Quick Save Functionality: Backend Concerns and Clarifications","text":"<ul> <li>Added by: Ghislaine</li> <li>Summary: Address backend concerns and clarifications for the Quick Save functionality</li> <li>Expected time: 30 min</li> <li>Priority: </li> <li>Required participants: Backend team (Brent, Mukesh, or Dom)</li> <li>Additional participants:: Please replace this with your name if you\u2019re interested in participating</li> </ul> <p>While gathering requirements for the Quick Save functionality, several concerns were raised. We need to address these points to define the product and outline how the functionality should be implemented:</p> <p>From the conversation with Brent:</p> <ol> <li>What terms should we use to accurately describe the functionality and avoid confusion with existing database concepts? For example \u201cSave Point\u201d or \u201cBackup\u201d</li> <li>Should restoration points be created for the whole database or individual tables?</li> <li>How should we handle scenarios where multiple users have access to the same table, and a restoration is performed?</li> <li>Should we create automatic restoration points, or only create them upon user request?</li> </ol> <p>From Sean\u2019s previous email:</p> <ol> <li>How can we handle the backup and restoration of both data and metadata stored in separate databases?</li> <li>What measures can be taken to ensure atomicity while backing up and restoring data and metadata?</li> <li>How can we handle the fact that oids/attnums do not remain stable through backup/restore operations, and how does this impact our ability to use pg_dump? </li> </ol>"},{"location":"team/meeting-notes/2023/05/2023-05-03-team-meeting/#notes","title":"Notes","text":"<ul> <li>Terminology</li> <li>Scope<ul> <li>Hard to address this feature from a product perspective without knowing the technical limitations</li> <li>Being able to \u201cundo arbitrary edits on a given cell without undoing other edits\u201d is not feasible within the year. We won\u2019t focus on any sort of undo.</li> <li>Brent: backup/restore is kind of like \u201cundo\u201d \u2013 just at a higher level</li> <li>Sean: backup/restore is also useful for inspecting and troubleshooting</li> <li>Mukesh: if we\u2019re making backups, we need to convey to the user that the process of making a backup can take some time. We don\u2019t want to encourage users to make backups super frequently</li> <li>Brent: \u201cbig picture backups\u201d should not be our problem. E.g. GCP gives us a system to make and restore filesystem-level backups</li> <li>Brent: I don\u2019t think it\u2019s worthh it to do something like a button to run pg_dump</li> <li>Brent: Maybe we should have a button which backs up one table</li> <li>Mukesh: Maybe we could have a system for copying a table, allowing users to edit, and then save the whole table back to the database.<ul> <li>Brent/Sean: How would we merge conflicts? This would be problematict</li> </ul> </li> <li>Brent: Maybe we could use some sort of auditing system. It would require storing massive amounts of data.</li> <li>Ghislaine: If you had all the time in the world to implement \u201cundo\u201d, how would you do it? What would the first steps be?<ul> <li>Brent: it will involve something like that audit table under the hood</li> </ul> </li> </ul> </li> <li>Data vs metadata</li> <li>Sean has thoughts<ul> <li>I wish we were building a project that was centered at a low level around preserving the history of the data</li> <li>Allowing users to access that history locally</li> <li>Having local-first data</li> <li>Dolt: MySQL compatible database</li> <li>CR-SQLite: <ul> <li>These have functionality for diffs, logs, merging changes, etc.</li> </ul> </li> </ul> </li> <li>Brent: It would great if we could find another project (e.g. Dolt) to collaborate with so that we can make it someone else\u2019s problem</li> </ul>"},{"location":"team/meeting-notes/2023/05/2023-05-03-team-meeting/#-ghislaine-thinks-backup-is-more-appropriate-terminology","title":"- Ghislaine thinks \u201cbackup\u201d is more appropriate terminology","text":""},{"location":"team/meeting-notes/2023/05/2023-05-03-team-meeting/#db-function-argument-naming","title":"DB function argument naming","text":"<ul> <li>Added by: Brent</li> <li>Summary: We need to make a decision about arg naming conventions in DB functions.</li> <li>Expected time: 15 minutes</li> <li>Priority: High</li> <li>Required participants:: Backend team, Kriti, Anish</li> <li>Additional participants:: Please replace this with your name if you\u2019re interested in participating</li> </ul> <p>See this post for context.</p>"},{"location":"team/meeting-notes/2023/05/2023-05-03-team-meeting/#example","title":"Example","text":"<p>Here\u2019s the current version of one of our DB functions: ```sql= CREATE OR REPLACE FUNCTION msar.rename_table(sch_name text, old_tab_name text, new_tab_name text) RETURNS text AS $$/* Change a table\u2019s name, returning the command executed.</p> <p>Args:   sch_name: unquoted schema name where the table lives   old_tab_name: unquoted, unqualified original table name   new_tab_name: unquoted, unqualified new table name */ DECLARE fullname text; BEGIN   fullname := msar.get_fully_qualified_object_name(sch_name, old_tab_name);   RETURN __msar.rename_table(fullname, quote_ident(new_tab_name)); END; $$ LANGUAGE plpgsql RETURNS NULL ON NULL INPUT; <pre><code>The result of `\\df`\n</code></pre> Schema |     Name     | Result data type |                 Argument data types                 | Type</p> <p>--------+--------------+------------------+-----------------------------------------------------+------  msar   | rename_table | text             | sch_name text, old_tab_name text, new_tab_name text | func <pre><code>The result of `\\df+`\n</code></pre>  Schema |     Name     | Result data type |                 Argument data types                 | Type | Volatility | Parallel |  Owner   | Security | Access privileges | Language |                                        Source code                                         | Description</p> <p>--------+--------------+------------------+-----------------------------------------------------+------+------------+----------+----------+----------+-------------------+----------+--------------------------------------------------------------------------------------------+-------------  msar   | rename_table | text             | sch_name text, old_tab_name text, new_tab_name text | func | volatile   | unsafe   | mathesar | invoker  |                   | plpgsql  | /                                                                                        +|         |              |                  |                                                     |      |            |          |          |          |                   |          | Change a table\u2019s name, returning the command executed.                                    +|         |              |                  |                                                     |      |            |          |          |          |                   |          |                                                                                           +|         |              |                  |                                                     |      |            |          |          |          |                   |          | Args:                                                                                     +|         |              |                  |                                                     |      |            |          |          |          |                   |          |   sch_name: unquoted schema name where the table lives                                    +|         |              |                  |                                                     |      |            |          |          |          |                   |          |   old_tab_name: unquoted, unqualified original table name                                 +|         |              |                  |                                                     |      |            |          |          |          |                   |          |   new_tab_name: unquoted, unqualified new table name                                      +|         |              |                  |                                                     |      |            |          |          |          |                   |          | /                                                                                        +|         |              |                  |                                                     |      |            |          |          |          |                   |          | DECLARE fullname text;                                                                    +|         |              |                  |                                                     |      |            |          |          |          |                   |          | BEGIN                                                                                     +|         |              |                  |                                                     |      |            |          |          |          |                   |          |   fullname := msar.get_fully_qualified_object_name(sch_name, old_tab_name);               +|         |              |                  |                                                     |      |            |          |          |          |                   |          |   RETURN __msar.rename_table(fullname, quote_ident(new_tab_name));                        +|         |              |                  |                                                     |      |            |          |          |          |                   |          | END;                                                                                      +|         |              |                  |                                                     |      |            |          |          |          |                   |          |                                                                                            | <pre><code>The problem with this version is that it 'locks in' the function parameter names. Any change of those names would have to be considered a change of a public API, and would very possibly require manual intervention on the part of users to upgrade (or at least to perform an upgrade that changed any function parameter names).\n\nNow, modified as per option (3) from the linked post:\n```sql=\nCREATE OR REPLACE FUNCTION\nmsar.rename_table(text, text, text) RETURNS text AS $$/*\nChange a table's name, returning the command executed.\n*/\nDECLARE\n\n-- Args:\n  sch_name TEXT := $1;  -- unquoted schema name where the table lives\n  old_tab_name TEXT := $2;  -- unquoted, unqualified original table name\n  new_tab_name TEXT := $3;  -- unquoted, unqualified new table name\n\n-- internal variables\nfullname text;\nBEGIN\n  fullname := msar.get_fully_qualified_object_name(sch_name, old_tab_name);\n  RETURN __msar.rename_table(fullname, quote_ident(new_tab_name));\nEND;\n$$ LANGUAGE plpgsql RETURNS NULL ON NULL INPUT;\n</code></pre> The result of <code>\\df</code>: <pre><code> Schema |     Name     | Result data type |      Argument data types      | Type\n\n--------+--------------+------------------+-------------------------------+------\n msar   | rename_table | text             | text, text, text              | func\n</code></pre></p> <p>The result of <code>\\df+</code>: <pre><code>                                                                                                                            List of functions\n Schema |     Name     | Result data type |      Argument data types      | Type | Volatility | Parallel |  Owner   | Security | Access privileges | Language |                                        Source code                                         | Description\n\n--------+--------------+------------------+-------------------------------+------+------------+----------+----------+----------+-------------------+----------+--------------------------------------------------------------------------------------------+-------------\n msar   | rename_table | text             | text, text, text              | func | volatile   | unsafe   | mathesar | invoker  |                   | plpgsql  | /*                                                                                        +|\n        |              |                  |                               |      |            |          |          |          |                   |          | Change a table's name, returning the command executed.                                    +|\n        |              |                  |                               |      |            |          |          |          |                   |          | */                                                                                        +|\n        |              |                  |                               |      |            |          |          |          |                   |          | DECLARE                                                                                   +|\n        |              |                  |                               |      |            |          |          |          |                   |          | -- Args:                                                                                  +|\n        |              |                  |                               |      |            |          |          |          |                   |          |   sch_name TEXT := $1;  -- unquoted schema name where the table lives                     +|\n        |              |                  |                               |      |            |          |          |          |                   |          |   old_tab_name TEXT := $2;  -- unquoted, unqualified original table name                  +|\n        |              |                  |                               |      |            |          |          |          |                   |          |   new_tab_name TEXT := $3;  -- unquoted, unqualified new table name                       +|\n        |              |                  |                               |      |            |          |          |          |                   |          | -- internal variables                                                                     +|\n        |              |                  |                               |      |            |          |          |          |                   |          | fullname text;                                                                            +|\n        |              |                  |                               |      |            |          |          |          |                   |          | BEGIN                                                                                     +|\n        |              |                  |                               |      |            |          |          |          |                   |          |   fullname := msar.get_fully_qualified_object_name(sch_name, old_tab_name);               +|\n        |              |                  |                               |      |            |          |          |          |                   |          |   RETURN __msar.rename_table(fullname, quote_ident(new_tab_name));                        +|\n        |              |                  |                               |      |            |          |          |          |                   |          | END;                                                                                      +|\n        |              |                  |                               |      |            |          |          |          |                   |          |                                                                                            |\n</code></pre> This avoids the problem above. However, it has some major downsides</p> <ul> <li>It means the output of <code>\\df</code> is much less informational</li> <li>It makes the function\u2019s signature harder to parse in code.</li> <li>It adds boilerplate (the <code>DECLARE</code> block; this is optional, but recommended)</li> <li>We can\u2019t name certain variables at all (any pseudotype, e.g., <code>anyarray</code>; these can only be function parameters, but can\u2019t be declared)</li> </ul>"},{"location":"team/meeting-notes/2023/05/2023-05-03-team-meeting/#notes_1","title":"Notes","text":"<ul> <li>We havn\u2019t yet released any code that causes a problems</li> <li>If you have named parameters in postgres functions, you cannot update them. You have to drop them and re-create them. Functions can have dependencies. You cannot easily drop functions with dependencies.</li> <li>Brent: Are we tracking dependencies of functions?<ul> <li>Mukesh: I don\u2019t think so</li> </ul> </li> <li>We really want to avoid dropping functions</li> <li>Mukesh: The problem happens when you upgrade the types. I think we should consider better ways to do upgrades.</li> <li>Mukesh: can we drop the functions and re-build them during upgrades?<ul> <li>Brent: this can be problematic if, for example, the user has views that depend on the function</li> </ul> </li> <li>Sean: We should consider the DB functions as a \u201cpublic API\u201d. Sometimes this API has breaking changes. We\u2019ll never be able to avoid that. From a UX perspective, the named function parameters improve UX, so I\u2019d be inclined to allow them. We should just minimize the breaking changes, and be clear in the release notes when we make them.</li> <li>Decision we\u2019ll keep the named parameters</li> <li>For the time being, we won\u2019t change the parameter names. If we want to change a parameter name, we\u2019ll discuss how to do that later. We could add a <code>--force</code> flag to the python layer install which drops the functions with CASCADE.</li> <li>The 0.1.2 release will have a bunch of new functions</li> <li>We\u2019ll have docs for developers to help them upgrade their functions from develop to develop</li> </ul>"},{"location":"team/meeting-notes/2023/05/2023-05-03-team-meeting/#action-items-for-brent","title":"Action items for Brent","text":"<ul> <li>add documentation to Sean\u2019s dev docs PR for recovery when there\u2019s a function parameter naming issue</li> <li>Add documentation to the effect of \u2018changing function parameter names is a breaking change\u2019</li> <li>Either automate checking for parameter name changes in CI for PRs, or document that this should be checked for backend PRs</li> <li>Double-check that we don\u2019t already have this problem (i.e., the current develop branch doesn\u2019t change any parameter names compared to 0.1.1).</li> </ul>"},{"location":"team/meeting-notes/2023/05/2023-05-10-team-meeting/","title":"2023-05-10 Team meeting","text":""},{"location":"team/meeting-notes/2023/05/2023-05-10-team-meeting/#gsoc-proposal-phase-retrospective","title":"GSoC proposal phase retrospective","text":"<ul> <li>Added by: Dom</li> <li>Summary: During the proposal phase concerns came up and we postponed discussing them until now</li> <li>Expected time: 20mn</li> <li>Priority: Medium</li> <li>Required participants: Everyone who participated in the proposal phase</li> <li>Additional participants:: Please replace this with your name if you\u2019re interested in participating</li> <li>Goals:</li> <li>Share whatever problems or ideas came up during the proposal phase;</li> <li>Record that (including possible solutions to problems), so that they\u2019re available when/if organizing another GSoC.</li> </ul> <pre><code>Pavish\n    - PR reviews\n        - Not enough issues for contributors to work on\n        - Allowing multiple contributors to work on the same issue\n            - Too many PRs for the same issue\n        - Especially a problem on the frontend\n    - Sometimes would make changes to contributor's PR to get it mergeable\n        - And so that our github repo would get contributor statistics\n            - Github considers Mathesar to have another contributor\n    - We need a better system for ranking/scoring candidates\n    - Should rank also proposals that didn't have PRs\n\nBrent\n    - PR reviews\n        - Problems stem from treating issues as try-outs that aren't actual work we need done\n        - We should have agreement on when to cut off problematic PRs that require a lot of review/handholding\n        - Too few issues for contributors\n            - Main source of issues during proposal phase\n    - GSoC motivates people to get into our codebase\n        - People who aren't \"scratching their own itch\"\n        - We don't get people that are \"scratching their own itch\"\n        - Double edged sword\n            - It's about managing the funnel\n                - In GSoC, developers are the front-line for sorting out candidates\n                    - Unnatural\n                    - Normally, non-developers filter out 80% of candidates\n                        - Then the remaining 20% is technical\n                        - For us, 100% is technical\n                            - Which is super noisy\n    - Noise seems concentrated in the frontend\n        - Even though projects we ended up getting good proposals for were for backend\n        - Seems to happen all over open-source\n    - Maybe have candidates find and solve a bug\n    - Doesn't like the numerical scoring system\n        - Different people grade on different scales\n            - Hard to aggregate\n        - Deceptively organized\n        - Veto/neutral/sponsor is something to consider\n\nSean\n    - PR reviews\n    - We could do a retrospective of GSoC at the end of GSoC (end of summer)\n    - Feels cynical\n        - Example\n            - 4 PRs for a single issue\n                - 3 team members left 15 comments across them\n                - at the end Sean submitted a PR himself\n                    - took him 1 hour and Pavish didn't have critique\n        - Hasn't seen the rewards of GSoC\n        - Feels like a competitive classroom\n            - As opposed to a community\n        - GSoC sucks all of the good first issues\n            - Makes them unavailable to contributors from outside GSoC\n    - What are we open to considering changing (next year)?\n    - Are there other ways we could evaluate candidates?\n    - Ranking/scoring needs improvement, but went smoother than contributions\n\nKriti\n    - Many ways to solve candidate evaluation\n        - We could have a test that people have to take\n    - Too much core team time spent on candidates that might not be interesting\n        - Seen other projects not engage with people until they've done some work\n    - At CC\n        - Less noise\n        - Maybe GSoC is different these days\n    - A lot of people don't put in the minimum of effort\n    - People wanting to put things on their resume is not bad\n        - It's an exchange\n            - Problem is if the candidate doesn't offer anything\n\nAnish\n    - Many people were trying to pump up number of PRs they had\n        - A single person did 7 good-first-issues\n            - Instead of doing more difficult issues\n        - Or single person doing many issues simultaneously\n\nMukesh\n    - Lack of documentation is a test for contributors\n    - A lot of contributors seem to treat GSoC as competitive\n        - GSoC is something you can put on your resume\n    - There should be a progression from easy to hard issues\n        - For each contributor\n    - Maybe contributors should come up with suggestions or ideas\n        - Kriti: we've had bad experiences with this\n    - GSoC candidates are often on Windows\n        - Causes many Windows-related issues\n            - Distorts feedback space\n            - Actual users might not be on Windows\n        - Kriti: we should just take this into account when triaging issues\n    - Unequal distribution of proposals for project ideas\n        - Many strong proposals for the same project idea\n            - But many project ideas didn't get almost any proposals\n\nGhislaine\n    - Valuable contributors are those that actually want to add new features\n        - They care\n        - Sean:\n            - 1 contributor on frontend that didn't come from GSoC\n\nSurvey\n    - What percentage of time each of us spent on GSoC during the proposal phase?\n        - Sean 60%\n        - Pavish 50%\n        - Kriti 20%\n        - Mukesh 40%\n        - Brent 20%\n        - Anish 30%\n        - Dom 100%\n</code></pre>"},{"location":"team/meeting-notes/2023/05/2023-05-10-team-meeting/#general-qa","title":"General Q&amp;A","text":"<ul> <li>Added by: Kriti</li> <li>Summary: I\u2019m around to answer questions about what I\u2019ve been working on if anyone has any.</li> <li>Priority: Low</li> <li>Required participants: No one</li> </ul>"},{"location":"team/meeting-notes/2023/05/2023-05-10-team-meeting/#notes","title":"Notes","text":"<ul> <li> <p>Mukesh: been talking to people doing \u201cmaptivism\u201d (mapping + activism). They are interested in using Mathesar. They want to know our estimates for when/how we\u2019ll build more mapping features into Mathesar. They might be able to to help us get more funding. Met with three different people, three different projects. Marine life mapping, aggricultural mapping, etc.</p> <ul> <li>Kriti: maybe introduce them to me? Location types would be a good thing to prioritize. Other people have said this. Lots of Postgres users because of PostGIS. Foundation of Public Code wants to use Mathesar for geospatial work.</li> <li>Kriti: We don\u2019t have an estimate for when we\u2019d have these features. We need to do more planning.</li> <li>Mukesh: will follow up via email</li> </ul> </li> <li> <p>Mukesh: Any other ways we can help you, Kriti?</p> <ul> <li>Kriti: most of my work right now is meetings and networking. Hard to parallelize. Talking to me about use-cases is helpful.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/05/2023-05-30-front-end-team-meeting/","title":"2023-05-30 Front End Team meeting","text":""},{"location":"team/meeting-notes/2023/05/2023-05-30-front-end-team-meeting/#at-a-high-level-what-should-we-focus-on-right-now","title":"At a high level, what should we focus on right now?","text":"<ul> <li>We should prioritize features</li> <li>We shouldn\u2019t take up any big refactoring right now because we lack a clear picture for the product work that we\u2019d like to take up in the coming year. Once we get a clearer picture, we can consider taking up some of the refactoring becaus we\u2019ll be better informed of our direction.</li> </ul>"},{"location":"team/meeting-notes/2023/05/2023-05-30-front-end-team-meeting/#what-were-working-on","title":"What we\u2019re working on","text":"<ul> <li>Rajat: i18n, which should last a while. Filling in gaps with PR review and smaller work.</li> <li>Pavish: vacation soon. Hoping to take up a new project upon returning from vacation. Hoping to decide on that project within the next week. Considering sharable forms and sharable tables/explorations.</li> <li>Sean: Will need a new project in the next week or two. Not sure what it will be yet.</li> </ul>"},{"location":"team/meeting-notes/2023/05/2023-05-30-front-end-team-meeting/#front-end-performance-project","title":"Front end performance project","text":"<ul> <li>Pavish was planning to work on this, but has decided to defer it in favor of feature-related work</li> <li>Perf problems:<ul> <li>impact loading and scrolling</li> <li>impact dev mode more the prod mode</li> <li>are worse with lots of columns</li> </ul> </li> <li>Fixing the perf problems will require significant refactoring, and it would be nice to take that refactoring work up once we have a better idea of the other features we plan to build</li> </ul>"},{"location":"team/meeting-notes/2023/05/2023-05-30-front-end-team-meeting/#potential-feature-work","title":"Potential feature work","text":"<ul> <li>Explorations. Lots to improve here, but we need more user input for this.</li> <li>Sean: charts/graphs<ul> <li>Pavish: We need to understand more about the product direction</li> <li>Sean: chicken/egg problem</li> <li>Rajat: also interested in this</li> </ul> </li> <li>file/image types</li> </ul>"},{"location":"team/meeting-notes/2023/05/2023-05-30-front-end-team-meeting/#potential-refactoring-to-do-later","title":"Potential refactoring to do later","text":"<ul> <li>Rajat: some work on sheet selection<ul> <li>clarify UX specs, adding more detail</li> <li>refactor code to use better data structures which are less prone to bugs</li> <li>Sean: agree. This has been our the most bug-prone area of our front end code</li> </ul> </li> <li>Pavish: Stores refactor.<ul> <li>It\u2019s been hard for new contributors to make PRs that follow our patterns.</li> <li>We\u2019ll need to discuss this in depth</li> </ul> </li> <li>Pavish: Reduce requests by combining them via new endpoints</li> </ul>"},{"location":"team/meeting-notes/2023/05/2023-05-30-front-end-team-meeting/#other-topics-we-should-discuss-soon","title":"Other topics we should discuss soon","text":"<ul> <li>Sean: \u201cGranular vs coarse reactivity\u201d<ul> <li>We decided to schedule this topic for the next meeting</li> </ul> </li> <li>Rajat: Testing.<ul> <li>We\u2019ll plan a separate meeting for this.</li> </ul> </li> <li>We also did a quick pass over the numerous other small agenda items and agreed that none of them are pressing enough to discuss soon.</li> </ul>"},{"location":"team/meeting-notes/2023/05/2023-05-30-front-end-team-meeting/#next-meeting","title":"Next meeting","text":"<ul> <li>Scheduled for 2023-06-30</li> </ul>"},{"location":"team/meeting-notes/2023/06/2023-06-07-team-meeting/","title":"2023-06-07 team meeting","text":""},{"location":"team/meeting-notes/2023/06/2023-06-07-team-meeting/#new-contributor-introductions","title":"New contributor introductions","text":"<p>We set aside some time for our new summer 2023 contributors - Anshuman, Aritra, Maria, Shrey, and Varsha - to meet each other and the rest of the team.</p>"},{"location":"team/meeting-notes/2023/06/2023-06-07-team-meeting/#update-about-kritis-availability","title":"Update about Kriti\u2019s availability","text":"<p>Kriti\u2019s more available now, and will be taking over team and project management. We\u2019ll be figuring out our new post-launch direction and workflow in upcoming meeting. We\u2019ll schedule these when everyone\u2019s back from vacation.</p>"},{"location":"team/meeting-notes/2023/06/2023-06-07-team-meeting/#retrospective","title":"Retrospective","text":"<p>We\u2019ve had a lot of workflow changes since launch and with Kriti\u2019s unavailability due to focus on funding \u2013 let\u2019s talk about it!</p>"},{"location":"team/meeting-notes/2023/06/2023-06-07-team-meeting/#what-went-well","title":"What went well?","text":"<ul> <li>[Kriti] We have users!</li> <li>[Dom] Few distractions: most of my tasks have to do with the main project I\u2019m working on</li> <li>[Brent] <ul> <li>Enjoying having some external contact</li> <li>I\u2019m enjoying seeing people have ownership over various bits and pieces.</li> </ul> </li> <li>[Pavish]<ul> <li>We\u2019re getting user feedback.</li> <li>The team splitting up responsibilites allowing Kriti to focus on funding.</li> </ul> </li> <li>[Rajat]<ul> <li>Team taking up the responsibilites to let Kriti focus on funding. </li> </ul> </li> <li>[Sean] Kriti seems to have gotten enough distance from day-to-day work to focus on funding</li> <li>[Mukesh]<ul> <li>The team splitting up responsibilites</li> <li>Projects framework is good for organising work and responsiblities.</li> </ul> </li> <li>[Ghislaine] Fewer distractions, and collaborating with more people in the team </li> </ul>"},{"location":"team/meeting-notes/2023/06/2023-06-07-team-meeting/#what-could-have-gone-better","title":"What could have gone better?","text":"<ul> <li>[Kriti] Progress on the product has slowed down significantly</li> <li>[Dom] Felt out of touch because everyone was involved in my project<ul> <li>Anxiety about project taking too long<ul> <li>Wasn\u2019t too aware of what others are up to, so had trouble gauging if I\u2019m keeping tempo<ul> <li>Actually, not sure if the anxiety about being fixated on a single project and knowing what others are doing are related </li> </ul> </li> </ul> </li> </ul> </li> <li>[Brent]<ul> <li>I\u2019m not sure what the overall direction is at the moment.</li> <li>Each person can be absorbed in their own responsibilities, sometimes difficult (or at least guilt-inducing) to pull people away to help on your thing.</li> <li>I think we\u2019re not great (yet) at \u201cmesh-network\u201d visibility. I find it somehow more difficult to keep up with the state of various things.</li> <li>No coherent \u2018main goal\u2019 at any one moment, at least not one discernable to me.</li> </ul> </li> <li>[Pavish]<ul> <li>There\u2019s no clear goal in sight w.r.t to development and that\u2019s affecting my ability to think about features in product terms. Our initial goal was to get the release out, and now it feels we\u2019re sort of swaying with the waves.</li> <li>I\u2019ve done very little development work the last month. It would have been better for me to code more.</li> <li>It would have been better if our installation flow had been simplified before documenting them.</li> <li>Release 0.1.2 has been very slow.</li> </ul> </li> <li>[Rajat] <ul> <li>Having E2E FE test cases for reducing the no. of regressions for faster and confident releases.</li> <li>All of us being in a single call after a very long time. </li> </ul> </li> <li>[Sean] I had a hard time with team management. Difficult to see what everyone is working on, given our new processes. Hard to manage, given that Kriti still ultimately held responsibility for deciding on new projects. Seems like this is all moot now though, with Kriti resuming this role.</li> <li>[Sean] I have not done well with sticking to the timeline in my Usability Improvements project.</li> <li>[Sean] I have felt less motivated, less productive, more distracted, and lazier in the past few months. I would attribute this change primarily to the lack of clear team-wide direction and cohesion for us right now. I felt enthusiastic about working hard when we were pushing for the launch, but I feel groggier not that I\u2019m not chasing a figurative carrot.</li> <li>[Mukesh] Issues were not specced out when installation project was written, caused a lot of problems later.</li> <li>[Mukesh] Each core contributor was involved in their own project and it was hard to pull others into your own project</li> <li>[Mukesh] ome of the contributions from non-core team members didn\u2019t have projects, so it was hard to keep track of things</li> <li>[Mukesh] Most of the work I did was around the problems informed by the users. But I don\u2019t know what is the direction/priorities of the product once these feedbacks are addressed.</li> <li>[Mukesh] It would have been good if we had tracked issues and feedback to prioritize.</li> <li>[Mukesh] User feedback tracking is hard</li> <li>[Ghislaine] Agree with focus and motivation - no clear process on how to apply user feedback, feature focus made it more motivating</li> <li>[Ghislaine] Agree with issues with not knowing product direction</li> </ul>"},{"location":"team/meeting-notes/2023/06/2023-06-07-team-meeting/#shout-outs","title":"Shout outs","text":"<p>We ran out of time to discuss these at the meeting.</p> <ul> <li>[Kriti] Pavish for managing the release and doing an excellent job at communication and coordination</li> <li>[Dom] Ghislaine for being great at user research</li> <li>[Pavish] Sean and Brent for helping out with the documentation PRs and review.</li> <li>[Rajat] Pavish for managing the release and Sean for providing really good feedback on i18n tech specs. </li> <li>[Brent]<ul> <li>Ghislaine for taking time with GSoC interns to help with design</li> <li>Dom for doing so much GSoC setup and organization</li> <li>Mukesh for providing useful feedback on SQL implementations and the potential pitfalls</li> <li>Anish for taking on difficult SQL tasks.</li> </ul> </li> <li>[Sean] Aritra for finding a reporting helpful bugs</li> <li>[Sean] Kriti for all her fundraising work! \ud83d\udcb0</li> <li>[Mukesh]<ul> <li>Sean for his help with documentation</li> <li>Pavish for his help with coordinating with the tester and planning the release</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/06/2023-06-07-team-meeting/#ideas","title":"Ideas","text":"<p>We ran out of time to discuss these at the meeting. They will be discussed at future meetings.</p> <ul> <li>[Kriti] Future releases should go out at a regular pace rather than being tied to specific features</li> <li>[Pavish] Separate release owners for each release.</li> <li>[Brent]<ul> <li>Reduce the number of \u201cmanagers\u201d. We need some folks undistracted from coding.</li> <li>Reduce the number of concurrent projects/responsibilities (as much as possible).</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/06/2023-06-13-installation-planning-meeting/","title":"2023-06-13 Installation Planning Meeting","text":"<p>Attending:</p> <ul> <li>Kriti</li> <li>Brent</li> <li>Mukesh</li> <li>Sean</li> </ul> <p>Continued on 2023-06-14, Aritra and Anshuman also attended.</p>"},{"location":"team/meeting-notes/2023/06/2023-06-13-installation-planning-meeting/#current-install-process","title":"Current install process","text":"<ul> <li> <p>Flowchart</p> <p>https://drive.google.com/file/d/1ZTVwCkGxv8jQMHH9IhsnMFd80P1HM5b9/view?usp=drive_link</p> </li> </ul>"},{"location":"team/meeting-notes/2023/06/2023-06-13-installation-planning-meeting/#examples-of-apps-with-nice-installation","title":"Examples of apps with nice installation","text":"<ul> <li>syncthing<ul> <li>On Mac, drag and drop DMG</li> <li>On Linux, available in package management repos</li> <li>It\u2019s complicated \u2013 it\u2019s got a web server, electron app type GUI, web frontend, all sort of networking</li> <li>You install it, it pops up a browser window or GUI</li> </ul> </li> <li>pgweb - single-file executable CLI to launch a webserver</li> <li>These are local though</li> <li>There\u2019s some unavoidable complexity with installations on servers<ul> <li>We need to make it safe to connect to the internet</li> </ul> </li> <li>Brent: Would love to find good examples of python/django apps that have good installation flows<ul> <li>Baserow is an example</li> </ul> </li> <li>Baserow\u2019s install seems simpler than ours, but less flexible<ul> <li>Does not need an external database by default</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/06/2023-06-13-installation-planning-meeting/#our-needs","title":"Our needs","text":"<ul> <li>Need \u201cquick\u201d install, just to try Mathesar, without lots of config</li> <li>Installation \u201cpersonas\u201d:<ul> <li>Someone trying Mathesar out quickly (and can use Docker)</li> <li>Someone trying Mathesar out quickly (and cannot use Docker)</li> <li>Someone installing everything on localhost (no internet needed)</li> <li>Someone installing server on localhost, but connecting to a remote DB</li> <li>Someone installing server &amp; DB on same remote system<ul> <li>DB created by Mathesar</li> <li>DB already exists</li> </ul> </li> <li>Someone installing server &amp; DB on separate remote systems<ul> <li>DB already exists</li> </ul> </li> </ul> </li> <li>Sean: do we want non-technical people to be able to install Mathesar any time soon?<ul> <li>Kriti: No. We can wait until post-alpha. Not a high priority now.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/06/2023-06-13-installation-planning-meeting/#ideas","title":"Ideas","text":"<p>[Sean]</p> <ul> <li>Maybe Mathesar should not concern itself with supplying a Postgres server</li> <li>I\u2019d really like to have a single-file executable someday</li> </ul> <p>[Brent]</p> <ul> <li>All localhost, DB managed by Mathesar should be improved most (imo)<ul> <li>No config needed.</li> <li>Should start things (maybe even in one container including DB) easily</li> <li>Useful for real use cases, but also for \u2018trying it out\u2019</li> </ul> </li> <li>Trying Mathesar out ideas:<ul> <li>localhost/localhost, mathesar managed</li> <li>improve demo, have separate users</li> <li>PAAS</li> </ul> </li> <li>Server and DB on separate systems (optimally with managed DB) is best for \u2018mission critical\u2019 prod right now. Consider emphasizing that.</li> <li>Segregate installation paths by use-case</li> </ul> <p>[Kriti]</p> <ul> <li>Build static files before release</li> <li>Have a human readable config file that we do the work to convert (e.g. replace database url string with several different variables, we can convert it into a database URL)</li> <li>We need a single Docker command that just brings up a fully functioning Mathesar instance on localhost</li> <li>Users should not need to install git or check out our repo \u2013 we should release a downloadable version of our source code for a release on GitHub.</li> <li>PaaS options (e.g. \u201cone click install on Dreamhost\u201d) would be helpful for trying out</li> <li>Helm charts / Kubernetes - make it easier to install Mathesar</li> </ul> <p>[Mukesh]</p> <ul> <li>Build static files during release</li> <li>move config to UI</li> <li>move installing schemas to UI</li> <li>Build zipapps or binaries for Mathesar</li> <li>Generate secret key automatically</li> <li>Have a least resistance build without addons like Caddy</li> <li>One click installs</li> <li>Cpanel</li> <li>Debian Images, flatpak, native OS images</li> </ul>"},{"location":"team/meeting-notes/2023/06/2023-06-13-installation-planning-meeting/#ideal-installation-flow-by-persona","title":"Ideal installation flow by \u201cpersona\u201d","text":""},{"location":"team/meeting-notes/2023/06/2023-06-13-installation-planning-meeting/#someone-trying-mathesar-out-quickly-and-can-use-docker","title":"Someone trying Mathesar out quickly (and can use Docker)","text":"<ul> <li>Kriti: This person is technical, since we\u2019re still in alpha. They\u2019re comfortable running a Docker command.<ul> <li>Brent: If they don\u2019t have Docker, then this is still a problem. People have more trouble installing Docker than they do installing Mathesar.</li> <li>Mukesh: Maybe we should broaden our scope for \u201ctechnical users\u201d?</li> <li>Kriti: people are technical but don\u2019t have time to tinker</li> </ul> </li> <li>What is our ideal flow here?<ul> <li>Brent: <code>docker run</code>. Then it prints the URL to open Mathesar locally</li> <li>Zero configuration, DB is automatically set up on the container</li> </ul> </li> <li>Sean: Where would the user database live?<ul> <li>Within the container</li> </ul> </li> <li>What if user wants to connect to pre-existing database outside the container?<ul> <li>We might be able to do this by passing more config into <code>docker run</code></li> </ul> </li> <li>Kriti: Can we have a config file to specify an external database?<ul> <li>This is hard with Docker</li> <li>We could maybe do this with volumes</li> <li>Mukesh: Why do we prefer config file vs env vars?<ul> <li>Something like YAML would be easier for users to edit</li> </ul> </li> <li>This would be possible, with some more thought/design</li> <li>Kriti: Where would the config file live?<ul> <li>It would need to live in a volume. It would be accessed by both the host and the container</li> <li>There could be some permissions issues</li> </ul> </li> </ul> </li> <li>Brent: There\u2019s also an <code>args</code> syntax for docker run that might be useful</li> <li>Mukesh: maybe we could stick with env vars but make improve the syntax so that it\u2019s easier for users to edit</li> <li>Brent: Env vars are not \u201cdurable\u201d. They don\u2019t persist after you restart your machine. This is harder for users. This is an argument for using a config file.</li> </ul>"},{"location":"team/meeting-notes/2023/06/2023-06-13-installation-planning-meeting/#someone-trying-mathesar-out-quickly-and-cannot-use-docker","title":"Someone trying Mathesar out quickly (and cannot use Docker)","text":"<ul> <li>PaaS \u201cone click\u201d is a way to do this</li> <li>Live demo<ul> <li>Why would people want to install Mathesar locally instead of using the demo?<ul> <li>Understand how Mathesar works with Postgres locally</li> <li>Don\u2019t feel comfortable with uploading their data to the demo</li> </ul> </li> </ul> </li> <li>Ideas<ul> <li>Users should be able in:<ul> <li>Homebrew on Mac</li> <li>Linux:<ul> <li>.deb repos</li> <li>.aur for Arch</li> <li>dpkg? </li> </ul> </li> </ul> </li> <li>Mac: DMG file / EXE files for Windows<ul> <li>e.g. OpenRefine, opens in a browser</li> </ul> </li> </ul> </li> <li>Where is the Postgres server?<ul> <li>Package manager installs would use Postgres<ul> <li>But user and database still need to be created</li> <li>Seems like a non-starter for \u201ctrying Mathesar out\u201d</li> </ul> </li> <li>Can we use SQLite as the Django database?<ul> <li>Worth considering, since it may not be that hard</li> </ul> </li> <li>Executable files<ul> <li>EXE files can have Postgres embedded, others cannot</li> <li>https://github.com/garethflowers/postgresql-portable</li> </ul> </li> </ul> </li> <li>Should be one command</li> <li>Compile binary using pyinstaller<ul> <li>ships with Python interpreter</li> </ul> </li> <li>Best we can hope for \u201csomeone trying this out quickly without Docker\u201d is no Postgres server, but using SQLite for Django DB<ul> <li>We may need to require them to use an external Postgres server</li> <li>Consider setting up server in the UI<ul> <li>Kriti: Where would we store pg passwords? It would be nice to avoid storing that along with our metadata.<ul> <li>Brent: Maybe it wouldn\u2019t be a problem. Maybe we could encrypt it.</li> <li>Kriti: If we can find a way of storing it without putting it in plaintext (and with a good encryption algorithm), that would be fine.</li> <li>Server could take API call and could also write it to a config file instead of storing in the DB</li> </ul> </li> </ul> </li> </ul> </li> <li>Advantages of repo distribution over plain download (of an executable)<ul> <li>Fits into users\u2019 package management workflows</li> <li>Better security peace of mind for users</li> <li>easier to get in $PATH</li> <li>easier to upgrade</li> <li>smaller file size - no bundled dependencies</li> <li>We can include postgres as a package dependency</li> </ul> </li> <li>Advantages of plain download (of an executable) over repo distribution <ul> <li>more up-to-date</li> <li>simpler for us in the short term</li> </ul> </li> <li>Additional args/flags that the CLI app could have<ul> <li>Option to disable auth, so that user can get to working Mathesar immediately</li> <li>Option to permit the API/UI to edit the config file</li> </ul> </li> <li>OS Dependencies<ul> <li>Minimum version of python<ul> <li>pyinstaller ships Python interpreter</li> </ul> </li> <li>Python dependencies<ul> <li>zipapp ships with dependencies</li> </ul> </li> <li>C build dependencies, unless we use the precompiled versions of psycopg</li> <li>postgres server (minimum version)</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/06/2023-06-13-installation-planning-meeting/#ideal-flow","title":"Ideal Flow","text":"<ul> <li>Download the binaries from our release page</li> <li>Run the downloaded binary file using the cli or as a executable</li> <li>Mathesar will open in a browser window or an electron app</li> <li>Configuration dialog is shown inside the Mathesar app</li> <li>User creates a superuser account using the configuration dialog</li> <li>User is then shown a list of databases handled by Mathesar</li> <li>User proceeds to add the connection string details of the databases to be managed by Mathesar</li> <li>User then installs the necessary Schema based on the features he requires, for example, DML only schema</li> </ul>"},{"location":"team/meeting-notes/2023/06/2023-06-13-installation-planning-meeting/#someone-installing-everything-on-localhost-not-just-trying-it-out","title":"Someone installing everything on localhost (not just trying it out)","text":"<ul> <li>If you\u2019re using Docker setup:<ul> <li>May need to be a little different </li> <li>Docker volume needs to not be knocked out<ul> <li>Don\u2019t let Docker volumes be managed by Docker, use a directory</li> </ul> </li> <li>We should say this is NOT recommended for longer term Mathesar use</li> </ul> </li> <li>If you\u2019re not using Docker:<ul> <li>This should be the recommended way to store Mathesar data persistently on localhost</li> <li>\u201cIdeal flow\u201d should work well for this.</li> <li>Config file being moved to the UI is the hard part of this.</li> </ul> </li> <li>Should we even have the Docker version for this persona?<ul> <li>It will be easier for us, quicker to release</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/06/2023-06-13-installation-planning-meeting/#someone-installing-server-on-localhost-but-connecting-to-a-remote-db","title":"Someone installing server on localhost, but connecting to a remote DB","text":"<ul> <li>Theoretically easier if Django DB is on SQLite</li> <li>\u201cIdeal flow\u201d should also work well for this.</li> <li>Mathesar server is still on localhost, so security considerations with the remote DB are delegated to the user</li> </ul>"},{"location":"team/meeting-notes/2023/06/2023-06-13-installation-planning-meeting/#someone-installing-server-db-on-same-remote-system","title":"Someone installing server &amp; DB on same remote system","text":"<ul> <li>Mathesar needs to be accessible to the internet (also needed for collaboration)</li> <li>How do we handle security best practices?<ul> <li>Our own docs should be a reference</li> <li>We can have step by step guides in a different section<ul> <li>This is an organizing principle </li> <li>We should not write a lot of guides, maybe just have one high quality one</li> <li>We can link to community written guides as they emerge</li> </ul> </li> <li>e.g.<ul> <li>Synapse official docs: https://matrix-org.github.io/synapse/latest/setup/installation.html</li> <li>Synapse guides: https://matrix.org/docs/guides/#installing-synapse</li> </ul> </li> <li>Docker lets us automate a lot of this - reverse proxy, port setup, etc.</li> </ul> </li> <li>We should invest time into PaaS, this is a good way for people without time to install quickly</li> <li>Potential options:<ul> <li>Docker</li> <li>From source<ul> <li>Use package managers</li> </ul> </li> <li>PaaS (Docker under the hood)</li> <li>Ansible playbooks that the user can configure<ul> <li>Ansible would be automation of \u201cfrom source\u201d</li> </ul> </li> </ul> </li> <li>One Docker image that they run and have all the pieces in it<ul> <li>Comes with Postgres and Caddy</li> <li>But domain and ports still need to be set up by the user</li> </ul> </li> <li>We need to have a way for users to just get Mathesar up and runnng on a server with minimal steps<ul> <li>This will probably use Docker</li> <li>PaaS fits here too</li> </ul> </li> <li>We also need a way for users who want to customize Mathesar to have the information to do so.<ul> <li>This is probably the one high quality \u201cfrom source\u201d guide that we maintain</li> <li>Would we want to use Docker Compose?<ul> <li>Brent: not really meant for prod container orchestration</li> </ul> </li> </ul> </li> <li>Not worth the time to build multiple Docker images with different configs (e.g. nginx and Caddy)</li> <li>Docker Compose is a third type of set up, probably not worth supporting since it\u2019s midway between \u201cset and forget\u201d and \u201cconfigure everything\u201d, we shouldn\u2019t support this unless we have evidence that there\u2019s a whole bunch of users who need a middle option.</li> </ul>"},{"location":"team/meeting-notes/2023/06/2023-06-13-installation-planning-meeting/#someone-installing-server-db-on-separate-remote-systems","title":"Someone installing server &amp; DB on separate remote systems","text":"<p>Will be discussed at the next meeting</p>"},{"location":"team/meeting-notes/2023/06/2023-06-13-installation-planning-meeting/#someone-installing-mathesar-on-a-paas","title":"Someone installing Mathesar on a PaaS","text":"<ul> <li>Options that our competitors support:<ul> <li>NocoDB:<ul> <li>AWS ECS (Fargate)</li> <li>GCP (Cloud Run)</li> <li>DigitalOcean (App)</li> <li>Cloudron</li> <li>CapRover</li> <li>Railway</li> </ul> </li> <li>Baserow<ul> <li>Heroku</li> <li>Render</li> <li>Cloudron</li> </ul> </li> </ul> </li> </ul> <p>Will be discussed at the next meeting</p>"},{"location":"team/meeting-notes/2023/06/2023-06-13-installation-planning-meeting/#next-steps-and-action-items-2023-06-14","title":"Next steps and action items (2023-06-14)","text":"<ul> <li>Should we wait until Kriti\u2019s back to have more meetings?<ul> <li>Yes</li> <li>Kriti will schedule once she\u2019s back</li> </ul> </li> <li>Next steps (for Mukesh) \u2013 in no particular order:<ul> <li>Research into shipping Mathesar as an executable<ul> <li>Write up summary</li> </ul> </li> <li>Research into supporting SQLite for Mathesar internal DB<ul> <li>Will be useful for multiple personas / installation types</li> </ul> </li> <li>Research feasibility of doing config through UI (from security perspective) <ul> <li>How best to store config if we move DB config into UI</li> <li>How to do this on a remote server (accessible to the internet) securely<ul> <li>maybe look at WordPress</li> </ul> </li> </ul> </li> <li>Research how to make Mathesar work with different levels of DB user permissions</li> <li>Building static files into release</li> </ul> </li> <li>Note for Kriti: we need to also talk about upgrading Mathesar &amp; Kubernetes / Helm charts (cloud based orchestration setups)</li> </ul>"},{"location":"team/meeting-notes/2023/06/2023-06-27-team-meeting/","title":"2023-06-27 team meeting","text":"<p>Attendees: Core team, Anish, Anshuman</p> <p>We talked about Mathesar funding and strategy for the first half of the meeting, those meeting notes are not public. Core team members can find them in HackMD.</p>"},{"location":"team/meeting-notes/2023/06/2023-06-27-team-meeting/#new-team-workflow","title":"New team workflow","text":"<p>We\u2019re going back to fixed length cycles.</p> <ul> <li>We\u2019ll do 4 week cycles with 2 week breaks.</li> <li>Each cycle will have projects<ul> <li>That means projects will be 4 weeks, and should be scoped accordingly.<ul> <li>If concerned, reduce scope.</li> </ul> </li> <li>The projects system will remain the same \u2013 the only difference is that timelines will be restricted to 4 weeks.</li> <li>We need to make sure that individual team members are not overcommitted and each project has the resources it needs.</li> <li>Each person should be owning only one project</li> <li>Participating in at most 2 others.</li> </ul> </li> <li>We\u2019ll be using breaks to:<ul> <li>have a retrospective</li> <li>release Mathesar<ul> <li>Testing</li> <li>bugfixes for found problems</li> </ul> </li> <li>plan and approve the next round of projects</li> <li>consider rotating ongoing responsibilities</li> </ul> </li> <li>This means releases will happen every 6 weeks.<ul> <li>We should figure out how to speed this up in the future, but for now, let\u2019s at least get a standard schedule going.</li> </ul> </li> <li>Next cycle starts on July 10.</li> <li>For community work, we need to make sure we leave enough buffer to deal with community PRs and mentoring.</li> </ul>"},{"location":"team/meeting-notes/2023/06/2023-06-27-team-meeting/#project-approval-process","title":"Project approval process","text":"<p>Projects for the next cycle will be discussed and approved at core team meetings during breaks.</p> <p>We ran out of time and will continue talking on Thursday.</p>"},{"location":"team/meeting-notes/2023/07/2023-07-03-team-meeting/","title":"2023-07-03 team meeting","text":""},{"location":"team/meeting-notes/2023/07/2023-07-03-team-meeting/#brents-update-about-mathesar-users","title":"Brent\u2019s update about Mathesar users","text":"<p>Brent did an update on what he\u2019s learned from the Mathesar users he\u2019s been talking to.</p> <p>Brent\u2019s notes (private): https://hackmd.io/4DId5uYKR1icDXZs8Bq9oQ</p>"},{"location":"team/meeting-notes/2023/07/2023-07-03-team-meeting/#notes","title":"Notes","text":"<ul> <li>Brent has been responsible for responding to installation requests through the website (~15 so far)</li> <li>This means he\u2019s met some potential users</li> <li>There are some things we can learn</li> <li>Notes are here: https://hackmd.io/4DId5uYKR1icDXZs8Bq9oQ, Brent won\u2019t go through all the notes in the call, please read if interested.</li> <li>Users are referred to in general terms (since notes are public)<ul> <li>Business in Italy, wants to use Mathesar for ERP/CRM<ul> <li>Loves data modeling capabilities, he is already familiar with entities relevant to his business</li> <li>Wanted to do it locally</li> <li>Trying it out before committing to it</li> <li>Stuff he wants:<ul> <li>Basic UI stuff like color coding cells, etc.</li> <li>Calculations / formulas</li> </ul> </li> <li>Tried and didn\u2019t like NocoDB</li> <li>Understands portability and having a standard format for the data set</li> <li>Didn\u2019t need installation help \u2013 needed help with some UI confusion</li> </ul> </li> <li>Real estate office under large conglomerate<ul> <li>Use case: more like CRM than ERP</li> <li>Currently using Airtable</li> <li>Wants to integrate with mapping</li> <li>Wants to access DB directly, knows SQL<ul> <li>Was frustrated with Airtable\u2019s inability to do this</li> </ul> </li> <li>Stuck at installation on existing hosting provider<ul> <li>Shared hosting</li> <li>Couldn\u2019t figure out SSH access</li> <li>Wants to use cPanel to install software</li> </ul> </li> </ul> </li> <li>User at large French company<ul> <li>SaaS provider</li> <li>Wants to use Mathesar to enable customer support using Postgres<ul> <li>Can\u2019t modify schemas</li> <li>Since Mathesar\u2019s install adds schemas, it\u2019s a no-go from the tech team</li> </ul> </li> </ul> </li> <li>User want to use it for project management<ul> <li>Was confused about installing it on a web server</li> <li>Seemed to want a SaaS solution, but didn\u2019t express it in so many words</li> <li>Currently using NocoDB</li> <li>Using Windows</li> </ul> </li> <li>A couple of different users want to use Mathesar instead of a Postgres client or code<ul> <li>Currently using: pgweb, pgadmin, command line / Python</li> </ul> </li> </ul> </li> <li>Summary:<ul> <li>We\u2019re attracting interest from business users, not tech users</li> <li>We\u2019re not best equipped to help these types of users because of our installation</li> <li>These users are not using Mathesar for critical operations, and we wouldn\u2019t suggest they do, because they\u2019re not technical enough to manage it.<ul> <li>We can improve Mathesar for these use cases (e.g. offering hosted Mathesar, or hosted DB)</li> </ul> </li> </ul> </li> <li>Discussion:<ul> <li>It\u2019s interesting that some people want us for our capabilities, not just because we\u2019re a \u201cfree Airtable\u201d, it proves some of our hypotheses </li> <li>It\u2019s good to know there are business users interested in data tools</li> <li>Seems like some users are coming from a PoV where running their business on spreadsheets is no longer sustainable<ul> <li>Don\u2019t think about things like backups</li> <li>We may need to educate them or make things easier for them</li> </ul> </li> <li>People who use shared hosting might be satisfied with a SaaS offering (rather than integrate with things like cPanel)</li> <li>We might need to have an opinionated flow on how to set up Mathesar for specific use cases (have a hosted database, cost $X per month)</li> <li>Ideal customer seems to be customers who need non-technical users to have existing databases (like the SaaS provider)<ul> <li>Will pay a bunch of money for Mathesar</li> </ul> </li> <li>We should keep track of installation requests and users in a database<ul> <li>We don\u2019t really have standardized data for this</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-03-team-meeting/#what-should-we-be-working-on-in-the-next-two-weeks","title":"What should we be working on in the next two weeks?","text":"<ul> <li>Wrapping up current work.</li> <li>Cleaning up open PRs.</li> <li>Organizing our GitHub issues and prioritizing ones for the next release.</li> <li>Planning out projects for the next cycle.</li> <li>Discussing goals, priorities, and vision for Mathesar \u2013 we should all be on the same page by the time the next cycle ends.</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-03-team-meeting/#what-should-our-next-projects-be","title":"What should our next projects be?","text":"<ul> <li>Getting user feedback from existing users</li> <li>Should be focused on increasing user adoption</li> <li>At least:<ul> <li>Getting a better picture of Mathesar\u2019s users (maybe personas)</li> <li>Having a clear idea what getting to beta and v1.0 looks like</li> <li>Simplifying installation</li> <li>Making data in Mathesar sharable</li> <li>Addressing bugs and features requested by users</li> <li>Designing the first experiments towards sustainability</li> </ul> </li> <li>After this cycle, we should aim to have enough information to select the next round of projects.</li> </ul> <p>Projects</p> <ul> <li>Kriti &amp; Ghislaine: Strategy / user research</li> <li>Rajat: Localization</li> <li>Brent and Anish: RSQLA1</li> <li>Mukesh: Simplifying installs</li> <li>Pavish: Shareable links</li> <li>Sean &amp; Dom: Improvements for 0.1.3</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-06-installation-meeting/","title":"2023-07-06 installation planning meeting","text":"<p>Information</p> <p>See this page for notes on parts I and II of this meeting. </p> <p>Attendees: Kriti, Brent, Mukesh, Sean, Pavish</p>"},{"location":"team/meeting-notes/2023/07/2023-07-06-installation-meeting/#links","title":"Links","text":"<ul> <li>Mukesh\u2019s installation research (private)</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-06-installation-meeting/#ideal-installation-flows-by-persona","title":"Ideal installation flows by \u201cpersona\u201d","text":""},{"location":"team/meeting-notes/2023/07/2023-07-06-installation-meeting/#someone-trying-mathesar-out-quickly-and-can-use-docker","title":"Someone trying Mathesar out quickly (and can use Docker)","text":"<ul> <li>Discussed in previous meetings. Summary:<ul> <li>Ideal flow is single <code>docker run</code> command</li> <li>New DB automatically set up on container</li> <li>Provide option to change DB to remote</li> <li>Some disagreement about where to provide the option to change<ul> <li>Env vars vs. config file vs. UI</li> <li>What should be the source of truth?</li> </ul> </li> </ul> </li> <li>Notes:<ul> <li>Make it really clear what URL to use it.</li> <li>Make it really easy to log in <ul> <li>No solution presumed, could be token to set up first user, or automatically creating a user, or whatever.</li> </ul> </li> <li>Aside: token based auth will help with E2E tests later</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-06-installation-meeting/#someone-trying-mathesar-out-quickly-locally-and-cannot-use-docker","title":"Someone trying Mathesar out quickly locally (and cannot use Docker)","text":"<ul> <li>Summary of discussion last time:<ul> <li>PaaS could serve users here</li> <li>Can potentially do Python zipapp, but Postgres is a problem</li> <li>We\u2019ll need to ask them to use a remote Postgres server for a one click option</li> <li>Ideal flow:<ul> <li>Download the binaries from our release page</li> <li>Run the downloaded binary file using the cli or as a executable</li> <li>Mathesar will open in a browser window or an electron app</li> <li>Configuration dialog is shown inside the Mathesar app</li> <li>User creates a superuser account using the configuration dialog</li> <li>User is then shown a list of databases handled by Mathesar</li> <li>User proceeds to add the connection string details of the databases to be managed by Mathesar</li> <li>User then installs the necessary Schema based on the features he requires, for example, DML only schema</li> </ul> </li> </ul> </li> <li>From Mukesh\u2019s research:<ul> <li>Windows &amp; Mac - it\u2019s possible to install Postgres, but it\u2019s not ideal because it\u2019s a background service<ul> <li>People complain about running background services</li> </ul> </li> </ul> </li> <li>We should find a way to run it on local Python intepreter <ul> <li>Zipapp doesn\u2019t bundle intepreter, it just bundles dependencies</li> </ul> </li> <li>Pyinstaller does bundle interpreter, but it does a lot of magic and is hard to get working<ul> <li>But Mukesh got Pyoxidizer and cx_freeze working</li> </ul> </li> <li>People installing Python is a problem \u2013 lots of ways to install Python and many problems can arrive</li> <li>But Mukesh got the zipapp working</li> <li>Can enable a larger percentage of people using Mathesar if we can broaden what versions of Python we can work with</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-06-installation-meeting/#someone-installing-everything-on-localhost-not-just-trying-it-out","title":"Someone installing everything on localhost (not just trying it out)","text":"<ul> <li>Summary from last time:<ul> <li>Docker: We should say this is NOT recommended for longer term Mathesar use because we cannot guarantee volume persistence and backups are hard</li> <li>Not Docker:<ul> <li>Same as \u201cideal flow\u201d above</li> </ul> </li> </ul> </li> <li>Ideal flow is the same, but we can assume they\u2019re willing to do more wrangling since they\u2019re not \u201ctrying it out quickly\u201d</li> <li>Security considerations are lower - we may be able to skip some steps</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-06-installation-meeting/#someone-installing-server-on-localhost-but-connecting-to-a-remote-db","title":"Someone installing server on localhost, but connecting to a remote DB","text":"<ul> <li>Summary:<ul> <li>Theoretically easier if Django DB is on SQLite</li> <li>\u201cIdeal flow\u201d should also work well for this.</li> <li>Mathesar server is still on localhost, so security considerations with the remote DB are delegated to the user</li> </ul> </li> <li>Security considerations are lower - we may be able to skip some steps</li> <li>Where do we store DB credentials for remote systems?</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-06-installation-meeting/#someone-installing-server-db-on-same-remote-system","title":"Someone installing server &amp; DB on same remote system","text":"<ul> <li>Summary:<ul> <li>Mathesar needs to be accessible to the internet (also needed for collaboration)</li> <li>Security is more important<ul> <li>Our docs should only document our options</li> <li>Separate section for step-by-step guides about how to harden Mathesar overall<ul> <li>e.g., reverse proxies</li> </ul> </li> </ul> </li> <li>Things start to get more complicated</li> <li>Many more options<ul> <li>docker,</li> <li>from source,</li> <li>PAAS</li> <li>Ansible</li> </ul> </li> <li>Production persona: minimal configuration</li> <li>Customized production persona</li> <li>One from-source guide with all information that they can modify if wanted</li> <li>Not worth the time to build multiple docker images and run minimal containers</li> <li>Docker compose: third way; some customization, but not all; not worth prioritizing</li> </ul> </li> <li>Ansible &amp; PaaS \u2013 zipapps are much better than cloning repo &amp; install dependencies<ul> <li>You can do <code>pip install mathesar</code> and then run Mathesar</li> </ul> </li> <li>Shipping static files along with release seems unnecessary for \u201cbuild from source\u201d</li> <li>We should not conflate people who want to install stable Mathesar without Docker with people who want to modify Mathesar\u2019s code \u2013 we\u2019re calling these both \u201cbuild from source\u201d<ul> <li>non-Docker: people who want to install stable Mathesar without Docker</li> <li>build from source: people who want to modify Mathesar\u2019s code</li> </ul> </li> <li>Options for non-Docker:<ul> <li>Zipapps, OS specific binaries like .deb files, .exe files etc</li> </ul> </li> <li>Considerations:<ul> <li>DB connection and access</li> <li>Do we \u201cown\u201d the DB, does uninstalling Mathesar delete the database?</li> </ul> </li> <li>We need to make a distinction between:<ul> <li>DBs that Mathesar \u201cowns\u201d</li> <li>DBs that Mathesar is used as an interface to.</li> </ul> </li> <li>Maybe we can say Mathesar always has a DB it owns<ul> <li>DBs that Mathesar is used as an interface to can be done using Postgres Foreign Data Wrappers</li> <li>This means DDL would be impossible for those DBs</li> <li>But we can support a lot more DB software - Oracle, Redis, etc.</li> </ul> </li> <li>It seems like users who want to use the data modeling features are pretty much XOR with users who want to connect to existing DBs</li> <li>FDWs use the wire, but you could end up in stale states<ul> <li>Parking lot</li> </ul> </li> <li>Environment variables seem more secure than config files<ul> <li>How do we add more DBs when we use environment variables</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-06-installation-meeting/#someone-installing-server-db-on-separate-remote-systems","title":"Someone installing server &amp; DB on separate remote systems","text":"<ul> <li>Similar to previous persona.</li> <li>We need to provide documentation on how to do this.</li> <li>Depends on:<ul> <li>DB connection and access</li> <li>Managed vs. installed DBs</li> </ul> </li> <li>Where do we store DB credentials for remote systems?<ul> <li>Maybe encrypt with secret key and store it in the DB</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-06-installation-meeting/#someone-installing-mathesar-on-a-paas","title":"Someone installing Mathesar on a PaaS","text":"<ul> <li>Probably use Docker image for this</li> <li>Options that our competitors support:<ul> <li>NocoDB:<ul> <li>AWS ECS (Fargate)</li> <li>GCP (Cloud Run)</li> <li>DigitalOcean (App)</li> <li>Cloudron</li> <li>CapRover</li> <li>Railway</li> </ul> </li> <li>Baserow<ul> <li>Heroku</li> <li>Render</li> <li>Cloudron</li> </ul> </li> </ul> </li> <li>Use single Docker image that includes the DB<ul> <li>Unless the PaaS has a managed DB, we\u2019ll use that then</li> </ul> </li> <li>SQLite doesn\u2019t work with load balancers - we\u2019ll need a Postgres database<ul> <li>This applies to all server installations</li> <li>Docs should strongly recommend Postgres for internal</li> </ul> </li> <li>Where do we store DB credentials for remote systems?</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-06-installation-meeting/#someone-installing-mathesar-on-existing-devops-infrastructure","title":"Someone installing Mathesar on existing DevOps infrastructure","text":"<ul> <li>e.g. Kubernetes, Helm</li> <li>How much help do we want to give them?</li> <li>PaaS should work for any DevOps infrastructure</li> <li>We could provide a Helm Chart (https://helm.sh/)</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-06-installation-meeting/#someone-who-wants-to-build-mathesar-from-source","title":"Someone who wants to build Mathesar from source","text":"<ul> <li>Probably a developer, existing docs should be enough</li> <li>Our existing docs are currently \u201cbuild from source\u201d, but we don\u2019t want them to be</li> <li>Checking out git repo</li> <li>Doesn\u2019t seem like an important persona</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-06-installation-meeting/#prioritization","title":"Prioritization","text":"<p>General strategy:</p> <ul> <li>Until we get to 1.0, we are going to assume installation will be done by technical users.</li> <li>UI should be friendly to non-technical users</li> <li>You need to be technical to install Mathesar, or learn something</li> </ul> <p>Discussion:</p> <ul> <li>But what about users who have contacted us who are running on localhost?<ul> <li>SaaS could serve their need</li> <li>Or a detailed server setup guide (e.g. \u201chow to set up on GCP\u201d that includes all their settings)</li> <li>Or PaaS</li> </ul> </li> <li>No need to work on Mac or Windows servers</li> <li>We\u2019re assuming servers are Linux (not FreeBSD etc. \u2013 at least not yet)</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-06-installation-meeting/#top","title":"Top","text":"<ul> <li>Someone trying Mathesar out quickly (and can use Docker)</li> <li>Someone installing Mathesar on a PaaS</li> <li>Someone installing server &amp; DB on same remote system</li> <li>Someone installing server &amp; DB on separate remote systems</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-06-installation-meeting/#medium","title":"Medium","text":"<ul> <li>Someone installing server on localhost, but connecting to a remote DB</li> <li>Someone installing Mathesar on existing DevOps infrastructure</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-06-installation-meeting/#not-prioritizing-at-all-discourage","title":"Not prioritizing at all / discourage","text":"<ul> <li>Someone trying Mathesar out quickly locally (and cannot use Docker)</li> <li>Someone who wants to build Mathesar from source</li> <li>Someone installing everything on localhost (not just trying it out)</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-06-installation-meeting/#next-steps","title":"Next steps","text":"<p>Mukesh will come up with a project plan based on our priorities discussed here \u2013 we\u2019ve already identified the major problems, and he\u2019s already done some research.</p> <p>We\u2019ll discuss Mukesh\u2019s proposal / solutions at part 4 of this meeting next week.</p>"},{"location":"team/meeting-notes/2023/07/2023-07-06-team-meeting/","title":"2023-07-06 team meeting","text":""},{"location":"team/meeting-notes/2023/07/2023-07-06-team-meeting/#project-finalization","title":"Project finalization","text":"<p>List of projects from last time:</p> <ul> <li>Kriti &amp; Ghislaine: Strategy / user research<ul> <li>Kriti will write up the project</li> <li>Everyone will help</li> <li>More calls with fewer people at once</li> </ul> </li> <li>Rajat: Internationalization<ul> <li>Update the project timeline (on the wiki page) to go till the end of the cycle.</li> <li>Sean frontend review</li> <li>Mukesh backend review</li> </ul> </li> <li>Brent and Anish: RSQLA1<ul> <li>Update the project timeline (on the wiki page) to go till the end of the cycle.</li> <li>Dom: backend reviewer</li> </ul> </li> <li>Mukesh: Simplifying installs<ul> <li>Need to have a meeting to talk about solutions to issues identified in previous meetings<ul> <li>today; two hours from start of current meeting.</li> <li>Goal should be to scope and define project for this cycle</li> <li>Sean is setting up the event</li> </ul> </li> <li>Mukesh will write up the project after the meeting</li> <li>Might need a front end helper (Pavish?)</li> <li>Might need a front end reviewer (Rajat?)</li> <li>Brent will do back end review</li> </ul> </li> <li>Pavish: Shareable links<ul> <li>Write up the project for the cycle (implementation)</li> <li>Dom: backend reviewer</li> <li>Sean: frontend reviewer</li> </ul> </li> <li>Sean &amp; Dom: Improvements for 0.1.3<ul> <li>There\u2019s an ongoing thread for working on priority of issues</li> <li>TODO: Sean, Dom, and Kriti need to prioritize the issues</li> <li>Front end reviewers will rotate</li> <li>Mukesh will do backend review</li> </ul> </li> <li>Maria &amp; Brent: Wrapping up back end of lists (so far)<ul> <li>Helper: Ghislaine</li> <li>No front end needed</li> </ul> </li> </ul> <p>We should do an updated round of project writeups specific to this cycle and close out the old ones.</p>"},{"location":"team/meeting-notes/2023/07/2023-07-06-team-meeting/#todo","title":"TODO","text":"<ul> <li>Write up projects by next meeting (Thursday)</li> <li>If anyone needs help, talk to Kriti</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-06-team-meeting/#ongoing-responsibility-finalization","title":"Ongoing responsibility finalization","text":"<p>Kriti will own:</p> <ul> <li>Team management</li> <li>Marketing (overall)</li> </ul> <p>We need to designate:</p> <ul> <li>Release owner: Rajat</li> </ul> <p>Consider rotating:</p> <ul> <li>Repo admin</li> <li>Installation help<ul> <li>Now User help</li> <li>Kriti will take ownership</li> </ul> </li> <li>User feedback tracking</li> <li>Marketing responses</li> <li>GSoC</li> </ul> <p>Not rotating anything except installation help (see below)</p> <p>Should we have a responsibility for:</p> <ul> <li>Helping users who ask for help?</li> <li>Renaming installation help to user help</li> <li>Need a standard process for dealing with users, whether it\u2019s info@ or install request form or Matrix/GitHub requests</li> <li>Owner should coordinate the team and establish a process</li> <li>Each user should probably be assigned to the person who first talked to them</li> <li>Kriti will own this</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-06-team-meeting/#standup-or-reporting-in-general","title":"Standup (or reporting in general)","text":"<p>Standup isn\u2019t really working - let\u2019s talk about alternatives.</p> <p>Goals are visibility for:</p> <ul> <li>Other team members<ul> <li>Project owners should make weekly updates to developer mailing list (Fridays; start next week!)<ul> <li>One thread per project</li> <li>No standard format (Kriti sounds skeptical)</li> </ul> </li> </ul> </li> <li>Project owners<ul> <li>Keep track of things in your project, put it in the update</li> </ul> </li> <li>Release manager<ul> <li>Pay special attention to the project updates.</li> </ul> </li> <li>Team manager<ul> <li>Need to be able to get reports</li> <li>Sean suggests moving to HackMD</li> <li>Sean and Dom like the todo list aspect of standups.</li> <li>Kriti brought up idea of doing work logs in wiki.</li> <li>Kriti will set up a section of the wiki for personal logs.</li> </ul> </li> <li>Sign of life<ul> <li>We want to develop a culture of saying \u2018good morning\u2019 in Internal channel</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-06-team-meeting/#action-item-wrap-up","title":"Action item wrap-up","text":"<ul> <li>Write up your projects by next meeting.</li> <li>Work logs in wiki (most recent on top)</li> <li>Weekly updates on Fridays from project owners</li> <li>Say hello in the internal channel.</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-11-installation-meeting/","title":"2023-07-11 installation meeting","text":""},{"location":"team/meeting-notes/2023/07/2023-07-11-installation-meeting/#links","title":"Links","text":"<ul> <li>Meeting notes: Parts I &amp; II</li> <li>Meeting notes: Part III</li> <li>Mukesh\u2019s installation research (private)</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-11-installation-meeting/#notes","title":"Notes","text":""},{"location":"team/meeting-notes/2023/07/2023-07-11-installation-meeting/#terminology","title":"Terminology","text":"<ul> <li>User database - Database containing user data (shows up in UI)</li> <li>Internal database - Database containing metadata used internally by the software (doesn\u2019t show up in UI)</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-11-installation-meeting/#1st-persona-someone-trying-out-mathesar-quickly-with-docker","title":"1st Persona: Someone Trying out Mathesar quickly, with Docker","text":"<p>Assumptions:</p> <ul> <li>They have docker</li> <li>Want to try things out locally</li> <li>Won\u2019t keep this installation long-term</li> </ul> <p>Solutions:</p> <ul> <li>Single Docker image<ul> <li>Postgres inside</li> <li>Secret key generated with no interaction</li> <li>Side benefit: support older Docker versions (since our compatibility issues are with docker compose)</li> </ul> </li> <li>Should we have a second Docker image without Postgres?<ul> <li>For connecting to remote DBs</li> <li>This seems for a different persona</li> <li>Also, connecting to local DBs (vs. remote DBs) from a Docker container is much harder for Linux</li> </ul> </li> <li>Config files vs. environment variables<ul> <li>Research into similar products indicates users wants config files that can be overridden by environment variables</li> <li>Config files can be put into protected locations (e.g. not readable by other users on the system)</li> <li>Config file will live in the container, not the host system</li> <li>Environment variables doesn\u2019t make sense for this persona</li> <li>We can pass environment variables when running the image if needed, and they would persist in the config file in the Docker filesystem </li> </ul> </li> <li>What do we need environment variables for?<ul> <li>Binding volumes?<ul> <li>Not needed for this persona</li> <li>If they want to transition installation to long term solution, that would be different, but we\u2019re not recommending that anyway </li> <li>We could have docs for \u201cyou lost your container, how to get your data\u201d</li> </ul> </li> <li>Using different ports?</li> </ul> </li> <li>For this persona, it\u2019s about speed to get Mathesar running</li> <li>What about users who want to try it out quickly by connecting to an existing DB? <ul> <li>Pass config via environment variables</li> <li>Write config file via UI, persist to disk.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-11-installation-meeting/#installing-mathesar-on-paas-one-click-frictionless","title":"Installing Mathesar on PaaS (one-click, frictionless)","text":"<ul> <li>Need a lean image without a DB for this</li> <li>We want to wire Mathesar up to managed DB services</li> <li>We need to decide what PaaS to target<ul> <li>Should be frictionless</li> <li>Managed Postgres would be helpful</li> </ul> </li> <li>Additional work we might need to do, on a per-platform basis:<ul> <li>Add Mathesar to their installer system</li> <li>Add platform-specific details to our documentation</li> </ul> </li> <li>Which platforms should we target?<ul> <li>Mukesh has not yet done research into this</li> </ul> </li> <li>Pavish: We should consider the possibilty that users might want multiple instances of Mathsar running on the same PaaS. How will we acheive this if we use a config file?<ul> <li>Kriti: \u201cI\u2019m sure this is a solved problem\u201d</li> <li>Pavish: Mathesar might be unique in that we are planning to allow the application to modify the config file</li> </ul> </li> <li>Pavish: What are we storing in the config file?<ul> <li>Mukesh: it would be the same as all the ENV vars</li> </ul> </li> <li>Pavish: Do we even need the config file?<ul> <li>Mukesh: it\u2019s important for persistance. It\u2019s important in the case when you have Mathesar running behind a load balancer. Config file is meant only for running one instance of Mathesar</li> </ul> </li> <li>Brent: I\u2019m not convinced that horizontal scaling is a huge priority right now. In that case, the stuff that you\u2019s want to persist would be in the database anyway.</li> <li>Kriti: PaaS platforms often have their own systems for persisting private data like \u201csecret key\u201d and similar.</li> <li>Where do we store the database connection credentials?<ul> <li>PaaS service doesn\u2019t necessarily have access to modify files on disk, so we would need to store the user DB credentials in the internal DB.</li> <li>How do we secure the credentials that we\u2019re storing in the Django DB?</li> </ul> </li> <li>We either:<ul> <li>Need to store connection credentials in the internal DB</li> <li>OR: we need to give up support for editing DB connections through the UI.</li> </ul> </li> <li>We need to do more research on how to store connection credentials</li> <li>Brent: If we can solve the problem of securely storing the connection credentials in the internal DB, then we solve a huge class of problems that apply to many different personas</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-11-installation-meeting/#next-steps","title":"Next steps","text":"<ul> <li>What does Mukesh need in order to write up a project?</li> <li>Sean: concerned that we\u2019re not looking at the high level of \u201creducing total number of personas\u201d</li> <li>Kriti: we\u2019ve reduced the number of personas through prioritization</li> <li>Solving PaaS well could help solve other personas too</li> <li>Kriti reccomends:<ul> <li>Work towards implementing the \u201cSingle Docker Image\u201d approach</li> <li>Continue research on other approaches</li> <li>Fine to focus on other research and implementation that would seem to improve other personas too, e.g. Zipapps, etc.</li> <li>By the end of the cycle, we should have a plan for what personas we\u2019re doing and the implementation plan for them</li> </ul> </li> <li>Mukesh will write up project</li> <li>Kriti &amp; Mukesh will discuss next steps and schedule another call</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-26-team-meeting/","title":"2023-07-26 team meeting","text":""},{"location":"team/meeting-notes/2023/07/2023-07-26-team-meeting/#list-data-type-update","title":"List data type update","text":"<ul> <li>Allocated time: 15 minutes</li> <li>Added by: Brent</li> <li>Required participants:: Brent, Maria, people interested in list data type</li> </ul> <p>Maria will present a report about the current state of list data types in Mathesar, and her work over the last couple months.</p> <p>The report. </p>"},{"location":"team/meeting-notes/2023/07/2023-07-26-team-meeting/#product-strategy-update","title":"Product strategy update","text":"<ul> <li>Allocated time: 45 minutes</li> <li>Added by: Kriti</li> <li>Required participants:: Core team</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-26-team-meeting/#pre-meeting-prep","title":"Pre-meeting prep","text":"<ul> <li>Discussion prompt:<ul> <li>If you have time, please look through:<ul> <li>Product strategy draft (private)</li> <li>User Research data (private)</li> <li>Use cases list (private)</li> <li>Persona needs analysis (private)</li> </ul> </li> </ul> </li> <li>Discussion goal: <ul> <li>Share progress and get feedback on current approach from the team</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-26-team-meeting/#notes","title":"Notes","text":"<ul> <li>This is an update on the work that Kriti and Ghislaine have been doing.</li> <li>Nothing yet is \u201cfinished\u201d. Want feedback and thoughts as project continues.</li> <li>Kriti and Ghislaine have been approaching it separately.<ul> <li>Kriti: high-level product strategy and goals</li> <li>Ghislaine: looking through all the data we\u2019ve collected on what kinds of problems people use data tooling to solve. Figuring out trends so that we can get to personas.</li> </ul> </li> <li>We had a persona for our launch last year. We\u2019re seeking five personas to define right now</li> <li>We\u2019re not seeking decisions today. Not seeking synchronous discussion. Just presentation, discussion can be async.</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-26-team-meeting/#presentation-from-ghislaine","title":"Presentation from Ghislaine","text":"<ul> <li>We\u2019ve been looking through public comments that we\u2019ve noticed from Syften</li> <li>We\u2019re documenting specific \u201cuse cases\u201d, with a bunch of detail about each one<ul> <li>Documented here</li> </ul> </li> <li>Data extracted from these use cases is being stored in Mathesar in the User Research schema</li> <li>Also looking at industry blogs and job postings</li> <li>All this data will form the basis of the user personas that we\u2019re defining</li> <li>Ghislaine will provide more info to us later (via a wiki page) about how we can collaboratively add data to her set of \u201cuse cases\u201d data</li> <li>Pavish: how do we prioritize use cases?<ul> <li>we\u2019ll use the strategy to help with prioritization (Kriti\u2019s work)</li> </ul> </li> <li>Brent: concerned that the categorization scheme might be too ridgid and might steer us towards assumptions based on the scheme. Need to be careful to avoid confirmation bias<ul> <li>Kriti: Ghislaine pulled the categories from the use cases, not the other way around. We\u2019ll also have a process for inputting new use cases and re-evaluating the categories.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-26-team-meeting/#presentation-from-kriti","title":"Presentation from Kriti","text":"<ul> <li>document</li> <li>We\u2019ll try to have some discussion about this async</li> <li>We\u2019ll continue seeking some decisions on the niche at next week\u2019s meeting</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-28-installation-meeting/","title":"2023-07-28 installation meeting","text":""},{"location":"team/meeting-notes/2023/07/2023-07-28-installation-meeting/#links","title":"Links","text":"<ul> <li>Meeting notes: Parts I &amp; II</li> <li>Meeting notes: Part III</li> <li>Meeting notes: Part IV</li> <li>2023-07 installation improvements project page</li> <li>Mukesh\u2019s installation research (private)</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-28-installation-meeting/#pre-meeting-prep","title":"Pre-meeting prep","text":"<p>Please read the following proposed outline for the documentation</p>"},{"location":"team/meeting-notes/2023/07/2023-07-28-installation-meeting/#assumptions-for-the-reader-not-part-of-outline","title":"Assumptions (for the reader; not part of outline)","text":"<ul> <li>Users are comfortable with self-hosting, we do not need to educate them on self-hosting basics</li> <li>For PaaS</li> <li>Considered to be used for production, so all best practices like using Postgres as internal db, env variables are used by default</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-28-installation-meeting/#table-of-contents","title":"Table of contents","text":"<ul> <li>Introduction &amp; Overview <ul> <li>Content: homepage of docs.mathesar.org</li> </ul> </li> <li>Installation<ul> <li>Install with Docker<ul> <li>Content: Single image Docker</li> <li>Note: We will no longer be offering a multi-container setup</li> <li>Persona: Try it out quickly locally [TOP]</li> <li>Persona: Someone installing on a remote system [TOP]</li> </ul> </li> <li>Install on [PaaS name]<ul> <li>Content: Instructions for specific PaaS, repeat this ToC item as needed for more PaaS</li> <li>Persona: Try it out quickly on a PaaS [TOP]</li> </ul> </li> <li>Install on Debian<ul> <li>Content: Non-Docker install</li> <li>Persona: Someone installing on a remote system (Debian) [TOP]</li> </ul> </li> <li>Install using Python binary<ul> <li>Content: <code>python mathesar.pyz</code><ul> <li>We\u2019ll need to tell them how to connect to Postgres or install a Postgres server</li> </ul> </li> <li>Persona: Someone installing on a remote system (non-Debian Linux) [TOP]</li> <li>Persona: Someone installing server on localhost, but connecting to a remote DB [MEDIUM]</li> </ul> </li> <li>Install with Helm<ul> <li>Content: Instructions for using Helm Chart</li> <li>Persona: Install on existing infrastructure [MEDIUM]</li> </ul> </li> <li>[\u2026same pattern will apply for future installs] </li> </ul> </li> <li>Configuration<ul> <li>Environment variables</li> <li>Connecting to DBs on localhost</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-28-installation-meeting/#install-with-docker","title":"Install with Docker","text":"<ul> <li>Pre-requisites:<ul> <li>Install Docker</li> <li>Root access if you\u2019re on Linux</li> </ul> </li> <li>Steps:<ul> <li>Single docker run command<ul> <li>Mount a volume to store information in the default location used by Docker</li> <li>Tip where we explain how to configure for production use<ul> <li>Set secret key as environment variable</li> </ul> </li> </ul> </li> <li>Set up superuser through UI</li> </ul> </li> <li>Next steps to take</li> <li>Set up additional DBs through UI</li> <li>Set up a update server</li> <li>Set up for production server<ul> <li>Use environment variables. Point to \u201cConfiguring Mathesar\u201d section</li> </ul> </li> <li>Administration</li> <li>Configuring Mathesar<ul> <li>Platform specific configuration instructions</li> <li>Point to \u201cEnvironment variables\u201d page</li> </ul> </li> <li>Uninstall process</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-28-installation-meeting/#install-with-paas","title":"Install with PaaS","text":"<ul> <li>Pre-requisites:<ul> <li>Have an account on the PaaS platform (Depends on the platform, some platforms might allow you to set up without an account)</li> </ul> </li> <li>Steps:<ul> <li>Click the one click deploy button or click on the Mathesar app on the app store which will install Postgres server along with Mathesar server (Varies based on the platform)</li> <li>Set up superuser through UI</li> </ul> </li> <li>Next steps to take</li> <li>Set up an automatic update process</li> <li>Set up for production server<ul> <li>Use environment variables. Point to \u201cConfiguring Mathesar\u201d section</li> </ul> </li> <li>Administration</li> <li>Configuring Mathesar<ul> <li>Platform specific configuration instructions</li> <li>Point to \u201cEnvironment variables\u201d page</li> </ul> </li> <li>Uninstall process</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-28-installation-meeting/#install-on-debian","title":"Install on Debian","text":"<ul> <li>Pre-requisites:<ul> <li>Postgres server</li> </ul> </li> <li>Steps:<ul> <li>Add Mathesar repo to apt</li> <li>Run <code>apt install</code> to install Mathesar</li> <li>Run command to start the Mathesar executable</li> <li>Set up superuser through UI</li> <li>Set up user DBs through UI</li> </ul> </li> <li>Next steps to take</li> <li>Steps for updating</li> <li>Set up for production server<ul> <li>Use environment variables. Point to \u201cConfiguring Mathesar\u201d section</li> <li>Use Postgres server as the internal database</li> </ul> </li> <li>Administration</li> <li>Configuring Mathesar<ul> <li>Platform specific configuration instructions</li> <li>Point to \u201cEnvironment variables\u201d page</li> </ul> </li> <li>Uninstall process</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-28-installation-meeting/#install-using-python-binary","title":"Install using Python binary","text":"<ul> <li>Pre-requisites:<ul> <li>Python Interpreter</li> <li>Postgres server</li> </ul> </li> <li>Steps:<ul> <li>Download zipapp from our release page</li> <li>Run command to start the Mathesar executable</li> <li>Set up superuser through UI</li> <li>Set up user DBs through UI</li> </ul> </li> <li>Next steps to take</li> <li>Steps for updating</li> <li>Set up for production server<ul> <li>Use environment variables. Point to \u201cConfiguring Mathesar\u201d section</li> <li>Use Postgres server as internal database</li> </ul> </li> <li>Administration</li> <li>Configuring Mathesar<ul> <li>Platform specific configuration instructions</li> <li>Point to \u201cEnvironment variables\u201d page</li> </ul> </li> <li>Uninstall process</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-28-installation-meeting/#install-with-helm","title":"Install with Helm","text":"<ul> <li>Pre-requisites:<ul> <li>Kubernetes</li> <li>Helm</li> <li>Postgres server</li> </ul> </li> <li>Steps:<ul> <li>Add Mathesar repo to helm repo</li> <li>Provide some adequate defaults such as enable ingress, internal postgres server to add to values.yml. This is similar to our existing docker compose <code>.env</code> file</li> <li>Tip: Point to \u201cConfiguring Mathesar\u201d section</li> <li>Run <code>helm install</code> to install Mathesar</li> <li>Set up superuser through UI</li> </ul> </li> <li>Next steps to take</li> <li>Steps for updating</li> <li>Set up for production server<ul> <li>Use environment variables</li> </ul> </li> <li>Administration</li> <li>Configuring Mathesar<ul> <li>Platform specific configuration instructions</li> <li>Point to \u201cEnvironment variables\u201d page</li> </ul> </li> <li>Uninstall process</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-28-installation-meeting/#environment-variables","title":"Environment Variables","text":"<p>List of environment variables and descriptions</p>"},{"location":"team/meeting-notes/2023/07/2023-07-28-installation-meeting/#connecting-to-dbs-on-localhost","title":"Connecting to DBs on localhost","text":"<p>This will explain how to connect to localhost DBs if you\u2019re using Docker (content is already on docs.mathesar.org)</p>"},{"location":"team/meeting-notes/2023/07/2023-07-28-installation-meeting/#stuff-were-removing-from-current-docs-not-part-of-outline","title":"Stuff we\u2019re removing from current docs (not part of outline)","text":"<ul> <li>Guided script installation<ul> <li>plus appendices</li> </ul> </li> <li>Docker compose installation<ul> <li>plus \u201ccustomizing docker compose\u201d page</li> </ul> </li> <li>Install from scratch \u2013&gt; renamed to \u201cInstall on Debian\u201d</li> <li>Administration section (uninstall &amp; upgrade Mathesar)<ul> <li>Will be folded into individual installation types</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-28-installation-meeting/#agenda","title":"Agenda","text":""},{"location":"team/meeting-notes/2023/07/2023-07-28-installation-meeting/#do-the-personas-make-sense-do-we-need-any-additional-narrowing-down-or-clarification","title":"Do the personas make sense? Do we need any additional narrowing down or clarification?","text":"<p>Top</p> <ul> <li>Someone trying Mathesar out quickly (and can use Docker)</li> <li>Someone installing Mathesar on a PaaS</li> <li>Someone installing server &amp; DB on same remote system<ul> <li>Using Docker</li> <li>Using Debian, but not Docker</li> <li>Using some other flavor of Linux</li> </ul> </li> <li>Someone installing server &amp; DB on separate remote systems<ul> <li>same as above</li> </ul> </li> </ul> <p>Medium</p> <ul> <li>Someone installing server on localhost, but connecting to a remote DB</li> <li>Someone installing Mathesar on existing DevOps infrastructure<ul> <li>Helm, Kubernetes goes here</li> </ul> </li> </ul> <p>Not prioritizing at all - until more than one person asks</p> <ul> <li>Ansible / other automation guides</li> <li>Someone installing Mathesar on a remote system that\u2019s not Linux</li> <li>Someone who wants to build Mathesar from source</li> <li>Someone trying Mathesar out quickly locally (and cannot use Docker)</li> </ul> <p>Discourage</p> <ul> <li>Someone installing everything on localhost (not just trying it out)</li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-28-installation-meeting/#additional-discussion","title":"Additional discussion","text":"<ul> <li>What about people using load balancers?<ul> <li>This is outside Mathesar\u2019s purview, doesn\u2019t matter</li> <li>PaaS probably covers load balancers anyway</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-28-installation-meeting/#conclusion","title":"Conclusion","text":"<p>Personas are fine, see additional detail added above.</p>"},{"location":"team/meeting-notes/2023/07/2023-07-28-installation-meeting/#does-the-proposed-outline-make-sense","title":"Does the proposed outline make sense?","text":""},{"location":"team/meeting-notes/2023/07/2023-07-28-installation-meeting/#discussion","title":"Discussion","text":"<ul> <li>\u201cInstall with Python binary\u201d is a confusing header.<ul> <li>Maybe use \u201cInstall from binary\u201d?</li> <li>Maybe replace with PyPI installation?<ul> <li>This could lead to Python installation issues</li> <li>Virtualenv needs to be set up</li> </ul> </li> <li>The persona we\u2019re trying to serve here is \u201csomeone installing on remote Linux server, non-Debian, non-Docker\u201d</li> <li>Are zipapps the best solution for this persona?</li> <li>Brent &amp; Kriti agree that they would probably ignore zipapps when consuming installation docs because they\u2019re not familiar</li> <li>Lots of FUD about broken Python installs</li> <li>We need to support a wider band of Python, <code>pip install</code> will work better</li> <li>Synapse PyPI instructions: https://matrix-org.github.io/synapse/latest/setup/installation.html#installing-as-a-python-module-from-pypi</li> <li>Conclusion: We\u2019ll replace this with \u201cInstall using PyPI\u201d</li> <li>We\u2019ll no longer be working on zipapps unless there\u2019s demonstrable user need in the future</li> </ul> </li> <li>What we\u2019re removing:<ul> <li>Fine with removing Docker Compose &amp; guided script</li> <li>Might be useful to keep uninstallation &amp; update in the sidebar<ul> <li>We\u2019ll keep the uninstall and update pages</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/07/2023-07-28-installation-meeting/#what-work-do-we-need-to-do-to-enable-this-outline","title":"What work do we need to do to enable this outline?","text":"<ul> <li>Get Mathesar working with a wide band of Python</li> <li>Create a Debian package</li> <li>Create a PyPI package</li> <li>We need to know what Postgres we support</li> <li>Move user DB management to the database, encrypted by secret key<ul> <li>Design work, UI work</li> </ul> </li> <li>Helm chart work</li> <li>Superuser creation moved to the UI \u2013 already underway</li> <li>Make complete Docker image</li> <li>Figure out as a team how we want to manage our DockerHub repo and tags<ul> <li>There are a bunch of different strategies</li> </ul> </li> <li>Reassess Docker version requirements once we do a single Docker image<ul> <li>We only have a stringent version requirement because of Docker Compose, which we don\u2019t plan to use </li> </ul> </li> <li>Building static files<ul> <li>If it\u2019s possible to build static files as part of the release assets in e.g. https://github.com/centerofci/mathesar/releases/tag/0.1.2, we should do that</li> <li>Single source of truth for release assets</li> <li>Debian package and PyPI can use this single source of truth</li> </ul> </li> <li>Secret key generation<ul> <li>Docker should do this</li> <li>Debian - post install script</li> <li>Where should it live?</li> </ul> </li> <li>Storing configuration<ul> <li>Do we want to even provide a Django settings file in our repo?</li> <li>We ran out of time at this point</li> </ul> </li> <li>Permissions<ul> <li>Should we create a DB automatically?</li> <li>No time to discuss now</li> </ul> </li> </ul> <p>Mukesh will start separate email threads to discuss:</p> <ul> <li>Configuration</li> <li>Permissions</li> </ul> <p>We\u2019ll try to get to a decision async and if we reach an impasse, we can set up another meeting.</p>"},{"location":"team/meeting-notes/2023/08/2023-08-09-team-meeting/","title":"2023-08-09 team meeting","text":"<p>Attendees: Anish, Brent, Dom, Ghislaine, Kriti, Mukesh, Pavish, Rajat, Sean</p>"},{"location":"team/meeting-notes/2023/08/2023-08-09-team-meeting/#product-strategy-niche-discussion","title":"Product strategy &amp; niche discussion","text":""},{"location":"team/meeting-notes/2023/08/2023-08-09-team-meeting/#pre-meeting-prep","title":"Pre-meeting prep","text":"<ul> <li>Discussion prompt:<ul> <li>Feedback from the team in 1:1s so far has been \u201cjust pick a niche!\u201d</li> <li>We\u2019ll be focusing on business users that already have a PostgreSQL database to connect to.</li> <li>We do need to narrow this further, this is what our research will be focused on in the next cycle.</li> </ul> </li> <li>Discussion goal: Buy-in from team, resolving concerns.</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-09-team-meeting/#notes","title":"Notes","text":"<ul> <li>Team agrees that \u201cfocusing on business users that already have a PostgreSQL database\u201d is a good idea.<ul> <li>Still need to decide how specific our niche is. We\u2019ll do this once we\u2019ve done more research, planned for the next cycle.</li> </ul> </li> <li>Please note that this does not mean we\u2019re only supporting users with existing databases. We\u2019re just going to be focusing on making the experience better for those users first.<ul> <li>We should not be making any technical or architectural decisions that cut off our ability to support other users in the future.</li> </ul> </li> <li>Side note: 1/1 discussions to gather feedback on product strategy were productive! <ul> <li>Ghislaine will be scheduling discussions with remaining team members about product strategy.</li> <li>We\u2019ll also use this discussion format more in the future.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-09-team-meeting/#2023-cycle-1-retrospective","title":"2023 Cycle 1 retrospective","text":""},{"location":"team/meeting-notes/2023/08/2023-08-09-team-meeting/#pre-meeting-prep_1","title":"Pre-meeting prep","text":"<ul> <li>Discussion prompt:<ul> <li>Please write down your thoughts about the previous cycle, we\u2019ll discuss.</li> </ul> </li> <li>Discussion goal: <ul> <li>Analyze previous cycle</li> <li>See what worked so we can keep it for the next cycle</li> <li>See what didn\u2019t work so we can figure out how to tweak the next cycle</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-09-team-meeting/#pre-meeting-notes","title":"Pre-meeting notes","text":""},{"location":"team/meeting-notes/2023/08/2023-08-09-team-meeting/#what-went-well","title":"What went well","text":"<ul> <li>[Kriti] Signifcant progress on most projects</li> <li>[Kriti] We have a plan for installation finally</li> <li>[Brent] I felt like I was able to really focus on my work, and RSQLA1 in particular</li> <li>[Brent] We were able to capture information from the List project that will hopefully help us make future decisions</li> <li>[Sean] Qualitatively, it feels like our collective pace has really accelerated in this cycle</li> <li>[Ghislaine] My tasks were clear. Check-ins with Kriti felt very efficient and I think we managed to align around the same goals. I also enjoyed having more discussions with team members.</li> <li>[Rajat] I was personally able to deliver a lot more as compared to previous cycles.</li> <li>[Dom] Working on a mix of different issues was stimulating, and them not depending on each other was nice, because one of them getting blocked meant that I could just switch to the next one.</li> <li>[Pavish] I had a lot of focused time for coding/coding-related tasks during the cycle.</li> <li>[Pavish] Working on the backend has helped me understand some parts of the BE architecture, and has given me a sense of calculating effort when it comes to moving logic between FE and BE, and deciding the best place to implement said logic.</li> <li>[Pavish] Repeating a point made by almost everyone: Overall, I feel like we\u2019ve gotten a significant amount of work done as a team.</li> <li>[Mukesh] We got a good amount of quality feedback from the community.</li> <li>[Mukesh] Figuring out the targeted persona (even if it is an assumption at this point) our app is aimed at, helped progress the Installation plan significantly.</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-09-team-meeting/#what-didnt-go-so-well","title":"What didn\u2019t go so well","text":"<ul> <li>[Kriti] Most projects didn\u2019t get completed</li> <li>[Brent] People seemed to each be absorbed by their own projects (at least in the back end); cross-communication was weak.</li> <li>[Brent] No synergy between back end projects; time spent on one was time lost on another.</li> <li>[Sean] hard to know exactly how to deal with changes in plans mid-cycle. I spent almost the entire cycle on unplanned work because it was related to a user-reported bug.</li> <li>[Rajat] Sean had a lot of review items on him which contributed towards some of the delays. </li> <li>[Ghislaine] There\u2019s room for improvement in how we facilitate more meaningful team discussions.</li> <li>[Dom] Underestimated how much time work outside my project will require, and that this work will mostly have to happen at the last 1-2 weeks of the cycle. </li> <li>[Pavish] Task assignment planning before the cycle needs to be improved. Both i18n and Shareable links projects had a lot of code changes (and multiple PRs) to review, and Sean had to do both, which lead to inevitable delays.</li> <li>[Pavish] There was a part of me that wanted to avoid context switching and not do tasks that felt like they took my focus away from my project, and another part of me that wanted to do those tasks. I did subpar work juggling between the two.</li> <li>I wanted to collect my thoughts and have a more focused discussion around \u2018Users who do not want anything installed on their DB\u2019, and resorted to chats over Matrix in the end. I could have taken a day or two to send a more meaningful mail instead.</li> <li>I noticed a number of issues that we may want to focus on the next cycle which I discussed over chat, and am yet to create tickets for.</li> <li>I did not attend the last Installation planning meeting to focus more on my project, though I was super interested in it.</li> <li>[Pavish] There was no specific person assigned to deal with general issues that may arise during the cycle. It was hard to request help from any specific person since everyone had a lot of work.</li> <li>I was met with test case failures due to \u2018too many clients\u2019 error, and I required help from the backend team members who had overall knowledge of the test suite so that I could proceed in the best possible direction. I wasn\u2019t sure whom to reach out to, and requested help from everyone. </li> <li>[Mukesh] Context switching between researching and doing code related work in the same cycle was daunting.</li> <li>[Mukesh] There was no one assigned for firefighting issues that weren\u2019t related to any project.</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-09-team-meeting/#shout-outs","title":"Shout outs","text":"<ul> <li>[Kriti] Pavish for great work on taking sharable links from conception to implementation</li> <li>[Brent] Anish did fantastic work and was crucial to the success of RSQLA1.</li> <li>[Brent] Dom for really pushing me to make sure the SQL code is as well-documented and easy to understand as possible.</li> <li>[Sean] echoing Kriti\u2019s praise for Pavish. Awesome to see a team member doing such extensive work across the entire stack!</li> <li>[Sean] Impressed with Rajat\u2019s sheer amount of code changes in a relatively short amount of time for the i18n work</li> <li>[Ghislaine] Kriti did an amazing job with Mathesar\u2019s presentation. Also Mukesh for being proactive in researching use cases for Mathesar and starting conversations with other people around this topic. I got a lot of insights from our conversations.</li> <li>[Rajat] Mukesh for helping me with the backend work and for faster PR reviews.</li> <li>[Dom] Brent for being a living encyclopedia of Postgres internals. Your insights saved me days and days of work!</li> <li>[Dom] Pavish on implementing a significant feature across the stack!</li> <li>[Pavish] Brent for stepping up and helping me handle the test case failures. It saved me a lot of time.</li> <li>[Pavish] Mukesh for taking the time for a long call on permissions, and reviewing permission related changes in my PRs. In hindsight, I should have mentioned him as a reviewer before the cycle but hadn\u2019t. This was additional work for him that he hadn\u2019t planned for.</li> <li>[Mukesh] Kriti for helping with putting together the installation plan</li> <li>[Mukesh] Brent for his honest feedback on the various discussions</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-09-team-meeting/#ideas","title":"Ideas","text":"<ul> <li>[Kriti] Increase buffer times when you\u2019re estimating projects</li> <li>[Kriti/Sean] Designate a priority order for projects in the cycle so that we know what to cut ahead of time if we need to shift some responsibilities around</li> <li>[Brent] Fewer overall projects, more people per project</li> <li>[Brent] Try to choose projects that \u2018go together\u2019 to help encourage communication and working together</li> <li>[Brent] Think of ways to get FE and BE ways to work together on things.<ul> <li>[Dom] In reply to the common theme of above ideas, I\u2019m skeptical of people working on the same thing at the same time being good for synergy, or, at least, I\u2019d say this is nuanced. While I see some pros, such as everyone being engaged at the same time and thus being able to sanity-check others more promptly, I also see cons, such as people blocking each other when working too closely or stepping on each others\u2019 toes when working too loosely; we\u2019ve not always gotten that balance right. I\u2019d like to hear more about the envisioned benefits. That said, I\u2019m not against experimenting with this.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-09-team-meeting/#notes_1","title":"Notes","text":"<ul> <li>Sean: which \u201cfires\u201d should we have \u201cfought\u201d during the cycle?<ul> <li>Mukesh: issues with tests cases that Pavish raised.</li> <li>Dom: I would have been able to help with this, but I didn\u2019t know it was a problem.</li> <li>Pavish: this ties into the questions about how to prioritize one team member\u2019s work over another\u2019s.</li> <li>Kriti: prioritizing projects could help with this</li> </ul> </li> <li>Kriti: we should either prioritize each project relative to others or delegate a smaller group of people to \u201cfirefighting\u201d.</li> <li>Pavish: lots of unknowns within the user-reported issue that Sean/Dom worked on. This \u201cunknown\u201d was challenging<ul> <li>Dom: maybe unavoidable?</li> </ul> </li> <li>Pavish: maybe more planning ahead of time could have helped with Sean/Dom\u2019s work</li> <li>Pavish: I could have done the import changes faster than Sean<ul> <li>Sean: Agree</li> </ul> </li> <li>Brent: rotating \u201cfirefighters\u201d helps everyone to see different parts of the codebase, and this is beneficial for the project as a whole</li> <li>Sean: need to be agile a bit with user-reported issues<ul> <li>Kriti: okay to embrace some chaos to an extent</li> </ul> </li> <li>Kriti: proposal to prioritize all the projects in a cycle<ul> <li>All agree</li> </ul> </li> <li>Dom: when someone needs someone from me, it\u2019s helpful for me to understand how soon they need it.<ul> <li>Kriti: When people need something from another team member, please ask clearly, assertively. Be clear about how soon you need it.</li> </ul> </li> <li>Pavish: We should also be able to re-adjust timelines and priorities mid-cycle</li> <li>Pavish: backend team and frontend teams are too fractured. If each team had a better understanding of the other team\u2019s work, it would help us all</li> <li>Brent: would also be nice to find projects that can be assigned to one frontend engineer and one backend engineer</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-09-team-meeting/#decisions","title":"Decisions","text":"<ul> <li>We\u2019ll make sure projects have priorities relative to each other, and also reevaluate them during weekly meetings.</li> <li>Designated firefighters seem like a good idea, they can also work on issues from the backlog during downtime.<ul> <li>This will need some pre-work to \u201cgroom\u201d the backlog and keep it up to date.</li> </ul> </li> <li>When requesting help, be assertive and provide a timeline that you need help by.</li> <li>We\u2019ll figure out what work we need to do and assign teams accordingly, we\u2019re not going to have a rule that says each project needs multiple people.</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-09-team-meeting/#2023-cycle-2-project-ideas-brainstorming","title":"2023 Cycle 2 project ideas brainstorming","text":""},{"location":"team/meeting-notes/2023/08/2023-08-09-team-meeting/#pre-meeting-prep_2","title":"Pre-meeting prep","text":"<ul> <li>Discussion prompt: We should brainstorm project ideas for the next cycle.</li> <li>Discussion goal: We should have a list of projects and their owners, so the owners can start writing them up.</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-09-team-meeting/#pre-meeting-notes_1","title":"Pre-meeting notes","text":"<ul> <li>Kriti\u2019s ideas based on niche &amp; goals:<ul> <li>Testing how well we work with existing Postgres DBs, associated fixes</li> <li>Figure out what it would take to get us to 1.0 and work on that</li> <li>Product research for better definition of our niche</li> </ul> </li> <li>Dom<ul> <li>Backend fixes project still has a few minor issues left, should be ale to cobble together a cycle-worth of work</li> <li>Very basic support for setting dynamic column defaults (whitelist-based)</li> </ul> </li> <li>Pavish\u2019s ideas:<ul> <li>Start research and discussions on how to handle permissions between related entities.</li> <li>Eg., If a user has access to only one table, how to they interact with FK columns?</li> <li>Feature to allow users copy tables and schemas (Similar idea proposed by Brent on mail thread).</li> <li>I think this would be a more useful and immediate feature to provide to users coming from a \u2018spreadsheet\u2019 background, than attempting to implementing versioning.</li> <li>Add additional endpoints to provide custom (non-REST compliant) responses to help improve stability and performance of the frontend.</li> <li>This would be a refactor and reduce our focus on building new features, but this would definitely improve the frontend codebase.</li> <li>For eg., Adding a single GET endpoint that provides all the structural details of a table (table\u2019s properties, columns with their Mathesar types, constraints) would reduce so much state management on the frontend and enable us delete a chunk of code, improving FE stability, maintainability, and performance.</li> <li>I think it is worth it to research parts of FE that can be improved this way, and take the time to implement it.</li> </ul> </li> <li>Mukesh idea\u2019s:<ul> <li>Mathesar error reporting and troubleshooting plan</li> </ul> </li> </ul> <p>Fixing backend tests     Right now, we have a somewhat ad-hoc testing suite for the back end code.  It\u2019s slow, and doesn\u2019t have a coherent strategy. I\u2019m not confident that any breakages will be caught (in fact, I\u2019m confident they won\u2019t all be caught), and I think a number of things are tested repeatedly in the course of testing some other behavior. We should try to fix this. The goals should be to have a strategy with \u2018buy-in\u2019 from the back end core team members, and then make steps to implement that strategy.</p> <p>Researching FDWs     We\u2019ve discussed this through a few channels, but I think we should research how painful it would be to support FDWs in Mathesar. Already, if there are foreign tables in the DB (that Mathesar has access to) then we\u2019ll show them, and then probably throw some inscrutable low-level errors if you try to modify them via DDL operations. It would be good to start by simply handling any errors gracefully. It might also be nice to support adding external data sources to your Mathesar DB as a feature. We could support wiring up MariaDB, or Redis caches, or even arbitrary RSS feeds through this (maybe). However, this is a massive undertaking with product, design, and technical challenges. Thus, I think we should start with a cycle\u2019s worth of doing the design and product work (if we want this), and doing some technical prototyping.</p> <p>Rudimentary support for DB views     I think this might be low-hanging fruit. The main challenge would be design so that a user understands that they can\u2019t edit (for now) in a view, but have to edit underlying tables. I don\u2019t even think we\u2019d really need to allow users to create views through Mathesar at this juncture, just view them. The reason this would be useful is that we\u2019ve already had a user or two (or, honestly, maybe only the one) mention that they could set up views for their less-privileged users and give Mathesar access to those. The \u2018views for less-privileged users\u2019 strategy is super common, and if we have any support for that, it might help some admins choose us over competitors.</p> <p>Researching table versioning (part 27/n)     We\u2019ve received more requests for table versioning/undo. One idea that a user mentioned was keeping a long-running transaction open so the user can play around before committing. Might be worth thinking about. The use case for that one was wanting to give less-privileged users the ability to play around and model the data, without necessarily corrupting the \u2018real data\u2019. I think we should start from that use case, and try to determine how we could best support that. It could be as simple as \u2018copy schema\u2019 or something, though that wouldn\u2019t really allow merging it back into the root schema afterwards.</p> <p>Further permissions management     We\u2019re currently going back-and-forth on a PR to remove the superuser requirement when installing Mathesar. Suffice to say, I think we need to consider this from a product direction, determine what we\u2019re trying to achieve, and then go for a coherent implementation. As mentioned above, it might make sense to split Mathesar requests (to the DB) into two privilege levels; one for daily driving, the other for user modification and so on. This could be an intermediate step between only having a root level Mathesar user for connecting to the DB, and having a DB user for each Mathesar user.</p> <p>Finish column moving features, improve logic     It came to my attention during RSQLA1 that this feature isn\u2019t complete, and the current state is sort of dangerous. You can only move columns in one direction along a foreign key link, and I expect that asymmetry won\u2019t be obvious to users. Also, the moving logic could cause data loss under some edge-case circumstances. So, they could be tinkering around, move some columns, and then find out they can\u2019t move them back, or extract some columns only to find out they can\u2019t be put back together with the original table. Worse, when moving columns, they might find that some other, as far as they understand uninvolved, table might be missing rows afterwards. I think the current state of column extraction and moving is therefore a ragequit-inducing antifeature. We should either take out that functionality entirely (I don\u2019t like this except as a stopgap), or make it work as users would expect. I\u2019ll put more detail into a proper project proposal; here I\u2019ll just note that we need product work before we start to think too much about implementation on this.</p> <p>Mathesar update capability analysis, determine plan     As we add more installation methods and move away from the docker compose setup, we need to make sure that we have proper instructions for updating Mathesar, and recovering if an update doesn\u2019t work for each installation type we do. This could be rolled into the installation project(s), but I\u2019m worried that so far we haven\u2019t thought about it at all for any of the non-docker-compose installations (I could be wrong here; that would be great!)</p>"},{"location":"team/meeting-notes/2023/08/2023-08-09-team-meeting/#notes_2","title":"Notes","text":"<ul> <li>Kriti: Let\u2019s ignore the above list for a bit. If we\u2019re trying to support existing databases, what is some of the most important work for us to do?</li> <li>better permission handling. We should try to work with existing pg permissions.</li> <li>better support for unknown types \u2013 don\u2019t throw errors. We should allow editing wherever possible. We need to clarify our goals here. We should display the actual database type instead of \u201cunknown\u201d</li> <li>Support tables without primary keys</li> <li>Multi-column primary keys</li> <li>Testing Mathesar with other products that use Postgres</li> <li>Improved support for views</li> <li>Improved support for generated columns</li> <li>Display info for EXCLUDE and CHECK constraints</li> <li>Improved UX for viewing all tables, e.g. hiding tables, showing ER diagram</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-09-team-meeting/#brent-side-notes-preexisting-posgres","title":"Brent side-notes preexisting Posgres","text":"<p>Major things we don\u2019t support that people have in their DBs</p> <ul> <li>Views</li> <li>Users/permissions</li> <li>Types</li> <li>Different pkey setups</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-09-team-meeting/#conclusions","title":"Conclusions","text":"<ul> <li>Ran out of time, will continue discussion at the next meeting.</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-09-team-meeting/#scheduling-the-next-meeting","title":"Scheduling the next meeting","text":""},{"location":"team/meeting-notes/2023/08/2023-08-09-team-meeting/#pre-meeting-prep_3","title":"Pre-meeting prep","text":"<ul> <li>Discussion goal: Figure out when we should have our next meeting given that we have a lot to talk about</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-09-team-meeting/#decision","title":"Decision","text":"<ul> <li>Next meeting will be tomorrow</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-10-team-meeting/","title":"2023-08-10 team meeting","text":"<p>Attendees: Anish, Brent, Dom, Ghislaine, Kriti, Mukesh, Pavish, Rajat, Sean</p>"},{"location":"team/meeting-notes/2023/08/2023-08-10-team-meeting/#morning-hello","title":"Morning \u201chello\u201d","text":"<ul> <li>People are feeling good about our routine of saying \u201chello\u201d in the morning in the internal channel.</li> <li>We\u2019ll continue this</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-10-team-meeting/#2023-cycle-2-project-ideas-brainstorming-part-2","title":"2023 Cycle 2 project ideas brainstorming, part 2","text":""},{"location":"team/meeting-notes/2023/08/2023-08-10-team-meeting/#pre-meeting-prep","title":"Pre-meeting prep","text":"<ul> <li>Discussion goal: Have a final list of projects and their owners, so the owners can start writing them up.</li> </ul> <p>Project ideas from previous meeting and follow up discussion on Matrix:</p> <ul> <li>Installation improvements<ul> <li>This is still a major barrier to Mathesar adoption</li> <li>Implement the plan we\u2019ve already decided on here</li> </ul> </li> <li>Make Mathesar work better with common existing Postgres setups<ul> <li>Major things we don\u2019t support that people have in their DBs<ul> <li>Views<ul> <li>Rudimentary support for DB views</li> </ul> </li> <li>Users/permissions<ul> <li>Better permission handling. We should try to work with existing pg permissions.</li> <li>We need to do more research into this before committing to supporting Postgres users / permissions</li> </ul> </li> <li>Types<ul> <li>Better support for unknown types \u2013 don\u2019t throw errors. We should allow editing wherever possible. We need to clarify our goals here. We should display the actual database type instead of \u201cunknown\u201d</li> </ul> </li> <li>Different pkey setups<ul> <li>Support tables without primary keys</li> <li>Multi-column primary keys</li> </ul> </li> <li>Generated columns<ul> <li>Improved support for generated columns</li> </ul> </li> <li>Constraints<ul> <li>Display info for EXCLUDE and CHECK constraints </li> </ul> </li> </ul> </li> </ul> </li> <li>Improved UX for viewing all tables, e.g. hiding tables, showing ER diagram</li> <li>Testing Mathesar with other products that use Postgres<ul> <li>e.g. Supabase integration</li> </ul> </li> <li>Product research for better definition of our niche</li> <li>Ideas from prior async brainstorming are here</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-10-team-meeting/#pre-meeting-notes","title":"Pre-meeting notes","text":"<p>Additional thoughts from Kriti:</p> <ul> <li>Firefighting + backlog clearing team<ul> <li>Including stuff like moving wiki to MkDocs, automating internal deployment / <code>develop</code> Docker builds</li> </ul> </li> <li>Do we also want to consider work that will let release more frequently? </li> <li>We also need help with organizing our backlog</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-10-team-meeting/#brents-thoughts","title":"Brent\u2019s thoughts","text":"<ul> <li>I think we should really try to do the project to fix up the column moving, or remove that feature, and wiring up to a preexisting DB makes this even more relevant. The current functionality lets you screw things up irreversibly, and it won\u2019t be obvious to a user when they\u2019re in danger from our current UI.</li> <li>Views:<ul> <li>We need 2 things IMO:<ul> <li>actually show the view in the UI (very easy; it\u2019s just a switch flag in the reflection calls, will reflect views as tables), and</li> <li>flag the view as non-editable (for now). This is a bit harder, but still should be easy in the back end. Design work needed.</li> </ul> </li> </ul> </li> <li>I think \u201cwork with existing PG permissions\u201d is too strong, or at least too general. We need only to be able to run as a reduced-permission user for the whole installation without throwing errors everywhere.</li> <li>Types:<ul> <li>Biggest problems are going to be composite types, and array types (which we\u2019re currently struggling with). SQLAlchemy makes working with unknown composite types extremely difficult, to the point that I\u2019m not even sure where we\u2019d start on that. It seems like if we drop SQLAlchemy and just use <code>psycopg</code>, things are a bit simpler, though still messy: https://www.psycopg.org/psycopg3/docs/basic/pgtypes.html</li> <li>Scalar types should be relatively simple; we\u2019d just treat them as strings, more-or-less.</li> </ul> </li> <li>Generated columns:<ul> <li>I think the only support we need for this is to notice that they\u2019re essentially a dynamic default as far as the front end is concerned:<ul> <li>we shouldn\u2019t modify the default generator, or</li> <li>allow input into those cells. </li> </ul> </li> <li>We could also trivially show the generating expression (in fact this might already happen if we\u2019re showing dynamic defaults somehow), but I\u2019d consider that a bonus.</li> <li>We\u2019re already flagging these columns as a dynamic default in the back end, it\u2019s a matter of whether the front end is then handling that with enough fidelity.</li> </ul> </li> <li>Supporting different                 setups: This may be the thing we need the most work on overall<ul> <li>Handling different types of primary key single columns:<ul> <li>Right now, we\u2019re flagging a column as a \u2018default\u2019 column (as in created by Mathesar). Then, we disallow any modification by the user of such a column through Mathesar.</li> <li>I think we could pretty easily handle a dynamic-default primary key column by just flagging it as such, and disallow any modification of that column.</li> <li>Multi-column: This will be tricky. We\u2019re assuming we have a single pkey column throughout our codebase. We could just filter these tables out of the ones we handle, or treat them as read-only.</li> </ul> </li> </ul> </li> <li>Constraints:<ul> <li>I consider this to be extremely optional, other than smoothly handling \u2018constraint violation\u2019 errors.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-10-team-meeting/#discussion","title":"Discussion","text":"<p>Are there projects that we need to continue?</p> <ul> <li>\u201cBackend fixes\u201d</li> <li>\u201cFrontend fixes\u201d</li> <li>Kriti: What is the status of i18n project?<ul> <li>Should be finished soon. But This is only the infrastructure around it \u2013 not actually the translation. We\u2019ll be hiding the UI so that there are no user-facing changes until. </li> <li>Rajat will be working on workflow and documentation next week. Expecting to finish by the end of the cycle.</li> </ul> </li> <li>Sean: concern about some tasks being too big for one cycle and some tasks being too small for the cycle</li> <li>We should have two people working on smaller tasks and backlog type things.</li> <li>How should we refer to these smaller tasks?<ul> <li>\u201con call\u201d? \u2013 no.</li> <li>\u201cFirefighting\u201d? \u2013 not great.</li> <li>\u201ccycle helpers\u201d?</li> <li>\u201cGeneralists\u201d</li> <li>\u201cad-hoc\u201d \u2013 (seconded)</li> <li>This is still up for debate</li> </ul> </li> <li>How/when should we rotate ad-hoc helpers?<ul> <li>We\u2019ll try to begin rotating next cycle</li> </ul> </li> <li>Kriti: fixing things that are not working well seems to be higher priority than adding new features<ul> <li>Most agree</li> <li>Brent: column-moving is not working \u201cto a dangerous level\u201d. However, we should consider whether we want to get to a \u201cbeta\u201d or \u201cv1\u201d sooner, or wether we want to scaffold out this sort of product so that people have a better idea of the features we\u2019ll have once we\u2019re more mature.<ul> <li>Kriti: would lean towards prioritizing stability of existing features before building new features.</li> </ul> </li> </ul> </li> <li>What bugs to we currently have?<ul> <li>We might want to do some research/testing to identify new bugs</li> <li>Dom: we already have a lot of existing bugs that we could prioritize for this cycle</li> <li>Kriti: there may be other bugs we\u2019d uncover during testing that are higher priority than the bugs of which we\u2019re already aware</li> <li>Pavish: we might want to identify some use-cases to help steer our testing to better identify issues.<ul> <li>Kriti: this would be good work for the person who owns this project.</li> </ul> </li> </ul> </li> <li>Pavish: Should we identify issues first, or fix them as we go?<ul> <li>Kriti: we should try to identify lots of them first so that we can prioritize them</li> </ul> </li> <li>Pavish: talking to users would help us identify more issues and give us a better idea of how to address them</li> <li>Kriti: interested in integration with Supabase. This might give us visibility to Supabase users through the Supabase UI.<ul> <li>https://supabase.com/docs/guides/platform/marketplace</li> <li>https://supabase.com/partners/integrations#data%20platform</li> <li>https://supabase.com/partners/integrations#become-a-partner</li> <li>https://supabase.com/docs/guides/platform/oauth-apps/build-a-supabase-integration#create-an-oauth-app (new integration workflow coming soon)</li> <li>Also look at Directus Supabase integration since they\u2019re similar to us</li> <li>Rowy can be used as a reference. It provides a UI for firestore database</li> <li>How much work would this be? Maybe a whole cycle if we also start on implementation.</li> <li>This might be a good project for the ad-hoc team.</li> </ul> </li> <li>Column moving problems<ul> <li>Read Brent\u2019s thoughts on this</li> <li>Sean: seems like a lower priority, given our current focus on working with pre-existing databases</li> <li>Maybe we could disable the feature?</li> <li>Could we add a warning message?</li> </ul> </li> <li>Ad-hoc team will not have a project page</li> <li>We\u2019ll need to discuss our process for organizing the backlog issues (future meeting)</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-10-team-meeting/#conclusion","title":"Conclusion","text":"<ul> <li>Installation improvements<ul> <li>Mukesh (owner)</li> <li>Anish (helper)</li> <li>Rajat (helper)</li> </ul> </li> <li>Product research to narrow our niche<ul> <li>Ghislaine (owner)</li> <li>Brent (helper)</li> <li>Pavish (helper)</li> </ul> </li> <li>Ad-hoc helpers<ul> <li>Sean</li> <li>Rajat</li> <li>Dom</li> <li>Ad-hoc tasks<ul> <li>Research Supabase integration/affiliation</li> </ul> </li> <li>Other ad-hoc ideas<ul> <li>Exporting tables as CSV</li> <li>Duplicating a table</li> </ul> </li> </ul> </li> <li>Investigating compatibility with pre-existing databases<ul> <li>Brent (full-time, owner) </li> <li>Pavish (full-time)</li> <li>Ghislaine (part-time)</li> <li>Sean (part-time)</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-10-team-meeting/#remove-sqlalchemy-project-update","title":"Remove SQLAlchemy project update","text":"<ul> <li>We\u2019re pausing work on this.</li> <li>Brent wants to \u201clet it simmer\u201d for this cycle. Much of the work is done, but we need to validate the tactic we\u2019re using \u201cin the field\u201d. There is still more work to do to fully remove SQLA, but we\u2019ll pause work on it for a while.</li> <li>Brent was originally fearful that the refactoring would be disruptive. He\u2019s not as worried about that now, which is why he\u2019s okay with deferring it for a while.</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-10-team-meeting/#future-meetings","title":"Future meetings","text":""},{"location":"team/meeting-notes/2023/08/2023-08-10-team-meeting/#pre-meeting-prep_1","title":"Pre-meeting prep","text":"<ul> <li>Discussion goal: Figure out when we\u2019re having the remaining discussions we need to have</li> </ul> <p>Already covered at this meeting:</p> <ul> <li>Project planning for August 21 cycle</li> </ul> <p>Things we need to discuss:</p> <ul> <li>How to prioritize the backlog</li> <li>RSQLA retrospective</li> <li>\u201cShould we install things on the DB?\u201d discussion</li> <li>Figuring out how to handle XY problem with user feedback</li> <li>Criteria for closing user-reported tickets</li> <li>Internationalization retrospective</li> <li>Installation plan details finalization</li> <li>Product level permissions discussion to account for related entities</li> <li>Approval of written up projects</li> <li>Delegating responsibilities for Kriti\u2019s time off </li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-10-team-meeting/#conclusion_1","title":"Conclusion","text":"<ul> <li>How to prioritize the backlog<ul> <li>Rajat, Sean, Dom, Kriti will come up with a plan</li> <li>Kriti will start Matrix DM to kickstart</li> </ul> </li> <li>RSQLA retrospective<ul> <li>Brent will start email thread</li> </ul> </li> <li>\u201cShould we install things on the DB?\u201d discussion<ul> <li>Brent will start email thread based on notes written in the meeting notes doc.<ul> <li>Pavish can send his notes as a reply.</li> </ul> </li> </ul> </li> <li>Figuring out how to handle XY problem with user feedback<ul> <li>Pavish will start an email thread</li> </ul> </li> <li>Criteria for closing user-reported tickets<ul> <li>Everyone should respond to this email thread</li> </ul> </li> <li>Internationalization retrospective<ul> <li>Rajat will start an email thread</li> </ul> </li> <li>Installation plan details finalization<ul> <li>We don\u2019t need any more discussion about permissions</li> <li>Mukesh will start an email thread about finalizing where to store config</li> </ul> </li> <li>Product level permissions discussion to account for related entities<ul> <li>Pavish will start an email thread</li> </ul> </li> <li>Approval of written up projects<ul> <li>We\u2019ll do this at next Wednesday\u2019s weekly meeting</li> </ul> </li> <li>Delegating responsibilities for Kriti\u2019s time off <ul> <li>Kriti will start an email thread</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-18-team-meeting/","title":"2023-08-18 Team meeting","text":"<p>Attendees: Core team, Anish, Varsha</p>"},{"location":"team/meeting-notes/2023/08/2023-08-18-team-meeting/#projects-approval","title":"Projects approval","text":"<ul> <li>Discussion goal: Approve projects or figure out concrete next steps and timeline for approval.</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-18-team-meeting/#discussion","title":"Discussion","text":""},{"location":"team/meeting-notes/2023/08/2023-08-18-team-meeting/#ad-hoc-work","title":"Ad-hoc work","text":"<p>Sean:</p> <ul> <li>needs to get Rajat assigned to some tasks</li> <li>three meta-tickets<ul> <li>full-stack</li> <li>back end</li> <li>front end</li> </ul> </li> <li>Currently, these are split between Dom and Sean, need to get Rajat integrated into that</li> <li>Remaining i18n work would go into Rajat\u2019s ad-hoc queue.</li> </ul> <p>Brent:</p> <ul> <li>Couple backend tickets seem related to existing PG support. Brent will reach out to Dom to make sure we\u2019re not duplicating work.</li> </ul> <p>Dom:</p> <ul> <li>Mostly would be focusing on backend bugs and unblocking frontend work.</li> <li>Identified issues that seem more important than Supabase integration.<ul> <li>Start the Supabase integration research in the middle of the cycle, when those tasks are finished, currently not assigned to a specific person.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-18-team-meeting/#compatibility-with-existing-dbs","title":"Compatibility with existing DBs:","text":"<ul> <li>Brent updated project with information based on feedback from everyone.</li> <li>The project is approved.</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-18-team-meeting/#niche-research","title":"Niche research:","text":"<ul> <li>We need to pay attention that we don\u2019t accidentally do things twice since there\u2019s overlap with \u2018Compatibility with existing DBs\u2019.</li> <li>Dom: read the project; seems well written<ul> <li>wants more definition in the outcome section</li> <li>Good job outlining various ways to define niches</li> </ul> </li> <li>Brent &amp; Pavish approve</li> <li>Mukesh: no feedback</li> <li>Rajat: Looks good</li> <li>We\u2019ll approve async after update of the outcomes section</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-18-team-meeting/#installation-improvements","title":"Installation improvements","text":"<ul> <li>Updated to prioritize use cases</li> <li>Sean will be a helper on this</li> <li>Anish and Rajat will also be working on this</li> <li>Send feedback by EOD Monday</li> <li>Approve async (hopefully by Tuesday)</li> <li>Brent: we should make sure users have a documented path from the docker compose installation type (if we\u2019re dropping it) to the new installation type(s).</li> <li>Kriti: It\u2019s better to tackle one installation method after another i.e. it\u2019s better to ship one installation method instead of getting some work done on all options and not shipping.</li> <li>Brent: Consider using openbuildservice.org for the distro packaging.</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-18-team-meeting/#conclusion","title":"Conclusion","text":"<ul> <li>Compatibility with existing DBs is approved.</li> <li>Let\u2019s try to get Niche Research and Installation Improvements approved async. <ul> <li>Look for updates on Monday.</li> <li>Send feedback by EOD Monday</li> <li>Try to approve by early next week</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-18-team-meeting/#rotating-ongoing-responsibilities","title":"Rotating ongoing responsibilities","text":"<ul> <li>Discussion goal: Figure out if we want to rotate ongoing responsibilities.</li> </ul> <p>Responsibilities to potentially rotate:</p> <ul> <li>Repo admin</li> <li>Release ownership</li> <li>User feedback tracking</li> </ul> <p>Kriti\u2019s responsibilties, will delegate when out:</p> <ul> <li>Marketing</li> <li>User help</li> <li>Team management<ul> <li>People management</li> <li>Project management</li> </ul> </li> <li>Product management</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-18-team-meeting/#discussion_1","title":"Discussion","text":"<ul> <li>Kriti isn\u2019t sure when she\u2019s taking the time off.</li> <li>Brent: We haven\u2019t been getting responses recently from the installation help webform.</li> <li>Kriti: It might be better to reach out after we improve our installation methods.</li> <li>Marketing:<ul> <li>Paying attention to Syften notification and responding to HN, reddit, twitter etc.,</li> <li>Brent is interested.</li> <li>Sean is interested in responding to users but isn\u2019t interested in finding new Marketing avenues.</li> <li>Anish can help with Twitter.</li> </ul> </li> <li>User help:<ul> <li>Brent is interested.</li> <li>Brent will try to get something CRM like setup on our internal Mathesar at the moment.</li> <li>Sean is interested in cases where it\u2019s front-end related</li> <li>Treat the users like gold<ul> <li>Do work so they don\u2019t have to</li> </ul> </li> <li>Pavish is interested in a supportive role</li> <li>Mukesh interested</li> </ul> </li> <li>People management:<ul> <li>1:1s</li> <li>Someone to reach out to when people have a problem</li> <li>Sean is interested</li> </ul> </li> <li>Project management:<ul> <li>Making sure people aren\u2019t stuck, and the cycle is progressing</li> <li>Sean is interested</li> </ul> </li> <li>Product management:<ul> <li>Involves reviewing projects from the product perspective</li> <li>Pavish is interested</li> <li>Ghislaine is interested in a supportive role</li> <li>Sean is interested in copy and documentation</li> <li>Brent is interested in a supportive role</li> <li>Dom is also interested in supporting here</li> </ul> </li> <li>Mukesh: Interested in a Mathesar glossary</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-18-team-meeting/#conclusion_1","title":"Conclusion","text":"<ul> <li>Responsibilities to rotate (We\u2019re not rotating):<ul> <li>Repo admin: Rajat</li> <li>Release ownership: Rajat</li> <li>User feedback tracking: Ghislaine</li> </ul> </li> <li>People interested in taking over Kriti\u2019s responsibilites<ul> <li>Marketing: Brent, Sean (supportive role), Anish (supportive role)</li> <li>User help: Brent, Sean, Pavish (supportive role), Rajat (coordination with Repo admin work)</li> <li>Team management (People + Project): Sean</li> <li>Product management: Pavish, Ghislaine (supportive role), Sean (Copy &amp; Documentation), Brent (supportive role)</li> </ul> </li> <li>Dom &amp; Rajat are interested in taking on whatever no one else wants to do.</li> <li>Kriti will follow up with next steps individually with people who expressed interest.</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-18-team-meeting/#check-in-on-ongoing-conversations","title":"Check in on ongoing conversations","text":"<ul> <li>Discussion goal: Check in on ongoing conversations and make sure everyone is following them / keeping track of decisions made, etc.</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-18-team-meeting/#discussion_2","title":"Discussion","text":"<p>{we forgot to take detailed notes}</p> <ul> <li>People have varying levels of comfort with long emails and async discussions.</li> <li>Generally people like async discussions.</li> <li>They can be hard to follow, sometimes people are reacting to the latest email and losing track of the original intent of the discussion.</li> <li>People are even using ChatGPT to summarize discussions for themselves.</li> <li>Brainstorming is better in 1:1 conversations, not in email or big groups.</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-18-team-meeting/#conclusion_2","title":"Conclusion","text":"<ul> <li>The person who starts the email thread should be responsible for stating the purpose of the email and periodically checking in and summarizing viewpoints, etc, and guiding the conversation to the desired conclusion <ul> <li>We do this in meetings, but not emails</li> </ul> </li> <li>Purpose could be spitballing, building consensus, agreeing on a decision, etc.</li> <li>Sometimes it\u2019s good to have options if we\u2019re trying to making a decision.</li> <li>It\u2019s always better to reply to an email so people know you\u2019ve seen and comprehended it.</li> <li>It\u2019s okay to have a reply of \u201cI\u2019m not interested in contributing to this.\u201d (unless the email is explicitly asking for buy-in or agreement from the whole team)</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-23-team-meeting/","title":"2023 08 23 team meeting","text":"<p>Attendees: Core team, Anish</p>"},{"location":"team/meeting-notes/2023/08/2023-08-23-team-meeting/#funding-update","title":"Funding update","text":"<p>Notes from this section are private. Core team members can access the notes in this HackMD document.</p>"},{"location":"team/meeting-notes/2023/08/2023-08-23-team-meeting/#projects-approval-check-in","title":"Projects approval check in","text":"<ul> <li>Postgres compatibility<ul> <li>Project already approved</li> <li>very few changes, no ne</li> </ul> </li> <li>Niche research<ul> <li>More changes to push, but was waiting to understand the state of the wiki migration</li> <li>Ghislaine will update the thread once changes are pushed</li> </ul> </li> <li>Installation improvements<ul> <li>first week will be cleaning up from 0.1.3</li> <li>Removing some of the research work as per feedback</li> <li>Should be enough time, with Anish\u2019s help</li> <li>We have a one-week buffer in the schedule</li> <li>Mukesh will update the email thread once project changes are pushed</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-23-team-meeting/#project-prioritization","title":"Project prioritization","text":"<ul> <li>Release 0.1.3</li> <li>Installation improvements</li> <li>Niche research</li> <li>Postgres compatibility</li> <li>Ad hoc</li> </ul> <p>Discussion: - What about 0.1.4?     - Not prioritizzed here since it will be done in the cooldown after the cycle - Everything we merge in during the cycle should be \u201crelease-ready\u201d     - We\u2019ll cut the release with whatever is done - Brent: feature flags will help with release cadence - Mukesh: what about experimental features?     - Docker image was possible to use, but needed more testing. Would be nice to publish as \u2018experimental\u2019 - Kriti will be out for 4 weeks starting next week (if possible)     - Thus, we\u2019ll provisionally extend the cycle by one week     - Kriti\u2019s vacation: 2023-08-28 - 2023-09-25 (Hopefully)     - Cycle work period: 2023-08-21 - 2023-09-22     - Cycle cool down: 2023-09-25 - 2023-10-06     - Thus, 0.1.4 should release around 2023-10-05 - After the call, Kriti will add some calendar events to tell us which week of the cycle we\u2019re in. - Sean: Would be nice to name the cycle something absolute rather than relative     - For now, we can name them after the release     - Official cycle name for this cycle: Cycle 0.1.4</p>"},{"location":"team/meeting-notes/2023/08/2023-08-23-team-meeting/#release-013-check-in","title":"Release 0.1.3 check in","text":"<ul> <li>Who can take this over from Rajat?<ul> <li>Brent will take this over</li> </ul> </li> <li>Also do we have anyone taking over repo admin?<ul> <li>Sean will take this over</li> </ul> </li> <li>It\u2019s important to test the images <ul> <li>especially make sure login and import upload pages work</li> <li>Pavish will help release owner know what to test</li> </ul> </li> <li>Issue: https://github.com/centerofci/mathesar/issues/3149</li> <li>Thread: https://groups.google.com/a/mathesar.org/g/mathesar-developers/c/Uvjw95NeSUg/m/XZtkM0O8BQAJ</li> <li>Double-check the superuser creation process for this release</li> </ul>"},{"location":"team/meeting-notes/2023/08/2023-08-23-team-meeting/#ongoing-conversations-check-in","title":"Ongoing conversations check in","text":"<ul> <li>Should we install things on the user database<ul> <li>We\u2019re going to go ahead with installing things on the target DB</li> <li>Brent will update the thread with this conclusion</li> </ul> </li> <li>Dealing with XY problem with user feedback<ul> <li>First goal was to notify people that this is a problem</li> <li>Currently, this is continuing as an open-ended discussion with people trading ideas</li> <li>Kriti wants us to make sure that everyone understands the point of the thread, don\u2019t assume.</li> </ul> </li> <li>Criteria for closing user reported tickets<ul> <li>Next step is to create a wiki page documenting some guidelines for communicating with users</li> <li>Help address the XY problem</li> <li>Initial wiki page will be sparse</li> <li>Sean will notify team when wiki page is up so team can look it over and give feedback</li> </ul> </li> <li>Package version management<ul> <li>Pavish is working on that on the front end</li> <li>Brent will update the email thread with conclusions so far, and prompt with unconcluded questions</li> <li>Brent will start an email about supporting postgres/python versions</li> </ul> </li> <li>RSQLA1 retro<ul> <li>Brent would like to discuss this at a relatively slow cadence</li> </ul> </li> <li>Product level permissions discussion to account for related entities<ul> <li>Also can be discussed slowly</li> <li>May be worth a dedicated research project</li> </ul> </li> </ul> <p>Not yet started - i18n retro     - Rajat is unavailable, and we should probably wait to start it until all the work is merged - Installation 0.1.3 retro     - Mukesh will start this soon</p>"},{"location":"team/meeting-notes/2023/09/2023-09-06-team-meeting/","title":"2023-09-06 team meeting","text":""},{"location":"team/meeting-notes/2023/09/2023-09-06-team-meeting/#poll-do-we-still-want-to-give-weekly-project-updates","title":"Poll: Do we still want to give weekly project updates?","text":"<ul> <li>Allocated time:  5 minutes</li> <li>Added by:  Sean</li> </ul> <p>During the previous cycle, we agreed that project owners would send emails every Friday to update the developer list about project status. Do we want to continue that process this cycle, or abandon it?</p> <p>Options:</p> <ul> <li>\ud83d\udce3 = Resume weekly project updates</li> <li>\ud83d\udeab = Abandon weekly project updates</li> <li>\ud83d\udcac = Discuss it further</li> </ul> <p>Votes:</p> <ul> <li>Anish \u2013 ???</li> <li>Brent \u2013 \ud83d\udce3<ul> <li>It\u2019s for the community, not really for us. I think we should do it in the interest of developing that community.</li> </ul> </li> <li>Dom \u2013 \ud83d\udcac<ul> <li>Ambivalent: Doesn\u2019t take much time, but doesn\u2019t derive benefit</li> </ul> </li> <li>Ghislaine \u2013 \ud83d\udeab</li> <li>Mukesh \u2013 \ud83d\udcac<ul> <li>Didn\u2019t find any reason to send an email in the initial weeks</li> <li>Wants to send updates on his own cadence</li> </ul> </li> <li>Pavish \u2013 \ud83d\udcac<ul> <li>Doesn\u2019t think it makes sense for research projects,</li> <li>Does think we should do it for development projects.</li> </ul> </li> <li>Rajat \u2013 \ud83d\udce3</li> <li>Sean \u2013 \ud83d\udeab</li> </ul> <p>Decision: move updates to weekly on Monday</p>"},{"location":"team/meeting-notes/2023/09/2023-09-06-team-meeting/#check-in-on-progress-for-the-cycle","title":"Check in on progress for the cycle","text":"<ul> <li>Allocated time:  15 minutes</li> <li>Added by: Sean</li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-06-team-meeting/#mukesh","title":"Mukesh","text":"<ul> <li>First week and half went well</li> <li>Got caught up with release deployment</li> <li>Lost few days trying to re-organize and catching up with others</li> <li>Back on track though with a delay of a two working days than what was initially planned</li> <li>Half way through the project. Documentation and frontend work is yet to be started. Design, Infrastructure and backend tasks are waiting for a review</li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-06-team-meeting/#anish","title":"Anish","text":"<ul> <li>Backend work mostly completed for installation improvements 0.1.4 just waiting for a review from Mukesh.</li> <li>GitHub action for adding static files to release also completed and waiting for a review from Mukesh.</li> <li>Currently working on migrating our internal db to SQLite.</li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-06-team-meeting/#brent","title":"Brent","text":"<ul> <li>Project started fine on W1, but then on W2</li> <li>I Got side tracked into Release, and then</li> <li>I Fell into a deployment vortex that went on and on.</li> <li>Regardless, progress is occurring on Pre-existing DB stuff; I\u2019m currently still working on organizing the meta issue.</li> <li>We did manage to test some PostgreSQL versions. Results were comically bad.</li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-06-team-meeting/#ghislaine","title":"Ghislaine","text":"<ul> <li>Completed design tasks that were needed for other projects. Did not follow up yet so not sure on completion status.</li> <li>Had niche research discussions but it feels like I won\u2019t be able to narrow down just by gathering information. Making a decision will require more team involvement.</li> <li>At this point I see no need for some originally planned niche research tasks. Like the collection of use cases outside of what we decide the scope will be.</li> <li>I\u2019m blocked on publishing the survey.</li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-06-team-meeting/#dom","title":"Dom","text":"<ul> <li>Way behind, family life interfered</li> <li>No particular adaptation necessary, I\u2019ll just end up having done fewer backend \u201cfixes\u201d</li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-06-team-meeting/#pavish","title":"Pavish","text":"<ul> <li>I felt like I didn\u2019t have enough to work on, for the first couple weeks.</li> <li>I\u2019m mainly assiting with Postgres compatibility and Niche research projects. I still feel like I don\u2019t have concrete tasks to work on.</li> <li>Working on general stuff when I don\u2019t have specific project tasks.<ul> <li>Thinking on a bunch of stuff</li> <li>Helped with some release work</li> <li>Took some ad-hoc tasks</li> <li>I\u2019ll also be upgrading packages and Node</li> <li>A few reviews</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-06-team-meeting/#rajat","title":"Rajat","text":"<ul> <li>Was out for most of the time until this week.</li> <li>Positive for i18n &amp; installations work. </li> <li>Will start release work, early next week. </li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-06-team-meeting/#sean","title":"Sean","text":"<ul> <li>I\u2019m assigned to ad-hoc tasks</li> <li>Team management has taken more time than I planned for, so I haven\u2019t made much progress on ad-hoc tasks</li> <li>I didn\u2019t set clear goals for the ad-hoc tasks though, so I don\u2019t think I\u2019m in danger of falling short of any goals. Rather, I just queued up a number of tasks in a priority order, and I\u2019m continuing to work through them.</li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-06-team-meeting/#check-in-on-longer-email-threads","title":"Check in on longer email threads","text":"<ul> <li>Allocated time:  10 minutes</li> <li>Added by: Sean</li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-06-team-meeting/#avoiding-regressions-validating-overall-behavior-brent","title":"Avoiding regressions, validating overall behavior (Brent)","text":"<ul> <li>Seems to be some agreement, but no action plan</li> <li>Brent will write up a stub project, link to thread</li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-06-team-meeting/#quick-user-check-in-ghislaine","title":"Quick User Check-in (Ghislaine)","text":"<ul> <li>https://groups.google.com/a/mathesar.org/g/core-team/c/vbOS4LX4h94/m/QJjV2-nbBAAJ</li> <li>Sean has had lots of feedback, wonders if others have any</li> <li>Ghislaine is hoping Pavish will take a look at the PR</li> <li>Pavish agrees that the thred is not yet closed</li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-06-team-meeting/#product-level-permissions-to-account-for-related-entities-pavish","title":"Product level permissions to account for related entities (Pavish)","text":"<ul> <li>https://groups.google.com/a/mathesar.org/g/mathesar-developers/c/lhjFFGufbrI/m/4jSTD3BfAAAJ</li> <li>Thread has gotten into the weeds a bit. Do we want to continue in the weeds</li> <li>Brent/Pavish/Dom \u2013 yes, let\u2019s continue the thread \u201cin the weeds\u201d.</li> <li>We\u2019re viewing this as a \u201clong running discussion in the background\u201d and embracing continuing the discussion before formulating a project.</li> <li>Mukesh: Maybe we need \u201cowners\u201d for threads like this.<ul> <li>Pavish: sometimes it\u2019s tricky to assign an owner at the outset of a thread because the topic is so open-ended.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-06-team-meeting/#rsqla1-retrospective","title":"RSQLA1 Retrospective","text":"<ul> <li>https://groups.google.com/a/mathesar.org/g/mathesar-developers/c/nX6e-JhJPi8/m/kcQ9GvdVAAAJ</li> <li>Nobody has replied</li> <li>Brent would really like replies from Anish, Mukesh, Dom and anyone else who is interested</li> <li>Brent would like to continue with the next phases of the larger project. Feedback on this thread will inform future work.</li> <li>Brent would like feedback by 2023-09-15</li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-06-team-meeting/#niche-research-update","title":"Niche Research Update","text":"<ul> <li>Allocated time:  30 minutes</li> <li>Added by:  Ghislaine</li> <li>Participants: everyone</li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-06-team-meeting/#discussion-points","title":"Discussion Points","text":"<ol> <li> <p>Presentation of the Progression Model</p> <ul> <li>Presentation of the progression model and its potential role in shaping our product strategy.</li> <li>Sharing the rationale behind the model.</li> </ul> </li> <li> <p>Team Dialogue</p> </li> <li>Team discussion on the model\u2019s viability in guiding our product strategy.</li> </ol>"},{"location":"team/meeting-notes/2023/09/2023-09-06-team-meeting/#notes","title":"Notes","text":"<ul> <li>Each unique path is quite restrictive</li> <li>Looking at targeting specific industries where the need is greatest</li> <li>Started to focus on how small businesses are using data across industries<ul> <li>Mostly using actual DBs for storing transactions</li> <li>Not using DB for reporting tasks</li> </ul> </li> <li>Small businesses have accelerated growth</li> <li>Have need for ad-hoc data modelling and querying</li> <li>Ghislaine thinks we should narrow to start ups with less-defined processes<ul> <li>Ad-hoc attitude towards modelling </li> <li>Ad-hoc attitude towards security</li> </ul> </li> <li>Input will probably be in a denormalized format<ul> <li>how to work with modelled data?</li> </ul> </li> <li>Rather than focusing on a niche as an industry, we ought to focus on a niche as a \u201cstage of development\u201d for a business</li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-27-team-meeting/","title":"2023-09-27 team meeting","text":"<p>Attendees: Anish, Brent, Dom, Ghislaine, Kriti, Mukesh, Pavish, Rajat, Sean</p>"},{"location":"team/meeting-notes/2023/09/2023-09-27-team-meeting/#release-014-check-in","title":"Release 0.1.4 check in","text":"<p>Discussion goal: Figure out what we need to do to get 0.1.4 out and re-allocate responsibilities as needed.</p>"},{"location":"team/meeting-notes/2023/09/2023-09-27-team-meeting/#discussion","title":"Discussion","text":"<ul> <li>Rajat sent an email with open issues for 0.1.4<ul> <li>Needs to sorted into critical, nice-to-have</li> </ul> </li> <li>Kriti: It\u2019s important to have Installation as part of 0.1.4<ul> <li>Important to release 0.1.4 before our public funding announcement</li> <li>Mukesh on Installation:<ul> <li>Docker image with inbuilt PG and related documentation is complete</li> <li>Debian package PR is blocked on DB credentials UI work, documentation is in works (needs to be reviewed)</li> </ul> </li> <li>Kriti: Installation work needs to be \u2018complete\u2019 i.e. close to original installation plan<ul> <li>We should treat 0.1.4 like a launch</li> <li>Installation testing and smoke testing are both required for 0.1.4</li> <li>We could hire people from Upwork for testing</li> <li>We need to also review documentation in an overall holistic perspective</li> </ul> </li> <li>We need someone to co-ordinate the release, with tracking Installation work, testing, documentation reviews etc.,<ul> <li>Sean\u2019s doing it</li> <li>Kriti can help Sean understand the Installation plan</li> <li>Pavish and Brent can help with the \u2018release process\u2019</li> </ul> </li> <li>Pavish: We need Node 18 to get merged for release</li> <li>It would be good to have i18n work<ul> <li>It would take a while to get there</li> <li>We would have to use translations throughout the app, and have JP translations additionally</li> <li>We will not be blocking release for i18n</li> </ul> </li> <li>Kriti and Brent would like to be involved in reviewing all installation documentations</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-27-team-meeting/#conclusion","title":"Conclusion","text":"<p>New priorities for release have been established (getting installation as close to the orignal plan as we can, so people can install Mathesar easily). Sean will coordinate the release so Mukesh and Rajat can focus on implementation.</p>"},{"location":"team/meeting-notes/2023/09/2023-09-27-team-meeting/#plan-for-cooldown-product-direction","title":"Plan for cooldown + product direction","text":""},{"location":"team/meeting-notes/2023/09/2023-09-27-team-meeting/#pre-meeting-prep","title":"Pre-meeting prep","text":"<p>Discussion goal: Convey the plan for the cooldown &amp; next steps for determining product direction, answer questions from the team.</p>"},{"location":"team/meeting-notes/2023/09/2023-09-27-team-meeting/#cool-down","title":"Cool down","text":"<ul> <li>We will be extending the cooldown from 2 weeks to 3-4 weeks so that we can all be on the same page about product direction.</li> <li>During the cooldown, our priorities will be (in order):<ul> <li>Releasing 0.1.4</li> <li>Announcing funding</li> <li>Talking to users (see below)</li> <li>Buy-in on product direction and needs</li> <li>Plan for growing the team (based on product direction and needs)</li> <li>Planning out the next cycle</li> </ul> </li> <li>Kriti will also be working on:<ul> <li>New organizational structure</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-27-team-meeting/#product-direction","title":"Product direction","text":"<ul> <li>The PostgreSQL compatibility project has confirmed that Mathesar connecting to existing databases is viable \u2013 we need to solve some performance issues, but the outlook is optimistic.</li> <li>We have a lot of data on the market thanks to the niche research project, but we need to talk to users to get more concrete data on the problems Mathesar solves for them.<ul> <li>This is what we need to make decisions about product direction.</li> <li>The entire team will be involved in this process.</li> </ul> </li> <li>We are transitioning from an engineering team to a sustainable organization, and we need to be focused on providing value rather than just building software.</li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-27-team-meeting/#discussion_1","title":"Discussion","text":"<ul> <li>Talking to users<ul> <li>High priority after release</li> <li>We\u2019ll split conversations with users with everyone on the team</li> <li>Ghislaine is writing up a plan<ul> <li>Right now, she\u2019s building a CRM</li> </ul> </li> <li>Would give us solid data to move forward and focus on a Niche</li> </ul> </li> <li>Compatibility with existing PG db<ul> <li>Mostly good news, with some performance issues</li> <li>Brent is poking through endpoints and their individual performances and trying to tune them<ul> <li>It wouldn\u2019t take months, perhaps a few weeks</li> <li>If we can tune a few specific endpoints, we could improve performance greatly</li> </ul> </li> </ul> </li> <li>Niche research<ul> <li>Ghislaine\u2019s report had a lot of research around small businesses using Postgres</li> <li>The outcome can be attained only after we talk to users </li> </ul> </li> <li>Moving from alpha to beta<ul> <li>We are ready to be used in production i.e we can openly recommend using Mathesar in production</li> <li>We may not necessarily need more features, but if we get feedback from users on deal-breaking features, we can add them in</li> </ul> </li> <li>Moving from beta to 1.0<ul> <li>There are people using Mathesar in production</li> </ul> </li> <li>Beta and 1.0 are more about improving stability and being production-ready than having more features</li> <li>Architectural changes<ul> <li>Brent is working on a plan and we will discuss this during the cooldown</li> <li>This will also include information on what would be a \u2018public\u2019 interface and what wouldn\u2019t</li> </ul> </li> <li>Product direction<ul> <li>General plan is to talk to more users, understand their needs</li> <li>Ghislaine: We need a fallback if users do not end up scheduling calls</li> <li>Kriti: This should be part of the plan<ul> <li>eg., offering a gift card or some incentive for user interviews</li> </ul> </li> <li>Ghislaine, Sean, and Pavish will work on the plan, and Kriti will be reviewing it</li> </ul> </li> <li>We have 134 subscribers in our mailing list</li> <li>Once we have more data, we will plan on more resources needed</li> <li>There\u2019s no specific date to begin the next cycle yet</li> <li>Pavish: We would need more conversations on E2E tests and avoiding regressions<ul> <li>Will reach out to Brent and figure it out</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-27-team-meeting/#conclusion_1","title":"Conclusion","text":"<ul> <li>Sean will be coordinating the release</li> <li>Rajat and Mukesh will work on Installation</li> <li>Pavish will be helping Ghislaine and planning E2E testing</li> <li>Brent will be working on performance stuff</li> <li>Ghislaine will be working on talking to users<ul> <li>Sean and Pavish will help</li> </ul> </li> <li>Dom has work from previous cycle, which he\u2019ll be focusing on<ul> <li>Sean will coordinate with Dom on tasks with higher priority</li> </ul> </li> <li>Anish will help with bugs in Installation work<ul> <li>Sean will coordinate with Anish on tasks with high priority</li> </ul> </li> <li>Kriti will be reviewing everything and work on new organizational structure</li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-27-team-meeting/#infrastructure-as-an-ongoing-responsibility-pitch","title":"Infrastructure as an ongoing responsibility pitch","text":""},{"location":"team/meeting-notes/2023/09/2023-09-27-team-meeting/#pre-meeting-prep_1","title":"Pre-meeting prep","text":"<p>Discussion goal: Determine whether we want to add \u201cMaintaining infrastructure\u201d as a tracked ongoing responsibility, assign it if so.</p> <p>This is motivated by the growing number of servers, etc. we have on GCP, and some balls which we (I) dropped w.r.t. those over the course of this cycle. I think we should track this as an ongoing responsibility, and probably dedicate a page to it on the wiki or some more private place (depending on how precise we want the docs to be). Further, I think we should occasionally rotate this responsibility to avoid bus factor (or maybe just have a team of 2 who know about it). Off the top of my head, things under this banner are:</p> <ul> <li>All Mathesar domains (renewal, certs, etc.)</li> <li>Servers/load balancers on GCP<ul> <li>bespoke installations using Ansible</li> <li>demo (aaaaargh)</li> <li>internal (uses docker compose)</li> </ul> </li> <li>Networks on GCP<ul> <li>Associated with the above servers, some should probably be deleted</li> </ul> </li> <li>Databases on GCP<ul> <li>only internal.mathesar.org for now</li> </ul> </li> </ul> <p>It may be necessary to incorporate some projects under this ongoing responsibility:</p> <ul> <li>Setting up monitoring for all managed services</li> <li>Consolidating deployments</li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-27-team-meeting/#discussion_2","title":"Discussion","text":"<ul> <li>Kriti agrees that it needs to be an ongoing responsibility</li> <li>The highest priority is to document the current process</li> <li>Brent will hold the responsibility for now</li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-27-team-meeting/#coordinating-with-helpers-during-the-cycle","title":"Coordinating with helpers during the cycle","text":""},{"location":"team/meeting-notes/2023/09/2023-09-27-team-meeting/#pre-meeting-prep_2","title":"Pre-meeting prep","text":"<p>Discussion goal: Come up with suggestions to effectively coordinate with project helpers</p> <p>The Installation Improvement 0.1.4 project got delayed as a crucial feature (Database credentials page) which other features depended upon got delayed. This problem happened as I didn\u2019t communicate the urgency of the work needed to be done and instead did a async check in with the helpers. I would like to hear some suggestions to avoid this problem in future. </p> <p>Suggestion: - weekly sync check in with helpers to discuss their work load make sense or if we should reorganise their work</p>"},{"location":"team/meeting-notes/2023/09/2023-09-27-team-meeting/#discussion_3","title":"Discussion","text":"<ul> <li>Brent\u2019s idea: It would make sense if everyone working on a project should meet once a week<ul> <li>Whoever owns the project should setup the meetings</li> <li>Kriti agrees</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-27-team-meeting/#conclusion_2","title":"Conclusion","text":"<p>It\u2019s now expected that all members of a project meet at least weekly, more is fine depending on project needs.</p>"},{"location":"team/meeting-notes/2023/09/2023-09-28-user-CRM-meeting/","title":"User CRM and Interviews","text":"<ul> <li>Sean and Pavish to identify subset of users from Github to start discussions</li> <li>Sean proposed plan:<ul> <li>Identify who we want to reach out to</li> <li>Communication guidelines (email contents, questions)</li> <li>How information is stored and documented</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-28-user-CRM-meeting/#1-finding-people-to-contact","title":"1. Finding people to contact","text":"<ul> <li>We have a list of emails from mailing list</li> <li>Ghislaine: Clearbit is an API for data enrichment, can be used to segment the list<ul> <li>This can give us more info about our subscribers</li> <li>Pavish: seems more useful to send a mass email to everyone</li> </ul> </li> <li>Ghislaine: what about putting a pop-up on the website that invites people to participate?</li> <li>Sean identified 27 users to target<ul> <li>We\u2019ll send targetted emails to all of them</li> </ul> </li> <li>Mass email to our mailing list<ul> <li>We\u2019ll send one email to this list. It will include:<ul> <li>Funding announcement</li> <li>Invitation to participate in user feedback process</li> </ul> </li> <li>It will not include:<ul> <li>Release announcement</li> </ul> </li> <li>We should send this email after the 0.1.4 release</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-28-user-CRM-meeting/#2-how-to-reach-out-to-people","title":"2. How to reach out to people","text":"<ul> <li>How do we get their contact info?<ul> <li>Sean suggest cloning a git repo to which the user has committed. We can look at the email address and name in their commit.</li> </ul> </li> <li>How do we contact them?<ul> <li>We\u2019ll email them. No Matrix</li> </ul> </li> <li>What is the outcome of the email?<ul> <li>To engage them in a conversation. It will be open-ended with an invitation to participate in a call</li> </ul> </li> <li>Should we use calendly?<ul> <li>We need to research the viability of calendly with multiple people</li> <li>We could have a common account for all of Mathesar</li> <li>Pavish will research and get Calendly set up</li> </ul> </li> <li>How do we incentivize them to participate?<ul> <li>We\u2019d like to offer gift cards</li> </ul> </li> <li>What is the content of our communication?<ul> <li>We need a common template</li> <li>Sean will write the first draft of the email template<ul> <li>Ghislaine/Pavish/Kriti will review it</li> </ul> </li> </ul> </li> <li>If we are able to get on a call:<ul> <li>what questions do we want to ask them?</li> <li>Who should be on the call?</li> </ul> </li> <li>How do we avoid spam traps?<ul> <li>Make sure to put this </li> </ul> </li> <li>Do we send a follow-up email if people don\u2019t respond?<ul> <li>Sean: I don\u2019t think I\u2019d want to bug people more than once</li> <li>We could discuss this later</li> </ul> </li> <li>Are there any GDPR concerns here?<ul> <li>Pavish thinks no. We\u2019re getting their contact information from publicly available information.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-28-user-CRM-meeting/#3-crm-to-store-all-the-info","title":"3. CRM to store all the info","text":"<p>Options:</p> <ul> <li>Mathesar<ul> <li>Example of a contact record in Mathesar: <ul> <li>https://internal.mathesar.org/db/mathesar_tables/522/tables/2194/9</li> <li>Sean: This takes 15 seconds to load. I don\u2019t like it</li> </ul> </li> </ul> </li> <li>Google Sheets?<ul> <li>Hard to take notes</li> </ul> </li> <li>Markdown files<ul> <li>One markdown file per contact</li> <li>Where would it live? GitHub, HackMD?</li> <li>Ghislaine prefers GitHub</li> <li>Do we need a template? Probably not right away. We\u2019ll move forward without worrying about optimizing the process</li> </ul> </li> </ul> <p>Decision:</p> <ul> <li>We\u2019ll use markdown files in a GitHub repo</li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-28-user-CRM-meeting/#next-steps","title":"Next steps","text":"<ul> <li>Sean will write the first draft of the email message</li> <li>Ghislaine will begin the CRM and collect email addresses</li> <li>Pavish will figure out the Calendly setup</li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-28-user-CRM-meeting/#to-discuss-in-the-future","title":"To discuss in the future","text":"<ul> <li>Details of sending the mass email to the mailing list</li> </ul>"},{"location":"team/meeting-notes/2023/09/2023-09-28-user-CRM-meeting/#next-meeting","title":"Next Meeting","text":"<ul> <li>We\u2019ll meet weekly. Meeting scheduled for next week.</li> </ul>"},{"location":"team/meeting-notes/2023/10/2023-10-03-user-feedback/","title":"2023-10-03 User Feedback meeting","text":""},{"location":"team/meeting-notes/2023/10/2023-10-03-user-feedback/#details","title":"Details","text":"<ul> <li>Attending: Sean, Ghislaine, Pavish</li> <li>Note-taker: Sean</li> </ul>"},{"location":"team/meeting-notes/2023/10/2023-10-03-user-feedback/#review-crm-together","title":"Review CRM together","text":"<ul> <li>We reviewed the Internal CRM together</li> <li>We need to eliminate some duplication of data</li> <li>We discussed keeping the CSV vs putting data in markdown<ul> <li>Decision: put data in markdown, delete CSV</li> </ul> </li> <li>TODO (Ghislaine):<ul> <li>Move \u201cSource\u201d data from CSV file to markdown files</li> <li>Delete CSV file</li> <li>Delete index file</li> <li>Migrate remaining markdown files to frontmatter structure to follow \u201cAdam Jones\u201d</li> </ul> </li> <li>More thoughts:<ul> <li>Sean: We could have a script that reads the markdown frontmatter and generates a CSV or SQLite database from it so that we can look at data alongside each other.<ul> <li>Not sure this is worth it right now, but something we could do when we need</li> </ul> </li> <li>Pavish: I\u2019d like us to not spend a lot of effort on maintaining this before we move it into Mathesar</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/10/2023-10-03-user-feedback/#email-message","title":"Email message","text":"<ul> <li>How do we avoid spam?<ul> <li>Sean: I think we have a low risk of hitting spam boxes</li> <li>Pavish: but how do we make sure we reach their priority inbox?</li> </ul> </li> <li>Should we contact them again if they don\u2019t reply<ul> <li>Pavish: not sure</li> <li>Pavish: maybe we should reach out to them again, just in case our message didn\u2019t reach their priority inbox</li> <li>Decision: we\u2019ll leave this open-ended, but we\u2019ll remove content from the message that promises we won\u2019t reach out again.</li> </ul> </li> <li>Content<ul> <li>Sean has a PR for this</li> <li>Pavish thinks it\u2019s mostly good.</li> <li>Pavish: proposal: take out \u201c(If you don\u2019t reply, we won\u2019t bug you again.)\u201d because we don\u2019t want to necessarily commit to that.<ul> <li>Sean: agree</li> </ul> </li> </ul> </li> <li>Email subject:<ul> <li>Pavish: not sure \u201cHow are you using Mathesar?\u201d is best<ul> <li>What if they are not actually using Mathesar yet. The subject might not fit well.</li> </ul> </li> <li>Brainstorm:<ul> <li>Help make Mathesar better</li> <li>How are you using Mathesar?</li> <li>Does Mathesar solve your problems?<ul> <li>Sean likes this</li> </ul> </li> </ul> </li> <li>Pavish will think on it outside the meeting</li> <li>We should mention the time limit as 30 minutes</li> </ul> </li> <li>Who is the email \u201cfrom\u201d?<ul> <li>Ghislaine: thinks it would be better if it\u2019s from a specific person.<ul> <li>Pavish: agree</li> </ul> </li> <li>Pavish: we\u2019d like the email to be visible to others. We could CC a separate group at https://groups.google.com/ for this. Maybe we could use an existing group or create a new one.<ul> <li>Ghislaine will work this out with Kriti</li> </ul> </li> <li>The FROM field<ul> <li>Ghislaine: it would help if the sender is someone whose name the user will recognize from GH interactions</li> <li>Sean: I\u2019d be happy to the be the FROM person</li> </ul> </li> <li>Decision the email will be from Sean, with a google group CC\u2019ed for visibility</li> </ul> </li> <li>Timing<ul> <li>When do we want to begin sending these messages?<ul> <li>Sean: I\u2019d like to start sending them this week</li> </ul> </li> <li>Pavish: what time of week is best to send them?<ul> <li>Sean: suggests weekdays</li> </ul> </li> <li>Decision: The goal for this week is to have everything ready so that we can begin sending them next week</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/10/2023-10-03-user-feedback/#calendar-system","title":"Calendar system","text":"<ul> <li>Pavish is making some progress on this. Still working</li> </ul>"},{"location":"team/meeting-notes/2023/10/2023-10-03-user-feedback/#incentives-for-joining-a-call","title":"Incentives for joining a call","text":"<ul> <li>Ideas<ul> <li>Amazon gift card<ul> <li>Decision: We all agree this should work well</li> </ul> </li> <li>Amount?<ul> <li>Ask Kriti</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/10/2023-10-03-user-feedback/#the-call","title":"The call","text":"<ul> <li>How long do we anticipate the call taking?<ul> <li>30 minutes</li> </ul> </li> <li>Questions<ul> <li>Max 3 or 4</li> <li>shouldn\u2019t be too specific</li> <li>could be similar to the survey question</li> <li>we could improvise follow-up questions as needed</li> <li>mostly: we need to understand their problems</li> <li>why they were exploring Mathesar</li> </ul> </li> <li>Overall thoughts<ul> <li>the call should feel informal and friendly</li> <li>We need to \u201cdrill down\u201d into the problem, in order to avoid the XY problem</li> <li>The \u201cset of questions\u201d are not actually mandatory. They\u2019re just there to help in case conversation stagnates. We should try to keep the call organic and conversational instead of interview-like</li> <li>We need to identify the \u201cjobs to be done\u201d instead of the \u201ctools\u201d used to accomplish those jobs</li> </ul> </li> <li>Decision: We will keep the call open-ended without mandating a specific set of questions. We\u2019ll formulate a set of \u201cpossible questions\u201d for inspiration on the call.</li> <li>Possible questions<ul> <li>What drove you to explore Mathesar?</li> <li>How do you use data?</li> <li>What data-related problems are you trying to solve?</li> <li>Where are you in your journey with Mathesar?</li> <li>What other products have you researched or used?</li> <li>What was your workflow before Mathesar?</li> <li>Is Mathesar actually solving your problems?</li> <li>What kind of features would you like to see in Mathesar?</li> </ul> </li> <li>What is the video platform we plan to use for the call?</li> <li>Can we record the call???<ul> <li>We could have another core team member there to take notes</li> </ul> </li> <li>Who should be on the calls?<ul> <li>Sean: I like the idea of one core team member leading the call and another there to take notes<ul> <li>Yes, we decided to do this</li> </ul> </li> <li>Pavish is worried about timezone conflicts and having a hard time getting two core team members<ul> <li>Sean: not so worried</li> <li>Sean: can we have SavvyCal sort out some of these logistics<ul> <li>Pavish: we can use it to find the \u201cprimary\u201d person, but we\u2019ll need to handle the note-taker on an ad-hoc basis</li> </ul> </li> </ul> </li> </ul> </li> <li>How do we handle people who schedule calls on very short notice?<ul> <li>Pavish will look into the logistics of setting a \u201cbuffer\u201d with SavvyCal</li> </ul> </li> <li>System for assigning the calls<ul> <li>Ghislaine will receive all call scheduling info and assign specific team members to each calls. She will make sure that each call has a \u201cprimary\u201d core team member assigned to lead the call as well as a \u201csecondary\u201d person to take notes.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/10/2023-10-03-user-feedback/#todo","title":"TODO:","text":"<ul> <li>Sean:<ul> <li>Remove \u201c(If you don\u2019t reply, we won\u2019t bug you again.)\u201d from email message content.</li> <li>Add 30 minute call time limit to email content</li> </ul> </li> <li>Ghislaine: TODO items within the CRM topic above</li> <li>Pavish: finish calendar setup</li> <li>Ghislaine: chat with Kriti about<ul> <li>Get email message content approved</li> <li>Figure out the google group which we will CC from the email. Create new one if necessary.</li> <li>Make sure Kriti is okay with Sean being the \u201cFROM\u201d for the email</li> <li>Decide on the amount for the Amazon gift card</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/10/2023-10-03-user-feedback/#to-discuss-later","title":"TO discuss later","text":"<ul> <li>Content of email to newsletter list</li> <li>Expanding to additional sources of users</li> </ul>"},{"location":"team/meeting-notes/2023/10/2023-10-05-team-meeting/","title":"2023-10-05 team meeting","text":"<p>Attendees: Anish, Brent, Dom (partial), Ghislaine, Kriti, Mukesh, Pavish, Rajat, Sean</p>"},{"location":"team/meeting-notes/2023/10/2023-10-05-team-meeting/#014-release-check-in","title":"0.1.4 release check in","text":""},{"location":"team/meeting-notes/2023/10/2023-10-05-team-meeting/#pre-meeting-prep","title":"Pre-meeting prep","text":"<ul> <li>Discussion goal: Check in on release, identify what\u2019s remaining, make sure we\u2019re all thinking of release as top priority</li> </ul>"},{"location":"team/meeting-notes/2023/10/2023-10-05-team-meeting/#discussion","title":"Discussion","text":"<ul> <li>https://github.com/centerofci/mathesar/issues?q=is%3Aopen+is%3Aissue+milestone%3Av0.1.4</li> <li>Mukesh summary: There are PRs for all the issues that are in 0.1.4</li> <li>issue 3053 - package repository has been figured out via email, needs to be closed</li> <li>Sean and Mukesh will pair on the documentation for #3167 and related issues</li> <li>Rajat - all work will have PRs by tomorrow morning</li> <li>Pavish brought up UX issues, should they be resolved before release?<ul> <li>Yes!</li> <li>After all the issues are done, there will be a significant amount of work going through and making sure the installation flows well and any UX or other issues are resolved</li> <li>Sean will start coordinating this process once more release issues are closed</li> </ul> </li> <li>issue 3230: Dom is working on it, Anish has offered suggestions on how to fix<ul> <li>Dom is not at the meeting, so we don\u2019t know the status<ul> <li>Please let Dom know that we should retain the database models, even if it\u2019s marked delete:true (Perhaps change the name of the flag). The user will manually disconnect them from the UI.</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/10/2023-10-05-team-meeting/#internal-crm","title":"Internal CRM","text":""},{"location":"team/meeting-notes/2023/10/2023-10-05-team-meeting/#pre-meeting-prep_1","title":"Pre-meeting prep","text":"<ul> <li>Discussion goals:<ul> <li>Promote awareness of the CRM so that people think to incorporate it into their workflows</li> <li>Address any questions/concerns people have about our CRM</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/10/2023-10-05-team-meeting/#discussion_1","title":"Discussion","text":"<ul> <li>Please see Sean\u2019s email to core team for more details: https://groups.google.com/a/mathesar.org/g/core-team/c/miMgz6-PJD4/m/kT4kXtN-HwAJ</li> <li>CRM is ready to use now, but very rough around the edges</li> <li>CRM is very important for many reasons - systematizing user interactions, product direction, etc. - please prioritize familiarizing yourself with it and using it</li> <li>If anyone has issues, please come to Sean. Don\u2019t assume it\u2019s your fault if you can\u2019t use the CRM as intended.</li> </ul>"},{"location":"team/meeting-notes/2023/10/2023-10-05-team-meeting/#product-vision-brainstorming","title":"Product vision brainstorming","text":""},{"location":"team/meeting-notes/2023/10/2023-10-05-team-meeting/#pre-meeting-prep_2","title":"Pre-meeting prep","text":"<ul> <li>Discussion goal: What outcome should we be aiming for at the end of our product vision / direction conversations? </li> </ul> <p>By \u201coutcome\u201d, I mean \u201cthe final output\u201d of the process. - e.g. if it\u2019s a document describing our product vision, what questions should it answer / what topics does it need to cover? What timeline do we set the product direction for? How would we use the document? - if it\u2019s not a document, what does the tangible output look like? - are there any intermediate ouputs we need along the way?</p>"},{"location":"team/meeting-notes/2023/10/2023-10-05-team-meeting/#discussion_2","title":"Discussion","text":"<ul> <li>Ghislaine:<ul> <li>We can look at our roadmap and see that all the items in it are grounded in reality or things that are currently happening</li> <li>Market, etc.</li> <li>We can check where we are and know how far we are from a destination</li> <li>We need to have some goals and metrics<ul> <li>e.g. more installation requests from X type of users</li> <li>e.g. in X months, we have Y small business users doing stuff with Mathesar</li> </ul> </li> <li>If we\u2019re only getting hobby users and not small businesses, maybe we\u2019re on the wrong track \u2013 could be marketing or features</li> </ul> </li> <li>Pavish:<ul> <li>What does Mathesar look like in 6 months or a year</li> <li>Clarity (similar to how we had our storyboard for librarian for launch)</li> <li>Help with communicating to users</li> <li>What direction is Mathesar going?</li> <li>What features?</li> <li>What users are targeted?</li> <li>What is our position in our market compared to other tools?</li> <li>What\u2019s our emphasis level on a SaaS version?    </li> </ul> </li> <li>Sean:<ul> <li>\u201cWhat is the outcome?\u201d is a good framing</li> <li>SaaS version may be a different question</li> <li>What are the problems we want Mathesar to help people solve?</li> <li>Library demo is an example of solving a problem with Mathesar<ul> <li>Mathesar owns the data in this scenario</li> </ul> </li> <li>Options<ul> <li>Mathesar connects to data</li> <li>Mathesar owns data</li> <li>Mathesar augments data</li> </ul> </li> <li>Recently, emphasis has been on connecting to data<ul> <li>What advantages can be gained from this perspective?</li> </ul> </li> <li>Identify our advantages over competitors</li> <li>Outcome could be informal understanding among the team, doesn\u2019t necessarily need to be a document</li> </ul> </li> <li>Pavish<ul> <li>Agrees with Sean, but SaaS should be a consideration sooner because it affects architecture</li> </ul> </li> <li>Brent<ul> <li>A SaaS product is essentially a different product that uses Mathesar as a tool</li> <li>The product level decisions are totally different from self-hosted - e.g. multi-tenancy <ul> <li>It\u2019s not \u201chow do we implement multi-tenancy\u201d, it\u2019s \u201cwhat do we want the UX for hosted users to be?\u201d</li> </ul> </li> <li>We do need product vision for SaaS, but I\u2019m not sure it\u2019s the same thing as the vision for Mathesar the product</li> <li>Outcome:<ul> <li>It would be good to re-emphasize and hone in on why people would want to connect a GUI like Mathesar to a pre-existing Postgres DB<ul> <li>What are they trying to do?</li> <li>We should try to potentially concentrate</li> </ul> </li> <li>Product vision should be general, high-level<ul> <li>Common understanding written down</li> <li>e.g. advantage over competitors is something we all agree on</li> </ul> </li> <li>Would be phenomenal to lock in whether we\u2019re focused on transactional or analytical data.<ul> <li>Different advantages to each approach</li> <li>Different UI emphasis</li> <li>Commit to it for some time, not forever</li> </ul> </li> <li>Would be nice to know what scale we\u2019re emphasizing<ul> <li>Postgres can do Airtable scale to big data pipeline scale</li> <li>We\u2019re not probably looking at inputting billions of rows scale</li> </ul> </li> </ul> </li> </ul> </li> <li>Pavish:<ul> <li>Would like something more specific than high-level product vision<ul> <li>i.e. library demo type thing</li> <li>maybe multiple storyboards similar</li> <li>at 6 month level, doesn\u2019t have to be called \u201cproduct vision\u201d</li> </ul> </li> </ul> </li> <li>Ghislaine:<ul> <li>All these questions seem to tied down to: are we doing BI, are we doing internal tools, etc.</li> <li>There are concepts in those direction that tie to specific products, e.g. \u201cdata mart\u201d</li> <li>If it\u2019s evidence based, then we tend towards more saturated markets (e.g. there\u2019s a lot of evidence for small businesses wanting BI)</li> <li>We need more clarity from our users, not from generic research (because the data that is abundant is for saturated)</li> </ul> </li> <li>Sean:<ul> <li>Outcome idea: document with 5-10 use cases - 1 paragraph each - describing a specific problem the user is solving, where Mathesar is the best tool they can use to solve that problem</li> <li>We need to figure out how similar the use cases are \u2013 if they are very diferent, then we can\u2019t go after them all in a reasonable basis. If they are very similar, then our market will be too narrow</li> </ul> </li> <li>Rajat:<ul> <li>Kind of users to target</li> <li>Problems they want to solve</li> <li>Solutions offered by Mathesar</li> <li>SAAS could become a path towards those solutions. </li> </ul> </li> <li>Pavish:<ul> <li>Having use cases</li> <li>Try to gather more info before focusing too much on use cases</li> <li>Wait until we have the feedback before forming the vision</li> </ul> </li> <li>Mukesh:<ul> <li>Same; make some use cases</li> <li>What kind of data is coming in</li> <li>Where Mathesar fits into a data flow</li> <li>For users who manage data</li> <li>SWOT Analysis of our strengths</li> <li>Product vision should include our ideologies</li> <li>Having evidence of the feedback helps derive more information</li> </ul> </li> <li>Brent:<ul> <li>Sean suggested we needed to choose between a wide set of use cases and a narrow set of use cases. I don\u2019t know if I agree. We could focus on one operation that applies to a bunch of different use cases, then that could be stategic. E.g. if we make Mathesar capable of accessing the same data for different types of users, then we can serve a bunch of use cases. Look at Unix \u2013 small tools that serve many different use cases.</li> <li>Important to be \u201cexciting and dynamic\u201d with a new product. We don\u2019t necessarily need to wait for user feedback before we develop the product vision. We might not get enough data any time soon. Being exciting is more important than being right.</li> </ul> </li> <li>Rajat:<ul> <li>If we had 5 very different use cases, then we could choose to focus on only one or two in the short term, with the intent of doing the others in the longer term.</li> <li>We can use market cap, competitor analysis, our strengths, etc to decide between these use cases. </li> </ul> </li> <li>Dom:<ul> <li>Agrees that the product vision should be exciting</li> <li>How do we feel about the trade off between a product vision that we personally find exciting vs a product vision that we deem to be practical?</li> <li>Is the vision \u201cuse cases\u201d or \u201cfeatures\u201d? It might be more helpful to frame the vision in terms of features because it would be easier for people on our team to understand.</li> <li>As a starting point, I would prefer a vision that\u2019s exciting over a vision that\u2019s practical.</li> </ul> </li> <li>Kriti:<ul> <li>Helpful for me to think of the produt vision as a \u201cgo to market strategy\u201d.</li> <li>I\u2019d like a more integrated plan, including sustainability, e.g. SaaS vs donations.</li> <li>There are many different forms that output could take. Want to make sure that the output works for everybody and has buy-in.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/10/2023-10-10-Phase-1-finalization/","title":"2023-10-10 Phase 1 finalization call with Kriti","text":"<ul> <li>Questions for Kriti:<ul> <li>SavvyCal \u2013 round robin vs single person (Ghislaine)</li> <li>Group email \u2013 Fresh desk vs CC-ed Google group</li> <li>Do we need to make any adjustments to the email content related to the gift card amount?</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/10/2023-10-10-Phase-1-finalization/#conclusions","title":"Conclusions:","text":"<ul> <li>For the first few weeks:<ul> <li>It would make sense to have one person (or both to work out all the kinks) form the User Interview project being on the calls</li> </ul> </li> <li>SavvyCal:<ul> <li>To begin with, we will go with a single person (Ghislaine) handling the scheduling</li> </ul> </li> <li>Group email:<ul> <li>Kriti recommends using Freshdesk to send mails and the email for calls</li> </ul> </li> <li>Incentives:<ul> <li>It would make sense to send the first set of emails without an incentive to the GH users</li> <li>We can figure out the incentive for the mailing list later.</li> <li>Take out the word Amazon, we\u2019ll only mention a $25 giftcard.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/10/2023-10-10-user-feedback/","title":"2023-10-10 User Feedback meeting","text":""},{"location":"team/meeting-notes/2023/10/2023-10-10-user-feedback/#details","title":"Details","text":"<ul> <li>Attending: Sean, Ghislaine, Pavish</li> <li>Note-taker: Sean, Pavish</li> </ul>"},{"location":"team/meeting-notes/2023/10/2023-10-10-user-feedback/#updates-on-previous-action-items","title":"Updates on previous action items","text":"<p>Ghislaine: - Email to Kriti has been sent. - Ghislaine\u2019s adding more content to existing users\u2019 CRM pages - Ghislaine &amp; Kriti have decided on a note for the gift card - Kriti suggested to do $25 for 30 min and $50 Amazon gift card for an hour. - Group email portion needs to be resolved</p> <p>Pavish:  - If you want to do round robin scheduling or single-email scheduling, Pavish has figured this out. - Kriti said she thought it would be best if we used the round robin method - Pavish still thinks that we should use a single-point-of-contact to schedule. - No other action-items for Ghislaine or Sean at this point</p> <p>Questions for Kriti: - SavvyCal \u2013 round robin vs single person (Ghislaine) - - Group email \u2013 Fresh desk vs CC-ed Google group - Do we need to make any adjustments to the email content related to the gift card amount?</p> <p>Buffer Time - Buffer period: We should plan for at least 1hr between calls and at least 1 day between scheduling and call time</p>"},{"location":"team/meeting-notes/2023/10/2023-10-10-user-feedback/#future-actions","title":"Future actions","text":"<p>CRM: - We should add people to the CRM who filled out the \u201cInstallation request\u201d form on our website     - Pavish: how do we deal with naming collisions?         - Sean: it\u2019s messy, we\u2019re going to have to address this as it comes up     - Pavish: Maybe we should look into other CRM products at some point soon?         - Sean: I don\u2019t think this is a good use of time right now</p> <p>Phase 2: - Sending email messages to mailing list and installation requests people</p>"},{"location":"team/meeting-notes/2023/10/2023-10-17-user-feedback-meeting/","title":"2023-10-17 User Feedback Meeting","text":"<p>Team Updates:</p> <p>Sean: - Sent out 4 emails, received 2 responses already - Is keeping track of outreach activity in a csv file - Emails should be very communicative, and the person responsible must be mindful of maintaining the same style.</p> <p>Action Items: - We\u2019ll parallelize sending out the emails to the GH users     - Sean: We need to delicately push the user into providing us as much as information as possible - Pavish is going to add CRM entries for 2 users who have filled our survey and interested in having a conversation with us     - Pavish: We should prioritize sending emails and reaching out to them since they are organic leads     - Pavish will be sending out the emails. He will request a review once he\u2019s drafted the mails. - We need to set a notification for the surveys. Ghislaine will be figuring this out.</p> <p>Next: - We\u2019ll discuss emailing the mailing list after we are ready with the release and the funding announcement.     - Single mail with funding announcement, current progress, and call link. - We\u2019ll discuss Phase-3 (increasing the top part of the funnel eg., with chat option in our website) next week, once Ghislaine is back.</p>"},{"location":"team/meeting-notes/2023/11/2023-11-08-design-session/","title":"2023-11-17 Design Session","text":""},{"location":"team/meeting-notes/2023/11/2023-11-08-design-session/#attendees","title":"Attendees","text":"<ul> <li>Pavish</li> <li>Kriti</li> <li>Ghislaine</li> <li>Sean</li> </ul>"},{"location":"team/meeting-notes/2023/11/2023-11-08-design-session/#topic-bidirectional-navigation-design-shortcut-menu","title":"Topic: Bidirectional Navigation Design &amp; Shortcut Menu","text":""},{"location":"team/meeting-notes/2023/11/2023-11-08-design-session/#design-question","title":"Design Question","text":"<ul> <li>How might we integrate bidirectional navigation between explorations and a table without overcomplicating the design and ensuring it aligns with existing app functionalities?</li> </ul>"},{"location":"team/meeting-notes/2023/11/2023-11-08-design-session/#brainstorming","title":"Brainstorming","text":"<p>We discussed bidirectional navigation between explorations and a table and options to solve the problem without complex design solutions.</p> <ul> <li>We agreed that this problem is worth solving, both Sean and Ghislaine found this issue annoying when using Mathesar in their workflow</li> <li>We discussed the concept of navigation via global search bar, but dismissed it as too high-concept and not related to this specific problem </li> <li>We dismissed, the idea of using the shortcuts menu for links to explorations based on Sean\u2019s input. He pointed out that it is unlikely that users will think of using it for this purpose.</li> <li>Debated adding explorations inside the inspector panel but ended up rejecting this idea due to the inspector\u2019s designated function for table metadata only.</li> <li>We considered a separate panel to show explorations and links (i.e. a \u201crelated objects navigation\u201d panel)<ul> <li>But the logic of showing / hiding a separate panel is difficult</li> <li>We agreed that the inspector panel shouldn\u2019t be replaced by other panels and remain always visible and dynamically responsive to selection events (column, table, record etc.)</li> </ul> </li> <li>Discussed, then rejected, the idea of a left side panel for explorations because it would have a broad impact on the UX for the app and we need to think through adding new top level navigation elements more holistically, and not just for this one small issue.</li> <li>We briefly considered renaming the \u201cInspector\u201d to something else, but it seemed like overkill.</li> </ul>"},{"location":"team/meeting-notes/2023/11/2023-11-08-design-session/#decision","title":"Decision","text":"<ul> <li>Decided to implement a drop-down menu next to filter, sort, and group options, labeled \u201cExplorations\u201d. There should be a divider between \u201cfilter, sort, and group\u201d and this new button.</li> <li>In the drop-down, users will find all explorations where the current table is the base, along with an option to add new explorations with the base table preselected.</li> <li>For both unsaved and saved explorations, we will have a link to the base table available on the top bar. </li> <li>We decided on this option because:<ul> <li>It doesn\u2019t violate the concept of the table inspector</li> <li>It doesn\u2019t require large changes to the application which should be considered more holistically</li> <li>It doesn\u2019t add too much clutter to the navigation.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/11/2023-11-08-design-session/#future-conversations","title":"Future conversations","text":"<ul> <li>Global search</li> <li>Tabs for navigation vs browser tabs</li> <li>Left navigation pane for related entities</li> </ul>"},{"location":"team/meeting-notes/2023/11/2023-11-08-team-meeting/","title":"2023-11-08 Team meeting","text":""},{"location":"team/meeting-notes/2023/11/2023-11-08-team-meeting/#progress-check-in","title":"Progress check in","text":"<ul> <li>No new updates on the 0.1.4 release, we\u2019re making progress<ul> <li>DB connections is now more clearly scoped</li> <li>Sean would like remaining Installation work captured in tickets so that it\u2019s easier to manage the release<ul> <li>Brent will create the issues</li> </ul> </li> </ul> </li> <li>DB connections<ul> <li>Backend work is pending, Anish &amp; Brent are working on it<ul> <li>Brent:<ul> <li>A proper remodel would take a lot of work, and would like a timeline of when we intend to release/get a clear idea of the scope</li> <li>Long term, we\u2019re gonna get rid of this anyway, so it might make sense to not put a lot of effort into it</li> </ul> </li> </ul> </li> <li>Design is complete. Frontend work is pending, blocked on backend</li> </ul> </li> <li>Installation<ul> <li>Kriti would like to deprecate the guided script install<ul> <li>Brent agrees</li> </ul> </li> <li>Docker-compose deprecation needs to be addressed<ul> <li>Kriti doesn\u2019t want to deprecate this, Pavish agrees<ul> <li>Sean: We could remove it instead of deprecating</li> <li>We\u2019ll be reorganizing this instead</li> <li>Pavish: It\u2019d be good to have a migration guide to inform the removal of MATHESAR_DATABASES env variable, and we could mention that guided install is no longer supported</li> </ul> </li> <li>Conversation tracked in email</li> </ul> </li> <li>Sean, Brent, &amp; Anish will sync up on figuring out documentation work<ul> <li>Kriti might have some time to help too</li> </ul> </li> </ul> </li> <li>User research / help<ul> <li>Ghislaine is looking to adding a chat option on the website</li> <li>Kriti will be taking a look at where everything\u2019s at during the upcoming week</li> <li>Brent is working on figuring out infra stuff on AWS, to help users</li> <li>Supporting Windows users?<ul> <li>We need to add a lot of documentation on it</li> </ul> </li> </ul> </li> <li>i18n<ul> <li>Pavish took over from Rajat last week</li> <li>Needed to change the library since it didn\u2019t work with our translation service provider (Transifex)</li> <li>Will take a few weeks to complete</li> <li>Work is proceeding at a good pace</li> </ul> </li> <li>Product / GTM strategy + hiring plan<ul> <li>Kriti hasn\u2019t worked on it this week, but she\u2019ll be focusing on it the upcoming week</li> </ul> </li> <li>Beta<ul> <li>waiting until above items are done before focusing on this</li> <li>use the document https://hackmd.io/xHWKXnMnRlyxYFt3XIzFQQ</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/11/2023-11-08-team-meeting/#product-process","title":"Product process","text":"<ul> <li>Added by: Kriti </li> </ul> <p>In the last meeting, Sean brought up having a process to quickly move product work forward. When new work is proposed (either internally or externally): - First we need to decide if we want to do it - Second we need to decide that we want to prioritize it, or do it now.</p> <p>How should this work? Who should be involved?</p>"},{"location":"team/meeting-notes/2023/11/2023-11-08-team-meeting/#pre-meeting-thoughts-from-sean","title":"Pre-meeting thoughts From Sean","text":"<p>I mentioned two distinct processes that I want us to improve:</p> <ol> <li> <p>Our \u201capproval process\u201d: This is where we deicide if we want to do something specified in a ticket. This process moves a ticket from <code>status: draft</code> to <code>status: ready</code>.</p> </li> <li> <p>Our \u201cprioritization process\u201d: This is where we decide when to do something. This process alters the milestone on a ticket, slating it to be completed for an upcoming release.</p> </li> </ol> <p>Generally, I think our prioritization process could use some honing, but I\u2019d say it\u2019s actually working okay and might not warrant a team-wide discussion at this point.</p> <p>The approval process is what I want to discuss the most, because our process here seems to be less specified than others.</p> <p>Here are some examples of \u201cdraft\u201d tickets which (as I see it) are currently blocked on this \u201capproval\u201d process. If we can figure out how to approve tickets like this, then in many cases we could open them up to community contributors to work on. Or, if we can figure out how to \u201creject\u201d them, then we can reduce our queue while maintaining an archival log of our decision process.</p> <ul> <li>Allow Typing Into Cells Once Highlighted</li> <li>Make navigation header behave more consistently</li> <li>Remove \u201cRecords will be repositioned on refresh\u201d message</li> <li>Be explicit when displaying empty strings as cell values</li> </ul> <p>This is my main question:</p> <ul> <li>How do I determine which team members need to approve a ticket in order for the ticket as a whole to be considered approved?</li> </ul> <p>Ideally we\u2019d be able to codify a rubric that allows all team members to reliably and independently draw the same conclusions to that question. But I\u2019m not seeing a simple path to such a rubric. For efficiency\u2019s sake, we ought to avoid requiring every team member to approve every ticket. But identifying a subset of our team to approve all such tickets risks omitting members who hold strong opinions or background knowledge on particular areas of the product.</p> <p>This conundrum reminds me of this HN thread from last week: The product manager role is a mistake. The article is, in my opinion, not very good. It makes some interesting points, but mostly seems to lament a dysfunctional dynamic present on some teams while failing to give pragmatic advice for better alternatives. I came away from the article perplexed. But after reading the HN comments, I began to reflect on the challenges we have in our team making product decisions, and many of the comments refuting the article really began to resonate with me. This is all to say: I think we need some clarity within our team about who is responsible for these ticket \u201capproval\u201d decisions. For example, hypothetically our answer could be: \u201cKriti (and only Kriti) is responsible for approving draft tickets\u201d. That would be fine with me. If we had that kind of clarity, then I would assign these \u201cdraft\u201d tickets to her for her to review and approve. Then we could move them forward by approving (or closing) them. What\u2019s difficult for me currently is our lack of clarity on the process. Interestingly, I see that difficulty reflected in many of those HN comments arguing (against the article) that a \u201cproduct manager\u201d role is crucial for their teams.</p>"},{"location":"team/meeting-notes/2023/11/2023-11-08-team-meeting/#discussion","title":"Discussion","text":"<ul> <li>Kriti: for the approval process, I agree that having the entire team approve it is too much. And having only Kriti approve it is too limited. Maybe different \u201careas\u201d of the product have different people responsible for approving tickets</li> <li>Brent: we might have \u201ccracks\u201d between different areas</li> <li>Brent: What\u2019s the problem with Kriti being the sole approver?<ul> <li>Kriti: I want to be able to go on vacation. Maybe I could delegate during vacation. Need to have a person with a lot of context. If we could try to document all that context, that would help. Maybe I\u2019m responsible for everything and I try to document as I go.</li> <li>Kriti: \u201ccontext\u201d here means that I know which team members will have opinions and experience to weigh in on specific tickets</li> <li>Ghislaine: Maybe what we\u2019re calling context here is what people call an \u201cepic\u201d in the scrum model.<ul> <li>Kriti: worried that model might require too much bureaucracy for a team as small as ours.</li> </ul> </li> </ul> </li> <li>Pavish: just to be clear, anyone can weigh in on a ticket, right? Kriti: yes.</li> <li>Kriti: we might need to have some system of a \u201cdeadline\u201d for weighing in</li> <li>Pavish: important for the implementer to have a stake in the approval process<ul> <li>Kriti: Tricky when community contributors are implementers</li> <li>Kriti: somebody from engineering should be involved in approving all ticket</li> </ul> </li> <li>Brent: somtimes the asynchronous nature of these decisions can make them drag on</li> <li>Sean: maybe a once per month meeting. 1hr max. Sean can curate a list of and send the list out ahead of time for people to  understand context and form opinions.</li> <li>Kriti: we could also use this meeting to close old tickets</li> </ul>"},{"location":"team/meeting-notes/2023/11/2023-11-08-team-meeting/#conclusion","title":"Conclusion","text":"<ul> <li>Decision: Sean will coordinate meetings</li> </ul>"},{"location":"team/meeting-notes/2023/11/2023-11-08-team-meeting/#github-issues-workflow","title":"GitHub issues workflow","text":"<ul> <li>Allocated time: </li> <li>Added by: Sean</li> </ul> <p>Potential questions (written by Kriti)</p> <ul> <li>What \u201cjobs\u201d are issues doing for us currently?<ul> <li>Tracking code-related work</li> <li>Tracking non-code related work (design, product, infrastructure etc.)</li> <li>A place for community members to leave feedback</li> <li>Public product roadmap?</li> <li>A place for contributors to find issues</li> </ul> </li> <li>Issues vs. discussions<ul> <li>Should we use both?</li> </ul> </li> <li>How should we track design issues in GitHub? <ul> <li>What about frontend issues that include design spec?</li> </ul> </li> <li>GitHub project<ul> <li>Should we be using this to track work?</li> <li>What should our workflow be?</li> <li>Who should be responsible for keeping it up to date?</li> </ul> </li> <li>Repo admin priorities:<ul> <li>Respond to users ASAP</li> <li>Keep the backlog \u201cgroomed\u201d</li> </ul> </li> <li>Cleaning up old issues<ul> <li>Should we do this now?</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/11/2023-11-08-team-meeting/#notes","title":"Notes","text":"<p>Go-around style brain dump</p> <p>Kriti:</p> <ul> <li>We\u2019re trying to do too muuh with issue. We should use issues only for code-related tasks. We shouldn\u2019t track workflow-related tasks in there (e.g. \u201cshut down wiki serever\u201d)</li> <li>We should try to avoid placeholder issues. Users should be able to find issues easily. The more keywords the better.</li> <li>Hard for new contributors to find issues and have enough info to work on them.</li> <li>Nobody is really using the GH \u201cproject\u201d. We might have some opportunity to use it better<ul> <li>It could also help with prioritization</li> </ul> </li> <li>Want to clean up old issues and good backlog.</li> </ul> <p>Anish:</p> <ul> <li>Use issues for tracking code-related stuff</li> <li>If I don\u2019t know if it\u2019s viable, then I\u2019ll mention people in the comments and ask questions</li> <li>Other than code related issues, I don\u2019t know how useful GH issues are.</li> </ul> <p>Brent:</p> <ul> <li>Agree with a lot of stuff Kriti said</li> <li>We\u2019re using GH issues for multiple things. I don\u2019t just mean code/non-code. The nature of the UI (and the fact that they can be submitted by anyone) mean that we get a lot of other disucussion in tickets. We have a process that assumes that issues are going to be a task to be done. Maybe we have other options like discussions, email messages.<ul> <li>Inadequate to just split into \u201cfeature\u201d/\u201dbug\u201d dichotomy or \u201cwork\u201d/\u201dno work\u201d dichotomy</li> </ul> </li> <li>Should we be helping users find a different spot to submit questions and discussions? Or should we broaden our understanding of tickets to include discussions?</li> <li>We\u2019re using tickets for a lot of non-task things.</li> </ul> <p>Ghislaine:</p> <ul> <li>Agreed with Kriti about design work maybe not having a place in GitHub</li> <li>Always feels kind of weird</li> <li>We used to have wiki spec added as a PR and have conversations there</li> <li>But email is better</li> <li>Figma comments are also good</li> <li>Design issues just stay blank</li> <li>But we don\u2019t have a project management / task management tool, this might fill that gap</li> <li>Ghislaine doesn\u2019t want to be out of the loop, she wants her work to be visible</li> </ul> <p>Pavish:</p> <ul> <li>Pavish thinks most of his points are covered already</li> <li>Pavish hates the following:<ul> <li>Decision making issues: \u201cDo we need this record re-positioning issues?\u201d<ul> <li>Pavish doesn\u2019t know if he should ignore it or prioritize commenting on it, or do we even want to pick it up?</li> <li>Also random people comment on it and say \u201cI want to work on this\u201d</li> <li>Pavish may want to be involved, but it seems like a low priority</li> </ul> </li> <li>Long discussions in draft issues<ul> <li>If it\u2019s technical, it\u2019s fine</li> <li>If it\u2019s fuzzy, e.g. \u201cdo we want to do this?\u201d</li> <li>Emails are better for this</li> </ul> </li> </ul> </li> <li>The above is not applicable to user-reported issues</li> <li>Pavish finds opening PRs way easier than creating issues<ul> <li>Unless issue needs to be visible to someone else</li> <li>e.g. PRs for i18n, docker file</li> <li>Stakeholders know about changes, why do we need an issue</li> </ul> </li> <li>GitHub issues doesn\u2019t work for project tracking at all</li> <li>We need a different project / work tracking solution, not GitHub issues</li> <li>e.g. 1 meta ticket for i18n</li> <li>If there\u2019s only one reviewer, then it\u2019s more efficient to work 1:1</li> <li>For work visibility internally, we should use a project tracking solution</li> <li>Pavish only creates issues for things that we\u2019ve already decided to do but can\u2019t do now</li> </ul> <p>Sean:</p> <ul> <li>Likes GH issues</li> <li>inclined to use them for more things</li> <li>We should consolidate our workflow around that system<ul> <li>difficult to have mutually exclusive scope between different issues</li> </ul> </li> <li>If we have things we don\u2019t want to use issues for, we need to think about the scope of those other tools.</li> <li>GitHub Discussions is awfully implemented, really hard to use<ul> <li>real UX problems</li> </ul> </li> <li>Discussions shine for Q&amp;A for users<ul> <li>stack overflow model</li> <li>we don\u2019t have a need for that kind of tool right now</li> <li>we\u2019re using them as roadmap items, but those are tasks and make more sense as issues</li> <li>questions, etc. are fine to be issues</li> <li>maybe remove issue templates \u2013 barrier to create issue is very minimal, terribly worded, etc. is fine - good for our stage - we want people to interact with us</li> </ul> </li> <li>Sean has specific things to change about how we do labels<ul> <li>That conversation isn\u2019t relevant now until we agree on the purpose of issues</li> </ul> </li> </ul> <p>Further discussion:</p> <ul> <li>Brent is also not of the opinion that we should use only use issues for work tickets     \u2013 just that we have set up processes around issues that assume they\u2019re work tickets<ul> <li>We should have a set of different process flows based on the nature of the issue (to keep us from trying to treat non-work-ticket issues as work tickets)</li> </ul> </li> <li>Kriti: Seems like we have a dichotomy between two scopes: \u201cexternal-facing\u201d and \u201cinternal-facing\u201d. There are two separte things. Different granularity. We need more granular tracking for internal stuff than we do for external stuff. Maybe using project tracking software for internal stuff and use GH issues for external stuff.</li> <li>Kriti: slows us down to spec out tickets in detail sometimes.</li> <li>Pavish: seems like GH issues is designed for \u201cextenal\u201d use caess much more so than \u201cinternal\u201d use cases</li> </ul>"},{"location":"team/meeting-notes/2023/11/2023-11-08-team-meeting/#db-connections-implementation-priorities","title":"DB connections implementation priorities","text":"<ul> <li>Brent: right now have a <code>deleted</code> attribute. The front end uses this attribute to \u201chide\u201d databases.</li> <li>Brent: Connections get marked as deleted after we\u2019re unable to connect to them one time. We don\u2019t have a way to \u201cundelete\u201d them. We need to remove this. It\u2019s going to be difficult to remove though. It\u2019s tangled up in huge swaths of the reflection code.</li> <li>Sean: can you put <code>deleted</code> on the new model and just have it always be false? Brent: no because this will have some perf drawbacks.</li> <li>Sean: mostly we don\u2019t want to persist info about DB connection errors.</li> <li>We don\u2019t have a convincing use case for caching DB connection errors.</li> <li>Kriti: how many days to implement the \u201cspackle\u201d?<ul> <li>Brent: probably something we could get done early next week</li> <li>Brent: we\u2019ll still have some spaghetti code that we\u2019ll need to remove eventually</li> </ul> </li> <li>Anish: \u201cdeleted\u201d has a lot to do with reflection, especially with regard to perf improvements within the context of needing to run reflection</li> <li>Kriti: we should decouple the frontend-blocking work from the larger architectural backend work. This way we can get the release out and deliver new features to users who are waiting on them.</li> </ul>"},{"location":"team/meeting-notes/2023/11/2023-11-22-staff-meeting/","title":"2023-11-22 staff check in","text":""},{"location":"team/meeting-notes/2023/11/2023-11-22-staff-meeting/#team-check-in","title":"Team check in","text":""},{"location":"team/meeting-notes/2023/11/2023-11-22-staff-meeting/#adam","title":"Adam","text":"<ul> <li>Working on transition stuff</li> <li>Sam rotating out, Kriti/Adam taking over</li> <li>Main things working on:<ul> <li>New US payroll platform</li> <li>New international contractor platform</li> </ul> </li> <li>Lots of annoying administrative stuff</li> </ul>"},{"location":"team/meeting-notes/2023/11/2023-11-22-staff-meeting/#anish","title":"Anish","text":"<ul> <li>Working on docker compose file for installations</li> <li>Need to set up custom domain for testing</li> <li>Working aligning documentation with the new docker compose file changes</li> </ul>"},{"location":"team/meeting-notes/2023/11/2023-11-22-staff-meeting/#brent","title":"Brent","text":"<ul> <li>Less work time this week due to personal stuff</li> <li>API documentation project has been ended because it\u2019s too much work to get it to completion, associated communication</li> <li>DB connection endpoints - for 0.1.4 release<ul> <li>Some experimenting with RPC standards, not ad-hoc</li> <li>Not worth the time right now to do proper RPC</li> <li>DRF action endpoint instead</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/11/2023-11-22-staff-meeting/#ghislaine","title":"Ghislaine","text":"<ul> <li>last week, had first design session</li> <li>working on bulk linking  (many to many)<ul> <li>exploring different options</li> <li>Discussed some options with Brent</li> <li>A lot of things were cleared up on a technical level</li> <li>Will discuss with Pavish next</li> </ul> </li> <li>preparing results of bulk linking discussions for next design sessions</li> <li>Next, moving on to other usability issues</li> <li>Monthly ticket planning meeting could be for design/prioritization?<ul> <li>Probably do this in a separate meeting</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/11/2023-11-22-staff-meeting/#response","title":"Response","text":"<ul> <li>Sean has lots of thoughts about the many-to-many problem, will be away for the next week, wants to be involved</li> <li>Monthly meeting Sean\u2019s organizing is to be a \u201cProduct Approval\u201d meeting<ul> <li>Connected to new GH workflow</li> <li>Wants to have the meeting just for product approval, separate from prioritization</li> </ul> </li> <li>Sean and Ghislaine will have a call to discuss these meetings</li> </ul>"},{"location":"team/meeting-notes/2023/11/2023-11-22-staff-meeting/#kriti","title":"Kriti","text":"<p>Last week mainly focused on org transition.</p> <ul> <li>Board meeting</li> <li>Administrative and IT work</li> <li>1:1s and unblocking work as needed</li> <li>User call<ul> <li>Mathesar for Scrabble tournaments</li> </ul> </li> </ul> <p>FYI</p> <ul> <li>We\u2019ve received the first installment of the grant</li> <li>Org name change in process<ul> <li>Mathesar Foundation, Inc.</li> <li>Board voted on Wednesday to change name</li> <li>Filed with MA</li> <li>Now waiting for response</li> <li>After that, we need to change name with bank, etc.</li> </ul> </li> <li>New board: Sam, Ian, Kriti + board treasurer Adam</li> <li>Kriti is CEO</li> </ul> <p>Next week</p> <ul> <li>Focusing on admin work for the next few days</li> <li>Product/strategy work after that</li> </ul>"},{"location":"team/meeting-notes/2023/11/2023-11-22-staff-meeting/#pavish","title":"Pavish","text":"<p>General:</p> <ul> <li>I was out sick for a couple days, so progress was slower than usual. </li> </ul> <p>I18n:</p> <ul> <li>The PR to replace typesafe-i18n with svelte-i18n was reviewed and merged.</li> <li>I raised a PR to add django translations and instructions for maintainers.</li> <li>I spent some more time thinking about automation and translation workflow. My suggestions are below, we can discuss this async.</li> <li>Automation:</li> <li>Went through multiple open-source repos to find their degree of automation, including: CC-legal-tools-app, CiviCRM extentions, Django-docs.</li> <li>Their main automation is around pushing translations for a particular branch and automatically syncing with that branch. We already have this.</li> <li>None of them have branch level sync between git repo and transifex. I attempted a POC to implement this, but then I decided against it:<ul> <li>Transifex only allows one branch per project (not per resource) for open-source projects. We cannot implement a branch-level sync with our repo without upgrading to Premium.</li> <li>Even if we did have Premium, the effort needed to implement this is high and doesn\u2019t seem worth it.</li> <li>As mentioned above, I haven\u2019t found other open-source project that seem to have implemented this.</li> </ul> </li> <li>Translation workflow:</li> <li>Not having branch level sync limits our options, which actually makes our workflow simpler.</li> <li>The resources within Transifex should always be considered \u2018prod\u2019 resources.</li> <li>They will be linked directly to one of our branches, either the \u2018develop\u2019 branch, or the \u2018master\u2019 branch. I prefer the <code>develop</code> branch.</li> <li>Whenever translation files in the branch changes, our automation scripts will push the changes to Transifex and when they are translated and reviewed to about 50%, it will pull them into our repo. We could also run this as a daily sync operation.</li> <li>Release process:<ul> <li>We pull all translated files into develop (automation should take care of this).</li> <li>We make a release branch, which should contain all translations from develop.</li> <li>If we make changes/fixes in the release branch, we should merge the changes into develop, and then merge the translation commits into the release branch.</li> <li>We do not wait for missing translations after we freeze the release branch. If we want translations, we will wait until they are present in develop, before freezing the release branch.</li> </ul> </li> <li>Translating the app</li> <li>I will be doing this inbetween my other tasks, throughout the upcoming week.</li> </ul> <p>0.1.4</p> <ul> <li>DB connections</li> <li>I will be working on the DB connections home page. I had a chat with Sean on Friday, and went through the requirements. I haven\u2019t begun work on it yet, I will be starting on it tomorrow.</li> <li>Migration script cleanup</li> <li>I haven\u2019t begun work on it. I will start it when I have the time in the upcoming week.</li> </ul>"},{"location":"team/meeting-notes/2023/11/2023-11-22-staff-meeting/#sean","title":"Sean","text":"<ul> <li> <p>DB connections work</p> <ul> <li>This is going well.</li> <li>I\u2019ve begun work on the New DB connection form even though it requires me to get out ahead of the backend a bit.</li> <li>I\u2019ve handed the other front end changes off to Pavish, and he\u2019ll be working on that while I\u2019m away.</li> </ul> </li> <li> <p>GH tickets</p> <ul> <li>I\u2019ve proposed some adjustments to our GitHub process. I\u2019m actually really excited about this. I think it\u2019s going to help move our tickets along better.</li> <li>I spent lots of time cleaning up GitHub tickets, particularly ones marked as \u201cdraft\u201d. Much of this cleaning work, though \u201ccompleted\u201d is yet to be actually \u201cpushed\u201d (so to speak) to GitHub. Basically I have a bunch of lists of tickets that requires specific label changes, and I\u2019ll be applying these changes en masse after my workflow proposal is approved.</li> <li>I\u2019ve also prepared a queue of tickets to discuss at December\u2019s product approval meeting</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/11/2023-11-22-staff-meeting/#misc-team-workflow-issue-discussion","title":"Misc. team workflow issue discussion","text":"<p>We should set up regular calls to discuss the following:</p> <ul> <li>Product specs<ul> <li>This could be like the \u201cdesign sessions\u201d but focused on \u201cproduct specs\u201d?</li> <li>Permissions / architecture </li> </ul> </li> <li>Implementation specs</li> <li>Product strategy<ul> <li>Higher level</li> </ul> </li> <li>User research &amp; help check-ins</li> <li>Community growth / contributors, etc.</li> <li>Prioritization<ul> <li>beta planning work</li> </ul> </li> </ul> <p>We already have calls for</p> <ul> <li>Ticket review</li> <li>Design sessions</li> </ul> <p>Questions</p> <ul> <li>What frequency should each call be?</li> <li>Who should be involved?</li> <li>Who should facilitate?</li> <li>Should we still have the weekly meeting?</li> </ul>"},{"location":"team/meeting-notes/2023/11/2023-11-22-staff-meeting/#notes","title":"Notes","text":"<p>Meetings based on ticket needs</p> <ul> <li>Triage<ul> <li>Covered by repo admin process - no meeting needed</li> </ul> </li> <li>Product approval<ul> <li>Covered in monthly ticket reviews</li> </ul> </li> <li>Implementation specs<ul> <li>We\u2019ll do a one-off meeting during weekly meeting on the 6th and see how that goes</li> </ul> </li> <li>UX design<ul> <li>Covered in design sessions</li> </ul> </li> <li>Technical approval<ul> <li>Async</li> </ul> </li> <li>Unblocking<ul> <li>Async</li> </ul> </li> <li>User feedback <ul> <li>Async</li> </ul> </li> </ul> <p>Meetings based on other needs</p> <ul> <li>Strategy<ul> <li>Kriti will facilitate</li> <li>Everybody should attend</li> <li>First iteration in December, figure out cadence</li> </ul> </li> <li>Product \u201cbig picture\u201d meeting<ul> <li>\u201cBig Picture\u201d</li> <li>E.g., workspaces</li> <li>Architecture</li> <li>Once a week</li> <li>Pavish will schedule / facilitate</li> <li>At the end, discuss what we\u2019ll talk about next</li> <li>Everyone should attend</li> </ul> </li> <li>Prioritization<ul> <li>deferred until January</li> </ul> </li> <li>Community growth meeting<ul> <li>One in December to talk about GSoC</li> <li>Further cadence decided then</li> </ul> </li> <li>User research &amp; help check-ins<ul> <li>Deferred until January</li> <li>We have enough info for the strategy now</li> <li>It\u2019s okay to lose some users now to focus on long term stability</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/11/2023-11-22-staff-meeting/#decision-making-process","title":"Decision making process","text":"<p>We want to avoid everyone being involved in every decision.</p> <p>We should set up \u201careas of responsibility\u201d with no more than 2 people per area. Decisions should be made by people with responsibility. Everyone else is welcome to observe or provide input. If a decision involves multiple areas, we will union the people involved.</p> <p>e.g. bidirectional navigation did not need to involve backend</p> <p>What areas and owners can we identify now?</p>"},{"location":"team/meeting-notes/2023/11/2023-11-22-staff-meeting/#notes_1","title":"Notes","text":"<p>We agreed that this is a good idea. Kriti will follow up via email with an initial list of areas and owners.</p>"},{"location":"team/meeting-notes/2023/11/2023-11-22-staff-meeting/#task-management-workflow","title":"Task management workflow","text":"<p>Quick update: Kriti will be working on this. We might just try Basecamp and see how that goes.</p>"},{"location":"team/meeting-notes/2023/12/2023-12-01-design-session/","title":"2023-12-01 Design Session","text":""},{"location":"team/meeting-notes/2023/12/2023-12-01-design-session/#topic","title":"Topic","text":"<p>This design session will focus on the problems I found when trying to improve how we link records in bulk with many-to-many relationships in Mathesar.</p>"},{"location":"team/meeting-notes/2023/12/2023-12-01-design-session/#problem","title":"Problem","text":""},{"location":"team/meeting-notes/2023/12/2023-12-01-design-session/#overview","title":"Overview","text":"<p>Managing table relationships within a unified view is a key feature in most database products that offer a spreadsheet-like interface. Our survey results also show that it\u2019s a feature in all products our users compared with Mathesar.</p> <p>In contrast, we handle table relationships differently. We exclusively use foreign keys to establish these relationships, requiring users to create an exploration to view linked data. This method varies from typical approaches in other products, which often use virtual columns to display relationships in the table view.</p> <p>The Mathesar approach is more in line with relational database principles. However, it also makes it very hard to implement some of the features that users expect from a product in this space. For example, bulk linking of records is a very common feature in other products, but it is very hard to implement in Mathesar.</p>"},{"location":"team/meeting-notes/2023/12/2023-12-01-design-session/#components","title":"Components","text":"<p>To address the issue of bulk linking records and managing many-to-many relationships within Mathesar, several key components of the product design must be considered:</p> <ul> <li>Unified Inline Table Editing for Multiple Tables</li> <li>Users need the ability to edit interconnected data across multiple tables within a single interface, which is central to efficient bulk linking processes.</li> <li>Visual Relationship Mapping</li> <li>A more intuitive and graphical representation of table relationships is required. Beyond just lists, users should be able to visually navigate and understand the complex connections between tables within Mathesar.</li> <li>Integration of tables and explorations</li> <li>Explorations are disconnected from tables and that makes some workflows impossible or very complicated for users.</li> <li>Compatibility with existing databases and different data structures</li> <li>We must ensure that any automatic relationship detection we plan to implement is compatible with all potential schema designs.</li> <li>Future Impact on UX for Forms</li> <li>Survey results indicate that forms are a crucial feature expected from a product in this category. Since forms typically involve updating multiple tables simultaneously, addressing this issue might be a higher priority.</li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-01-design-session/#challenge","title":"Challenge","text":"<p>How can we facilitate the management of relationships across different tables in a manner that remains consistent with the relational database principles fundamental to Mathesar?</p>"},{"location":"team/meeting-notes/2023/12/2023-12-01-design-session/#proposed-solutions","title":"Proposed Solutions","text":"<p>The strategies outlined below are the result of research and discussions with Brent and Pavish. In our conversations, we examined various approaches to meet the design needs for this issue. Here\u2019s a summary of the main ideas we discussed.</p>"},{"location":"team/meeting-notes/2023/12/2023-12-01-design-session/#editable-explorations","title":"Editable Explorations","text":"<p>Develop a feature that allows users to directly click and edit values within the exploration view, similar to the functionality of a spreadsheet. </p> <ul> <li>Enable direct within-exploration editing for managing and modifying data in the related tables.</li> <li>Design the interface to visually represent editable areas, consistently distinguishing them from non-editable summary fields.</li> <li>Auto-generate explorations upon link creation to provide instant feedback and visual understanding of changes made.</li> <li>The UI should support an iterative process for managing relationships, potentially through a wizard or step-by-step guide to building many-to-many links, starting with a simpler one-to-many approach.</li> </ul> <p>:::info How Editable Explorations Could Solve Bulk Linking and Many-to-Many Relationships</p> <p>Initially, users can group multiple records based on a one-to-many relationship within an exploration. Imagine a scenario where users can edit a dedicated field to bulk link records to a single item in another table.</p> <p></p> <p>By enabling this functionality on both sides of a one-to-many relationship, users would be able to establish many-to-many associations between tables. :::</p>"},{"location":"team/meeting-notes/2023/12/2023-12-01-design-session/#integrated-joining-experience","title":"Integrated Joining Experience","text":"<p>Create a feature in the table view that lets users perform joins directly, without needing to switch to a different view. Once a join is executed, this feature should generate an editable, combined view of the joined tables.</p> <ul> <li>Allow for direct table joins within the table view, simplifying the process of combining data from multiple sources.</li> <li>At the table level, there would be a prominently placed \u201cJoin Table\u201d button. Upon clicking this button, users are presented with a modal or a panel overlay where they can initiate the join process.</li> <li>Once the secondary table is selected, the UI should then display a list of columns available for the join. The interface could visually highlight or suggest the foreign key column, if one exists, but also provide a dropdown or a selectable list for the users to choose their preferred join column.</li> <li>Columns from the joined table can be inserted into the view. To maintain a clear and structured display, these joined columns could be visually nested or indented underneath the primary table\u2019s columns or provided with a different styling to make it clear that they originate from a different table.</li> <li>Explorations, on the other hand, would become a dedicated feature for performing more sophisticated data analysis tasks, such as aggregations, summarizations, creation of complex filters, and generation of visual data representations like charts and graphs.</li> </ul> <p>:::info How Integrated Joins Could Solve Bulk Linking and Many-to-Many Relationships</p> <p>By allowing users to integrate joined tables into the same view, we could enable various types of relationships to be represented and edited without losing context from the original tables where the data exists.</p> <p></p> <p>This approach would enable users to transition from one-to-many to many-to-many relationships as needed and represent these changes in ways that are visually indicative of the relationship, such as through a nested structure or other methods.</p> <p> :::</p>"},{"location":"team/meeting-notes/2023/12/2023-12-01-design-session/#discussion-points","title":"Discussion Points","text":"<ul> <li>How easy or hard it is to edit directly in multiple tables, and what technical problems might come up.</li> <li>Which of the two strategies we\u2019ve thought of is easier to put into action?<ul> <li>The team agreed that editable explorations are preferable, however not in the way they are described above. The idea is to have explorations functionality integrated into the table view so that users can edit data directly in the table view. This would mean users can join other tables, select columns from those tables, and edit the data in the table view.</li> </ul> </li> <li>What might be the main challenges for each strategy?<ul> <li>Combining tables and explorations, would require implementing a UI that clearly differentiates between editable and non-editable fields.</li> <li>We will need to change the definitions of Mathesar objects, such as tables to differentiate between base tables and these \u201cunified\u201d tables that are created by combining tables.</li> <li>We will need ways to direct users to the base table if they need to see it or edit it.</li> </ul> </li> <li>What do we need to do at the very least to get started with one of these strategies?<ul> <li>We agreed that we need to design a flow for how users would create these \u201cunified\u201d tables and how they would edit them. Only then can we start thinking about how to implement this.</li> <li>We need to think about how we would represent these tables in the UI, from listing them, to creating various \u201cunified\u201d tables, from the same base table and how we would edit them.</li> </ul> </li> <li>Combining tables with explorations for better data handling.</li> <li>How can we bring explorations and table views together?<ul> <li>We do this by combining the functionality of explorations and tables into one view. This would mean users can edit data directly in the table view.</li> </ul> </li> <li>What kinds of work would benefit from combining these two?<ul> <li>Less code complexity.</li> <li>Less confusion for users.</li> <li>Better workflows for users.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-01-design-session/#next-steps","title":"Next Steps","text":"<ul> <li>Write a design document for the \u201cunified\u201d tables feature.</li> <li>Design a flow for how users would create these \u201cunified\u201d tables and how they would edit them.</li> <li>Review the design with the team.</li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-11-team-meeting/","title":"2023-12-11 staff meeting","text":""},{"location":"team/meeting-notes/2023/12/2023-12-11-team-meeting/#team-check-in","title":"Team check in","text":""},{"location":"team/meeting-notes/2023/12/2023-12-11-team-meeting/#adam","title":"Adam","text":"<ul> <li>mired in admin land</li> <li>2024 budget</li> <li>Finalizing things with Insperity</li> <li>Vetting Remote.com and other options for contractors \u2014 should start new in Jan<ul> <li>Some people will need to do some paperwork to get set up. Will follow up as needed</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-11-team-meeting/#anish","title":"Anish","text":"<ul> <li>Working on installation documentation for the upcoming release</li> <li>Waiting on review from Brent for Docker compose PR</li> <li>Reviewing some contributor PRs</li> <li>Don\u2019t have any thing immediate to work on</li> <li>Probably going to work on Modify schemas API to accept connection IDs instead of connection nicknames ()</li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-11-team-meeting/#brent","title":"Brent","text":"<ul> <li>DB Connections RPC work nearly done (top priority)<ul> <li>Finishing up demo data sets and testing</li> <li>Slower than expected</li> <li>New features requested had to be hacked together in a hurry<ul> <li>Installing demo data outside of demo environment</li> <li>Adding users</li> </ul> </li> <li>I should have flagged those more urgently earlier, but I wasn\u2019t sure what had been agreed to or discussed before I was working on that part of things</li> <li>Kriti: rough ETA?<ul> <li>Brent: by tomorrow</li> </ul> </li> </ul> </li> <li>Dent in productivity due to family sickness</li> <li>Installation work progressing, thanks to Anish\u2019s hard work<ul> <li>Going through the new (very well documented) docker compose setup</li> <li>Looking at installation docs \u201cglobally\u201d to see what makes most sense</li> </ul> </li> <li>Reviewed demo site setup so we can move more quickly once we release<ul> <li>We should really improve this setup</li> <li>This is relevant because we\u2019ll need to deploy 0.1.4 to the demo server after the release. We want to be prepared to do this quickly</li> <li>\u201chostile\u201d architecture \u2014 feels like you\u2019re working against it. Lots of room for improvement here.</li> </ul> </li> <li>Still going through backend redesign plans when I have time</li> <li>I\u2019m trying to regather some lost \u201cinstitutional knowledge\u201d that was particularly relevant to connections and installation<ul> <li>Most recent connection and database model work had recently been done by Dom</li> <li>Most recent installation work had been planned/led by Mukesh</li> <li>Keep finding holes where it takes me a while to figure out how some crucial bit works.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-11-team-meeting/#ghislaine","title":"Ghislaine","text":"<ul> <li>I was away for most of last week.</li> <li>Design spec for \u201cUnified Tables\u201d feature, which integrates tables with explorations. This is almost ready for review by team.</li> <li>Organizing the next session which will focus on the linking of bulk records. This includes reviewing different solutions proposed by the team.</li> <li>Writing a spec for the navigation consistency updates, including how to incorporate links for import, data explorer.</li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-11-team-meeting/#kriti","title":"Kriti","text":"<ul> <li>Working on admin stuff<ul> <li>Inspirity</li> <li>Benefits, 401K, DCFSA</li> <li>Budget</li> <li>Basecamp</li> <li>Name change, govt forms, etc.</li> <li>very boring stuff!</li> </ul> </li> <li>Everything I\u2019m doing is tracked in Basecamp</li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-11-team-meeting/#pavish","title":"Pavish","text":"<ul> <li>i18n work is progressing well.<ul> <li>I\u2019ve moved about ~75% of the raw strings to translation dictionary</li> <li>I expect to move upto 95% before the end of this week, and then plan next steps.</li> <li>I don\u2019t think we can move 100% into the app very easily</li> <li>Will plan for new patterns for devs to follow</li> <li>Sean: Did you consider handing some work off to Anniket?<ul> <li>Would have been too hard to hand off</li> </ul> </li> </ul> </li> <li>I\u2019m preparing to organize the product \u201cbig picture\u201d meeting this thursday.</li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-11-team-meeting/#sean","title":"Sean","text":"<ul> <li>Main work: still DB connections for 0.1.4<ul> <li>Coming along nicely, couple things blocked on Brent<ul> <li>the API</li> <li>Question about connection nicknames being editable<ul> <li>Has frontend architecture and API implications</li> <li>Connection nicknames vs. IDs at the API level</li> </ul> </li> </ul> </li> <li>Pretty close to getting this squared away</li> </ul> </li> <li>Review of i18n, coming along well, Pavish is working hard, lots of tedious work</li> <li>Repo admin - cleaning up labels, new workflow to replace the GitHub project, excited about this<ul> <li>Will be documented once the dust settles</li> </ul> </li> <li>Comimg up: will depend on when things are unblocked by Brent, repo admin stuff</li> <li>Pavish: Can we skip making connection names editable for 0.1.4?<ul> <li>Kriti agrees it\u2019s not a blocker</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-11-team-meeting/#basecamp","title":"Basecamp","text":"<p>We will be using Basecamp for general task management.</p> <ul> <li>Tour of current projects</li> <li>Tour of features<ul> <li>Activity</li> <li>Lineup</li> <li>Todos + hill charts</li> <li>Schedule / events</li> <li>Files</li> <li>Team check-ins</li> <li>Email forwards</li> <li>Discussion board</li> <li>Features we\u2019re not using:<ul> <li>Chat</li> </ul> </li> </ul> </li> <li>Tour of product development workflow</li> <li>Tour of team management</li> <li>More visibility into operations and admin tasks</li> </ul> <p>Items to discuss:</p> <ul> <li>How to track design work</li> <li>How often should we do team check-ins?</li> <li>What other projects do we need?</li> <li>Should we track remaining ongoing responsibilities here?<ul> <li>e.g. Syften, repo admin</li> </ul> </li> <li>When to use Basecamp vs. GitHub</li> <li>Should we set up automations?<ul> <li>e.g. survey response on Google Forms<ul> <li>can create task to send email out to user</li> </ul> </li> <li>e.g. installation request response<ul> <li>can create task to follow up with user</li> </ul> </li> </ul> </li> </ul> <p>Next steps:</p> <ul> <li>Please start checking Basecamp daily</li> <li>Please track non-code related tasks in Basecamp</li> <li>Stop using work logs</li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-11-team-meeting/#pre-meeting-notes","title":"Pre-meeting notes","text":""},{"location":"team/meeting-notes/2023/12/2023-12-11-team-meeting/#thoughts-on-basecamp-from-pavish","title":"Thoughts on Basecamp from Pavish","text":"<ul> <li>I like daily work logs on the wiki better than Basecamp<ul> <li>Work logs on wiki are faster to update since my code editor is open all the time</li> <li>Daily work logs are easier for me to maintain, I just have to remember what I did during the day and update it. We seem to have set Basecamp to track work across Tuesdays and Thursdays and I have to try and remember everything I did or note it down separately, which adds overhead.</li> <li>We already have a weekly meeting where we do a general task check-in. Do we need to do the same in Basecamp?</li> </ul> </li> <li>I do not like Basecamp for Team management. I would prefer we only use it for internal Project management and nothing else.<ul> <li>The main problem we wanted to solve was separating external GH issues with internal project tasks, and non-code related tasks. I\u2019d like for us to use Basecamp to explore that.</li> <li>Do we want to bring team management into Basecamp as well? What problem does it solve?</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-11-team-meeting/#kritis-notes-mainly-response-to-pavishs-notes","title":"Kriti\u2019s notes (mainly response to Pavish\u2019s notes)","text":"<ul> <li>I don\u2019t think our work logs should be public. They\u2019re only of interest to the team, and I often find myself redacting information because they\u2019re public.</li> <li>It is difficult for me to maintain and sync todo lists in multiple locations. I moved all my todos to Basecamp and have stopped updating my work log.</li> <li>Problems I\u2019m trying to solve<ul> <li>I\u2019m the primary \u201cuser\u201d of work logs. It\u2019s helpful for me to know what people are working on and try and anticipate issues and blockers.</li> <li>Having them be in the same place as my tasks helps me since I don\u2019t have to check multiple locations.</li> </ul> </li> <li>I don\u2019t think the wiki is more convenient for everybody. We have at least 3 team members (Kriti, Adam, Ghislaine) who don\u2019t have code editors open all day, and I expect that to grow. <ul> <li>I\u2019d like a unified management workflow for everyone.</li> </ul> </li> <li>If everyone tracks their tasks in Basecamp, I\u2019m not sure if we need work logs at all, given the \u201cActivity\u201d view in Basecamp.<ul> <li>Work on GitHub and meetings won\u2019t be covered, but I\u2019m not sure if that matters.</li> </ul> </li> <li>We could also change the check-in questions to be shorter, and not require a big list of work as an answer. Example questions:<ul> <li>Is there anything slowing you down or blocking you?</li> <li>What\u2019s your top priority right now?</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-11-team-meeting/#seans-thoughts","title":"Sean\u2019s thoughts","text":"<p>I spent some time fiddling with Basecamp yesterday. At a high-level, my impression is lukewarm. I\u2019m very curious to hear more (at the upcoming) about Kriti\u2019s vision for how we would use it \u2014 and specifically what problems we\u2019d like it to solve. While I imagine that much of my skepticism towards it would eventually be resolved after I understand it better, I do want to highlight one concern up front that I would consider a complete show-stopper when choosing a tool for any software engineering team in 2023: it does not appear to support markdown at all.</p> <p>Personally, if I need to use a tool without markdown support for anything other than trivially simple tasks, then I\u2019ll be very grumpy about it. I rely on markdown basically everywhere, including my work log. I did a little digging to see if there is some way to enable markdown and was baffled to find the Basecamp team insisting on WYSIWYG editing.</p> <p>I think it\u2019s important for us to take this limitation into account as we consider how we might use Basecamp. If our usage of Basecamp is confined to simple to-do lists with plain-text titles, then the lack of markdown support might be acceptable. But at that point, I\u2019m having trouble envisioning how Basecamp would be worth adopting. If we want to use Basecamp for any sort of discussions, then I would argue for considering other tools before continuing to evaluate it.</p>"},{"location":"team/meeting-notes/2023/12/2023-12-11-team-meeting/#discussion","title":"Discussion","text":"<ul> <li>Kriti: we need a tool to track non-code stuff. User research, admin, operations, infrastructure, demo server, etc.</li> <li>Kriti: Ideally our work would be transparent enough that we would not need the work check-ins at the beginning of team meetings</li> <li>Kriti: I\u2019d like to use Basecamp to track any work that we can\u2019t track on GitHub<ul> <li>It moves into GitHub when it\u2019s ready for implementation</li> </ul> </li> <li>Ghislaine: Could/should the \u201cDoocuments\u201d feature replace HackMD?<ul> <li>Kriti: I think HackMD will be better. We can link HackMD docs, wiki pages, and google docs to the projects.</li> <li>Adam: it\u2019s been working well for us to use other tools (e.g. Google docs) for ephemeral notes and to-do items, and then move those into Basecamp later</li> </ul> </li> <li>Pavish: should we make a project per meeting?<ul> <li>Kriti: no, projects should be bigger than than</li> <li>In general, we should avoid having projects for really long-running things. For product things, I\u2019d like to have projects that we can close<ul> <li>There are a few exceptsion though, e.g. \u201cProduct Ideas\u201d</li> </ul> </li> </ul> </li> <li>Once we pay for Basecamp we should be able so share certain things publicly, e.g. for our roadmap</li> <li>Work logs<ul> <li>Kriti: I don\u2019t want to use the wiki because it\u2019s public. I want our work logs to be private</li> <li>Kriti: if people are willing to maintain a more detailed to-do list, then we don\u2019t necessarily need the work logs at all<ul> <li>Dividing things into projects and keeping things fairly detailed would sufice</li> <li>We don\u2019t need to utilize the \u201cQuestion prompts\u201d feature</li> </ul> </li> </ul> </li> <li>Kriti will discuss 1:1 with people to work out some of the details about how we\u2019ll use Basecamp. We\u2019ll talk more next week</li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-12-%20design-session/","title":"2023-12-12 Design Session","text":""},{"location":"team/meeting-notes/2023/12/2023-12-12-%20design-session/#topic","title":"Topic","text":"<p>Discussion on GitHub Issue #3242: Editing Link Records.</p>"},{"location":"team/meeting-notes/2023/12/2023-12-12-%20design-session/#problem","title":"Problem","text":""},{"location":"team/meeting-notes/2023/12/2023-12-12-%20design-session/#overview","title":"Overview","text":"<p>We want to improve the functionality for editing details of a linked record. Currently, there are two different ideas under consideration (see: Github Issue Comments)</p> <p>The proposed ideas are the following:</p> <ul> <li>Idea 1: Clicking on a linked record brings up the record selector for swapping the currently selected record, with the editing form accessible only through a contextual menu.</li> <li>Idea 2: Directly accessing the editing form upon clicking a link record.</li> </ul> <p>The challenge in choosing between these ideas is that we don\u2019t have clarity on what the most frequent workflows are when interacting with link records. Based on what we know, from conversations we had with users, we\u2019ll try to identify some of these and use them to inform our decision.</p>"},{"location":"team/meeting-notes/2023/12/2023-12-12-%20design-session/#considerations","title":"Considerations","text":"<ul> <li>Compatibility with Non-Editable Records: In future versions, should Mathesar allow users to create read-only, shareable views, linked records would be accessible only for viewing details. The chosen interaction should not limit its usability.</li> <li>Data Entry Focus: Focusing on the editing form as the primary element of the UI is beneficial for data entry workflows. Our surveys showed users had interest in data entry via forms.</li> <li>Record Page and Form Interactions: Some inconsistencies might arise when users access these controls from the record page or the editing form. The solution needs to consider how the controls will work in different presentation modes for records.</li> <li>Multiple Link Records: If in the future we allow users to create multiple link records, then we\u2019ll need to consider how to handle the UI for editing multiple link records. </li> <li>Lack of Undo: Given the current absence of an undo feature in Mathesar, it\u2019s important to minimize the likelihood of accidental edits, for example, a user thinking he\u2019s editing an instance of a record and not the record in another table.</li> <li>Contextual Menu Discoverability: The design should consider the potential issue of users not discovering or remembering the functionalities hidden within contextual menus.</li> <li>Keyboard Navigation: Ideally, users should be able to edit and replace records using keyboard-only navigation.</li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-12-%20design-session/#challenge","title":"Challenge","text":"<p>Finding a design solution that satisfies user needs for editing link records while prioritizing the most frequent workflows.</p>"},{"location":"team/meeting-notes/2023/12/2023-12-12-%20design-session/#proposed-solutions","title":"Proposed Solutions","text":""},{"location":"team/meeting-notes/2023/12/2023-12-12-%20design-session/#idea-1-prioritize-the-record-selector","title":"Idea 1: Prioritize the Record Selector","text":"<p>Use Cases:</p> <p>\u201cAs a tutor, I need to update the foreign key in the \u2018leads\u2019 table when a student changes their course preference, or in the \u2018timesheets\u2019 table when a student is reassigned to a different tutor.\u201d</p> <p>Reassigning Frequently: In cases where users need to reassign link records frequently, the record selector is a more efficient approach. It allows users to quickly swap the currently selected record without having to open the editing form.</p> <p>User Flow:</p> <ul> <li>The user sets up a relationship between two tables.</li> <li>In a foreign key column, the user clicks on an empty cell.</li> <li>The record selector opens, allowing the user to select a record from the linked table.</li> <li>The user selects a record from the linked table. The record selector closes, and the selected record is displayed in the foreign key column as a tag-like element.</li> <li>If the user clicks on the tag-like element, the record selector opens again, allowing the user to select a different record from the linked table. The user can also click on the dropdown-arrow icon to directly open record selector.</li> <li>If the user right-clicks on the cell, a contextual menu opens with the option to edit the linked record.</li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-12-%20design-session/#idea-2-prioritize-the-editing-form","title":"Idea 2: Prioritize the Editing Form","text":"<p>\u201cAs a fundraising campaign manager, I need to frequently review and select potential donors from a large database. When I click on a donor\u2019s record, I want to see their contact and donation history. If I need to update their information, I\u2019ll click on the record to access the editing form.\u201d</p> <p>Editing Frequently: In cases where users need to edit link records frequently, the direct editing approach is more efficient. It allows users to quickly access the editing form without having to open the record selector. User Expectations: Users expect to be able to edit link records directly. This is the approach used by most other tools.</p> <p>User Flow:</p> <ul> <li>User has set up a relationship between two tables.</li> <li>In a foreign key column, the user clicks on an empty cell.</li> <li>The record selector opens, allowing the user to select a record from the linked table.</li> <li>The user selects a record from the linked table. The record selector closes, and the selected record is displayed in the foreign key column as a tag-like element.</li> <li>If the user clicks on the tag-like element, the editing form opens, allowing the user to edit the linked record.</li> <li>If the user removes the tag-like element, by clicking on the <code>x</code> icon then they can click on the empty cell to open the record selector again.</li> <li>If the user right-clicks on the tag-like element, a contextual menu opens with the option to \u2018Replace record\u2019 which opens the record selector. The user can select a different record from the linked table.</li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-12-%20design-session/#idea-3-balance-both","title":"Idea 3: Balance Both","text":"<p>Given that Idea 1 and Idea 2 serve different user needs, a third idea would be to create a UI that allows users to clearly choose between editing a record and selecting a different record from the relationship. This would be best for mixed environments where users need to quickly and frequently perform both actions.</p>"},{"location":"team/meeting-notes/2023/12/2023-12-12-%20design-session/#discussion-points","title":"Discussion Points","text":"<ul> <li>What are the pros and cons of each idea?</li> <li>What are the use cases for editing link records? Which idea best addresses these use cases?</li> <li>What are the implications of each idea on the future product vision?</li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-12-%20design-session/#actions-we-need-to-support","title":"Actions we need to support","text":"<ul> <li>Add a new linked record<ul> <li>Editing current table </li> <li>Editing the other table</li> </ul> </li> <li>De-link linked record<ul> <li>Editing only current table </li> </ul> </li> <li>Swap linked record for a different linked record<ul> <li>Editing only current table </li> </ul> </li> <li>Edit underlying record<ul> <li>Editing the other table</li> </ul> </li> <li>Navigate to record page</li> </ul> <p>We need to make it clear whether the user is editing the current record ONLY or a different table (because that can affect multiple records).</p>"},{"location":"team/meeting-notes/2023/12/2023-12-13-team-meeting/","title":"2023-12-13 staff meeting","text":""},{"location":"team/meeting-notes/2023/12/2023-12-13-team-meeting/#gsoc-2024-participation","title":"GSoC 2024 participation","text":"<p>GSoC is Google Summer of Code. We did it last year, but it was lots of work.</p> <ul> <li>Should we participate in GSoC 2024?<ul> <li>Adam asks: Was it lots of busy work preparing?<ul> <li>Lots of resumes?</li> </ul> </li> <li>Last year we had lots of low-effort applicants who wanted to make an initial submission</li> <li>More effort to get through application process</li> <li>Once we actually had contributors selected, it worked really well.</li> <li>We were using the same process as we had at Creative Commons</li> <li>Adam wonders if we can automate any parts of the process using AI tools<ul> <li>Maybe reviewing resumes</li> </ul> </li> <li>Ghislaine thinks the applicants will use AI tools to improve their chances</li> <li>Kriti thinks GSoC has been valuable for Mathesar<ul> <li>drives interest in the project</li> <li>gets contributors interacting with the project</li> <li>gets contributors interacting with the docs</li> <li>We\u2019ve had some contributors over the recent months who might not check out our project otherwise</li> <li>benefits the ecosystem by getting people into open source</li> </ul> </li> <li>OTOH<ul> <li>We\u2019re at a crucial time getting the beta out</li> <li>We need to make sure it\u2019s less distracting</li> <li>Maybe we need a more \u201cclosed\u201d initial filter</li> </ul> </li> <li>Sean doesn\u2019t want to do it<ul> <li>Doesn\u2019t seem like it works out from a cost-benefit perspective</li> <li>Doesn\u2019t see how to run without enormous costs</li> </ul> </li> <li>Ghislaine wonders if we\u2019ve tried to measure the benefits<ul> <li>Code contributed is a benefit</li> <li>Hiring funnel</li> </ul> </li> <li>Sean asked the mentors<ul> <li>2/3 would have saved time by doing it themselves</li> </ul> </li> <li>Brent wonders if we could try to increase the difficulty of the projects to reduce volume</li> <li>Pavish is on \u201cteam GSoC\u201d, but mixed-feelings this year<ul> <li>Initial phase takes too much effort, though</li> <li>Lots of tiny contributions</li> <li>What if we contact contributors who are already active</li> </ul> </li> <li>Pavish rethinking:<ul> <li>We aren\u2019t equipped to handle the initial rush right now</li> <li>If the projects are crucial, we shouldn\u2019t hand it off to new contributors</li> <li>If they\u2019re not crucial, we shouldn\u2019t spend time guiding the contributors on it</li> </ul> </li> <li>Sean\u2019s ideas for making application phase lower-effort<ul> <li>Tell people \u201cdon\u2019t contribute\u201d</li> <li>Look at project idea list<ul> <li>Tell people to apply using that list</li> <li>Interview applicants on a call instead of using code contribution</li> </ul> </li> </ul> </li> <li>Brent - we should figure out a way to require more of contributors. Be more harsh about rejecting people\u2019s contributions.</li> </ul> </li> <li>If we do participate:<ul> <li>What kinds of projects should we do?</li> <li>How do we make the proposal period less work for us?</li> <li>What are our next steps to writing up projects?</li> </ul> </li> <li>We brainstormed for a bit about potential project ideas and ideas for reducing burden on maintainers during the applicant phase, and couldn\u2019t come up with any ideas that would be in the spirit of GSoC.</li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-13-team-meeting/#conclusion","title":"Conclusion","text":"<p>Unanimous: We\u2019re not doing GSoC 2024.</p>"},{"location":"team/meeting-notes/2023/12/2023-12-13-team-meeting/#community-building","title":"Community building","text":"<ul> <li>Should we do other community building activities?<ul> <li>Ideas<ul> <li>Community update call (rather than or in addition to social events)<ul> <li>talk about plans and so on</li> <li>less social than community event</li> </ul> </li> <li>Office hours for contributors</li> <li>1:1s with promising contributors<ul> <li>Sean thinks this is super valuable</li> </ul> </li> <li>Could reach out to contributors in a more organic fashion</li> </ul> </li> <li>Timeline?<ul> <li>After beta</li> </ul> </li> </ul> </li> <li>Community team<ul> <li>Current situation for community team<ul> <li>Contributor room</li> <li>Write permissions on GH</li> <li>Community Mailing list</li> </ul> </li> <li>Kriti proposes removing the GH permissions</li> <li>Most people on our community team have write permissions but haven\u2019t been involved<ul> <li>We should clean that up</li> </ul> </li> <li>Idea: split into \u201csupporters\u201d and \u201ccontributors\u201d teams<ul> <li>Reduce / remove permissions for supporters team on GitHub, leave them in mailing list and private Matrix channel</li> </ul> </li> <li>Invite promising contributors to our contributors team proactively</li> <li>Sean thinks we should treat people on a case-by-case basis, avoid systems/processes</li> </ul> </li> <li>We should probably also eventually organize the wiki a little better for contributors, maybe once we\u2019ve settled into the Basecamp workflow for internal use.</li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-13-team-meeting/#conclusion_1","title":"Conclusion","text":"<ul> <li>We won\u2019t be focusing on community building activities until after the beta.</li> <li>We should all be proactive about mentoring promising contributors when they appear</li> <li>Kriti will proceed with community team changes</li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-13-team-meeting/#decision-making-process","title":"Decision making process","text":"<p>Follow up on an internal email thread.</p> <p>Problem we\u2019re solving is having too many people involved in given decisions. Maybe we could have owners for different responsibilities that are involved in decisions?</p> <p>Initial list:</p> <ul> <li>Backend architecture: Brent</li> <li>Community building: Kriti</li> <li>Documentation: Kriti, Sean</li> <li>Frontend architecture: Pavish, Sean</li> <li>Installation: Brent, Pavish</li> <li>Prioritization: Kriti</li> <li>Product: Kriti</li> <li>UI and UX: Ghislaine, Kriti</li> </ul> <p>Proposed changes:</p> <ul> <li>Add Sean and Pavish to UI and UX</li> <li>Clarify UI and UX further</li> <li>Add Sean to community building</li> <li>Remove community building as an area entirely</li> <li>Add infrastructure with Kriti / Brent as owners</li> <li>Consider adding:<ul> <li>Marketing</li> <li>Graphic design</li> <li>User feedback</li> <li>Repo admin</li> <li>User help</li> <li>Testing strategy</li> </ul> </li> </ul> <p>Other ongoing responsibilities for completeness (not suggested in email, but just putting here for reference since most are covered above)</p> <ul> <li>Release management</li> <li>Fundraising</li> <li>Team management</li> <li>Go to market</li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-13-team-meeting/#conclusion_2","title":"Conclusion","text":"<p>We\u2019re trying to solve problems we had with a larger team, let\u2019s not implement this process right now and see how things go with some of the new meetings and workflows we\u2019re otherwise adopting. If too many people being involved in decisions or decisions not being clear becomes a problem in the future, we will address it then.</p>"},{"location":"team/meeting-notes/2023/12/2023-12-14-big-picture/","title":"2023-12-14 Product big-picture meeting","text":""},{"location":"team/meeting-notes/2023/12/2023-12-14-big-picture/#concept-projects-workspaces","title":"Concept: Projects (Workspaces)","text":""},{"location":"team/meeting-notes/2023/12/2023-12-14-big-picture/#problem","title":"Problem","text":"<ul> <li>We are currently managing permissions within Mathesar instead of utilizing the robust Postgres permission system.<ul> <li>This was meant to be temporary and we had always planned to utilize the Postgres permission system.</li> <li>Several users have expressed interest towards using Postgres roles, some even mentioned it as a blocker to using Mathesar.</li> <li>(There are several architectural and UX reasons to support moving to the Postgres permission system. I\u2019m not mentioning them here, since I don\u2019t expect disagreement. We can discuss more on that during the meeting, if needed.)</li> </ul> </li> <li>Our current way of collaborative sharing of objects (DBs, schemas) is primitive and as we extend to sharing more objects, the UX and architecture would become increasingly complex.</li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-14-big-picture/#considerations","title":"Considerations","text":"<ul> <li>The access-control behaviour in Mathesar should closely tie to how access-control works in Postgres. If we deviate from it, it\u2019ll end up making our architecture complex.<ul> <li>(We\u2019ll first take some time during the meeting to discuss how permissions work in Postgres)</li> </ul> </li> <li>Bonus: The concept we come up with should suit our self-hosted, managed-hosted, and in the future SaaS variants of our product with minimal architectural and UX changes.</li> <li>The concept should be feasible to implement for our \u2018beta\u2019 release.</li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-14-big-picture/#proposal","title":"Proposal","text":"<ul> <li>We introduce a single top-level concept called a \u2018Project\u2019.</li> <li>A Project:<ul> <li>connects to a single database.</li> <li>stores multiple postgres roles that can connect to the said database.</li> <li>allows Mathesar users connect to the database by utilizing one of the stored postgres roles (each Mathesar user associated with a DB role).</li> <li>has access-control implemented in Mathesar to manage it.</li> </ul> </li> <li> <p>I\u2019ve tried to explain this concept in form of questions and answers. Please read through the following list: </p> </li> <li> <p>How would the user flow look like, after installing Mathesar?</p> <ul> <li>The first thing the user would be expected to do after installation is to create a Project.</li> <li>They will enter the database host, port, and atleast one postgres role with username and password, inorder to create the Project.</li> <li>The user can then access the Project, or create more Projects.</li> <li>The user who created the Project will be it\u2019s \u2018Manager\u2019.</li> <li>Discussion:<ul> <li>Kriti commented: I would call this Owner, Manager is a confusing name for this and generally implies lower permissions.</li> <li>I agree. I originally called it Owner. I decided to call it Manager in this document for reading comprehension, since I use the word \u2018Owner\u2019 to represent DB object level owners, in following questions. The terminology needs to be discussed after the concept is approved.</li> </ul> </li> </ul> </li> <li> <p>How will a Project home page look like to it\u2019s Manager?</p> <ul> <li>A Project home page will show the linked database information, and could list recently accessed schemas, tables, explorations etc., The finer UX details are not dicussed here.</li> <li>Managers have access to add PG roles, invite users to the Project, modify Project settings, and delete the Project.</li> <li>It will show the Database name, host, and port. The Manager can modify this.</li> <li>It will contain a list of Postgres roles, that the Manager can add to, modify, or remove.<ul> <li>When adding Postgres roles, the Manager will have to type in the username and the password.</li> </ul> </li> <li>It will show all the Postgres roles, and the Mathesar users associated with each of them.</li> </ul> </li> <li> <p>How would the Manager share a Project with other users?</p> <ul> <li>The Manager can invite and add existing Mathesar users to a Project. (Think of Basecamp).</li> <li>When the Manager adds a Mathesar user to the Project, they will choose which Postgres role the user should be associated with.</li> <li>The Manager can modify this at a later date.</li> <li>Multiple Mathesar users can be configured to use a single Postgres role.</li> <li>Think of Postgres roles as a \u2018group\u2019 of Mathesar users. To start with, a Mathesar user can belong to only one group, and not multiple groups.</li> </ul> </li> <li> <p>Do all users who are added to a Project have access to all objects in the database?</p> <ul> <li>The access-level (privileges) to underlying DB objects will depend on the role of the Mathesar user.</li> <li>If the Postgres role associated with the user has access to a particular object, then the user will have access to it.</li> <li>By default, all users will be able to view the names of all database objects and Mathesar-specific objects like Explorations. We will however differentiate the objects that they do not have access to.<ul> <li>Architecturally, we use pg_catalog which will list everything.</li> </ul> </li> </ul> </li> <li> <p>Can multiple Mathesar users be Managers of a Project?</p> <ul> <li>No. There will be only one Manager per Project.</li> <li>The Manager can shift their responsibility to another user by making them the Manager.</li> <li>Hierarchially, a Project belongs to the Manager.</li> </ul> </li> <li> <p>How would individual object permissions work?</p> <ul> <li>In Postgres, if a \u2018PG user\u2019 creates a table, they are considered the owner of the table and only they have access to it. They can then grant priviliges to other \u2018PG users\u2019 (We refer to PG users as roles in this document for reading comprehension).</li> <li>This affects permissions in Mathesar. Just because a user has access to a Project using a particular role does not guarantee that they will have access to other objects created with a different role.<ul> <li>This applies to the Manager as well.</li> <li>The Manager however can bypass this by updating their own role.</li> </ul> </li> <li>Each object shown in Mathesar, will display its owner (The Postgres role and all Mathesar users associated with it).</li> <li>Lets say, a Mathesar user named \u2018Laliari\u2019 creates a table \u2018Books\u2019.</li> <li>\u2018Laliari\u2019 is associated with the role \u2018DB_role_1\u2019.</li> <li>The table \u2018Books\u2019 will have the owner \u2018DB_role_1\u2019.</li> <li>All Mathesar users who use the role \u2018DB_role_1\u2019 will be owners of the table \u2018Books\u2019.</li> <li>All Mathesar users who use a different role will not be able to view the table.</li> <li>Any of the Mathesar users who are owners can grant permission to any other role, via the Mathesar UI.</li> <li>By default, we will have a Project wide setting that will automatically grant privileges to all PG roles mentioned in the Project for all DB objects created from within Mathesar.<ul> <li>This setting will be present in the Project page, and is customizable per Project.</li> </ul> </li> <li>Discussion:<ul> <li>Kriti: We also need to figure out how Postgres RLS would work, permissions can be at a row-level rather than at an object level. Even if we don\u2019t support RLS at first, we probably want to support it eventually.</li> <li>Pavish: RLS that\u2019s already configured in the DB would work without additional configuration. I agree that it would help to figure out how to provide RLS controls and grant access to specific rows from within Mathesar, eventually.</li> <li>Pavish: Similarly, we\u2019re currently not going to be focusing on granting column level privileges in Mathesar. Eventually, it\u2019d be good to do this as well.</li> </ul> </li> </ul> </li> <li> <p>How would users request access to individual objects in a Project?</p> <ul> <li>If a Mathesar user\u2019s Postgres role does not have access to a DB object within a Project, they can request any of the owners for access.</li> <li>This would happen incase the above \u2018automatic grant setting\u2019 is set to false, or if the object is created outside Mathesar.</li> <li>In the above example, say, I want to access the table \u2018Books\u2019.</li> <li>Mathesar will display all Mathesar users who have access to the table \u2018Books\u2019, and it displays \u2018Laliari\u2019.</li> <li>To start with, I will not be requesting access from within Mathesar. I would contact \u2018Laliari\u2019 via email or a different chat app asking for access.</li> <li>Mathesar will contain an option to \u2018grant\u2019 access to other PG roles.</li> <li>\u2018Laliari\u2019 will use the \u2018grant\u2019 option to provide me access to \u2018Books\u2019.</li> </ul> </li> <li> <p>How would access-control for Mathesar-specific objects like Explorations work?</p> <ul> <li>Mathesar-specific objects like Explorations are often tied to underlying DB objects.</li> <li>We will not be access-controlling these objects individually.</li> <li>If the user has access to the underlying table(s), then they will have access to the explorations that makes use of those tables.</li> <li>This will apply for table settings, and in the future, charts and forms.</li> <li>Discussion:<ul> <li>Kriti: I\u2019m not sure this is viable. I can imagine many scenarios where I\u2019d want to give people access to a chart or a form, but not the underlying data.</li> <li>Pavish: I agree. However, doesn\u2019t providing access to a chart or a form implicitly provide access to the underlying data?<ul> <li>The tricky part is deciding which role to use to provide access to the charts &amp; forms. All users added to a Project must have a role and they will get access to all objects that the role has access to.</li> <li>We can share objects for external access for other users &amp; public access using the <code>public_share</code> role. This will allow sharing charts and forms individually, without them being able to access the Project.</li> <li>If we want signed in users to be added to the Project and access only specific charts and forms without the tables/views, we may have to rethink the entire concept. I do not think we need this.</li> <li>I also do not think we should try to do this for the beta.</li> </ul> </li> </ul> </li> </ul> </li> <li> <p>Would there be a Mathesar superuser? If so, can they access all Projects?</p> <ul> <li>There will be a Mathesar superuser.</li> <li>The superuser can utilize Mathesar just like any other user.</li> <li>They have an additional option to create and manage Mathesar users.</li> <li>They can view the list of all Projects in the app.</li> <li>By default, they cannot access a Project they are not added in.</li> <li>They can request access to the Project\u2019s Manager.</li> <li>They can \u2018hostile takeover\u2019 a Project, thereby becoming its Manager.</li> </ul> </li> <li> <p>Why only one Database per Project?</p> <ul> <li>DB roles, and Mathesar user association with each role, are both configured per Project.</li> <li>If we allow multiple databases, it will require us to add another level of hierarchy inorder to configure the DB roles and add Mathesar users per role.</li> <li>Keeping one Database per Project would keep the UX flat and simple for the user.</li> </ul> </li> <li> <p>How would public sharing work?</p> <ul> <li>Each Project will contain an option to set a role as the \u2018Public share\u2019 role.</li> <li>When a user creates a Project, we will automatically create a new role in the databse called <code>public_share</code> or similar. (The user must be utilizing a role with CREATE_ROLE attribute).</li> <li>The user can alternatively choose a different existing role to use in it\u2019s place, say \u2018DB_role_1\u2019.</li> <li>Whenever a user shares a DB object, the shared link will utilize this role.</li> <li>Each \u2018share\u2019 can override this, by specifying a different role.</li> </ul> </li> <li> <p>Can users create new databases when creating a Project?</p> <ul> <li>Yes. The users can create a new database when creating a Project.</li> <li>The new DB can only be created within the internal DB server (i.e. the Django DB server).</li> </ul> </li> <li> <p>Can we provide out-of-the-box Postgres roles when creating a Project?</p> <ul> <li>Yes. When a Manager creates a Project and configures the DB, we can provide an option to automatically create some basic roles on the DB. Eg., (editor, viewer etc.,)</li> <li>The Manager must use a role that has <code>CREATE_ROLE</code> attribute to enable this feature.</li> <li>For Projects that create new DBs in the internal DB server, we will automatically create these roles without prompting the user.</li> </ul> </li> <li> <p>Can any user create a Project?</p> <ul> <li>Yes. All users can create Projects.</li> <li>A user will be listed with the set of Projects they have access to when they login.</li> </ul> </li> <li> <p>Can a super-user take over a Project?</p> <ul> <li>A super-user can perform a hostile take over of a project, if needed.</li> <li>When they take over a Project, they become the Manager of the project.</li> </ul> </li> <li> <p>Can users remove themselves from a Project?</p> <ul> <li>A Manager cannot remove themselves from their Project. They can reassign the Manager access to someone else and them remove themselves. They can choose to delete the Project as well.</li> <li>Other users can remove themselves from a Project.</li> </ul> </li> <li> <p>What happens when a Project is deleted?</p> <ul> <li>If the underlying database was created in the internal database when the Project was created, the underlying DB will be deleted. If not, the DB will not be affected.</li> <li>Every setting associated with the Project will be deleted.</li> </ul> </li> <li> <p>Can multiple Projects link to the same database?</p> <ul> <li>Yes, but each project will contain its own settings, PG roles, and Mathesar users.</li> <li>Each project will contain its own Explorations and other Mathesar-specific objects.</li> <li>Ideally, we\u2019d not expect users to do this. However, if they wanted to, we shouldn\u2019t prevent them from doing it.</li> </ul> </li> <li> <p>Can Projects have any kind of relationships/shared-settings between them?</p> <ul> <li>No. Projects will not share any properties, relationships, or settings between them.</li> <li>Each Project is isolated from others.</li> </ul> </li> <li> <p>Can Mathesar users modify their own Postgres roles within a Project?</p> <ul> <li>To start with, no. Only the Manager can choose the roles for a user.</li> <li>In the future, we can consider users being able to enter the username and password and specify their own roles (Only if they are already added in the Project by the Manager).</li> </ul> </li> <li> <p>How would this concept suit a SaaS variant setup?</p> <ul> <li>In a Mathesar SaaS variant, the superuser would be us (the people hosting Mathesar).</li> <li>Normal users are those logging into the Mathesar site.</li> <li>Each of those users can create their own Projects and share the Projects with other users who\u2019ve signed up to the Mathesar site.</li> <li>We will not allow connecting to external DBs for the SaaS variant (We could allow this based on user requests). To being with, users can only create new DBs with each new Project.</li> <li>The UX would appear and work mostly similar to self-hosted variants.</li> </ul> </li> <li> <p>How will this simplify our architecture?</p> <ul> <li>We leave all permissions associated with DB objects to the DB. This will take a load off our shoulders.</li> <li>All permissions for Mathesar specific objects related to DB objects will depend on the role having privileges over the DB object. We do not have to manage access control additionally.</li> <li>The only access control we\u2019d have to implement in Mathesar is to manage Projects.</li> <li>We\u2019d be closely tied to how privileges work in Postgres, so we\u2019ll have less friction moving foward.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-14-big-picture/#outcome","title":"Outcome","text":"<p>We decided that it\u2019s essential to have more granular permissions handled by Mathesar for explorations and other Mathesar specifc objects. Pavish will take more time to think on it and come up with an updated concept.</p>"},{"location":"team/meeting-notes/2023/12/2023-12-20-staff-meeting/","title":"2023-12-20 staff meeting","text":""},{"location":"team/meeting-notes/2023/12/2023-12-20-staff-meeting/#release-014-checkin","title":"Release 0.1.4 checkin","text":""},{"location":"team/meeting-notes/2023/12/2023-12-20-staff-meeting/#db-connections","title":"DB connections","text":"<ul> <li>Sean thinks it\u2019s going well.</li> <li>Brent thinks it\u2019s going well on the backend. Dealing with some error handling stuff.</li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-20-staff-meeting/#installation","title":"Installation","text":"<ul> <li>New docker setup has some issues with the unified docker image. Brent &amp; Anish are working on it. PR open, should be ready once its merged.</li> <li>There\u2019s a large open PR for documenation and a number of open issues in the milestone. Brent wants to get the docs PR ready before checking the individual issues.<ul> <li>Anish is working on the Docs.</li> <li>Docs for upgrades and env-variables are still pending.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-20-staff-meeting/#current-open-items","title":"Current open items","text":"<p>This is before we can get to the testing and release process.</p> <ul> <li>DB connections<ul> <li>Backend PR needs to be merged</li> <li>Frontend PR needs to be merged</li> <li>Backend review work</li> </ul> </li> <li>Docker Compose<ul> <li>Merge PR</li> </ul> </li> <li>Documentation<ul> <li>Finish upgrade and environment variables docs</li> <li>Global review of docs</li> </ul> </li> <li>Fix migrations</li> <li>i18n bugs <ul> <li>How to spot: snakecase variable names in UI</li> </ul> </li> <li>Milestone: https://github.com/mathesar-foundation/mathesar/milestone/72<ul> <li>We\u2019ll review in January</li> </ul> </li> <li>Bug assigned to Varsha - Anish is taking over if it\u2019s not done by January</li> </ul> <p>We\u2019re getting there!</p>"},{"location":"team/meeting-notes/2023/12/2023-12-20-staff-meeting/#remotecom","title":"Remote.com","text":"<p>For contractors outside of the U.S., we\u2019re setting this up for payment and invoicing - Anish should send a personal email to Adam - Currently in progress</p>"},{"location":"team/meeting-notes/2023/12/2023-12-20-staff-meeting/#basecamp-workflow","title":"Basecamp workflow","text":"<ul> <li>Closing Basecamp Setup project</li> <li>Ensure everyone is familiar with current projects<ul> <li>Should we merge any projects?</li> <li>Are we missing any projects?</li> </ul> </li> <li>Shared expectations for:<ul> <li>assigning tasks<ul> <li>People seem to be okay with this, getting notifications</li> <li>When asking multiple people to do the same thing, try to make one task per person for easier tracking if they each need to complete the task separately</li> <li>assign multiple people to the same task when either could check it off and it would be totally done.</li> </ul> </li> <li>how often to check Basecamp<ul> <li>once per day(ish)</li> </ul> </li> <li>how to communicate via Basecamp<ul> <li>Kriti likes to comment on things as appropriate.</li> </ul> </li> <li>setting due dates<ul> <li>People should set their own due dates, except if there\u2019s an external constraint.</li> </ul> </li> </ul> </li> <li>We\u2019ll continue to iterate on how we use Basecamp in the future</li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-20-staff-meeting/#notes","title":"Notes","text":"<ul> <li>Maybe we want to try https://app.githelpers.com/ for integrating GitHub tasks into Basecamp</li> <li>You can \u201cstack\u201d projects by dragging them onto each other</li> <li>Kriti has projects organized into \u201cOngoing\u201d and \u201cTime-limited\u201d</li> <li>Release projects<ul> <li>Brent thinks they should be multiple projects</li> <li>Kriti likes being able to see progress on how far we are from being able to release</li> <li>Sean worries that we won\u2019t see code-related tasks in the release tracking</li> <li>Kriti had a good idea about multiple ToDo lists for a given project to organize sub lists</li> <li>Brent worries that we will have a hard time organizing non-todo-list pieces within larger projects</li> <li>Sean thinks the release project should track actual \u201crelease process\u201d work, rather than release content.</li> </ul> </li> <li>Sean hasn\u2019t really liked Basecamp so far<ul> <li>Negatively affecting productivity</li> <li>Points out we could try using Mathesar for this</li> <li>Will troubleshoot some problems with Basecamp with Kriti later</li> </ul> </li> <li>Talk about the product backlog process next year</li> <li>TODO clean up installation improvement (split into 0.1.4 specific, move rest into backlog project)</li> <li>TODO clean up hill charts and needles</li> </ul>"},{"location":"team/meeting-notes/2023/12/2023-12-20-staff-meeting/#product-strategy-discussion","title":"Product strategy discussion","text":"<p>Should we have one this week? No.</p> <p>An email to ponder over the break would be helpful. Kriti will work on this.</p>"},{"location":"team/meeting-notes/2024/01/2024-01-03-staff-meeting/","title":"2024-01-04 staff meeting","text":""},{"location":"team/meeting-notes/2024/01/2024-01-03-staff-meeting/#gsoc-2024-announcement","title":"GSoC 2024 announcement","text":"<p>Sean wants to put an announcement on Github stating that we won\u2019t be doing GSoC this year. See <code>#Mathesar - Internal</code> for proposed copy.</p> <p>We\u2019d put the announcement as a pinned issue on Github so it shows up at the top of our issues list when someone comes to the repo.</p> <p>We could link the relevant wiki pages from the issue, or the issue from the relevant wiki pages\u2026</p> <p>Everyone agrees with the plan, Sean will take it up from there. Pin the issue, cross-reference.</p>"},{"location":"team/meeting-notes/2024/01/2024-01-03-staff-meeting/#basecamp-design-reviews-location","title":"Basecamp + Design reviews location","text":"<p>Ghislaine requested people put design reviews in Basecamp for a recent spec as an experiment, but we\u2019ve decided against doing that. Current discussion will be ported to email, further discussion will happen there</p> <p>Brent also has some tech spec related tasks in Basecamp with comments, is it okay to have comments in Basecamp?</p> <ul> <li>Persist things outside basecamp </li> <li>Quick (ephemeral) notes are okay in Basecamp</li> </ul>"},{"location":"team/meeting-notes/2024/01/2024-01-03-staff-meeting/#db-connection-ui-issue","title":"DB connection UI issue","text":"<p>Specs: https://wiki.mathesar.org/archive/product/design/specs/new-db-connection-form/</p> <ul> <li>Pavish concerned with UX in case C</li> <li>Sean proposing to eliminate case C</li> </ul> <p>Pavish\u2019s comments: https://github.com/mathesar-foundation/mathesar/pull/3319#discussion_r1434348595</p> <p>Current state:  </p> <p>Need to choose a \u201cbootstrapping connection\u201d to create new ones</p> <ul> <li>Look for any that match the hostname and port the user entered</li> <li>Then the user selects the desired one</li> <li>Case C is only possible when the hostname and port are found in a preexisting connection</li> </ul> <p>Historical context:</p> <ul> <li>Case A was inspired by trying to more easily copy an existing credential to set up a connection, rather than setting it up from scratch</li> <li>Case C was argued for by the back end team.</li> <li>Brent is having second thoughts about having argued for that</li> </ul> <p>DECISION: Remove Case C, document how to set up minimally-privileged user for use with  Mathesar connections</p>"},{"location":"team/meeting-notes/2024/01/2024-01-03-staff-meeting/#release-014-check-in","title":"Release 0.1.4 check in","text":""},{"location":"team/meeting-notes/2024/01/2024-01-03-staff-meeting/#needs-docs-work-and-review","title":"Needs docs work and review","text":"<p>Open PR for all docs work</p> <ul> <li>Update docs with regard to MATHESAR_DATABASES</li> <li>Make the docker compose file self documenting</li> <li>Deprecate Build from scratch documentation</li> <li>Remove guided installation section</li> <li>Reframe docker compose installation</li> </ul>"},{"location":"team/meeting-notes/2024/01/2024-01-03-staff-meeting/#needs-work-from-anish","title":"Needs work from Anish","text":"<ul> <li>Update Constraints for Positive Integers in <code>oid</code> and <code>column_order</code><ul> <li>Needs Anish to finish implementation</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/01/2024-01-03-staff-meeting/#needs-work-from-pavish","title":"Needs work from Pavish","text":"<ul> <li> <p>i18n bugs</p> <ul> <li>Needs Pavish to implement</li> </ul> </li> <li> <p>Add loading and error indications in the database page</p> <ul> <li>Has PR</li> <li>Needs Pavish to review</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/01/2024-01-03-staff-meeting/#needs-work-from-brent","title":"Needs work from Brent","text":"<ul> <li>Internal server error when database connection fails<ul> <li>Needs Brent to implement</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/01/2024-01-03-staff-meeting/#discussion","title":"Discussion","text":"<ul> <li> <p>Simplifying setup environment variables</p> <ul> <li>Next steps: We\u2019re going to wait until the docs are further along and then evaluate the user experience. At that point we\u2019ll respond to Adam and seek to close the issue.</li> </ul> </li> <li> <p>The Database page should display an error when connection is invalid</p> <ul> <li>We need to display errors when viewing the database page</li> <li>Brent: this is a problem with our current architecture<ul> <li>This is why we see \u201cSchemas (0)\u201d. There are 0 schema models associated with that connections model.</li> </ul> </li> <li>Sean: is it possible to connect to a DB successfully without seeing any schemas? \u2014 yes. There are even some scenarios in which you can\u2019t see the public schema.</li> <li>Brent: This behavior is going to be completely changed when we don\u2019t have a schema model. In the new architecture this will be different.</li> <li>This is not a release-blocker though.</li> <li>Next steps: We\u2019ll bump this into the \u201cHigh Priority\u201d milestone.</li> </ul> </li> <li> <p>Improve failure scenario when attempting to create a connection with invalid credentials</p> <ul> <li>This is a new issue we identified during the call</li> <li>This is a problem because it\u2019s possible to save a connection that could later become valid. In that case, the database won\u2019t have our schemas installed.</li> <li>We\u2019d like to fix this by failing to save the connection if we can\u2019t connect to it.</li> <li>Next steps: Sean will create a ticket for this<ul> <li>Milestone: v0.1.4</li> <li>Assignee: Brent</li> </ul> </li> <li>We can move to a later milestone if it becomes too much work</li> </ul> </li> <li> <p>Disable modifying database name, host name, and port</p> <ul> <li>This is a new issue we identified during the call</li> <li>Next steps: Sean will create an issue for it</li> </ul> </li> <li> <p>Bugs while deleting database connection</p> <ul> <li>We\u2019re waiting on a contributor</li> <li>Next steps: Anish will comment to move things along</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/01/2024-01-03-staff-meeting/#blocked","title":"Blocked","text":"<ul> <li>Clean up django migrations before 0.1.4 release<ul> <li>Blocked on #3176</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/01/2024-01-17-staff-meeting/","title":"2024-01-17 staff meeting","text":""},{"location":"team/meeting-notes/2024/01/2024-01-17-staff-meeting/#release-qa-plan","title":"Release QA plan","text":"<p>Sean wants to brainstorm QA tasks to focus on during the QA phase for this release. So far, he has:</p> <ul> <li>Test clean installs with each of our installation methods. Follow docs pretending you\u2019re a new user.</li> <li>Test in demo mode. Pay particular attention to the changes in Fix db list permissions in demo mode</li> <li>Test upgrade from 0.1.3</li> <li>Test upgrade from 0.1.2</li> <li>Test connection to DB on remote pg server</li> </ul>"},{"location":"team/meeting-notes/2024/01/2024-01-17-staff-meeting/#discussion","title":"Discussion","text":"<ul> <li>We don\u2019t expect to have any more code changes merged in</li> <li>We do have docs still waiting to be merge</li> <li>We should start with the tasks in the release process wiki page<ul> <li>Cut release branch, etc.</li> </ul> </li> <li>We need to have an image pushed to DockerHub to start QA<ul> <li>tagged 0.1.4</li> </ul> </li> <li>Sean doesn\u2019t have much time left today</li> <li>Pavish can do all the logistics parts</li> <li>Brent will deploy to demo and internal servers<ul> <li>internal.mathesar.org will be temporarily on release branch</li> </ul> </li> <li>Anish is out for the last week of January, FYI</li> <li>Brent will be traveling starting Feb 1</li> <li>Pavish needs to work on his pgconf talk - Feb 29 / Mar 1<ul> <li>45 min</li> </ul> </li> <li>compose.mathesar.org used for different installation method testing<ul> <li>same DB server, with different DBs for remote DBs</li> <li>Anish will help test installation testing here</li> <li>Also will assist anyone else doing installation with QA<ul> <li>Sean could help with QA</li> </ul> </li> </ul> </li> <li>3 types of QA needed<ul> <li>Installation / Upgrade<ul> <li>Brent will work on a plan for QA on this</li> <li>Pavish, Kriti and Sean will work on actual QA</li> </ul> </li> <li>Actually using the app (maybe on internal.mathesar.org)<ul> <li>Ghislaine and Adam could help with this</li> <li>Everyone should look for regressions</li> <li>Sean will work on QA plan next week.</li> </ul> </li> </ul> </li> <li>Anish is also making videos for installation</li> <li>Pavish: should we hire someone on Upwork to test the release?<ul> <li>We don\u2019t think this is worth it, given our short timeline</li> </ul> </li> <li>Pavish will make basecamp tasks</li> </ul>"},{"location":"team/meeting-notes/2024/01/2024-01-17-staff-meeting/#release-notes","title":"Release notes","text":"<p>Sean would like to show everyone the release notes (private doc) that he\u2019s working on. He\u2019d like high-level feedback, and he has a few questions. This agenda item is not intended for detailed review of release notes content \u2014 it\u2019s more about process.</p> <ul> <li>Where should we put the release notes?<ul> <li>Thus far, we\u2019ve been putting them in the GitHub release object. I\u2019m inclined to put them somewhere slightly more discoverable like the wiki or maybe even in the main repo.</li> </ul> </li> <li>What is our process for reviewing release notes?</li> <li>How should we deal with attribution within the release notes? Personally, I\u2019d rather not deal with this.</li> <li>Should the release notes reference issues as well as PRs?</li> </ul>"},{"location":"team/meeting-notes/2024/01/2024-01-17-staff-meeting/#discussion_1","title":"Discussion","text":"<ul> <li>Everyone took a couple min to skim through Sean\u2019s release notes doc.</li> <li>Previous release notes: https://github.com/mathesar-foundation/mathesar/releases/tag/0.1.3</li> <li>Changes<ul> <li>More screenshots</li> <li>Blog post type - complete sentences</li> </ul> </li> <li>Why are \u201chigh effort\u201d release notes important?<ul> <li>They are marketing</li> <li>Motivate users to upgrade<ul> <li>We need to sell upgrade to them</li> </ul> </li> <li>Evaluating Mathesar vs. other products<ul> <li>Sign of life</li> <li>Understand how well developers can communicate with users</li> <li>Shows that we\u2019re using best practice (e.g. maintenance sections</li> </ul> </li> </ul> </li> <li>Release notes are shown within the Mathesar UI<ul> <li>Are they rendered within Mathesar or just linked to?</li> <li>We should make sure it all works well</li> </ul> </li> <li>We\u2019re agreed on the part that we need to create more \u201cmarketing\u201d type release notes \u2014 somewhere.</li> <li>Who should review release notes?<ul> <li>Kriti, Brent, Ghislaine</li> </ul> </li> <li>Can we skip attribution?<ul> <li>This is fine</li> <li>Brent does like the \u201cNew Contributor\u201d section \u2014 we can use GitHub to auto-generate this.</li> </ul> </li> <li>Should we have the auto-generated section of PRs?<ul> <li>Yes, we\u2019ll have this at the bottom of the release notes. It will list all the PRs</li> </ul> </li> <li>Should the release notes reference issues as well as PRs?<ul> <li>We\u2019ll do whatever the GitHub automated feature does</li> </ul> </li> <li>We\u2019ll have a CHANGELOG file committed at the root of our repo. It will list hyperlinks to PRs for each release and will be further categorized with the same sections as in the release notes.</li> <li>Some todos for Brent and Anish in the release notes</li> <li>HackMD draft is the place people should edit</li> </ul>"},{"location":"team/meeting-notes/2024/01/2024-01-17-staff-meeting/#upcoming-funding-announcement","title":"Upcoming funding announcement","text":"<p>Quick note by Kriti that we\u2019re working on announcing our recent funding. There is a separate Basecamp project that tracks the work.</p> <p>We\u2019re starting off with website changes and writing a blog post.</p>"},{"location":"team/meeting-notes/2024/01/2024-01-18-big-picture/","title":"2024-01-18 Product big-picture meeting","text":""},{"location":"team/meeting-notes/2024/01/2024-01-18-big-picture/#brainstorm-permission-handling-shareable-connections-browsable-db-objects","title":"Brainstorm permission handling - Shareable connections &amp; Browsable DB objects","text":"<p>Idea mailed to Mathesar developers mailing list.</p>"},{"location":"team/meeting-notes/2024/01/2024-01-18-big-picture/#discussions-to-have","title":"Discussions to have","text":"<ol> <li>Being able to share explorations to individual logged-in users outside your organization.</li> <li>If a user A is sharing an exploration to another user B, the user B should be able to see the same content as A.</li> <li>Syncing db role with Mathesar permissions.</li> </ol>"},{"location":"team/meeting-notes/2024/01/2024-01-22-release-check-in/","title":"2024-01-22 QA testing meeting","text":""},{"location":"team/meeting-notes/2024/01/2024-01-22-release-check-in/#general-notes","title":"General notes","text":"<ul> <li>Infra: we\u2019ll set it up and tear it down soon afterwards</li> <li>Do we want separate database servers for everyone?<ul> <li>We\u2019ll use a single server for testing. We\u2019ll all prefix our database names with our own names, e.g. <code>sean_mathesar</code></li> </ul> </li> <li>Brent will set up a DB server separate from our internal server</li> <li>What pre-existing data should we have in place before upgrading?<ul> <li>lots of stuff going on in Django, e.g. Explorations</li> <li>What can go wrong? Migrations, losing the connection between the service in its upgraded state and the correct user database \u2014 anything that would prevent the service layer from connecting to the internal DB.</li> </ul> </li> <li>Kriti: Do we really need to test all these different combinations?<ul> <li>Brent: We need to encourage people to move to our own latest Docker compose setup. If they\u2019ve rolled their own then that\u2019s fine, but if they\u2019re running an older docker-compose setup, then they need to change their setup.</li> </ul> </li> <li>How aggressive do we want to be with changes for upgrades?<ul> <li>We\u2019d like to suggest that users ask us for help if they run into trouble upgrading</li> <li>It\u2019s okay if we cause users some pain right now</li> <li>It\u2019s okay if users lose their explorations or other metadata. We can recommend that users contact us if they really need their explorations</li> </ul> </li> <li>Who is going to write the upgrade instructions within the release notes?<ul> <li>Brent</li> </ul> </li> <li>Where is the source of truth for release notes?<ul> <li>docs.mathesar.org, with each release as its own page</li> </ul> </li> <li>Where is the source of truth for upgrade documentation?<ul> <li>in a section within the release notees page</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/01/2024-01-22-release-check-in/#todo","title":"TODO","text":"<ul> <li>We need to remove the upgrade system from the UI<ul> <li>This needs to become a \u201cnag\u201d, with no button.</li> <li>Should redirect to docs</li> <li>Sean will do this</li> </ul> </li> <li>Installation testing can happen now<ul> <li>Pavish, Sean, Kriti will work on this</li> </ul> </li> <li>Sean will do some pairing with Adam on UI testing</li> <li>Ghislaine will go through library demo script</li> <li>Ghislaine will also test new testing steps for Explorations added by Pavish</li> <li>Anish will also work on testing</li> <li>Brent working on docs changes</li> <li>Anish will begin working on installation videos</li> <li>Sean will put release notes in docs</li> </ul>"},{"location":"team/meeting-notes/2024/01/2024-01-22-release-check-in/#for-administrators","title":"For administrators","text":"<p>General tips for all </p> <ul> <li>Follow docs as you perform steps. Report docs problems.</li> </ul> <p>Specific steps</p> <ul> <li> Test all different installation methods<ul> <li> Pavish Docker compose<ul> <li> All defaults, local</li> <li> Exposed on domain, DB server managed by Mathesar</li> <li> Exposed on domain, DB server preexisting for users, managed DB for Django</li> <li> Exposed on domain, DB server preexisting for all data</li> </ul> </li> <li> Sean Docker integrated image<ul> <li> Quick start from home page</li> <li> All defaults, local</li> <li> Exposed on domain, DB server managed by Mathesar</li> <li> Exposed on domain, DB server preexisting for users, managed DB for Django</li> <li> Exposed on domain, DB server preexisting for all data</li> </ul> </li> <li> Kriti Build from scratch<ul> <li> All defaults, local</li> <li> Exposed on domain, DB preexisting for all data</li> </ul> </li> </ul> </li> <li> Test that previously installed versions of Mathesar can be upgraded to this release.<ul> <li> Pavish Docker compose \u2013 All above variants for docker compose (this also applies to the guided script installation method)<ul> <li> Same docker compose file, same <code>.env</code></li> <li> New docker compose file, same <code>.env</code></li> <li> New docker compose file, bring <code>.env</code> into the new file</li> </ul> </li> <li> Kriti Build from scratch \u2013 All above variants for build from scratch</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/01/2024-01-22-release-check-in/#for-users","title":"For users","text":"<p>No specific notes</p>"},{"location":"team/meeting-notes/2024/01/2024-01-24-staff-meeting/","title":"2024-01-24 Staff Meeting","text":""},{"location":"team/meeting-notes/2024/01/2024-01-24-staff-meeting/#release-check-in","title":"Release check in","text":"<p>Issues list: https://github.com/mathesar-foundation/mathesar/issues?q=is%3Aopen+is%3Aissue+milestone%3Av0.1.4</p> <p>Docs work is ongoing, Brent and Sean have done work on it.</p> <p>Not many regressions identified.</p> <p>GitHub issues</p> <ul> <li>Incorrect Z index for sheet header cells within table widget <ul> <li>might be bumped out since it\u2019s very minor</li> </ul> </li> <li>Array cells not styled correctly<ul> <li>cannot reproduce</li> <li>probably frontend issue, all the info for the data explorer is returned in one API response, and column names are correct, so backend seems to be working fine<ul> <li>seems like stores are messed up in some way in development mode due to vite hot reloading</li> </ul> </li> <li>not easy to reproduce, so we\u2019ll close it</li> <li>everyone please keep an eye out for seeing plain text instead of pills, we can try to reproduce</li> </ul> </li> <li>We need to resolve open TODO remove the initial connection for Docker compose<ul> <li>issues<ul> <li>Unified Docker image starts with a connection already added \u00b7 Issue #3415 \u00b7 mathesar-foundation/mathesar</li> <li>Docker compose installation has a preconfigured connection \u00b7 Issue #3416 \u00b7 mathesar-foundation/mathesar</li> </ul> </li> <li>might break tests</li> <li>should be easy, hopefully</li> <li>assign to Brent</li> </ul> </li> <li>Update process for docker compose is wrong \u00b7 Issue #3404 \u00b7 mathesar-foundation/mathesar<ul> <li>needs to be re-tagged as docs, Sean will do the cleanup</li> <li>Brent hasn\u2019t made progress since he\u2019s been working on infrastrucuture<ul> <li>Brent will put infra scripts in mathesar-scripts repo</li> </ul> </li> </ul> </li> </ul> <p>Basecamp issues</p> <ul> <li>Anish is now out<ul> <li>Assign his issues to Brent</li> </ul> </li> <li>It\u2019s okay to make docs updates after the release<ul> <li>We don\u2019t need to make a new Docker image</li> <li>Choose between master / Docker image not being in sync or having to change Docker without version changes</li> <li>We should currently be pushing docs changes whenever we want<ul> <li>We won\u2019t push a new Docker image for docs changes for now</li> </ul> </li> <li>For the long term, we want to be making new patch releases if we update docs, but we\u2019ll do this for the beta </li> </ul> </li> <li>QA testing (users)<ul> <li>Ghislaine went through library demo and task based testing</li> <li>No new things found</li> <li>Patrons data set is not in the Google Drive<ul> <li>Ghislaine had to make a new patrons data set</li> <li>The data sets are in the data playground</li> </ul> </li> <li>It\u2019s really slow especially after import etc.<ul> <li>internal.mathesar.org is really slow because of external DB connection</li> </ul> </li> <li>Sean reached out to Adam, he\u2019s probably not going to have time before the release</li> <li>Anish is also assigned to test out the UI, he should be able to get to that next week</li> </ul> </li> <li>QA testing (installation)<ul> <li>Pavish says docs are incomplete, some TODO sections<ul> <li>connecting to external DBs</li> <li>Brent will double check this</li> </ul> </li> <li>Pavish has some suggestions for docs, but wants to wait until docs are complete<ul> <li>Pavish will write them down in HackMD</li> </ul> </li> <li>We edit the YML file instead of environment variables, but should we mention that environment variables will override YAML config<ul> <li>Obvious to Docker users, but might be worth a one line mention, also say you can hardcode variables</li> <li>Link to Docker Compose docs</li> </ul> </li> <li>Sean has been working on docs</li> <li>Pavish will put this in a HackMD doc and will create a Basecamp todo to look at it, or will push changes directly to the doc</li> <li>Pavish will finish testing external DB</li> <li>Kriti hasn\u2019t started testing yet<ul> <li>No changes planned for build from scratch, no need to wait for docs changed</li> </ul> </li> <li>Still waiting to test upgrades until docs are done<ul> <li>Need to do a new build</li> <li>Wait until Docker Compose changes done, may also have bugs from user call today</li> </ul> </li> </ul> </li> <li>Priorities (too much stuff assigned to Brent)<ul> <li>Upgrade docs first, so upgrades can be tested ASAP</li> <li>MATHESAR_DATABASES thing - Pavish will do this<ul> <li>Need to be picked up if it\u2019s an environment variable</li> <li>Doesn\u2019t need to exist in prod docker compose</li> <li>Docker run command already doesn\u2019t use it<ul> <li>Root out the default in the code and remove it</li> <li>Hopefully tests won\u2019t break since it\u2019s also setup in tests</li> </ul> </li> </ul> </li> <li>Pushing to mathesar-scripts is also deprioritized</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/01/2024-01-24-staff-meeting/#freshdesk-workflow","title":"Freshdesk workflow","text":"<p>Potential questions (written by Kriti)</p> <ul> <li>Should we be using Freshdesk?</li> <li>Do we need a ticketing system / shared email inbox at all?</li> <li>Should Syften notifications be going to Freshdesk?</li> </ul>"},{"location":"team/meeting-notes/2024/01/2024-01-24-staff-meeting/#discussion","title":"Discussion","text":"<ul> <li>Nobody seems to be using Freshdesk</li> <li>Brent:<ul> <li>I don\u2019t like the UI. Hard to find tickets. Weird stuff about emailing.</li> <li>It is useful to have a list of users we\u2019ve contacted where we can see when they\u2019ve replied.<ul> <li>Kriti: If we don\u2019t have Freshdesk, we\u2019ll need to have this somewhere else</li> </ul> </li> <li>marking a ticket as \u201cclosed\u201d doesn\u2019t really make sense in the context of the installation requests because we want to continue following up with them</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/01/2024-01-24-staff-meeting/#conclusion","title":"Conclusion","text":"<ul> <li>Kriti will figure out a workflow with no new tools<ul> <li>Perhaps we can leverage Basecamp more for some of this workflow</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/01/2024-01-29-staff-meeting/","title":"2024-01-29 Staff Meeting","text":""},{"location":"team/meeting-notes/2024/01/2024-01-29-staff-meeting/#release-check-in","title":"Release check in","text":"<ul> <li>Pavish: we do have one critical issue: Met with empty schemas page after docker-compose upgrade </li> <li>Pavish and Brent chatted a bit to troubleshoot this</li> <li>Pavish was able to upgrade. All the users were there. All the connections were there. He just couldn\u2019t connect and see schemas.</li> </ul> <p>QA testing notes</p> <ul> <li>Pavish\u2019s notes</li> <li>Kriti\u2019s notes</li> <li>milestone</li> </ul> <p>Work remaining</p> <ul> <li>Merge docs PR</li> <li>Upgrade bug that Pavish found: Met with empty schemas page after docker-compose upgrade</li> <li>Other two bugs that Pavish found:<ul> <li>Attempting to add connection with both Library Management and Movie Collection schema results in a 502</li> <li>New connection creation flow does not handle schema creation failure scenarios</li> </ul> </li> <li>Decide what to do with build from scatch stuff + any work from that</li> <li>Re-test installation / upgrade</li> <li>Plan out post-release docs updates</li> </ul> <p>Build from scratch</p> <ul> <li>Brent has modified some docs to address some of the problems that Kriti ran into.</li> <li>Brent ran through the steps on Debian 12 and got it running.</li> <li>Kriti proposes that we skip the upgrade testing for \u201cbuild from scratch\u201d</li> <li>Audience:<ul> <li>Kriti: it would be nice to have a guide for people setting up a cloud server, e.g. GCP</li> <li>We\u2019ll hone this better for the next release</li> </ul> </li> </ul> <p>TODO items blocking release:</p> <ul> <li>Sean: Modify \u201cbuild from scratch\u201d docs to bump the Node and npm versions up to newer versions<ul> <li>Node: At least v18</li> <li>npm: At least v9</li> </ul> </li> <li>Sean: docs changes blocking release:<ul> <li>Add general disclaimer for upgrade instructions</li> <li>Add special disclaimer for \u201cbuild from scratch\u201d upgrade instructions</li> <li>Invite reader to contribute docs improvements within build from scratch install and upgrade docs</li> </ul> </li> <li>Brent: Address Met with empty schemas page after docker-compose upgrade </li> <li>Sean: Merge docs PR </li> <li>Pavish: If #3426 has code changes, re-test after changes. (If it\u2019s docs-only changes, then no re-testing necessary)</li> <li>Pavish will re-build images after testing</li> <li>Sean and Pavish: work together to do all release steps</li> </ul> <p>TODO after release:</p> <ul> <li>New connection creation flow does not handle schema creation failure scenarios</li> <li>Attempting to add connection with both Library Management and Movie Collection schema results in a 502</li> <li>Docs<ul> <li>Sean: Polish on upgradees</li> <li>Kriti, Sean: Holistic docs review<ul> <li>Look at Pavish\u2019s notes</li> </ul> </li> <li>Ghislaine: installation review</li> </ul> </li> <li>Sean: clean up CHANGELOG content, including discussion with team</li> <li>Brent &amp; Pavish: (Wednesday) update servers to latest release</li> </ul>"},{"location":"team/meeting-notes/2024/01/2024-01-31-staff-meeting/","title":"2024-01-31 Staff Meeting","text":""},{"location":"team/meeting-notes/2024/01/2024-01-31-staff-meeting/#post-release-work-planning","title":"Post-release work planning","text":"<p>From last meeting:</p> <ul> <li>New connection creation flow does not handle schema creation failure scenarios</li> <li>Attempting to add connection with both Library Management and Movie Collection schema results in a 502</li> <li>Docs<ul> <li>Sean: Polish on upgradees</li> <li>Kriti, Sean: Holistic docs review<ul> <li>Look at Pavish\u2019s notes</li> </ul> </li> <li>Ghislaine: installation review</li> </ul> </li> <li>Sean: clean up CHANGELOG content, including discussion with team</li> <li>Brent &amp; Pavish: (Wednesday) update servers to latest release</li> </ul> <p>From Basecamp: https://3.basecamp.com/5718119/buckets/35537802/todosets/6848469202</p> <p>Questions to answer:</p> <ul> <li>How do we handle docs updates after a release? Some options:<ul> <li>(A) Allow master to become out of sync with the docker images</li> <li>(B) Publish new docker images without changing the version number</li> <li>(C) Publish our docs from a separate git branch within the main repo</li> <li>(D) Publish our docs from a separate repo</li> <li>(E) Cut a new release when we make docs update</li> </ul> </li> <li>Where do we publish the CHANGELOG? How do we want it to be formatted?</li> <li>What work do we need to do?</li> <li>Should we do a 0.1.5 or just update docs on master?</li> <li>Timing / deadline?</li> <li>Who is doing what?</li> </ul>"},{"location":"team/meeting-notes/2024/01/2024-01-31-staff-meeting/#discussion","title":"Discussion","text":"<ul> <li>We\u2019d like to do releases once per month but we have more work to do to make the testing process more efficient.</li> <li>We should try to release again at the end of February<ul> <li>Bug fixes</li> <li>Figure out issue with Demo</li> <li>i18n code work</li> <li>Japanese translations</li> </ul> </li> <li>We want to make docs changes ahead of time, not wait for 0.1.5<ul> <li>Update \u201cConnect to an external database server\u201d docs</li> <li>Sean/Brent: clean up CHANGELOG content</li> <li>Kriti, Sean: Holistic docs review</li> <li>Ghislaine: installation review</li> <li>Sean: Add links to the installation video</li> </ul> </li> <li>Bug: Mathesar 0.1.4 cannot run in demo mode<ul> <li>We\u2019ll fix this and then deploy the demo site off of the develop branch</li> <li>You need to set the demo flag in the environment variables. Then Mathesar will not run.</li> <li>Brent will make a GitHub issue and assign it to Anish.</li> <li>Anish will work on this ASAP</li> </ul> </li> <li>Bug: New connection creation flow does not handle schema creation failure scenarios<ul> <li>Anish will work on this</li> </ul> </li> <li>Bug: Attempting to add connection with both Library Management and Movie Collection schema results in a 502<ul> <li>Anish will work on this</li> </ul> </li> <li>We need to make a release announcement<ul> <li>Kriti will work on this</li> <li>write copy</li> <li>publish</li> </ul> </li> <li>Sean and Brent will coordinate details about the CHANGELOG</li> <li>How do we handle docs updates after a release? Some options:<ul> <li>Definitely don\u2019t want to new publish Docker images</li> <li>Limit to: A, C, D</li> <li>We\u2019ll go with with (A) Allow master to become out of sync with the docker images</li> </ul> </li> <li>i18n schedule<ul> <li>Pavish is worried about not being able to finish the i18n changes by then end of February</li> <li>We won\u2019t block the release on the i18n work. We can still release with some small bug fixes even if i18n isn\u2019t done.</li> </ul> </li> <li>Planning work that we need to do soon:<ul> <li>users and permissions is blocking backend performance and architecture work<ul> <li>Kriti: users and permissions should take priority over i18n</li> </ul> </li> </ul> </li> <li>Deployment work &amp; teardown<ul> <li>Brent (already tracked in basecamp)</li> </ul> </li> <li>Brent: add basecamp task for tracking infrastructure and costs</li> <li>Sean: close milestone</li> </ul>"},{"location":"team/meeting-notes/2024/01/2024-01-31-staff-meeting/#structuring-future-meetings","title":"Structuring future meetings","text":"<p>How to structure our meetings for strategy, design, product, other processes</p>"},{"location":"team/meeting-notes/2024/01/2024-01-31-staff-meeting/#brainstorm","title":"Brainstorm","text":"<p>Meetings, purposes, timing</p> <ul> <li>\u201cBig picture\u201d product meetings for big new features</li> <li>Product approval meetings for tickets</li> <li>Design / UX sessions for small features</li> <li>Strategy meetings</li> <li>Architecture meetings</li> <li>Beta planning meeting</li> </ul>"},{"location":"team/meeting-notes/2024/01/2024-01-31-staff-meeting/#discussion_1","title":"Discussion","text":"<ul> <li>Goals for February<ul> <li>we should focus on 0.1.5</li> <li>no features, just bug fixes.</li> <li>solidify plans for users and permissions</li> <li>decide on architectural plans for backend performance improvements</li> <li>have strategy discussions \u2014 e.g. how we want to grow our user base, whether we want to pursue a SaaS offering</li> </ul> </li> <li>Permissions and worksheets<ul> <li>Hard to separate these into independent discussions</li> <li>Pavish: want to prioritize making decisions on permissions first because we need that for the beta but we don\u2019t need worksheets for the beta</li> <li>Kriti: yes, but we don\u2019t want to have to re-do permissions a third time. We need to take the worksheets discussion into account as well</li> </ul> </li> <li>Structure of meetings<ul> <li>architecture discussions will happen via email</li> <li>Ticket approval - 1 per month</li> <li>product meetings (where we discuss large features, requirements, etc)<ul> <li>should happen every week</li> <li>Adam will attend these as well</li> </ul> </li> <li>product strategy<ul> <li>Will happen during weekly team meetings</li> </ul> </li> <li>beta planning<ul> <li>Will happen during weekly team meetings</li> </ul> </li> <li>UX sessions<ul> <li>Kriti: maybe we don\u2019t need to do as many of these meetings</li> <li>AdHoc meetings as needed.</li> </ul> </li> <li>team meetings<ul> <li>Kriti: let\u2019s keep this on the calendar every week but actually use the time for discussions like product strategy, beta planning, etc.</li> </ul> </li> </ul> </li> <li>Brent: we need to get better about testing in order to increase our release cadence<ul> <li>need to figure out the \u201cbuild static files\u201d issue</li> <li>need to improve our CI testing matrix to test more Python versions</li> <li>Kriti: we\u2019ll have more time to talk about these in more detail in our beta planning</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/02/2024-02-08-big-picture/","title":"2024-02-08 Product big-picture meeting","text":""},{"location":"team/meeting-notes/2024/02/2024-02-08-big-picture/#permissions","title":"Permissions","text":"<ul> <li>How would a Mathesar user share a DB object via Mathesar?<ul> <li>To another Mathesar user<ul> <li>Is this required?</li> <li>User flow for sharing</li> <li>How would the DB object appear to the user to whom it was shared?</li> <li>Underlying DB credential used by the user viewing the DB object</li> </ul> </li> <li>Publicly<ul> <li>Is this required?</li> <li>User flow for sharing</li> <li>How would the DB object appear to public users?</li> <li>Underlying DB credential used by public users</li> </ul> </li> </ul> </li> <li>How would a Mathesar user share a Mathesar object?<ul> <li>To another Mathesar user<ul> <li>User flow for sharing</li> <li>How would the object appear to the user to whom it was shared?</li> <li>Underlying DB credential used by the user viewing the object</li> </ul> </li> <li>Publicly<ul> <li>User flow for sharing</li> <li>How would the object appear to public users?</li> <li>Underlying DB credential used by public users</li> </ul> </li> </ul> </li> <li>What degree of configurable access control do we want for Mathesar specific objects?</li> </ul>"},{"location":"team/meeting-notes/2024/02/2024-02-08-big-picture/#user-stories","title":"User stories","text":""},{"location":"team/meeting-notes/2024/02/2024-02-08-big-picture/#database-objects-co-ordinating-between-mathesar-users","title":"Database objects: Co-ordinating between Mathesar users","text":""},{"location":"team/meeting-notes/2024/02/2024-02-08-big-picture/#library-intern","title":"Library intern","text":"<p>Library owner has an intern working to update inventory. Intern should be able to insert/update/delete/select within <code>books</code> and <code>items</code>. Intern should be able to select within <code>checkouts</code> to see when certain items where checked out. Because owner cares about privacy of patrons, intern should not be able to view <code>patrons</code>. When viewing <code>checkouts</code> table, intern should only be able to see the id of the patron associated with each checkout (no record summary).</p>"},{"location":"team/meeting-notes/2024/02/2024-02-08-big-picture/#notes","title":"Notes","text":"<ul> <li>We\u2019re all agreed that eventually we want to manage &amp; grant permissions for db users to db objects via Mathesar UI</li> <li>For beta, we want feature parity with what we already have.</li> </ul>"},{"location":"team/meeting-notes/2024/02/2024-02-08-big-picture/#database-objects-external-anonymous-sharing","title":"Database objects: External anonymous sharing","text":""},{"location":"team/meeting-notes/2024/02/2024-02-08-big-picture/#public-books-list","title":"Public books list","text":"<p>Library owner wants to publish the list of books available at their branch, as well as the number of copies currently available. Anonymous user should be able to view the data but not modify anything.</p>"},{"location":"team/meeting-notes/2024/02/2024-02-08-big-picture/#potluck-signup","title":"Potluck signup","text":"<p>Potluck planner invites friends to come over for dinner. Planner sends friends a URL to a publicly-shared table in Mathesar. Each friend is able to add a row to sign up for the potluck, indicating what food they will bring. Because this is a high-trust, low-stakes environment, friends are also permitted to update any cell value within the sheet. However the friends are not able able to manipulate the structure of the sheet (add/remove columns, or change column types).</p>"},{"location":"team/meeting-notes/2024/02/2024-02-12-beta-planning-meeting/","title":"2024-02-12 beta planning meeting","text":""},{"location":"team/meeting-notes/2024/02/2024-02-12-beta-planning-meeting/#pre-meeting","title":"Pre-meeting","text":"<p>Please review the \u201cBeta\u201d HackMD ahead of time and think about how we can ship a minimum possible beta.</p> <p>Goals of the meeting:</p> <ul> <li>Decide what we\u2019re building for beta</li> <li>Decide rough timeline for beta</li> <li>Confirm monthly release plan</li> <li>Figure out what needs to be fleshed out and who\u2019s working on what<ul> <li>Everyone should leave the meeting with a clear sense of priorities</li> </ul> </li> <li>If we\u2019re working on other things (e.g. i18n), figure out how that ties in to the beta plan</li> </ul>"},{"location":"team/meeting-notes/2024/02/2024-02-12-beta-planning-meeting/#notes","title":"Notes","text":"<ul> <li>Is everyone agreed generally that the beta is focused on performance and (maybe) usability. No big new features. Basically get Mathesar to the point where we can recommend it to more users?<ul> <li>Yes, everyone agrees.</li> </ul> </li> <li>Why beta?<ul> <li>Big goal is to grow our user base. Currently this is hard because we can\u2019t recommend it to a lot of users (due to alpha status, performance issues). We need it to perform better before we can do that.</li> </ul> </li> <li>Brent: do we want forms for beta? Kriti: no. We should probably build this shortly after beta.</li> <li>Order of operations<ul> <li>Pavish: how much difference do we want/foresee between beta and 0.1?<ul> <li>Kriti: not sure</li> <li>Pavish: I would think we wouldn\u2019t want to add too many features in this window</li> <li>Kriti: I\u2019m not even thinking about v1.0 yet. We need more information before we make these decisions.</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/02/2024-02-12-beta-planning-meeting/#performance","title":"Performance","text":"<ul> <li>We\u2019re doing the backend architecture work</li> <li>We\u2019ll have new APIs. This will involve some frontend work to make the frontend utilize the new APIs.</li> <li>There is a major perf issue when the service layer and DB layer are on separate machines. We should clarify what sort of installation setups we are aiming for. We should try to target installation scenarios where Mathesar doesn\u2019t perform quite as well</li> <li>Decision: Brent has this in hand, will think more about if what work is necessary and if there\u2019s anything that can be cut</li> </ul>"},{"location":"team/meeting-notes/2024/02/2024-02-12-beta-planning-meeting/#usability","title":"Usability","text":"<ul> <li>It would be nice to have a use case that we can aim for. Maybe CRM, maybe Basecamp. It would be nice to have one use case where we can switch our core workflow over to Mathesar.</li> <li>Usability should also consider performance in different installation setups</li> <li>Sean: not sure if it\u2019s worth making the beta depend on us moving our workflow over because we want to recommend Mathesar to people with pre-existing PG DBs.</li> <li>Pavish: do we want to have a \u201cuser flow\u201d like we did for the library demo?</li> <li>Kriti: we don\u2019t necessarily need to fix every usability issue</li> <li>Brent: it would be nice to have a use case that motivates us to use the DB outside of Mathesar too.</li> <li>Kriti: it would be good for someone to come up with more scripts/stories soon</li> <li>Kriti: I don\u2019t think the dogfooding has to be the end-all-be-all. It doesn\u2019t need to cover every feature.</li> <li>Sean suggests that we talk about \u201cdogfooding\u201d as a topic separate from the beta</li> <li>Decision: Sean will map out some of the improvements we\u2019d need for the CRM use case and the Basecamp use case. Then Sean and Kriti continue discussion from there.</li> </ul>"},{"location":"team/meeting-notes/2024/02/2024-02-12-beta-planning-meeting/#permissions","title":"Permissions","text":"<ul> <li>We need to get rid of our current permissions system and move to a system that\u2019s backed by PostgreSQL permissions</li> <li>Kriti: do we really need it for the beta. Agree that we need to do this at some point. What\u2019s the argument for blocking the beta on this?</li> <li>Brent: permissions are blocking architecture. Architecture is blocking performance.</li> <li>Brent: getting the permissions sorted out is going to be the main part of the work for beta.</li> <li>Decision: we need this for beta. We\u2019ll continue figuring out how to do it in separate meetings.</li> </ul>"},{"location":"team/meeting-notes/2024/02/2024-02-12-beta-planning-meeting/#installation","title":"Installation","text":"<ul> <li>Should we try to have a debian package?<ul> <li>Pavish: this would be a lot of work. Might not be worth aiming for. Our stack is not well-suited for this. I don\u2019t think we should put a lot of effort into this. Not a high priority.</li> <li>Brent: Agree. We should tune up the installation types we already have. Make the images smaller, leaner. Unless people are absolutely screaming for it, I don\u2019t think we should add any other installation methods.</li> <li>Kriti: seems fine to drop this. We could do it after beta. Curious why it would take a lot of work, but we should talk about that separately.</li> </ul> </li> <li>Should we make it <code>pip</code> installable?<ul> <li>Brent: suggested this</li> <li>Kriti: We\u2019ll discuss this later</li> </ul> </li> <li>Should we relax the need for NodeJS to install?<ul> <li>Pavish: yes, we should aim for this</li> <li>Brent: yes, this is worth doing.</li> </ul> </li> <li>Do we need to make any improvements to the upgrades process?<ul> <li>Adding automatic testing of upgrades</li> </ul> </li> <li>Users need to currently go through upgrade sequentially<ul> <li>If we do a lot of versions, this is a real pain for users</li> <li>We should document this sequential requirement better</li> <li>We should also make it easier for users to upgrade to the latest version<ul> <li>Have checkpoints if needed, like Nextcloud</li> </ul> </li> <li>Starting from beta, people need to be able to upgrade easily from any version</li> <li>No point doing this for previous versions</li> </ul> </li> <li>Support a wider postgres and python range<ul> <li>Kriti: Seems like python 3.11 wouldn\u2019t be too hard to support</li> <li>Brent: should be a low bar to support python 3.6+</li> <li>Kriti: not as concerned about supporting older versions. More concerned about supporting newer versions.</li> <li>Brent: new newest version of Mathesar has to support the latest version of python?</li> <li>Brent: how do we decide what the cutoff is for older versions of python?<ul> <li>Kriti: We should do a little research on this to make a decision. Maybe a 2 year grace period.</li> </ul> </li> </ul> </li> <li>Do we want to make certain deployment types easier, e.g. kubernetes?<ul> <li>Pavish: asked about this</li> <li>Kriti: not sure we need this</li> <li>Investigate PaaS as a prerequisite to wide publicity</li> </ul> </li> <li>Depends on if we\u2019re publicizing Beta </li> <li>Brent: PaaS should be straightforward so long as our image is set up correctly.</li> <li>Pavish: Mostly this task involves a bunch of QA work, testing our image out with different platforms.</li> <li>Anish: it would be good to reduce our 3rd party dependencies. This would help us support more python versions.</li> <li>Decision:<ul> <li>We\u2019ll set up pipelines for testing what installation methods we have</li> <li>We\u2019ll build static files during release so admins don\u2019t need NodeJS</li> <li>We\u2019ll make sure our upgrades process doesn\u2019t require people to perform sequential upgrades after beta</li> <li>We\u2019ll investigate kubernetes, PaaS, and pip install once we\u2019re closer to beta</li> <li>Next steps:<ul> <li>Brent spec out pipeline issues</li> <li>Pavish work on static files issue</li> <li>Anish: Work on Python/Postgres version support + reduce dependencies<ul> <li>Do research into figuring out what strategy we should have for supporting older versions, based on other projects</li> <li>Add PG 16 to testing matrix</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/02/2024-02-12-beta-planning-meeting/#backupspg-upgrades","title":"Backups/PG upgrades","text":"<ul> <li>Kriti: do we want this?</li> <li>Brent: this is a big feature. It would be nice though.</li> <li>Brent: PostgreSQL has been releasing quite frequently. This is not good for us because it\u2019s hard for people to upgrade.</li> <li>Kriti/Brent: the main work here is having a script that dumps your database + dumps a mapping between names and OIDs.</li> <li>Pavish: I\u2019m comfortable with leaving this out of the beta.</li> <li>Kriti: we need to document this limitation.</li> <li>Brent: I would argue for doing this. This will be easier after our backend architectural upgrades.</li> <li>Decision: we\u2019ll investigate this after new backend architecture work is done, but not commit to it</li> </ul>"},{"location":"team/meeting-notes/2024/02/2024-02-12-beta-planning-meeting/#stability","title":"Stability","text":"<ul> <li>Pavish: I want to have multiple QA scripts for us to run through before each release.</li> <li>More testing of installation</li> <li>Kriti: we need more automation in order to help us release more confidently.</li> <li>Brent: would be nice to have more pipelines set up soon \u2014 especially for the release immediately after the beta.</li> <li>Kriti: If we could utilize these sorts of automations sooner, then it will help us put more time into the beta.</li> <li>What exactly do we want?<ul> <li>Written user-flows for manual QA</li> <li>E2E tests</li> </ul> </li> <li>Sean: the main reason we abandoned the E2E tests was due to the backend performance issues.</li> <li>Kriti: as a minimum, we should compose the written user-flows. If we have more time (which we probably won\u2019t), then we should automate it by building E2E tests</li> <li>Brent: Is it worth trying to make our release notes process faster?<ul> <li>Sean: let\u2019s wait and see how it goes with 0.1.5. I think it will be faster.</li> </ul> </li> <li>Decision: we\u2019ll write user flows for manual QA testing<ul> <li>Make sure to update every month</li> <li>Assign to Ghislaine</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/02/2024-02-12-beta-planning-meeting/#error-handling","title":"Error handling","text":"<ul> <li>Kriti: Do we want impvove error logging?</li> <li>Pavish: there are two separate problems: logging errors somewhere vs showing error to users.</li> <li>Brent: With the Docker setup, the logging is great. With the \u201cBuild from scratch\u201d installation method, the logging is not great. There are logs, but it\u2019s not clearly documented how to find/use them.</li> <li>Brent: We could have more sophistocated logging handling. I wouldn\u2019t bother for beta though.</li> <li>Kriti: we should at least improve our documentation for beta.</li> <li>Pavish: We should improve error display for users<ul> <li>Brent: let\u2019s wait to evaluate this until after the transition to the RPC API. I think this will automatically improve after that transition.</li> </ul> </li> <li>Kriti: is this something we really need for beta? Can\u2019t we improve this after beta?</li> <li>Kriti: our overall goal for beta is to have enough information to troubleshoot bugs.</li> <li>Brent: I think we\u2019re already doing well enough on this goal for beta.</li> <li>Sean: we need to find some of these categories to say \u201cno\u201d to. Let\u2019s not focus on this.</li> <li>Decision: we won\u2019t focus on this</li> </ul>"},{"location":"team/meeting-notes/2024/02/2024-02-12-beta-planning-meeting/#api","title":"API","text":"<ul> <li>Do we want to document the API?</li> <li>Brent: RPC framework is going to change everything and hopefully make the API more self-documenting.</li> <li>Do we want our API to be stable?</li> <li>Sean: suggest that we hold off on advertising that we have an API until it\u2019s stable</li> <li>Pavish: there\u2019s a lot to figure out here with regard to tokens and auth.</li> <li>Brent: I would not block Beta on stabilizing the API.</li> <li>Kriti: At some point we should have an API-focused release.</li> <li>Decision: We\u2019ll still consider our API to unstable. We won\u2019t attempt to document it.</li> </ul>"},{"location":"team/meeting-notes/2024/02/2024-02-12-beta-planning-meeting/#to-discuss-in-more-detail-later","title":"To discuss in more detail later","text":"<ul> <li>New features<ul> <li>View support</li> </ul> </li> <li>Documentation improvements (figure out requirements)</li> <li>Version numbering scheme</li> <li>Docs updates vis-\u00e0-vis versioning</li> <li>do we want pip installation?</li> <li>Kriti will keep an eye on this</li> </ul>"},{"location":"team/meeting-notes/2024/02/2024-02-12-beta-planning-meeting/#timeline","title":"Timeline","text":"<ul> <li>We\u2019ll figure out after permissions + usability have more clarity<ul> <li>This is our first priority</li> </ul> </li> <li>We\u2019ll prioritize work and release at the end of every month</li> <li>Work for everyone:<ul> <li>Brent: permissions with Pavish, write issues for automating release testing for install/upgrade, figure out architecture</li> <li>Pavish: figure out permissions, static files</li> <li>Kriti: put this all in basecamp, ensure we talk about rest of \u201cmore detail later\u201d issues</li> <li>Sean: write use cases for Basecamp/CRM</li> <li>Anish: work on reducing dependencies, Python/Postgres support </li> <li>Ghislaine: work on user scripts for QA</li> </ul> </li> <li>Not scheduling next call yet, will be after we have more clarity on permissions / usability items</li> <li>Other things we\u2019re working on:<ul> <li>Sean is working on frontend refactor as a low priority</li> <li>i18n:<ul> <li>Some frontend work \u2013 Sean\u2019s working on it as a low priority<ul> <li>Affects 2-3% of the UI, will be untranslated</li> </ul> </li> <li>We need to order translations (Pavish &amp; Kriti)</li> <li>Release Japanese translations in 0.1.5, QA afterwards</li> </ul> </li> <li>Kriti will talk to Ghislaine about her current work</li> <li>Anish is working on debugging a performance issue (in 0.1.5)<ul> <li>That takes top priority</li> </ul> </li> <li>Anish is working on improving infrastructure for demo<ul> <li>This goes under release automation, although we didn\u2019t talk about it earlier</li> <li>This should take priority over Postgres / Python / dependencies since it will free up more of our time sooner </li> </ul> </li> <li>Brent is working on deploying 0.1.4 to demo<ul> <li>This is high-priority</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/02/2024-02-13-big-picture/","title":"2024-02-13 Product big-picture meeting","text":""},{"location":"team/meeting-notes/2024/02/2024-02-13-big-picture/#external-anonymous-sharing","title":"External anonymous sharing","text":"<ul> <li> <p>When sharing a table externally to anonymous users, should I be able to choose a DB role for the share?</p> <ul> <li>Scenario:<ul> <li>Tech company \u2018Stack Underflow\u2019 has a table with the results of their survey of popular programming languages, called Survey results.</li> <li>Employees of the tech company should be able to perform DDL and DML operations on the Survey results table.</li> <li>They want to share this Survey results table to the public. The share should be restricted to only allow \u201cread-only\u201d view of the table.</li> <li>For safety reasons, they create a new role on the DB called \u2018readonly_role\u2019 and grant it access to only view the table.</li> <li>They generate a URL to share the table.They choose the \u2018readonly_role\u2019 and associate it with the share.</li> <li>Anonymous users viewing the URL should be presented with a read-only view of the Survey results table. The underlying DB request should utilize the \u2018readonly_role\u2019.</li> <li>Tech company employees should also be able to view the url to get a sense of how it will look before sending the url to others. They should be able to do this while they\u2019re still logged into Mathesar.</li> </ul> </li> <li>Are we all agreed that we need to support this?</li> <li>How would this work on the backend?</li> <li>Similar scearnio applies for Mathesar objects like explorations. How would the solution work for them?</li> </ul> </li> <li> <p>Can the same table be publicly shared multiple times by multiple users, generating multiple urls? If so, who all should be able to view the shared url list?</p> <ul> <li>Scenario:<ul> <li>Event management company has multiple clients. They get orders for conference management and manage events on behalf of their clients.</li> <li>They have DB roles for each of their clients. Let\u2019s say they have two clients and associated roles, for \u2018RSA Conference team - USA\u2019, and \u2018Presidential debate team\u2019.</li> <li>They manage their conference attendees contact information list in a single table, with an RLS policy.</li> <li>The \u2018RSA Conference team - USA\u2019 role would only be able to view the list of attendees for their conference and not any other conferences, when they query the table.</li> <li>Event management company connects their DB to Mathesar, gives access to \u2018RSA Conference team - USA\u2019 and \u2018Presidential debate team\u2019 with their respective roles.</li> <li>\u2018RSA Conference team\u2019 shares the attendees table with a public URL link. The \u2018Presendital debate team\u2019 should not be able to see the link listed in the Mathesar UI.</li> </ul> </li> <li>Are we all agreed that we need to support this?</li> <li>How would this work on the backend?</li> <li>How would the follow-up scenario work?<ul> <li>Now, there\u2019s a \u2018RSA Conference global team\u2019 that wants to conduct conferences across different countries. The Event Management company creates a DB role for them. They should be able to view the attendees of all the RSA conference sub-teams that manage single countries.</li> <li>They should be able to view the list of links shared by the RSA sub teams for the attendees table.</li> </ul> </li> <li>Similar scenarnio applies for Mathesar objects like explorations. How would the solution work for them?</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/02/2024-02-13-big-picture/#external-sharing-to-mathesar-users","title":"External sharing to Mathesar users","text":"<ul> <li>Should we allow sharing a table/exploration with the restriction that the human should be logged into a Mathesar account, but they don\u2019t necessarily need to have a DB role explicitly configured and shouldn\u2019t be able to view anything else in Mathesar?<ul> <li>Scenario:<ul> <li>Person conducts an internal survey within their company. They create and share a public URL.</li> <li>They want whomever editing the table (or in the future, forms) to be a valid Mathesar user to prevent people from outside the organization to edit the data.</li> <li>They don\u2019t want these users to browse the database via Mathesar. They simply want them to access one single table (or form) and only via the URL.</li> </ul> </li> <li>Are we all agreed that we need to support this?<ul> <li>We\u2019re not going to support this</li> </ul> </li> <li>How would this work on the backend?</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/02/2024-02-13-big-picture/#implicit-sharing-between-mathesar-users-for-co-ordination","title":"Implicit sharing between Mathesar users for co-ordination","text":"<ul> <li>When a database is connected to Mathesar how should access control work for Mathesar users to access it?</li> <li>Do we need to move away from our existing setup where each connection is a single DB user? Why?</li> <li>The main reason is for sharing Mathesar objects. Can we do this another way?</li> <li>Should an exploration/Mathesasr object ownership be tied to a human or the DB role?</li> <li>Should we provide access control options for structural level changes to explorations/Mathesar objects? Can we restrict this to owner-only?</li> <li>Do we need private explorations that only one Mathesar user owns?</li> <li>Do we need a team space where everyone co-owns items in the team space?<ul> <li>Do we need further access-control within a team space?</li> </ul> </li> <li>Should we allow multiple projects/wrappers for the same DB?<ul> <li>Scenario: Multi-tenant setups.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/02/2024-02-28-release-check-in/","title":"2024-02-28 release check-in","text":"<ul> <li>Build issues fixed, QA build is done</li> <li>What\u2019s left blocking the release process?<ul> <li>Brent to review release notes and docs changes<ul> <li>Release notes will then be final</li> <li>Docs can be merged after review</li> </ul> </li> <li>gh cli task (from Basecamp)<ul> <li>Sean will do this as part of publishing release, mainly release process docs updates</li> </ul> </li> <li>QA<ul> <li>Library demo testing pending</li> <li>Ghislaine had a question on Matrix on how to QA the demo. <ul> <li>Ghislaine doesn\u2019t need to worry about QA for demo for this release, deploying the demo can serve as QA</li> <li>Also, Brent has done QA already.</li> <li>Brent suggested a new DockerHub repo for demo images, but we decided we don\u2019t need it since the long term plan is to change the demo setup and remove demo mode.</li> </ul> </li> <li>Feature / bugfix tests are done<ul> <li>Ghislaine tested bugfixes</li> <li>Brent tested feature (loading data speedup)</li> </ul> </li> </ul> </li> </ul> </li> <li>Bumped to next release<ul> <li>Make release process atomic (Basecamp task)<ul> <li>Sean needs to talk this through with someone with context of installation steps</li> <li>May have installation implications</li> </ul> </li> <li>Consider separate DockerHub repo for demo<ul> <li>We don\u2019t need it for this release, but we may want to consider it for the next one based on the state of the new demo infrastructure.</li> </ul> </li> <li>Debug Ghislaine\u2019s installation issue (Basecamp task)<ul> <li>Check this off for now in Basecamp</li> <li>Ghislaine - try installation blocker locally again after 0.1.5 is out, might be fixed with Anish\u2019s issue</li> <li>If there\u2019s still an issue, we\u2019ll uncheck later</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/02/2024-02-28-release-check-in/#next-steps","title":"Next steps","text":"<ul> <li>Brent reviews docs + release notes</li> <li>Ghislaine completes QA</li> <li>Sean makes the release</li> </ul>"},{"location":"team/meeting-notes/2024/03/2024-03-06-staff-meeting/","title":"2024-03-06 Staff Meeting","text":""},{"location":"team/meeting-notes/2024/03/2024-03-06-staff-meeting/#015-release-retrospective","title":"0.1.5 release retrospective","text":""},{"location":"team/meeting-notes/2024/03/2024-03-06-staff-meeting/#what-went-well","title":"What went well","text":"<ul> <li>Kriti:<ul> <li>Release went out on time</li> <li>We made our build process faster, next time release will be smoother</li> <li>Documentation improvements for release process </li> <li>Demo deployment changes</li> </ul> </li> <li>Ghislaine:<ul> <li>Even though I had low participation, it felt like the process was smoother. I felt more informed of what needed to be done.</li> <li>Communication with team was good.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/03/2024-03-06-staff-meeting/#what-couldve-gone-better","title":"What could\u2019ve gone better","text":"<ul> <li>Sean:<ul> <li>The amount of organizational overhead we have for each release still feels significantly larger than I would like to see for a task we\u2019re performing every month. I\u2019d like to continuing finding ways to streamline it.</li> <li>During the previous two releases, we\u2019ve made the release very near the end of the month, having almost no time to spare. For me personally this time crunch adds significantly more stress to my overall experience as a Mathesar dev. In general I do not like missing deadlines or failing to meet goals. The idea of consistently having a \u201cnear miss\u201d every month is uncomfortable for me.</li> </ul> </li> <li>Kriti:<ul> <li>Docker build issues took a while</li> </ul> </li> <li>Ghislaine:<ul> <li>Nothing specific to the release. QA will be more organized once I finish the QA scripts I\u2019m working on. I don\u2019t have enough experience to compare with previous releases.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/03/2024-03-06-staff-meeting/#shout-outs","title":"Shout outs","text":"<ul> <li>Sean:<ul> <li>Brent and Pavish for resolving the buildx issue</li> </ul> </li> <li>Kriti:<ul> <li>Sean for documentation improvements</li> <li>Sean for helping with release management</li> <li>Brent and Pavish for build issue resolution</li> <li>Ghislaine for QA</li> <li>Anish and Brent for demo deployment</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/03/2024-03-06-staff-meeting/#ideas","title":"Ideas","text":"<ul> <li> <p>Sean:</p> <ul> <li> <p>Simplify Basecamp project</p> <p>I\u2019d like to condense the Basecamp project template by shifting some of that complexity into documentation that lives in wiki pages.</p> <p>I wrote an email about this which proposes a new template, but I\u2019m not attached to that template specifically.</p> <p>I\u2019ve been steadily improving our Release docs. Now, cutting a release, writing the release notes, and publishing a release are all clear, self-contained processes that can be completed in under 30 minutes. For processes such as these, I think a single task within Basecamp is sufficient. I would expect that, if someone hits a snag during one of these processes and is unable to complete it, they can add new tasks to Basecamp at that point to track the work necessary to resolve the snag.</p> </li> <li> <p>Can we set up some sort of continuous deployment from the master branch?</p> </li> <li> <p>Assign the same people to perform the tasks every month.</p> </li> <li> <p>Decide on a consistent point within the month when we will cut the release. Thus far, we have been making this decision on a ad hoc basis. I think we would benefit from greater consistency.</p> </li> <li> <p>I\u2019d like to cut the release earlier in the month. For example, let\u2019s say we cut the release every month on the 15th. This gives us a longer grace period for publishing the release before the end of the month. For me, a change like this would serve to reduce stress. Note that cutting on the 15th would not mean that we only have 2 weeks to get stuff into the release. We\u2019d still have a whole month. This change I\u2019m suggesting is a matter of shifting the phase (in the mathematical sense) of our release workflow relative to the phase of the calendar months. I see it as potentially increasing the latency of releases in some cases. But I don\u2019t see it as reducing our overall throughput of delivering meaningful changes in our releases.</p> </li> </ul> </li> <li> <p>Pavish:</p> <ul> <li>GH workflow for building and publishing Docker images, whenever a tag is created.<ul> <li>I\u2019d like to do this in 0.1.6</li> </ul> </li> </ul> </li> <li>Anish:<ul> <li>We should look into better error logging for helping users with installation/upgrade issues</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/03/2024-03-06-staff-meeting/#meeting-notes","title":"Meeting notes","text":"<ul> <li>\u201cWhat went well\u201d comments<ul> <li>We reviewed people\u2019s comments</li> <li>Nothing new added</li> </ul> </li> <li>\u201cWhat could\u2019ve gone better\u201d<ul> <li>Brent: We were in \u201crelease mode\u201d for about a week. We need to improve this if we\u2019re doing this every month.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/03/2024-03-06-staff-meeting/#ideas_1","title":"Ideas","text":"<ul> <li> <p>Basecamp project template</p> <ul> <li>We all reviewed the project template together and made some changes</li> </ul> </li> <li> <p>Continuous deployment</p> <ul> <li>We can\u2019t do this until we have more automated testing between releases</li> <li>Easier to do for the demo, but still not priority for this release</li> </ul> </li> <li> <p>Assign the same people to perform the tasks every month</p> <ul> <li>Pavish: useful to rotate roles to make sure that the workflow works for everyone</li> <li>Sean: it would be useful to have a \u201crelease owner\u201d that automatically gets assigned to many of the tasks, then we only have to make one choice</li> <li>We\u2019ll rotate release owners</li> <li>Who should be in the rotation?<ul> <li>Brent, Pavish, Ghislaine, Sean, Anish</li> <li>Kriti will not be in the rotation. This will give her time to focus on other tasks</li> </ul> </li> </ul> </li> <li> <p>consistent point within the month when we will cut the release</p> <ul> <li>Kriti: fine with doing it earlier in the month</li> <li>Pattern: We\u2019ll cut the release on the third Monday of the month.</li> </ul> </li> <li> <p>Increasing automation</p> <ul> <li>Pavish: would like to automate</li> <li>Kriti: make sense to do this for 0.1.6</li> <li>Sean: Want to defer increase in automation until after some of the other kinks are sorted out</li> <li>Pavish: I don\u2019t want anyone to manually build frontend files \u2014 I want that to be an automated step</li> </ul> </li> <li> <p>better error logging</p> <ul> <li>Anish wants to be able to look at a text file and figure out what has gone wrong with a user\u2019s installation/upgrade process</li> <li>Sean: users have asked for this too. Would be good to work on.</li> <li>Kriti: need to figure out requirements</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/03/2024-03-06-staff-meeting/#016-plan","title":"0.1.6 plan","text":"<ul> <li>What should be in it?</li> <li>Who\u2019s managing it?</li> <li>Deadlines</li> </ul> <p>What to work on</p> <ul> <li>Automate cutting release process</li> <li>Error logging<ul> <li>Brent: it would be good to figure out what we want to do, even if we don\u2019t end up doing it for this release. We\u2019ll work on figuring out the requirements.</li> </ul> </li> <li>Brent would like to improve support for Python versions. Added.</li> <li>i18n<ul> <li>Maybe we could have this is if we\u2019re able to receive the translations in time</li> <li>Yes, we\u2019ll try to get this in.</li> </ul> </li> </ul> <p>Logistics:</p> <ul> <li>Cutting on 18th March</li> <li>Release owner: Anish</li> <li>We reviewed the 0.1.6 milestone</li> </ul> <p>NodeJS dependency</p> <ul> <li>Pavish raised a PR for removing NodeJS from our Docker Image</li> <li>For install from scratch, we\u2019ll have a separate meeting with Pavish, Sean, Brent</li> </ul> <p>Work not related to 0.1.6</p> <ul> <li>Sean is working on a frontend refactor, will unblock other stuff<ul> <li>Will prioritize more important stuff if it comes up</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/03/2024-03-21-staff-meeting/","title":"2024-03-21 staff meeting","text":""},{"location":"team/meeting-notes/2024/03/2024-03-21-staff-meeting/#quick-release-check-in","title":"Quick release check in","text":"<ul> <li>What\u2019s left to do?<ul> <li>Write + review release notes (Anish)</li> <li>Test build from source Mac (Anish)</li> <li>Docs changes (debug images, 3.12) (Brent)</li> <li>Test upgrades (Pavish)</li> <li>Review docs (Sean)</li> <li>Scanning PR for red flags (Sean, Brent)</li> </ul> </li> <li>Who\u2019s doing what?</li> </ul>"},{"location":"team/meeting-notes/2024/03/2024-03-21-staff-meeting/#discussion","title":"Discussion","text":""},{"location":"team/meeting-notes/2024/03/2024-03-21-staff-meeting/#moved-to-next-release","title":"Moved to next release","text":"<ul> <li>Bump release publication atomic task to next release</li> <li>Create requirements for better error logging</li> </ul>"},{"location":"team/meeting-notes/2024/03/2024-03-21-staff-meeting/#left-to-do","title":"Left to do","text":"<ul> <li>QA is still in progress<ul> <li>Update docs to take out 3.12</li> <li>Pavish testing upgrades</li> </ul> </li> <li>Sean reviewing docs</li> </ul>"},{"location":"team/meeting-notes/2024/03/2024-03-21-staff-meeting/#action-items","title":"Action Items","text":"<p>Ghislaine is 0.1.7 release owner - update QA plan (also in template) - Sean will assist</p>"},{"location":"team/meeting-notes/2024/03/2024-03-21-staff-meeting/#beta-planning","title":"Beta planning","text":"<ul> <li>Current status and next steps for:<ul> <li>Backend performance<ul> <li>Status:<ul> <li>Notes are drafted</li> <li>Once we have buy-in, start building<ul> <li>GitHub issues for first step, replacing tables and columns endpoint with RPC endpoints</li> <li>Sean will do frontend changes<ul> <li>We need to completely switch from REST to RPC in a single release for consistency</li> </ul> </li> <li>Then we\u2019ll delete old code</li> </ul> </li> <li>Do we need to preserve old endpoints?<ul> <li>Not too much extra work</li> </ul> </li> <li>Frontend and backend needs to discuss how we\u2019re going to make this change across multiple releases<ul> <li>We need to be on the same page about what we\u2019re doing for each release </li> <li>Also try to minimize work</li> </ul> </li> <li>We need to be able to track progress on this<ul> <li>Brent will create meta issue with bullet points (not all filled out), can change over time</li> </ul> </li> </ul> </li> <li>Todos:<ul> <li>Kriti, Sean to review architectures notes</li> </ul> </li> </ul> </li> <li>Usability improvements<ul> <li>Sean, Ghislaine, and Kriti did independent evaluations of moving CRM to Mathesar</li> <li>We have a list of recommendations for improvements</li> <li>Sean\u2019s list</li> <li>Ghislaine\u2019s list</li> <li>Conclusions</li> <li>Want to improve navigation and space usage in record page; Ghislaine is working on wireframes.<ul> <li>Not blocking beta, but nice to have. Depends on capacity.</li> </ul> </li> <li>Blocking improvements are already done (Great!)</li> <li>Found 2 more high-priority improvements that would be nice. Ghislaine is working on those.</li> <li>We\u2019ll continue to prioritize improvements from the original list as appropriate.</li> <li>May find more things once we actually move the CRM over to Mathesar.</li> </ul> </li> <li>Release optimization<ul> <li>We should try to get the requirements for hiring someone to help with this done by mid-April if we can</li> <li>Added task for Ansible script</li> <li>Added task for manual QA plan</li> </ul> </li> <li>Permissions refactor<ul> <li>Done so far:<ul> <li>Architecture mostly solidified<ul> <li>Still have some things to go - how to derive permissions for Mathesar objects </li> <li>Backend can go any which way</li> <li>We\u2019re all agreed that exploration permissions will be managed in the service layer</li> <li>Ghislaine: Is this related to Mathesar table metadata?<ul> <li>Pavish would like to derive those from postgres permissions</li> <li>Sean would like to derive from exploration permissions<ul> <li>Simpler to implement</li> </ul> </li> </ul> </li> </ul> </li> <li>Backend can do a few weeks worth of work without solidifying remaining issues<ul> <li>No schema level permissions yet other than through DB roles, we can add pieces once this UX is solidified </li> <li>We will need to add pieces, but we don\u2019t need to undo anything</li> </ul> </li> <li>Next step: UX exploration to finalize frontend implementation (and remaining backend architecture)<ul> <li>Pavish and Ghislaine had an initial call</li> <li>Call to plan work / set expectations, put work in Basecamp</li> <li>Kriti, Pavish, Ghislaine, Sean</li> </ul> </li> </ul> </li> <li>Discussions:<ul> <li>Schema level permissions vs. not</li> <li>UX requirements for permissions and how to present Mathesar metadata permissions<ul> <li>Considerations: https://hackmd.io/@mathesar/S1RjAC8pT</li> </ul> </li> </ul> </li> <li>Backend work will be tracked in the same meta issue as backend performance (\u201cbackend refactor\u201d)</li> </ul> </li> <li>Installation improvements<ul> <li>Not looking at these until backend refactor</li> <li>Then we\u2019ll look at this again</li> </ul> </li> <li>Beta \u201cgo to market\u201d<ul> <li>Demo tasks<ul> <li>Try to do a bit every release</li> <li>Should be part of demo planning</li> </ul> </li> <li>Metrics for beta</li> <li>Marketing for beta</li> </ul> </li> <li>Planning and organization<ul> <li>Kriti: set up a call for the \u201cgo to market\u201d of the beta</li> <li>Kriti: check in on beta progress in weekly meetings as needed</li> </ul> </li> </ul> </li> <li>Are we missing anything else?<ul> <li>Added to \u201cother features to consider\u201d<ul> <li>Security audit<ul> <li>Wait until backend refactor is closer to done</li> <li>Should be outside audit</li> <li>Sean was on CiviCRM security team</li> <li>Table renaming bug could be related to security<ul> <li>We do sanitize on the backend</li> </ul> </li> <li>Security vulnerabilities should be tracked privately</li> <li>We need a flow for people to report security issues with us<ul> <li>SECURITY.md file, etc.</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li>Check in on everyone\u2019s current work, ensure it\u2019s aligned with beta<ul> <li>No time for full check in</li> <li>If anyone is working on something that they don\u2019t know if it\u2019s a priority, please talk to Kriti</li> </ul> </li> <li>Timeline for beta<ul> <li>We should have a release that we\u2019re aiming for being the beta</li> <li>We\u2019ll discuss this next week</li> <li>Kriti will start an email thread to get people\u2019s opinions on this</li> <li>NOT April release</li> </ul> </li> <li>Plan for 0.1.7<ul> <li>Releases can be similar to cycles, all work should be tracked there</li> <li>Talk about this next week</li> </ul> </li> <li>We\u2019ve made a lot of progress since the last beta check-in, nice work everyone.</li> </ul>"},{"location":"team/meeting-notes/2024/03/2024-03-21-staff-meeting/#action-items_1","title":"Action Items","text":"<ul> <li>Ghislaine to update QA plan for 0.1.7 release and release template in Basecamp</li> <li>Sean and Brent will sync on the process plan for the architectural change.<ul> <li>Communicate plan to team afterwards.</li> </ul> </li> <li>Brent will create a metaissue to track overall plan for architectural changes.</li> <li>Brent should double-check that backend performance plan makes sense.</li> <li>Sean, Ghislaine, and Kriti should look through the Considerations doc, plan a call with Pavish.</li> <li>Everyone: let Kriti know if you are working on something not prioritized for the beta</li> <li>Kriti:<ul> <li>schedule \u201cbusiness goals for beta\u201d meeting</li> <li>start email thread about beta timeline</li> <li>add beta timeline &amp; 0.1.7 plan to next week\u2019s meeting</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/03/2024-03-27-staff-meeting/","title":"2024-03-27 staff meeting notes","text":""},{"location":"team/meeting-notes/2024/03/2024-03-27-staff-meeting/#welcome-mishelle","title":"Welcome Mishelle","text":"<ul> <li>Mishelle is our new EA, via Magic</li> <li>We did introductions</li> </ul>"},{"location":"team/meeting-notes/2024/03/2024-03-27-staff-meeting/#016-release-check-in","title":"0.1.6 release check-in","text":"<ul> <li>What\u2019s left to do?</li> <li>Timing and responsibilities</li> </ul>"},{"location":"team/meeting-notes/2024/03/2024-03-27-staff-meeting/#discussion","title":"Discussion","text":"<ul> <li>Pending item: Update Release notes, review, and merge<ul> <li>Anish is prioritizing that</li> <li>Sean might be available to review, if not, Kriti will review and merge</li> </ul> </li> <li>ETA of release<ul> <li>Anish is working on release notes changes</li> <li>Tomorrow</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/03/2024-03-27-staff-meeting/#increasing-development-velocity","title":"Increasing development velocity","text":"<ul> <li>What\u2019s slowing us down?<ul> <li>User calls </li> <li>Research for user help</li> <li>Admin work<ul> <li>Notes, CRM updates</li> <li>Marketing monitoring</li> </ul> </li> <li>Context switching</li> <li>Troubleshooting user reported issues</li> <li>Marketing tasks</li> <li>Discussions</li> <li>Planning / specs</li> </ul> </li> <li>How can we speed things up?</li> <li>Designated \u201cput fires out\u201d person every release?</li> <li>Are we having too many discussions?</li> <li>Any other ideas?</li> </ul>"},{"location":"team/meeting-notes/2024/03/2024-03-27-staff-meeting/#discussion_1","title":"Discussion","text":""},{"location":"team/meeting-notes/2024/03/2024-03-27-staff-meeting/#whats-slowing-us-down","title":"What\u2019s slowing us down?","text":"<p>Pavish\u2019s response from email:</p> <p>I\u2019d like to not talk to users, not work on marketing tasks, reduce discussions, and focus entirely on coding until we get the Beta out. I\u2019m also going to hit a pause on conferences/talks after the one I have on April 6.</p> <ul> <li>Brent:<ul> <li>We\u2019re discussing and planning too much and coding too little.</li> <li>Pessimistic on the timing (June)<ul> <li>Backend work is currently blocked because we\u2019re still planning stuff</li> </ul> </li> <li>We discuss, plan, and get into this cycle, and code little. We should be bold and go forward instead of spending a lot of time on discussions.</li> <li>Should be willing to be wrong, and fix it later.</li> <li>Much bigger priority than user calls</li> </ul> </li> <li>Pavish:<ul> <li>Not a lot of value in installation calls at this point, Mathesar doesn\u2019t seem like it will help people just yet<ul> <li>Maybe try to get information async</li> <li>Not worth engineering time before stable version / beta</li> </ul> </li> <li>Marketing<ul> <li>Conferences + talks</li> </ul> </li> <li>Need to focus on coding</li> </ul> </li> <li>Ghislaine:<ul> <li>Over documenting stuff and not getting started with designing sooner<ul> <li>We could reduce the documentations to conversations</li> </ul> </li> </ul> </li> <li>Anish:<ul> <li>Installation requests take time, mostly identifying what went wrong because user doesn\u2019t provide enough information<ul> <li>GitHub issue without much info: Impossible to install mathesar</li> </ul> </li> <li>There\u2019s a lot of back and forth with the user</li> <li>Brent adds: this is a matter of professional / personal curiosity, but it\u2019s very time consuming to debug<ul> <li>Some users like Alasdiar have issues mostly to do with k8s and not Mathesar. Figuring out what\u2019s wrong with their installation is very time consuming.</li> <li>Not worth it at this juncture.</li> </ul> </li> </ul> </li> <li>Sean:<ul> <li>Hardly spent time coding recently<ul> <li>A symptom of the low-velocity problem</li> </ul> </li> <li>Reduce marketing efforts like reducing user calls</li> <li>Suggests that we change our approach to product design to design more modular features that users can compose in more powerful ways. E.g. our custom types functionality, the data explorer</li> <li>Performance problems are blocking us from endorsing Mathesar, so in a way, we haven\u2019t genuinely launched Mathesar<ul> <li>After Beta, we could spent a lot of time marketing</li> <li>Kriti:<ul> <li>Our objective was to see what people think of Mathesar when we launched.</li> <li>Now we have a clear idea of what\u2019s preventing users getting started with Mathesar. We had no external feedback before launch.</li> </ul> </li> </ul> </li> <li>Different process for planning<ul> <li>Very important to make sure everyone\u2019s on the same page</li> <li>We need more planning but the right kind of planning</li> <li>A top down approach might be better than everyone pitching in and figuring things out together<ul> <li>Could be either Kriti for everything, or one \u201cowner\u201d who is empowered to make decisions<ul> <li>Like Brent: architecture and Pavish: permissions</li> <li>Specs could be very useful, opinion diverges from Brent</li> <li>1:1 conversations to get it to completion</li> <li>Spec is source of truth, interface that glues other conversations together</li> </ul> </li> </ul> </li> <li>Brent\u2019s \u201crebuttal\u201d:<ul> <li>Agrees it makes sense for architecture notes</li> <li>There\u2019s no source of truth for permissions, it\u2019s nice to have a spec<ul> <li>HackMD, Figma</li> </ul> </li> <li>Brent doesn\u2019t want to have specs for too far into the future, just this month</li> </ul> </li> <li>Pavish:<ul> <li>Permissions had 1:1 conversations, but UX/DB concerns are different, the documents were meant to discussions</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/03/2024-03-27-staff-meeting/#what-do-we-do-about-it","title":"What do we do about it?","text":"<ul> <li>Come back to how to build new features discussions (specs, planning, higher-level product design) after beta</li> <li>This call, focus on beta action items</li> <li>Permissions - sort out metadata permissions</li> <li>Talking to users is not worth engineering time, not high value<ul> <li>Definitely not worth two engineers</li> <li>Sean can join without much prep</li> </ul> </li> <li>Disable request installation help on the site</li> <li>No more conferences until we have Beta, other than the ones we\u2019ve already planned</li> <li>Reducing context switching:<ul> <li>Eg., Logging things in CRM can be taken over by Mishelle</li> <li>Brent: User requests, handling bugs<ul> <li>Would have to recreate a setup to get into these and it\u2019s affecting current work.</li> <li>It might be better for us if users reported bugs on GH than sending an installation help email</li> </ul> </li> </ul> </li> <li>How much work do we put into troubleshooting?<ul> <li>Kriti: Having a person every release to put fires out i.e. identifying severity of issues in each release<ul> <li>Sean: This is something I consider part of the repo admin work to identify the severity of issues and loop people in as necessary</li> <li>Sean\u2019s just going to do this, no rotation for efficiency</li> </ul> </li> </ul> </li> <li>Planning:<ul> <li>Don\u2019t add things, focus on beta stuff</li> <li>Plan multiple releases out?<ul> <li>No</li> </ul> </li> </ul> </li> <li>Discussions:<ul> <li>Time spent is fine, blockages are bad</li> <li>Moratorium on ticket planning meeting until after beta</li> <li>team events stay as-is</li> <li>weekly meetings stay as-is</li> <li>people consider 1:1s on their own, reduce if needed</li> <li>Mishelle is going to take care of incoming communications like syften<ul> <li>Sean responds to Syften notification like discussions that come up on Reddit<ul> <li>Sean will continue doing that</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/03/2024-03-27-staff-meeting/#beta-timeline","title":"Beta timeline","text":"<p>Which release should we aim to be the beta?</p>"},{"location":"team/meeting-notes/2024/03/2024-03-27-staff-meeting/#discussion_2","title":"Discussion","text":"<ul> <li>Pavish proposed June<ul> <li>Brent:<ul> <li>We can do enough on the new architecture by June</li> <li>Blocked by outside influence so not sure about committing to the timeline<ul> <li>Metadata permissions</li> </ul> </li> <li>Once we have plan for the first few steps, we can get started on code</li> <li>There will be frontend work for it and there\u2019ll be back and forth. We will not be implementing this for a month.</li> <li>It might take July (Pretty aggressive deadline).<ul> <li>We\u2019ll have to cut scope in May based on this deadline.</li> </ul> </li> </ul> </li> </ul> </li> <li>What\u2019s blocking permissions backend work?<ul> <li>Mainly namespaces for metadata permissions</li> </ul> </li> <li>Deadline: July<ul> <li>Including backend, frontend, testing</li> <li>Backend will do tables and columns, then frontend can work on that while backend moves on to other things</li> </ul> </li> <li>Sean:<ul> <li>Unknowns:<ul> <li>Metadata: Doesn\u2019t change time whatever approach we go with</li> <li>Schema level permissions</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/03/2024-03-27-staff-meeting/#permissions-discussions","title":"Permissions discussions","text":"<p>This was a short meeting after the staff meeting, attended by Kriti, Brent, Pavish, and Sean</p> <ul> <li>Metadata permissions - decision made<ul> <li>Users will be tied to the exploration permissions directly instead of the role.</li> <li>We\u2019ll have to tie roles and exploration permissions to the Mathesar user</li> <li>Having a single option to read/read-write Mathesar metadata (includes Explorations &amp; all metadata namespaced on the database)</li> </ul> </li> <li>What is a base in Mathesar - Schemas vs Databases? - decision made<ul> <li>Users will create a role with access to just a particular schema, and the permission will depend on that role. There will be a user database entry where the permissions for metadata will also be setup.</li> </ul> </li> <li></li> </ul>"},{"location":"team/meeting-notes/2024/04/2024-04-03-meeting-notes/","title":"2024-04-03 staff meeting notes","text":""},{"location":"team/meeting-notes/2024/04/2024-04-03-meeting-notes/#016-release-retrospective","title":"0.1.6 release retrospective","text":""},{"location":"team/meeting-notes/2024/04/2024-04-03-meeting-notes/#what-went-well","title":"What went well?","text":"<ul> <li>Kriti:<ul> <li>Release out on time!</li> <li>People seemed less stressed.</li> </ul> </li> <li>Pavish:<ul> <li>Release went smoothly and it didn\u2019t feel like an event we all were involved deeply in (this is good!).</li> </ul> </li> <li>Ghislaine: <ul> <li>Planning seems to be working. We are making iterative improvements after each release.</li> </ul> </li> <li>Brent<ul> <li>Seemed to take less mindshare than normal</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/04/2024-04-03-meeting-notes/#what-couldve-gone-better","title":"What could\u2019ve gone better?","text":"<ul> <li>Kriti:<ul> <li>Release took until the end of the month, not much time to do more work until we cut the April release.</li> </ul> </li> <li>Pavish:<ul> <li>QA tasks could have been planned and assigned ahead of time.</li> </ul> </li> <li>Ghislaine:<ul> <li>I was confused by the initial QA assignments. I also don\u2019t have much experience triaging new bugs, not clear how to assign milestones / decide if they should be prioritized etc.</li> </ul> </li> <li>Anish:<ul> <li>Release could\u2019ve gone smoother if I clearly knew what should go in the QA plan and release notes. Which has now been documented by Sean for upcoming releases.  </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/04/2024-04-03-meeting-notes/#shout-outs","title":"Shout outs","text":"<ul> <li>Kriti:<ul> <li>Anish for owning the release, communicating progress, and ensuring it got out.</li> <li>Pavish for helping Anish.</li> <li>Pavish for Japanese UI translations - long time in the making.</li> <li>Brent for taking the initiative on Python/Postgres version support and Anish for doing the work.</li> <li>Sean &amp; Ghislaine for usability analysis and long text field work.</li> </ul> </li> <li>Pavish:<ul> <li>Anish for doing a splendid job as the release owner.</li> </ul> </li> <li>Ghislaine:<ul> <li>Anish did a great job as first-time release owner.</li> <li>Sean for thorough QA and testing the Japanese translation.</li> </ul> </li> <li>Anish:<ul> <li>Pavish &amp; Kriti for guiding me through the release process.</li> <li>Sean for smoothing out our release processes.</li> <li>Everyone for cooperating with me.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/04/2024-04-03-meeting-notes/#ideas","title":"Ideas","text":"<ul> <li>Kriti:<ul> <li>Aim to ship release quickly after it\u2019s cut, hopefully that week.</li> </ul> </li> <li>Brent: Don\u2019t use internal for QA, deployments get inconsistent</li> <li>Pavish: QA should be handled by only 2 people per release (for minor releases). One of them should be the release owner.</li> </ul>"},{"location":"team/meeting-notes/2024/04/2024-04-03-meeting-notes/#action-items","title":"Action items","text":"<ul> <li>Plan a focused meeting around QA (assigned to Ghislaine)<ul> <li>Figure out how installation and upgrade testing should work <ul> <li>Minimal fuss, easy cloud deployments, plan for testing should balance thorough testing from user standpoint with minimal work on our end</li> </ul> </li> <li>Figure out who\u2019s doing the prescriptive / tailored user QA<ul> <li>We need a previous release deployed to check for regressions</li> </ul> </li> <li>Who\u2019s doing the infra work</li> <li>Aim to reduce number of people in QA process</li> <li>Document QA process better</li> <li>Should we do tailored QA mid-cycle before the release is cut?</li> <li>Check QA plan basecamp task after the meeting</li> </ul> </li> <li>Get Demo working reliably before the ChennaiFOSS conference</li> </ul>"},{"location":"team/meeting-notes/2024/04/2024-04-03-meeting-notes/#017-planning","title":"0.1.7 planning","text":""},{"location":"team/meeting-notes/2024/04/2024-04-03-meeting-notes/#pre-meeting-notes","title":"Pre-meeting notes","text":"<ul> <li>Pavish:<ul> <li>I don\u2019t think we should release when a month has no PRs merged. We should also determine if merged PRs are worth making a release for.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/04/2024-04-03-meeting-notes/#notes","title":"Notes","text":"<ul> <li>Release owner: Ghislaine</li> <li>Release cut date: Apr 15</li> <li>Closing out 0.1.6<ul> <li>Debug images for 0.1.6?<ul> <li>Brent will do this today</li> </ul> </li> <li>Documentation task is moved to 0.1.7</li> </ul> </li> <li>General question: are we okay with a month that has zero PRs merged?<ul> <li>Are we okay skipping months?</li> <li>Yes, if there\u2019s no work, there\u2019s no use making a release.</li> <li>But make sure to have a retro every month to evaluate why we didn\u2019t have PRs.</li> </ul> </li> <li>Should we do monthly releases given that beta is top priority?<ul> <li>Yes, help us establish release cadence<ul> <li>Builds trust for users to know changes come frequently</li> <li>Release best practices figured out before beta, we\u2019ll need to release quickly in response to user feedback</li> </ul> </li> <li>Lowers QA effort per-release</li> <li>Help us process-ize release</li> <li>Better CI setup and regular / mid-cycle QA will also help</li> </ul> </li> <li>What should go in this release?<ul> <li>What\u2019s blocking beta work on backend refactor and permissions?</li> <li>0.1.7 work to consider<ul> <li>Backend refactor</li> <li>Basecamp project tasks: https://3.basecamp.com/5718119/buckets/36802215/todosets/7206519344</li> <li>GitHub milestone: https://github.com/mathesar-foundation/mathesar/milestone/75</li> <li>Record page changes: https://hackmd.io/@mathesar/BJmQzqWyC</li> <li>Markdown editor: https://hackmd.io/1o57ZQYTSZiqRJA3CqoeBw</li> <li>Cell selection</li> <li>Get Demo working properly</li> <li>Try to get installation / upgrade outsourced</li> </ul> </li> </ul> </li> <li>Figure out how to unify tracking \u201ccurrent priorities\u201d vs. \u201cdefinitely in this release\u201d </li> </ul>"},{"location":"team/meeting-notes/2024/04/2024-04-03-meeting-notes/#final-list-for-release","title":"Final list for release","text":"<ul> <li>Cell selection - touches a lot of frontend code, lets get this merged</li> <li>Backend refactor<ul> <li>Get initial RPC endpoint + frontend work merged</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/05/2024-05-30-maintainer-meeting/","title":"2024-05-30 maintainer meeting","text":"<p>Attendees: Sean, Brent, Anish, Pavish, Ghislaine</p>"},{"location":"team/meeting-notes/2024/05/2024-05-30-maintainer-meeting/#permissions-design-review","title":"Permissions design review","text":"<p>Continued from 2024-05-29 meeting.</p> <ul> <li>We looked at the newest design, which showed how database roles and login configurations would be handled at the database server level.</li> <li>We agreed that DB server roles can be handled without storing nicknames as comments in PostgreSQL, nicknames can be stored in the Django DB.<ul> <li>Are nicknames even necessary?</li> <li>No, it\u2019s simpler to remove them for now, we can always add them later.</li> </ul> </li> <li>How do role assignments work in context of the data model?<ul> <li>Roles are mapped per database rather than per server</li> <li>A user can have different roles for different databases on the same server.</li> <li>This seems like it might confuse users.</li> <li>Trade offs:<ul> <li>Assigning different roles to the same user in different databases offers more flexibility.</li> <li>Having one role per user across all databases on a server offers simplicity.</li> </ul> </li> <li>Flexibility / offering more control to users managing multiple DBs seems better \u2013 let\u2019s stick with current approach.</li> </ul> </li> <li>We reviewed more UX changes around role assignment and login flow.<ul> <li>Hard to fully grok UX during meeting.</li> <li>May need to address product questions about how roles are encapsulated before we dive into UX critique.</li> </ul> </li> <li>Should users should be allowed to change the database server associated with a configured database?<ul> <li>Use case: migrating databases to new servers</li> <li>Adds too much complexity, we don\u2019t want this for beta</li> <li>Same applies to changes in hostname and port for database servers, we won\u2019t allow editing them for now</li> </ul> </li> <li>How do we handle DB role information when deleting databases?<ul> <li>Users might assume that when they delete a database, all associated data \u2014 including user roles, access control information, and passwords \u2014 will be deleted automatically.</li> <li>We should ensure that when the user deletes the last database on a server, the system fully clears associated data.</li> <li>We can use full cascade deletion.<ul> <li>We could use triggers or foreign key constraints to implement this.</li> <li>Triggers are less visible and harder to maintain, FKs are the more natural way to handle this, can use multi-column FKs, won\u2019t obscure the logic.</li> <li>Let\u2019s use FKs<ul> <li>Also better support within Django</li> </ul> </li> </ul> </li> <li>We should implement this for the beta.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/05/2024-05-30-maintainer-meeting/#cascade-if-exists-if-not-exists","title":"CASCADE, IF EXISTS, IF NOT EXISTS","text":"<p>I [Sean] think our codebase has some accidental complexity in how the DB layer and service layer are handling things like <code>cascade</code>, <code>if_exists</code>, and <code>if_not_exists</code>.</p> <p>For example\u2026</p> <ul> <li>When creating a schema, we have an <code>if_not_exists</code> parameter implemented at the lower levels of code but not implemented at the higher levels of code.</li> <li>From the UI, if I attempt to create a schema with a name that already exists, the UI shows the dreaded XHR error 500. From the user\u2019s perspective, I think this behavior is mostly fine. The error message should be improved, but the fact that it shows an error is perfectly acceptable.</li> <li>To me, this indicates that nobody has ever bumped into this from a user\u2019s perspective. And it shows that the lower level complexity is unnecessary for our current product. I don\u2019t want to spend time carrying over that complexity through this refactor.</li> </ul> <p>If we can reduce complexity like that while we\u2019re wrangling all this code to fit the new RPC patterns, I think it would be a boon for our codebase and also reduce implementation time.</p> <p>If we can identify some common approaches to these types of SQL options, then I think we can reduce complexity by hard-coding the common approach at the lowest level (i.e. in the final SQL that gets run) and avoiding the need to pass parameters further up the stack.</p> <p>My proposal:</p> <ul> <li> <p>We keep parameters for <code>CASCADE</code>. I think they may end up being useful in the short term. We also have some inconsistent behavior from a user\u2019s perspective here. For example, schemas are dropped with CASCADE whereas rows are not. I think that preserving a cascade parameter would allow us to iron out these inconsistencies by eventually adding UI for it. I\u2019d actually like to expose a cascade parameter at the API layer right now.</p> </li> <li> <p>When creating DB objects, we don\u2019t use <code>IF NOT EXISTS</code>. We just expect that an error will be thrown if we try to create something that already exists. If these errors become problematic for users, then we think about the best way to solve that problem at that point. This change will allow us to stop passing around <code>if_not_exists</code> parameters.</p> </li> <li> <p>Similarly, when deleting DB objects, we don\u2019t use <code>IF EXISTS</code>. We just expect that an error will be thrown if we try to delete something that doesn\u2019t exist.</p> </li> </ul>"},{"location":"team/meeting-notes/2024/05/2024-05-30-maintainer-meeting/#discussion","title":"Discussion","text":"<p>Everyone was in agreement that implementing these is additional complexity we don\u2019t need right now.</p>"},{"location":"team/meeting-notes/2024/05/2024-05-30-maintainer-meeting/#exploration-association-strategy","title":"Exploration association strategy","text":"<p>Since I [Sean] was absent from the last meeting, I\u2019d like to circle back to this topic and make a stronger case for option <code>A</code>.</p>"},{"location":"team/meeting-notes/2024/05/2024-05-30-maintainer-meeting/#discussion_1","title":"Discussion","text":"<ul> <li>Explorations are associated with schemas right now, and names need to be unique per schema.</li> <li>Do we want to redo this, given that we\u2019re not sure about the future of explorations?</li> <li>Probably not worth redoing right now. </li> <li>Let\u2019s stick with current strategy.</li> </ul>"},{"location":"team/meeting-notes/2024/06/2024-06-04-maintainer-meeting/","title":"2024-06-04 maintainer meeting","text":"<p>Attendees: Sean, Brent, Anish</p>"},{"location":"team/meeting-notes/2024/06/2024-06-04-maintainer-meeting/#identifier-terminology","title":"Identifier terminology","text":"<p>Question: What terminology do we want to use for the identifiers of database objects? How consistent do we want to be with that terminology across our stack? For example, we will be identifying schemas by their Postgres oid values. Do we want to call this an <code>oid</code>? Or an <code>id</code>? And if we don\u2019t care about consistency, then this question becomes relevant separately at the DB layer, the service layer, the API layer, and the front end. The question probably applies to DB objects that we current manage: schemas, tables, columns, and constraints. And it potentially would apply to other DB objects we might manage in the future such as views. It\u2019s also worth considering that columns require two identifier values: the table oid and the column attnum.</p> <p>Brent brought this up during a PR review.</p>"},{"location":"team/meeting-notes/2024/06/2024-06-04-maintainer-meeting/#discussion","title":"Discussion","text":"<ul> <li>Brent:  Don\u2019t care, but have a slight preference for using <code>oid</code> and <code>attnum</code> in the RPC layer.<ul> <li>Sean: we currently use IDs, not OIDs in the frontend.</li> <li>Brent would like to use the campsite principle i.e. change code as we encounter it, rather than doing it all at once.</li> <li>Brent doesn\u2019t care what the frontend does, only cares about API layer.</li> </ul> </li> <li>Sean asked about deleting tables, will we use table ID?<ul> <li>Brent: Will we ever need table OID and schema OID in the same call?<ul> <li>Doesn\u2019t seem that relevant to current discussion, discussion moved away from this topic.</li> </ul> </li> <li>Sean: Should we prefix the name with \u201ctable_[ID]\u201d or \u201ctable_[OID]\u201d, or no prefix?<ul> <li>Brent: prefixing is fine.</li> </ul> </li> <li>Anish: there\u2019s a function that just says \u201cschema\u201d without any ID, do we need to change that?</li> <li>Brent: Maybe skip the whole ID / OID thing altogether, only use \u201ctable\u201d, seems simpler, arguments are typed, so we know it\u2019s an integer.</li> <li>Sean cares more about consistency than the standard we actually decide on, we should have a standard though.</li> <li>Anish likes schema_oid more than schema.<ul> <li>Sean would naturally expect an object if the key was just \u201cschema\u201d</li> </ul> </li> <li>Anish will be tasked with thinking about this more and documenting this in the code standards section of the wiki<ul> <li>Brent: Don\u2019t spend too much time on it.</li> </ul> </li> <li>Not related to architecture, should go in a \u201ccode standards\u201d page on the engineering wiki or in this page https://wiki.mathesar.org/engineering/code-review/backend/<ul> <li>Wiki is messy right now, that\u2019s fine</li> <li>We can reorganize the wiki after beta</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/06/2024-06-04-maintainer-meeting/#conclusion","title":"Conclusion","text":"<p>We need a decision on <code>schema</code> vs <code>schema_id</code> vs <code>schema_oid</code> vs <code>id</code> vs <code>oid</code> - what convention to use for function names, keyword arguments / parameters, etc.</p> <p>Anish will decide, document it here: https://wiki.mathesar.org/engineering/code-review/backend/</p>"},{"location":"team/meeting-notes/2024/06/2024-06-04-maintainer-meeting/#architectural-overhaul-issues-are-not-auto-closed","title":"Architectural overhaul issues are not auto-closed","text":"<p>I (Sean) noticed that this issue was not automatically closed when its associated PR was merged. I think this is because the PR wasn\u2019t merged into develop. Brent and I agreed to organize the architectural overhaul work using these nested meta issues and task lists, and that plan was based (in part) on the assumption that the issues would auto-close (giving us an easy way to track our work). I wonder if it\u2019s worth re-evaluating that work-organizing strategy now. Or is there an easy way to get these issues to auto-close? Perhaps we should just merge all this stuff into <code>develop</code>? We\u2019re not actually breaking anything yet. And the more I\u2019ve been thinking about it, the more I think we\u2019re actually going to need to make all the front end RPC implementation changes in one giant PR (I can explain why).</p>"},{"location":"team/meeting-notes/2024/06/2024-06-04-maintainer-meeting/#discussion_1","title":"Discussion","text":"<ul> <li>This is a workflow issue.</li> <li>Issues aren\u2019t auto-closing because we\u2019re not using the <code>develop</code> branch, so they\u2019re staying open even if the work is done.</li> <li>Maybe we should delete the separate branch and just break <code>develop</code>?</li> <li>The previous workflow plan was based on a workflow where APIs were transitioned one-by-one, so develop would be broken for longer.<ul> <li>But it\u2019s difficult to do since the frontend needs a bunch of different APIs at once.</li> </ul> </li> <li>But if we\u2019re doing this incrementally, then <code>develop</code> will only be broken in small bits, we can delete the architecture branch.</li> <li>We need to figure out when we can call the RPC work good enough for the frontend to start working on it, make shims between REST and RPC endpoints if needed.<ul> <li>All APIs won\u2019t be done by deadline, so we need to figure out a stopping point that\u2019s not \u201call APIs\u201d</li> </ul> </li> <li>We\u2019re changing SQL functions, not really service layer functions, so this will break <code>develop</code> </li> <li>You can\u2019t change the return type of SQL functions, you have to drop and re-create them.<ul> <li>Using a more aggressive strategy to replace SQL functions would solve Anish\u2019s qualm.</li> <li>Only thing affected by more aggressive strategy is if someone uses our SQL functions in their table definitions, which seems unlikely.</li> </ul> </li> <li>We\u2019re spending a lot of time merging various branches, so let\u2019s just get rid of the separate branch and merge it into <code>develop</code><ul> <li>Sean will do this today, make sure CI passes, etc.</li> <li>Brent thinks it should just merge clean.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/06/2024-06-04-maintainer-meeting/#conclusion_1","title":"Conclusion","text":"<p>We\u2019ll get rid of the architecture branch and just use <code>develop</code>. Sean will do this today.</p>"},{"location":"team/meeting-notes/2024/06/2024-06-04-maintainer-meeting/#service-layer-testing-strategy","title":"Service layer testing strategy","text":"<p>To follow up on a discussion in GitHub, I (Sean) think it would be nice to make sure we\u2019re all on the same page about what sort of test coverage we\u2019re aiming for on python functions.</p> <p>With the example in that discussion, I\u2019d like to not add a test right now. Perhaps we would go back and add tests for these functions later on. I have a hunch that we\u2019re going to end up changing these functions around quite a bit before beta. I want to get the broad strokes wired together as quickly as possible. As Brent said, these tests are \u201ckind of a pain to put together\u201d, so I don\u2019t think they\u2019re worth worrying about right now.</p>"},{"location":"team/meeting-notes/2024/06/2024-06-04-maintainer-meeting/#discussion_2","title":"Discussion","text":"<ul> <li>Sean: Tests seem weird and hard to write / not that useful, do we need them now? We might end up changing the RPC functions around a bunch before beta, do we need tests at all? Seems like it\u2019s slowing us down.</li> <li>Brent would rather take them out later if needed, because having these small simple functions to test will make it easier to move things around with confidence.<ul> <li>We don\u2019t have E2E tests, etc.</li> </ul> </li> <li>Sean: Won\u2019t release QA help?<ul> <li>Brent: We\u2019re not releasing for a while.</li> </ul> </li> <li>Brent: These are very simple tests, no Django machinery, no test database, etc.<ul> <li>Sean: this seems to be decreasing usefuless</li> <li>Brent: yes, but if we had functional tests or frontend hooked up, we wouldn\u2019t need this, but gives us peace of mind now</li> <li>Sean doesn\u2019t get the tests yet and would like to make PRs without understanding the tests for the sake of speed<ul> <li>Brent is fine with that for moving fast, although PR validation will take more time on his end for manual validation, but he has a Python script that makes it easier to set up RPC client, etc.</li> </ul> </li> </ul> </li> <li>Brent: Once we have functional tests, we can get rid of these tests, but we don\u2019t want to pause to figure out how to set up functional tests reliably right now.</li> </ul>"},{"location":"team/meeting-notes/2024/06/2024-06-04-maintainer-meeting/#conclusion_2","title":"Conclusion","text":"<p>Brent would like tests would be there, but will merge PRs even if Sean doesn\u2019t write them.</p>"},{"location":"team/meeting-notes/2024/06/2024-06-04-maintainer-meeting/#moving-quickly-by-ignoring-some-details","title":"Moving quickly by ignoring some details","text":"<p>We\u2019ve been going around on some PRs that I don\u2019t think we should be. The goals of the architectural overhaul are:</p> <ul> <li>Get state out of the service layer</li> <li>Move all possible logic to DB functions</li> <li>Improve performance</li> <li>Change the API to RPC style</li> </ul> <p>The goals are not:</p> <ul> <li>Improve code quality (yet)</li> <li>Improve code organization (yet)</li> <li>Improve variable/function names (yet)</li> <li>etc.</li> </ul> <p>I think we\u2019re failing to realize the former because we\u2019re bogged down in the latter (myself included). I\u2019d like to discuss.</p>"},{"location":"team/meeting-notes/2024/06/2024-06-04-maintainer-meeting/#discussion_3","title":"Discussion","text":"<p>Brent:</p> <ul> <li>Most of our PR review comments have not been goal-oriented, we\u2019re trying to improve performance and get rid of state in the service layers.</li> <li>We should all be keeping this in mind, only request changes for egregious stuff.</li> <li>RPC API structure - okay to be a bit fiddly about consistency</li> <li>Variable names, variable orders, etc. - let\u2019s not worry about this</li> <li>Aim for 1 review loop at the most</li> <li>Let\u2019s be concerned less with consistency.</li> <li>We\u2019re all guilty of this.</li> <li>We\u2019re not moving as fast as we should, everyone agrees.</li> <li>Plea: let\u2019s not hold up PRs for consistency, only for egregious stuff.</li> <li>We\u2019re removing so much code! Defer cleanup work until there\u2019s less code everywhere, will even be easier to clean up.</li> </ul> <p>Sean:</p> <ul> <li>Sentiment makes sense.</li> <li>Sean is new to the codebase, it\u2019s useful to know how people are doing things, useful to have these discussions.<ul> <li>There are undocumented code standards that Brent/Anish have sort of agreed on.</li> </ul> </li> </ul> <p>Brent: </p> <ul> <li>All the libraries we use are inconsistent about variable order, etc.</li> <li>It\u2019s good to discuss or write things down, but let\u2019s not hold up PRs.</li> <li>When Sean can do things in A vs. B, Brent is fine with Sean just picking one of the two ways, rather than asking ahead of time.</li> </ul> <p>Sean:</p> <ul> <li>Since Brent is not ahead of Sean / Anish, he\u2019s not setting the standard as much for some things, Anish and Sean are doing things differently.</li> </ul> <p>Brent:</p> <ul> <li>That\u2019s fine, we can merge both!</li> <li>Some mantras that he should probably write down:<ul> <li>at most one user DB call and one internal DB call per RPC endpoints</li> </ul> </li> </ul> <p>Anish is good with moving fast.</p>"},{"location":"team/meeting-notes/2024/06/2024-06-04-maintainer-meeting/#conclusion_3","title":"Conclusion","text":"<p>Everyone agrees!</p>"},{"location":"team/meeting-notes/2024/06/2024-06-18-maintainer-meeting/","title":"2024-06-18 maintainer meeting","text":"<p>Attendees: Sean, Brent, Anish</p>"},{"location":"team/meeting-notes/2024/06/2024-06-18-maintainer-meeting/#comment-or-description","title":"\u201ccomment\u201d or \u201cdescription\u201d","text":"<p>Can we decide on consistent terminology to use in our codebase for PostgreSQL comments/descriptions? Personally, I [Sean] prefer that we stick with \u201cdescription\u201d, because that\u2019s how we portray this concept to the user.</p>"},{"location":"team/meeting-notes/2024/06/2024-06-18-maintainer-meeting/#discussion","title":"Discussion","text":"<ul> <li><code>COMMENT</code> is a SQL syntax thing; Postgres actually uses \u201cdescription\u201d in most places as well e.g. in the pg catalog table.</li> <li>We\u2019re fine with standardizing on \u201cdescription\u201d.</li> <li>We\u2019ll perform a search through the codebase for occurrences of \u201ccomment\u201d and replace them with \u201cdescription\u201d where applicable.<ul> <li>We\u2019ll ensure that wherever we are dealing with PostgreSQL object metadata (like functions, tables, columns), we consistently use \u201cdescription\u201d.</li> <li>Be mindful of edge cases in SQLAlchemy or other tools where \u201ccomment\u201d is used as a keyword and retain it only when necessary.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/06/2024-06-18-maintainer-meeting/#coexistence-of-multiple-patterns-for-quoting-at-the-sql-layer","title":"Coexistence of multiple patterns for quoting at the SQL layer","text":"<p>I [Sean] want to revisit our discussion around quoting SQL values. Here\u2019s what I\u2019d like to propose:</p> <ul> <li>In the <code>msar</code> schema, names in function arguments should be UNQUOTED. (This should already be satisfied.)</li> <li>And in the <code>msar</code> schema, names in function return values should be also UNQUOTED. (This is not currently satisfied, but would only require small changes to satisfy.)</li> </ul> <p>Adopting the second standard above would allow us to proceed incrementally with our quoting refactor. And we could simplify some code as we go. This approach is in line with the way I\u2019ve been structuring my PRs thus far. Basically we could consider the <code>__msar</code> namespace deprecated and we could seek to rewrite functions into the <code>msar</code> namespace as we go, fully adopting the escape-on-output pattern within the <code>msar</code> schema.</p> <p>Previously we agreed that we didn\u2019t want to mix patterns. Indeed I was vocal about this. But my opinion here has changed after some time working with the code. The realization I\u2019ve come to is that we already have multiple patterns in some places. And I\u2019ve noticed bugs due to it. My proposal seeks to slightly move (and clarify) the boundaries around where each pattern is appropriate. Names in arguments and return values would be exclusively quoted within <code>__msar</code> functions. And names in arguments and return values would be exclusively unquoted within the <code>msar</code> schema. Then, the more we wean ourselves off the <code>__msar</code> schema, the more surmountable the quoting refactor would eventually be.</p> <p>To bring our SQL into conformance with the second standard above, I would:</p> <ul> <li> <p>Fix the following functions which currently return quoted values.</p> <ul> <li><code>msar.get_column_name</code></li> <li><code>msar.get_column_names</code></li> <li><code>msar.get_constraint_name</code></li> <li><code>msar.get_relation_name_or_null</code></li> </ul> <p>For each such function we could either: move it into the <code>__msar</code> schema; or we could remove the quoting on the return value (refactoring call sites as needed). We could decide between these two strategies on a per-function basis depending on which strategy appears easiest.</p> </li> <li> <p>Move the following functions into the <code>__msar</code> schema.</p> <ul> <li><code>msar.get_duplicate_col_defs</code></li> <li><code>msar.process_col_def_jsonb</code></li> <li><code>msar.process_con_def_jsonb</code> </li> </ul> <p>This is because they return <code>__msar.col_def</code> and <code>__msar.con_def</code> types which contain quoted values. These functions are not called from the service layer, so this move seems fine to me. Conveniently, those custom types are already in the <code>__msar</code> namespace, as I would expect since they contain quoted values.</p> </li> <li> <p>Rename <code>msar.build_unique_column_name_unquoted</code> to <code>msar.build_unique_column_name</code></p> <p>This is because the fact that the column name is unquoted should be evident from the fact that it\u2019s in the <code>msar</code> schema.</p> <p>It\u2019s interesting to note here that this function calls <code>msar.get_fresh_copy_name</code>, and it\u2019s also is called by <code>msar.build_unique_fkey_column_name</code>. Both of those functions already return unquoted names (without making the lack of quoting clear in the function name or documentation). This is great example of the waters being even muddier than I first realized when I raised this topic. Multiple patterns are already here! I\u2019m out to separate the wheat from the chaff.</p> </li> <li> <p>Rename <code>msar.get_fully_qualified_object_name</code> to <code>msar.build_qualified_name_sql</code></p> <p>This makes it clearer that the return value is an SQL fragment (quoted) and not an (unquoted) name.</p> </li> </ul> <p>The above changes are easy enough that I\u2019d like to do them now, in a dedicated PR.</p>"},{"location":"team/meeting-notes/2024/06/2024-06-18-maintainer-meeting/#discussion_1","title":"Discussion","text":"<ul> <li>The team is fine with adopting Sean\u2019s proposal.</li> <li>No objections to making the changes now since Sean has done the research and knows it\u2019s quick.</li> </ul>"},{"location":"team/meeting-notes/2024/06/2024-06-18-maintainer-meeting/#handling-postgresql-objects-that-are-not-found","title":"Handling PostgreSQL objects that are not found","text":"<ul> <li>This topic came up organically from the previous discussion.</li> <li>How do we handle situations where an object (like a table or column) is not found in PostgreSQL? Should the function return <code>null</code> or throw an error?<ul> <li>Different developers have had different approaches \u2013 some functions return <code>null</code> when an object isn\u2019t found, while others throw an error.</li> </ul> </li> <li>Pros of returning <code>null</code>:<ul> <li>More flexibility - batch processes won\u2019t fail if one object is missing.</li> <li>Absence of object is not necessarily an error, it might not exist.</li> </ul> </li> <li>Pros of throwing an error:<ul> <li>Cleaner error messages, when a <code>null</code> is passed through SQL logic, it can lead to confusing error messages that may not easily trace back to the source of the problem.</li> <li>Explicitly throwing an error provides developers with more direct feedback, making it easier to debug.</li> </ul> </li> <li>No decision<ul> <li>Both approaches have merits depending on the context.</li> </ul> </li> <li>For now:<ul> <li>allow both patterns to coexist</li> <li>remain mindful when consuming functions written by others</li> </ul> </li> <li>Consistency is important<ul> <li>We should adopt a standardized approach to avoid confusion.</li> <li>Should have same behavior across similar functions.</li> <li>We should clearly document <code>null</code> or error behavior, perhaps in docstrings or inline documentation.<ul> <li>Easier for developers to consume.</li> </ul> </li> <li>Function names could also serve as documentation e.g. <code>get_name_or_null</code></li> </ul> </li> <li>Let\u2019s try to adopt these suggestions, but also be okay with embracing some chaos in the short term, can clean up later.</li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-02-maintainer-meeting/","title":"2024-07-02 maintainer meeting","text":""},{"location":"team/meeting-notes/2024/07/2024-07-02-maintainer-meeting/#changes-to-db-function-signatures","title":"Changes to DB function signatures","text":"<p>I [Sean] think we need a consistent approach to changing DB function signatures. Based on this thread, Anish and I seem to have different expectations. This potentially affects the experience of Mathesar administrators wishing to upgrade to Mathesar beta, so I think it\u2019s worth a brief discussion.</p>"},{"location":"team/meeting-notes/2024/07/2024-07-02-maintainer-meeting/#discussion","title":"Discussion","text":"<ul> <li>Changes to arguments (e.g., name, type, return types) in database functions can\u2019t be handled by using <code>CREATE OR REPLACE</code>.<ul> <li>Would cause errors.</li> </ul> </li> <li>Approaches:<ul> <li>We could have an upgrade script that drops all functions in the Mathesar namespaces one at a time, without cascading.<ul> <li>If time is limited, could drop all functions in bulk without cascading.</li> </ul> </li> <li>We could drop entire schemas with <code>CASCADE</code> to ensure a known state.<ul> <li>This would remove everything and avoid having to worry about function mismatches later.</li> <li>Could add warning to developers about this approach.</li> </ul> </li> </ul> </li> <li>Dropping schemas shouldn\u2019t be a repeated thing, we should send out email notifications to the dev list if we need to do this once.<ul> <li>This is the most robust solution, but can\u2019t be frequent.</li> </ul> </li> <li>Safer approach: if a database function signature is being changed, the PR should include a drop function statement for the old signature, placed just above the new one.<ul> <li>Can manage changes without drops using <code>CASCADE</code></li> <li>Avoids using <code>CREATE OR REPLACE</code> for functions that could otherwise fail due to type mismatches.</li> <li>Good temporary solution</li> </ul> </li> <li>Also need to clean up lingering old functions / schemas, could be good to outsource to a contractor.</li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-02-maintainer-meeting/#conclusion","title":"Conclusion","text":"<ul> <li>When changing a function signature, include a drop function command in your PR.</li> <li>Figure out plan to clean up old functions / schemas</li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-02-maintainer-meeting/#order-of-operations-for-beta-work","title":"Order of operations for beta work","text":"<p>We are very close to our beta deadline and have many interdependencies in our remaining work. We need to sort out our plan for what order we\u2019ll be doing things in and for checking in regularly and eliminating blockers.</p>"},{"location":"team/meeting-notes/2024/07/2024-07-02-maintainer-meeting/#current-state","title":"Current state","text":"<p>Priorities:</p> <ul> <li>Backend RPC refactor</li> <li>Frontend needs to switch to using back end</li> <li>Backend work for permissions</li> <li>Front end work for permissions</li> </ul> <p>To do later: Upgrade testing</p> <p>Main source of blockers:</p> <ul> <li>Frontend for RPC being blocked by backend not being ready</li> <li>Backend of permissions &amp; RPC refactor endpoints operating in the same area</li> <li>Frontend for permissions &amp; RPC refactor endpoints operating in the same area</li> </ul> <p>Ideas:</p> <ul> <li>Finish the databases endpoints first and get rid of the connections endpoints and functions</li> <li>Sean and Pavish can work in parallel on the same thing instead of splitting RPC and permissions work if needed</li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-02-maintainer-meeting/#maintaining-parallel-apis","title":"Maintaining parallel APIs","text":"<p>Currently we are maintaining the REST API while building out the RPC API.</p> <ul> <li>Biggest problem is that there\u2019s two different systems and outputs of one don\u2019t work with input of the other<ul> <li>We do have some scaffolding to help</li> </ul> </li> <li>Previously, we agreed on prioritizing keeping the frontend fully functional, so we are still maintaining the REST APIs.<ul> <li>Do we want to keep doing this?</li> <li>It is a bunch of work.</li> <li>Removing the REST APIs would break most stuff, but will clear a lot of cruft and allow us to move faster on the backend.</li> <li>High risk / high reward.<ul> <li>It means we can\u2019t ship anything if we don\u2019t fix everything.</li> </ul> </li> <li>Breaking stuff / deleting things seems safer from one perspective: we know what\u2019s broken, we\u2019re not assuming.</li> </ul> </li> <li>We could move everything over to RPC without worrying about breaking the frontend<ul> <li>Delete everything in the service layer instead of deprecating it.</li> <li>Don\u2019t need to move users API (not really connected to rest of the app)</li> </ul> </li> <li>Records API may be able to be hedged.<ul> <li>It\u2019s not wired to models like other things.</li> <li>We can maybe do this via REST if needed.</li> </ul> </li> <li>Connections too, but we\u2019re not going to be using connections at all.</li> <li>Explorations and data modeling APIs will be difficult.</li> <li>We won\u2019t know what\u2019s relevant in the common data variable without deleting it and seeing what breaks.</li> <li>We can prioritize things on a page by page basis and get one frontend page working at a time.</li> </ul> <p>Decision: Let\u2019s not maintain the REST API.</p>"},{"location":"team/meeting-notes/2024/07/2024-07-02-maintainer-meeting/#permissions-backend-work","title":"Permissions backend work","text":"<ul> <li>Pavish was planning to do database backend, but there\u2019s no reference point for Django DB changes being changed via RPC functions and needs an example.<ul> <li>Doesn\u2019t feel comfortable establishing a new pattern in the backend codebase.</li> <li>Tables metadata endpoint was just merged, this might serve as the example Pavish needs.</li> </ul> </li> <li>Connection ID needs to be replaced by database ID.<ul> <li>There\u2019s already some sort of backend scaffolding function to bridge these.</li> </ul> </li> <li>Current connection model is the only way to create credentials<ul> <li>We need to replace these, blocking Pavish.</li> </ul> </li> </ul> <p>Blockers:</p> <ul> <li>Database credentials creation backend - blocking Pavish</li> <li>Schemas need to be updated in the common data variable (see common data discussion item below)<ul> <li>Keep the keys, only return schemas and connections, everything else can be empty<ul> <li>Connections doesn\u2019t use schemas anyway.</li> </ul> </li> <li>Breaking everything else is fine.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-02-maintainer-meeting/#rpc-frontend-transition","title":"RPC frontend transition","text":"<p>Sean is working on this.</p> <ul> <li>Sean outlined this approach, but likes Pavish\u2019s approach better</li> <li>Needs some things with common data, discuss when we get to that item in the agenda.</li> <li>Start with DB page, then schema page<ul> <li>Sean will rewrite the above issue in terms of pages instead of phases, and write a list of RPC functions needed per page</li> </ul> </li> <li>Brent and Anish can stay ahead of Sean once there\u2019s a list of functions<ul> <li>Brent likes this, it aligns with current approach</li> <li>As long as records &amp; users can be put off until the end</li> <li>It might require a little bit of extra work on the records and users - use REST for now, switch to RPC if we have time.</li> <li>Frontend shouldn\u2019t need any connective scaffolding, though.</li> </ul> </li> <li>There\u2019s enough pages to work on first that we don\u2019t have to figure out records or users today<ul> <li>Users page frontend changes can be saved until the end.</li> <li>Table page should be prioritized, too central to the app to put off.</li> </ul> </li> <li>Let\u2019s just decide right now that we won\u2019t be migrating records or users, we can rethink this at some point, but let\u2019s not assume we\u2019re rethinking it.</li> <li>How much work does it take to switch to tables / columns to using attnums and oids instead of Django IDs?<ul> <li>Frontend still submits numeric ID, scaffolding needs to be done is filtering column ID, use attnum to get name, delete all id \u2013&gt; attnum getters, and the output also needs to be modified to use attnums instead of column identifiers.<ul> <li>All pretty simple.</li> <li>Output modifiers are simple.</li> </ul> </li> </ul> </li> <li>We are committing to not transitioning records &amp; users to RPC.</li> <li>This work will be organized as part of the GitHub issue above, it will be marked as blocking whatever pages it blocks.</li> <li>Explorations pages - are we doing these in RPC?<ul> <li>SQLAlchemy removal is not a huge priority here.</li> <li>Main issue is that the base table model won\u2019t exist. Don\u2019t want to do scaffolding for permissions.<ul> <li>Postgres has functions for getting table permissions / column permissions that we can use.</li> <li>Also we need to do this for columns in the table page that the user doesn\u2019t have permissions to, so we\u2019ll need to handle this if we\u2019re not migrating the records endpoint.</li> <li>Maybe we should also do records and only defer users.</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-02-maintainer-meeting/#current-work","title":"Current work","text":"<ul> <li>Brent is working on columns metadata, will be done today<ul> <li>Although will need another round for adding metadata at some point</li> </ul> </li> <li>Sean is working on:<ul> <li>Constraints backend REST \u2013&gt; RPC, pretty far along. Almost done, might be easier to finish than to switch tasks right away.</li> <li>Frontend RPC implementation, next step is the tables endpoint, lots of things to do. List / add / patch / delete, putting them into place on the schema page.<ul> <li>Frontend code is messy, trying to figure out quickest path through. Might take a bit.</li> </ul> </li> </ul> </li> <li>Pavish would like to work on homepage &amp; database page - both transitioning and adding permissions stuff<ul> <li>Homepage is fine, doesn\u2019t stop on Sean\u2019s toes</li> <li>Database page - Sean has done some work on it, Pavish should build on top of this.<ul> <li>Sean is laying the groundwork in transitioning from REST to RPC, and Pavish will fill out the APIs / functions / etc. to add additional data.</li> <li>Pavish will work on top of the PR that Sean made.</li> </ul> </li> <li>Pavish will have 1:1 call with Brent to coordinate on backend work, Sean and Pavish talked enough right now to be unblocked.</li> </ul> </li> <li>Ghislaine is working on the DB page and homepage - we\u2019ll be finalizing both of those this week.<ul> <li>Ghislaine and Kriti will do a design session to progress this.</li> </ul> </li> <li>Brent/Anish should make the change for schemas common data in Sean\u2019s RPC frontend branch.<ul> <li>Code to modify is in <code>views.py</code>.</li> <li>We can ignore permissioning common data for now.</li> <li>We will hardcode an empty list for everything except schemas and connections.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-02-maintainer-meeting/#conclusion-action-items","title":"Conclusion &amp; action items","text":"<ul> <li>Decisions:<ul> <li>We are committing to not transitioning users to RPC.</li> <li>We\u2019ll be making common data changes (see below)</li> <li>We need to make a decision on whether to transition records and explorations, is scaffolding and handling permissions issues faster than migrating the endpoints to RPC?<ul> <li>Decide on Monday.</li> </ul> </li> <li>Sean will refactor the GitHub issue organizing backend work by page.</li> <li>We are establishing a new Mon - Thu quick daily standup at 10 AM</li> </ul> </li> <li>Priorities per person:<ul> <li>Anish<ul> <li>common data changes</li> <li>Take over constraints if needed</li> <li>Joinable tables next, used on a few pages and more complex.</li> <li>Types next.</li> </ul> </li> <li>Brent<ul> <li>Finish up columns metadata changes.</li> <li>Database endpoints - databases.list and other endpoints</li> <li>Other issues from 3639</li> <li>Explorations</li> </ul> </li> <li>Ghislaine<ul> <li>DB page</li> <li>Home page</li> <li>Admin page (new)</li> <li>Schema page</li> <li>Table page + public sharing UI changes.</li> <li>We need a place for people to understand who to talk to about getting access to a particular DB / table / schema / role group.</li> </ul> </li> <li>Pavish<ul> <li>Break up this list into Brent and Pavish sections</li> <li>Roles endpoints<ul> <li>roles.list</li> </ul> </li> <li>Database privileges list</li> <li>collaborators.list</li> </ul> </li> <li>Sean<ul> <li>Get constraints work up on GitHub.</li> <li>Refactoring the GitHub issue.</li> <li>Frontend RPC work continued.</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-02-maintainer-meeting/#common_data","title":"common_data","text":"<p>Sean:</p> <p>I made a PR to use schemas RPC APIs in the front end but the <code>common_data</code> part doesn\u2019t work because the backend is still using the deprecated code to supply the schemas list there. I have a vague recollection of listening to a TL;DV recording of Pavish and Brent discussing some plans for refactoring of <code>common_data</code>. I want to make sure we\u2019re all on the same page about our plans for <code>common_data</code>. And I want us to figure out who would be the best person to kick off these changes to that part of the codebase.</p>"},{"location":"team/meeting-notes/2024/07/2024-07-02-maintainer-meeting/#discussion_1","title":"Discussion","text":"<ul> <li>We need to just keep updating common data to use the latest RPC endpoints as we complete them.<ul> <li>We can do it everything module by module.</li> <li>Backend needs to provide one example for schemas, everything else can be done by whoeever\u2019s implementing other pages.</li> </ul> </li> <li>Is everything in common data used?<ul> <li>We\u2019ll figure this out as we go.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-02-maintainer-meeting/#weekly-async-check-in-workflow","title":"Weekly async check-in workflow","text":"<ul> <li> <p>Kailash will no longer be doing the team check-ins on Matrix since Kriti is back to doing regular 1:1s, plus we\u2019re now doing daily check-ins.</p> </li> <li> <p>It\u2019s good to have this process in place, we may implement it again if Kriti has temporary time restrictions.</p> </li> <li> <p>Does anyone have any feedback about the process?</p> <ul> <li>No.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-11-maintainer-meeting/","title":"2024-07-11 maintainer meeting","text":"<p>Attendees: Brent, Pavish (partial), Anish, Sean</p>"},{"location":"team/meeting-notes/2024/07/2024-07-11-maintainer-meeting/#current-work-check-in","title":"Current work check-in","text":"<ul> <li>Anyone have any blockers or priorities that need to change?</li> <li>Pavish: I\u2019m implementing a bunch of endpoints in the same PR, heads up to Brent that it\u2019s going to be large, but it should be simple to review, not a lot going on.<ul> <li>Brent: should probably be fine.</li> <li>Pavish: can split up PR afterwards if it will be a pain to review.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-11-maintainer-meeting/#upgrading-sql-in-our-development-environments","title":"Upgrading SQL in our development environments","text":"<p>I\u2019ve [Sean] found myself running this command quite regularly now:</p> <pre><code>docker exec -i mathesar_dev_db bash -c 'psql -U mathesar' &lt; ./db/sql/00_msar.sql\n</code></pre> <p>I need to run this after pulling the latest changes from our repo. If I don\u2019t, then sometimes things are broken. As far as I can tell, I still need to run this even if I restart Docker. Right?</p> <p>The need to perform this step is not documented anywhere. At the very least, this is a problem for new devs. (Not a big problem right now though.)</p> <p>But the number of SQL files is growing. We already have a few, and Process record summaries in DB layer adds <code>40_record_summaries.sql</code>.</p> <p>I think we need a more robust way to upgrade our development environments with the latest SQL. Some kind of script or something?</p> <p>Comment from Pavish: - This is a bug/regression. The expected behaviour is for the migrations to happen when the service re-starts which is not working currently. I had a small discussion with Brent on this a while back. - Here\u2019s the issue I opened today for this: https://github.com/mathesar-foundation/mathesar/issues/3674</p>"},{"location":"team/meeting-notes/2024/07/2024-07-11-maintainer-meeting/#conclusion","title":"Conclusion","text":"<ul> <li>Probably broke during Brent\u2019s work.</li> <li>We do want the SQL to be upgraded when Docker restarts.<ul> <li>Need to switch to psycopg3 etc.</li> </ul> </li> <li>Anish can work on this. <ul> <li>Not a priority before beta.</li> <li>Can do a 1 line fix to temporary fix it for now.</li> </ul> </li> <li>Anish is fixing this right now.</li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-11-maintainer-meeting/#brent-pr-review-bottleneck","title":"Brent PR review bottleneck","text":"<p>Our current process seems to be that all backend PRs get reviewed by Brent. Can Anish review some too? If so, what is our process for assigning a reviewer?</p>"},{"location":"team/meeting-notes/2024/07/2024-07-11-maintainer-meeting/#conclusion_1","title":"Conclusion","text":"<ul> <li>Default to assign Brent to review backend PRs for now. <ul> <li>If Brent gets too overwhelmed with PR review, then he\u2019ll delegate to Anish as needed.</li> </ul> </li> <li>Feel free to assign Anish directly if it\u2019s an area of the codebase that you know he has worked on previously. </li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-11-maintainer-meeting/#not-found-behavior-in-sql-functions","title":"\u201cNot found\u201d behavior in SQL functions","text":"<p>When our SQL functions are subjected to inputs that don\u2019t yield any results, some functions return NULL, whereas others raise exceptions. We\u2019ve discussed this inconsistency a few times already, and thus far we\u2019ve agreed to postpone any efforts at standardizing these patterns until after beta.</p> <p>But I\u2019d like to present a bug which I hope will make a compelling case for raising exceptions instead of returning NULL. I think it might be worth it now to use exceptions going forward.</p> <p>Pavish encountered a bug in a PR of mine. The bug went like this:</p> <ol> <li>The front end loaded the schemas.</li> <li>Due to an unrelated bug, the loaded schemas had stringified OID values. That bug meant that when attempting to modify a schema, the front end would send an API request that would call <code>msar.patch_schema</code> with a stringified OID. Due to function overloading, <code>msar.patch_schema(sch_name text, patch jsonb)</code> would get invoked.</li> <li>Then the stringified OID would be passed through <code>sch_name</code> into <code>msar.get_schema_oid</code>.</li> <li>Due to the pattern of returning NULL instead of raising exceptions, <code>msar.get_schema_oid</code> would return NULL and the whole operation would basically short circuit from there.</li> </ol> <p>The really bad part about the above bug is that the API gave no indication of failure! That\u2019s bad for users; and it left me with a tricky situation to troubleshoot, costing me time. If that function had raised an exception, I would have caught this bug in my own pre-PR QA instead of during PR review.</p> <p>I think that erring on the side of failing early is likely to be the safer option in most cases. To be clear: I don\u2019t mean all cases. There are inevitably trade-offs here. But I think that raising exceptions has sufficient merit as a pattern to justify its adoption now instead of post-beta.</p> <p>I did a very rough audit of some of our SQL info functions to see what their behavior is:</p> Function \u201cNot found\u201d behavior __msar.get_qualified_relation_name stringified OID __msar.get_qualified_relation_name_or_null NULL msar.get_attnum NULL msar.get_cast_function_name Exception msar.get_column_info NULL msar.get_column_name NULL msar.get_column_type NULL msar.get_constraint_name NULL msar.get_fresh_copy_name Exception msar.get_pk_column NULL msar.get_relation_namespace_oid NULL msar.get_relation_oid Exception msar.get_schema_name Exception msar.get_schema_oid NULL msar.get_table NULL msar.get_table_info NULL <p>I\u2019m proposing that we agree on a standard of raising exceptions. I don\u2019t think this means we need to go change all the non-conformant code. But I\u2019d like to document the standard and employ it going forward.</p>"},{"location":"team/meeting-notes/2024/07/2024-07-11-maintainer-meeting/#discussion","title":"Discussion","text":"<ul> <li>Brent prefers functions that deal with missing data more gracefully and don\u2019t throw exceptions. </li> <li>Sean is concerned that inconsistent exception handling could lead to confusing UI<ul> <li>e.g. looking like a table rename succeeded when it didn\u2019t.</li> </ul> </li> <li>General agreement about coding standards being useful to have, but this doesn\u2019t seem worth it right now.</li> <li>Since there\u2019s no quick agreement, let\u2019s put this discussion in the parking lot and perhaps revisit post-beta.</li> </ul> <p>At this point, Sean, Brent, and Anish switched to working through an open PR together, that discussion is not recorded in these notes.</p>"},{"location":"team/meeting-notes/2024/07/2024-07-16-maintainer-meeting/","title":"2024-07-16 maintainer meeting","text":"<p>Attendees: Brent, Pavish, Anish, Sean.</p>"},{"location":"team/meeting-notes/2024/07/2024-07-16-maintainer-meeting/#breaking-changes-to-develop-branch","title":"Breaking changes to develop branch","text":"<p>This was an impromptu agenda item. Notes below:</p> <ul> <li> <p>Using separate branches for our work has been slightly inconvenient. Sometimes we need to base work off open PRs which target two separate branches. This gets tricky. Also our GH actions currently don\u2019t auto-close issues unless the PR is merged into <code>develop</code>.</p> </li> <li> <p>We decided to rename <code>rpc_frontend</code> to <code>beta</code> for now. This will allow us to target that branch with other PRs that break things (e.g. Anish wants to make a back-end PR that breaks the Explorations model).</p> </li> <li> <p>Do we need the <code>beta</code> branch at all though?</p> </li> <li> <p>We could use <code>develop</code> instead for all our work instead. But we\u2019d need to send an email to the developers mailing list (or perhaps some other list?) notifying Mathesar users that they would no longer be able to run production installations off the <code>develop</code> branch.</p> </li> <li> <p>We agreed that it\u2019s important for us to be able to run a stable version of Mathesar. And we also agreed that we could use <code>master</code> for that purpuos (instead of <code>develop</code>).</p> </li> <li> <p>We\u2019d like to get Kriti\u2019s opinion on potentially merging <code>beta</code> into <code>develop</code>.</p> </li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-16-maintainer-meeting/#filter-formatting-for-record-retrieval","title":"Filter formatting for record retrieval","text":"<p>The current format of the filtering param for records is a bit clumsy and has features we don\u2019t need. An example is: <pre><code>filter={\n  \"and\": [\n    {\n      \"lesser\": [\n        {\n          \"column_id\": [\n            7\n          ]\n        },\n        {\n          \"literal\": [\n            \"500\"\n          ]\n        }\n      ]\n    },\n    {\n      \"greater\": [\n        {\n          \"column_id\": [\n            5\n          ]\n        },\n        {\n          \"literal\": [\n            \"2000\"\n          ]\n        }\n      ]\n    }\n  ]\n}\n</code></pre> I\u2019m [Brent] going to start working on filtering in the database for record retrieval, and I think it would be simpler (and easier for implementation) to simplify that to something like: <pre><code>filter=[\n  {\n    \"method\": \"lesser\",\n    \"column_attnum\": 7,\n    \"value\": 500\n  },\n  {\n    \"method\": \"greater\",\n    \"column_attnum\": 5,\n    \"value\": 2000\n  }\n]\n</code></pre></p>"},{"location":"team/meeting-notes/2024/07/2024-07-16-maintainer-meeting/#questions-to-discuss","title":"Questions to discuss","text":"<ul> <li>Does this form have enough power?<ul> <li>Do we have filters that need multiple columns as input?<ul> <li>No</li> </ul> </li> <li>Do we have filters that need multiple values as input?<ul> <li>No</li> </ul> </li> <li>Do we ever combine filters with any logic other than <code>and</code>?<ul> <li>Yes, we use <code>or</code>.</li> </ul> </li> <li>Do we have preproc on any filter functions?<ul> <li>No</li> </ul> </li> </ul> </li> <li>Is this worth doing for beta?<ul> <li>For the back end, YES. It will save time. But, I\u2019d like to hear the front end perspective on it.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-16-maintainer-meeting/#pavishs-comments","title":"Pavish\u2019s comments:","text":"<p>Do we have filters that need multiple columns as input?</p> <p>Do we have filters that need multiple values as input?</p> <p>Not at the moment.</p> <p>Do we ever combine filters with any logic other than <code>and</code>?</p> <p>Yes. We have <code>and</code> and <code>or</code> at the highest level. We do not have nesting yet.</p>"},{"location":"team/meeting-notes/2024/07/2024-07-16-maintainer-meeting/#conclusion","title":"Conclusion","text":"<p>Not recorded.</p>"},{"location":"team/meeting-notes/2024/07/2024-07-23-maintainer-meeting/","title":"2024-07-23 maintainer meeting","text":""},{"location":"team/meeting-notes/2024/07/2024-07-23-maintainer-meeting/#identifying-role-that-owns-mathesar-internal-schemas-during-upgrade","title":"Identifying role that owns Mathesar internal schemas during upgrade","text":"<p>Context:</p> <ul> <li>Mathesar needs to identify and use the role that owns the <code>msar</code>, <code>__msar</code>, and <code>mathesar_types</code> schemas during upgrade.</li> <li>The upgrade process needs to happen for each connected user database.</li> <li>We can identify &amp; use the owning role(s) if they are configured in Mathesar.</li> <li>There is a chance that the owning roles are removed or we\u2019re unable to migrate the schemas in a database due to password change/expiry.</li> </ul> <p>Questions to discuss:</p> <ul> <li>Our upgrade process is manual &amp; only upgrades the app. The migrations happen during each restart. Should we change this behaviour?</li> <li>How about we include a separate upgrade/migrate admin option for each database in the UI?<ul> <li>We automatically perform it if we have the roles.</li> <li>We prompt the user to intervene if we aren\u2019t able to.</li> </ul> </li> <li>Can we think of a better way to handle this?</li> <li>How much of a priority is this for the beta?</li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-23-maintainer-meeting/#discussion","title":"Discussion","text":"<ul> <li>This is not worth discussing now.</li> <li>We will discuss how to handle upgrades as part of our beta planning discussions, this is already tracked in Basecamp.</li> <li>Let\u2019s focus on finishing permissions implementation first, since we have no bandwidth to implement anything else right now even if we talk about the plan.</li> <li>Pavish added a task for this on Basecamp in the beta release project, we\u2019ll pick it back up when we have capacity.</li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-23-maintainer-meeting/#api-return-value-when-creating-a-table-without-providing-a-name","title":"API return value when creating a table without providing a name","text":"<p>Sean: </p> <p>I\u2019ve hit a small snag and I\u2019d like opinions on the best approach to dealing with it\u2026</p> <p>Mathesar 0.1.7 allows users to create a new table without specifying a table name. Mathesar generates one automatically. Personally, I don\u2019t actually like this feature. I\u2019d rather Mathesar prompt me for a name because renaming it later requires extra steps. To support this feature, our <code>tables.add</code> API supports the ability to auto-generate a table name during creation. But the API only returns the table OID. The front end also needs to know the auto-generated name. Here are the ways I can think of to fix this:</p> <ul> <li> <p>(A) Bodify the return value of <code>msar.add_mathesar_table</code> so that it returns something like <code>{ \"oid\": 12345, \"name\": \"foo\" }</code>. A downside here is that the return value would not be consistent with other return values. But this could be a good opportunity to discuss patterns around return values. Brent recent expressed a though/opinion that perhaps functions like this should return everything they can.</p> </li> <li> <p>(B) Delegate the automatic name generation to the front end. The API would require a name and would fail if the name already exists. The front end would use what it knows about the existing tables to suggest a good name. This has the benefit of simplifying some DB-layer code. We\u2019d even be able to re-use some front end code that\u2019s already in place. A very minor downside is that it would open up a slight possibility of a naming conflict if two users happen to be creating tables close in time to one another.</p> </li> <li> <p>(C) Delegate naming to the user by using a modal to prompt the user to enter a name while creating a table. We already do this for schemas, explorations, and columns, so there might be an argument for prompting with tables in order to be consistent. In terms of usability, prompting is the behavior that I personally find the be the smoothest.</p> </li> </ul> <p>I would say that implementation time is similar for the above approaches.</p> <p>I have a very slight preference for (C), but that\u2019s a user-facing change, so perhaps it\u2019s not worth considering at the moment. I\u2019m also okay with (A). And (B) is probably my least favorite.</p>"},{"location":"team/meeting-notes/2024/07/2024-07-23-maintainer-meeting/#discussion_1","title":"Discussion","text":"<ul> <li>Sean and Brent prefer (C)<ul> <li>API changes would not be less work than UX changes.</li> </ul> </li> <li>We all agree consistency makes sense, but Brent suggests that consistency the other way (creating shouldn\u2019t require names for anything)<ul> <li>Kriti concurs, since it\u2019s also fewer steps for the user.</li> <li>For the best UX, users should be able to get to using Mathesar with their own data in the fewest steps possible.</li> <li>Kriti prefers (A) or (B)</li> </ul> </li> <li>Doesn\u2019t mean we need to make everything consistent right away, just get to consistency eventually.</li> <li>Pavish prefers (A)<ul> <li>Rest of the team agrees.</li> </ul> </li> </ul> <p>Decision: Let\u2019s go with (A)</p> <ul> <li>Sean: This is another data point to consider for consistent data values, although we don\u2019t have to make a decision now.<ul> <li>Pavish would like the entire object returned when creating and patching, but don\u2019t need anything returned for deleting.</li> <li>This will involve more queries and joins on the backend, fine for table creation (a few ms), but maybe not for others.</li> <li>Let\u2019s kick this can down the road.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-24-permissions-retrospective/","title":"2024-07-24 permissions retrospective","text":"<p>Attendees: Mathesar maintainers</p> <p>Let\u2019s talk about the product and design process for permissions - what went well, what didn\u2019t go so well, what can we learn from this process for future features?</p>"},{"location":"team/meeting-notes/2024/07/2024-07-24-permissions-retrospective/#notes-written-before-the-meeting","title":"Notes written before the meeting","text":""},{"location":"team/meeting-notes/2024/07/2024-07-24-permissions-retrospective/#anish","title":"Anish","text":"<ul> <li>I\u2019m happy that we finally came to a conclusion, it really felt like these discussions were never going to end.</li> <li>I really wish we had made incremental progress on permissions with each release rather than doing everything at once.</li> <li>Videos were super helpful for me to reduce the time required to understand the concepts clearly and concisely. I think we should do more of these for complex concepts.</li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-24-permissions-retrospective/#pavish","title":"Pavish","text":"<ul> <li>I\u2019m happy with the final result.</li> <li>It took a lot of time to arrive at our result and often times it felt like I was not making any progress/working and that was frustrating. It felt like I was wasting a lot of time. It\u2019s hard to quantify product work.</li> <li>Balancing user friendly abstractions vs providing raw power vs representing things as they are, was a huge challenge. Not having direct user feedback &amp; not knowing our user base meant we had to satisfy all of these for the broader set of possible users.<ul> <li>Once we reach the point after our beta and get that idea, I think our requirements would be clear for each feature.</li> </ul> </li> <li>Initial group meetings were exhausting.<ul> <li>Explaining the entire thought process that went into a concept was quite hard and it wasn\u2019t possible in group calls.</li> <li>Everyone approached the feature in a different mindset, which was great, but it also meant that I couldn\u2019t answer everyone in the way they approached the problem. 1:1s were more effective.</li> </ul> </li> <li>Feedback that went in a different direction from what I had presented meant that I had to rethink a bunch of stuff to tie the user flow together and go through loop of presenting it to the team again. This is good. The problem was that, with the new concepts, I received completely opposite feedback from what everyone had communicated in the previous meetings. I had to keep going back to square 1 every time this happened.</li> <li>Documentation took a lot of time and did not yield the team understanding I expected out of it. In contrast, designs were way useful in getting the ideas across.</li> <li>1:1s were way better than group calls, but this lead to people still having different ideas in their minds and the final group calls revealed issues and we had to rework on the concepts.<ul> <li>I still think this was better and way less time consuming than having group calls every time.</li> </ul> </li> <li>I realized running meetings was a skill of its own and it\u2019s a hard skill to master.</li> <li>Discussing raw concepts was very hard since they were fluid and I wasn\u2019t entirely confident and opinionated on the raw concepts themselves and my only focus was on the user experience. It was the opposite of discussing code related work and it took a while to get used to.</li> <li>We encountered additional things we hadn\u2019t thought of in the design sessions, even after agreeing on the product spec. Often times in the design process with Ghislaine, we both felt pessimistic and had to pull back from feeling that.</li> <li>Shout out to Ghislaine for bearing with me in the entire set of initial design sessions and for coming up with great designs. The process was mentally draining.</li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-24-permissions-retrospective/#kriti","title":"Kriti","text":"<ul> <li>I think we ended up with a great result.</li> <li>Pavish did a great job driving the project forward - it\u2019s hugely complex and unique and creating a user-friendly AND Postgres-compatible permissions system is amazing - no one else is doing this.</li> <li>I also want to recognize Pavish for being so open to feedback without being defensive, what we started with was very different.</li> <li>We did take a long time and I know the process was opaque and frustrating at times \u2013 what can we learn from that?</li> <li>This process made me realize how much stuff goes into project / product / team / meeting management that I didn\u2019t know I knew.<ul> <li>Upcoming hire should increase capacity for this.</li> <li>I\u2019d like everyone to develop this experience with more support than I was able to give Pavish, but not sure if that\u2019s feasible at our stage.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-24-permissions-retrospective/#ghislaine","title":"Ghislaine","text":"<ul> <li>It was stressful to feel that design was the bottleneck, even though it depended on more people in the team. Sometimes there wasn\u2019t much to do other than trying to push the ideas forward.</li> <li>Design sessions were extremely helpful. I was very happy to have a more participative process.</li> <li>I really like our current solution. It does a good job reflecting what\u2019s really happening at the database level while bridging the gap with less technical users.</li> <li>Even though I understood the technical aspects of roles, many scenarios eluded me, and it was frustrating to run into them during the development of design ideas. I\u2019m not sure how this could be improved. Maybe a more divergent process at the start without thinking about the design itself.</li> <li>Shout out to Pavish for his help in navigating through the messy part of the process.</li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-24-permissions-retrospective/#brent","title":"Brent","text":"<ul> <li>Really excited about the end result</li> <li>I think we took a lot of time to get to the end result, though. <ul> <li>We kept having \u201cfalse agreement\u201d where we (or some subset) thought things were decided, but then had to go back to that decision</li> <li>I think I got pushed into starting from a back end perspective, but we seemed to get more agreement more quickly when we were going through actual UIs, then working back to models, etc.</li> <li>I think we spent too much time overoptimizing with abstractions, straying from one of our core values, representing the DB state directly</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-24-permissions-retrospective/#discussion","title":"Discussion","text":"<p>Much of the initial discussion reiterated the feedback above; that has been omitted from this section.</p> <ul> <li>Permissions in Postgres are a difficult concept to grok, despite reading docs, nuances were not always obvious.</li> <li>The color coded specs were a good idea, neat and clever way to refer to ideas.</li> <li>Sean\u2019s work on user stories ultimately ended up not being helpful.</li> <li>We all agreed we took a lot more time than expected.</li> <li>The team had very different opinions on how to structure the work.<ul> <li>Sean wanted to start with database models.</li> <li>Others wanted requirements, specs, UI.</li> </ul> </li> <li>We need to ensure that the process has enough information for each team member to be able to understand and provide feedback on the idea.<ul> <li>We need to have a product process that supports this.</li> <li>We need to have smaller phases that are more predictable.</li> <li>We will discuss this further when we are building the next feature.</li> </ul> </li> <li>It would\u2019ve been helpful to provide more context on what was going on at the DB layer during meetings.</li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-24-permissions-retrospective/#why-did-it-take-so-long","title":"Why did it take so long?","text":"<ul> <li>Pavish\u2019s perspective<ul> <li>No clear requirements for the feature ahead of time.</li> <li>A lot of information for one person to digest and propose ideas for.</li> <li>Explaining concepts took longer than expected.</li> <li>Team disagreed about more things than originally anticipated.</li> <li>Feedback cycles were long - small amounts of feedback led to an additional week of work.</li> <li>Contradictory feedback on the same decision at different points.</li> <li>Group calls were not helpful, once we got to 1:1s, process went better.</li> </ul> </li> <li>Brent\u2019s perspective<ul> <li>We are weak when it comes to making confident decisions</li> <li>Not enough user feedback to rely on.</li> <li>Not enough material at the top of the funnel.</li> <li>Solving theoretical For future projects of this level of complexity, we should start with someone having a deep understanding and imparting it to others</li> <li>problems, with different team members with different views on what the most important hypotheticals are.</li> <li>All this makes decision making hard.</li> <li>Having Pavish working on product model and Brent working on data model in parallel was difficult, conflicting ideas to resolve.</li> </ul> </li> <li>Ghislaine\u2019s perspective:<ul> <li>Seconding Brent\u2019s perspective.</li> <li>Our product has very different concepts, can\u2019t rely on existing UX from SaaS products<ul> <li>e.g. role groups</li> </ul> </li> <li>Hypothetical user needs complicated things, design was simplified by removing some of this.<ul> <li>e.g. nicknames for databases</li> </ul> </li> <li>Was surprised by the complexity of the work.</li> <li>Moving parts were not anticipated ahead of time.</li> <li>Would have been better to start with drawing UI based on Pavish and Brent\u2019s iddeas, would\u2019ve given everyone more context.</li> </ul> </li> <li>Sean\u2019s perspective:<ul> <li>Permissions has intrinsic complexity because of PostgreSQL, not in our control.</li> <li>Would\u2019ve helped to have a workshop on how Postgres permissions worked before reviewing any proposals.<ul> <li>Originally thought reading docs was unnecessary.</li> </ul> </li> <li>For future projects of this level of complexity, we should start with someone having a deep understanding and imparting it to others</li> <li>We also had some \u201caccidental\u201d complexity based on features assumed early on</li> <li>Start with a higher priority on simplification in the future, we simplified only at the end</li> <li>Order of operations is a different ball of wax<ul> <li>Objectively, this slowed us down because we all had different ideas about the order in which we should do different things</li> </ul> </li> <li>We made a number of agreements which got subsequently unmade.<ul> <li>Different team members had different ideas about what had been agreed upon</li> <li>This meant later we\u2019d realize that we didn\u2019t actually agree on a given point</li> </ul> </li> <li>Didn\u2019t focus enough on resolving fundamental alignment issues at various stages.<ul> <li>e.g. Pavish and Brent not aligned on encapsulation around Feb/Mar</li> <li>e.g. unique constraint debate when reviewing database models</li> </ul> </li> <li>We were not synced up on are understanding of agreements and this was a big reason for our delays.</li> </ul> </li> <li>Kriti\u2019s perspective:<ul> <li>Team members approaching it from different focus.<ul> <li>Pavish: product concept first</li> <li>Sean: data model first</li> <li>Brent: needs to see the UI</li> <li>Ghislaine: UX and usability concerns</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-24-permissions-retrospective/#what-do-people-need-from-the-product-process","title":"What do people need from the product process?","text":"<ul> <li>Pavish:<ul> <li>Would like to see how the user is going to use the product on a daily basis and what features they will be using.</li> <li>Important to agree on this first before worrying about the rest.</li> <li>Would like clear target users to help make design decisions.<ul> <li>e.g. Some users understand roles and some don\u2019t</li> </ul> </li> </ul> </li> <li>Brent:<ul> <li>Seconding Pavish.</li> <li>Even if we start with a hypothetical user, its important to start a process without thinking of what page they are on, or what features they will use, even if this is lower level.<ul> <li>As an engineering team we have a tendency to start product and design process at low level. Users don\u2019t want to create roles, they want to create and store data and retrieve, use and analyse it.</li> </ul> </li> <li>Having user stories should be a crucial part of the design process.<ul> <li>We had user stories for permissions, but too late in the process.</li> </ul> </li> </ul> </li> <li>Ghislaine:<ul> <li>Conversations about user perspective did happen, but late in the process (with Pavish and Kriti)</li> </ul> </li> <li>Sean:<ul> <li>Generally has a clear process when designing a product feature on his owm, follows 5 steps:<ul> <li>Problem the user has</li> <li>Product design (what can a user do with the product to solve the problem)</li> <li>Data model</li> <li>UX (Answering the \u2018how\u2019 question)</li> <li>Graphic design (color, icons)</li> </ul> </li> <li>See Sean\u2019s designs specs on the wiki for examples.</li> </ul> </li> <li>Anish:<ul> <li>We should prioritize dogfooding so that we can get user feedback from ourselves</li> <li>(Team agreed this should be a priority once develop branch is working.)</li> </ul> </li> <li>Ghislaine:<ul> <li>Agreed with Sean\u2019s separation of steps and the data model focused approach.</li> </ul> </li> <li>Brent:<ul> <li>Going through the process via \u2018what can the product do\u201d is a good approach. <ul> <li>Has implications for the data model.</li> </ul> </li> <li>Doesn\u2019t make sense for one person to spec the data model on their own.<ul> <li>Data model and the product need to work together.</li> <li>The same person should work on both.</li> </ul> </li> <li>We need to make sure we\u2019re collaborating in a way that makes sense.</li> </ul> </li> <li>Pavish:<ul> <li>We should have discussions after implementation / release when we don\u2019t have clear requirements, see how users are actually using it.</li> </ul> </li> <li>Kriti:<ul> <li>Commonalities that everyone is pointing out:<ul> <li>Lack of requirements, e.g. we didn\u2019t come up with the concept of ownership until late in the process.</li> <li>\u201cWhat can the product do\u201d is a discussion we need to have at the beginning of future projects.</li> <li>User stories need to be integrated into our process.</li> </ul> </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-24-permissions-retrospective/#wrap-up","title":"Wrap up","text":"<ul> <li>We will circle back to this conversation closer to beta / after beta, when we are planning our next big feature.</li> <li>Foreign data wrappers and worksheets are potemtoal big upcoming projects (although not as complex as permissions)</li> <li>Meeting was useful to surface a bunch of things to help better our process, we will use the feedback to improve our process. </li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-24-permissions-retrospective/#retrospective-summary","title":"Retrospective summary","text":""},{"location":"team/meeting-notes/2024/07/2024-07-24-permissions-retrospective/#what-went-well","title":"What went well?","text":"<ul> <li>Everyone is happy with design</li> <li>Lots of shoutouts to Pavish</li> <li>Shoutout to Ghislaine</li> <li>Color coded named specs were helpful to distinguish ideas</li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-24-permissions-retrospective/#what-did-we-learn","title":"What did we learn?","text":"<ul> <li>Took too long.</li> <li>Process was frustrating, progress was hard to see.</li> <li>We didn\u2019t have a clear context of requirements or user audience.</li> <li>Let\u2019s not write up a bunch of documentation - spec didn\u2019t get the idea across effectively.</li> <li>Technical nuances are hard to learn while designing.</li> <li>1:1s were better than group calls, still faster despite people not being in agreement.</li> <li>Feeling pessimistic can be part of the process.</li> <li>User stories were not useful for this process, despite initial thoughts / effort.</li> <li>We all had different opinions about how to structure the work. Strong opinions about how to approach the work.</li> <li>Videos were helpful for complex concepts</li> <li>Holding all of permissions in your head was hard, it was hard to weigh in when not everything was understandable.<ul> <li>Roles and permissions have less documentation at the DB layer too.</li> <li>Providing concepts within our meetings would have been helpful.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-24-permissions-retrospective/#why-did-it-take-so-long_1","title":"Why did it take so long?","text":"<ul> <li>No requirements for the project.</li> <li>No target user in mind.</li> <li>We needed to come up with a bunch of concepts and problem and solutions that those concepts were needed for.<ul> <li>Problems were not always something the team agreed on.</li> </ul> </li> <li>Getting the team to share a mental model took a while.</li> <li>Presenting concepts - feedback meant that Pavish needed a whole week to rework it into a new concept.</li> <li>We kept going back to ideas from previous concepts after they were rejected.</li> <li>Group calls were not helpful.</li> <li>We don\u2019t have a large number of users telling us what pains them, so we\u2019re in a weak position to make confident decisions, usually requirements are driven by user feedback.<ul> <li>Theoretical users with theoretical problems - everyone has a different view of this, and everyone is pretty experienced and opinionated.</li> <li>Everyone has different hypotheticals based on past experience.</li> <li>This seems likely to be a problem for future features e.g. merging table and exploration view.</li> </ul> </li> <li>Getting elements from other SaaS products was not helpful since our product is not similar.</li> <li>Projects idea for UX was mainly to address Brent\u2019s idea of encapsulation.<ul> <li>Editing the password applies to all DBs - took two months to get there.</li> <li>Not synced up on understandings of agreements.</li> </ul> </li> <li>Product work vs. data model being developed separately was a big issue.</li> <li>All the moving parts were not anticipated ahead of time. Ghislaine being more involved in the beginning with visualizing things Pavish / Brent were discussing would have been helpful.</li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-24-permissions-retrospective/#what-do-people-need-from-product-design-process","title":"What do people need from product / design process?","text":"<p>Product design vs. UX design - blurry lines, everyone is not on the same page. Different people need different things from the process to provide good input.</p> <ul> <li>Pavish<ul> <li>Have a good understanding of users</li> <li>Understand user problems, solve problem in this particular way.</li> <li>This is the way we direct the user to do it.</li> <li>Think about UI problems from a user perspective.</li> <li>We talk a lot, we could\u2019ve just implemented something and waited for user feedback, pick up quick solution instead of before implementing it.</li> </ul> </li> <li>Brent<ul> <li>Good understanding of users</li> <li>As engineers, We think too low level, features, specific flows, what page they are when. What\u2019s possible on the DB, how they fit into what page into they\u2019re on.</li> <li>Users don\u2019t want to create roles or create tables or read tables, they want to manage their sales process (e.g.) and protect their data.</li> <li>User stories should be a crucial part of a healthy design process.</li> <li>Personas. Sally wants to do X.</li> <li>Person working on product spec should also do data model.</li> </ul> </li> <li>Sean<ul> <li>Very clear process for Sean\u2019s brain.</li> <li>Problem that the user has - can be user stories, can be inside the head.</li> <li>Product design - what can the user do with the product to solve the problem.<ul> <li>e.g. Users can set Postgres roles to be owners.</li> <li>People can associate Mathesar users with PostgreSQL roles.</li> </ul> </li> <li>Product design tightly integrated with data model.<ul> <li>That\u2019s why the focus was on encapsulation.</li> <li>What question, not a how question.</li> </ul> </li> <li>UX - answering the \u201chow\u201d question.<ul> <li>UX questions fall into place more clearly once product design is done.</li> <li>Modal, save button, etc.</li> </ul> </li> <li>Graphic design - colors, icons, etc.</li> <li>New DB connection form spec followed this pattern.<ul> <li>Had a data model, the first thing presented in the spec. Problem and product design was not really specified since there was precedent. Then mockups with UX and graphic design.</li> </ul> </li> </ul> </li> <li>Anish<ul> <li>Seems like we want opinions from real users rather than hypothetical users.</li> <li>We could use Mathesar in our team. Set up some kind of project that we can all use Mathesar for.</li> <li>Coming up with concepts - help us with workflow.</li> </ul> </li> <li>Ghislaine<ul> <li>Separation of steps like Sean mentioned.</li> <li>Data model would have helped Ghislaine understand technical issues.</li> <li>Boundary sounds useful.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/07/2024-07-24-permissions-retrospective/#how-do-we-structure-future-projects","title":"How do we structure future projects?","text":"<ul> <li>We need to focus on requirements - how to get to clear requirements from nebulous ideas.</li> <li>We\u2019ll continue this closer to / after beta.</li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-01-meeting-notes/","title":"2024-08-01 maintainer meeting","text":"<p>Attendees: Anish, Brent, Pavish, Sean</p>"},{"location":"team/meeting-notes/2024/08/2024-08-01-meeting-notes/#validation-of-metadata-values","title":"Validation of metadata values","text":"<p>Sean:</p> <p>I noticed a problem and I\u2019m wondering if it\u2019s worth addressing.</p> <p>The API accepts arbitrary strings like \u201cfoo\u201d for metadata stored in Django <code>CharField</code> fields set to have specific <code>choices</code> values.</p> <p>For example on columns we have a <code>bool_input</code> field to set whether to show a checkbox or a dropdown:</p> <pre><code>class ColumnMetaData(BaseModel):\n    # ...\n    bool_input = models.CharField(\n        choices=[(\"dropdown\", \"dropdown\"), (\"checkbox\", \"checkbox\")],\n        null=True\n    )\n    # ...\n</code></pre> <p>But this API request works:</p> <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"columns.metadata.set\",\n  \"id\": 0,\n  \"params\": {\n    \"database_id\": 1,\n    \"table_oid\": 66125,\n    \"column_meta_data_list\": [\n      {\n        \"attnum\": 6,\n        \"bool_input\": \"NOPE!\"\n      }\n    ]\n  }\n}\n</code></pre> <p>I would expect that sort of request to fail based on validation either at the service layer or the DB layer.</p> <p>Weird, right?</p> <p>Is this a problem? Is it worth addressing for beta?</p>"},{"location":"team/meeting-notes/2024/08/2024-08-01-meeting-notes/#discussion","title":"Discussion","text":"<ul> <li>We should fix this eventually, but it seems low priority.<ul> <li>We\u2019ll need to fix this on a field by field basis, even using Django\u2019s <code>full_clean</code> method. Anish tried this.</li> </ul> </li> <li>Let\u2019s not worry about validation for now, treat this as a documentation issue rather than a validation issue.</li> <li>Might be better in the long run for the backend to validate less, and use more unstructured JSON blobs.<ul> <li>Sean has thoughts on this, but putting in the parking lot for now.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-01-meeting-notes/#records-vs-explorations-filtering","title":"Records vs. explorations filtering","text":"<p>Filtering options are different in <code>records.list</code> vs. <code>explorations.run</code>, will this cause an issue for the frontend?</p> <ul> <li>No, because explorations use transformations, don\u2019t filter directly.</li> <li>We don\u2019t expect the paradigm to be the same.</li> <li>Can be addressed later if needed, especially if/when explorations functionality is moved to the database layer.</li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-08-meeting-notes/","title":"2024-08-08 maintainer meeting","text":""},{"location":"team/meeting-notes/2024/08/2024-08-08-meeting-notes/#beta-release-high-level-plan","title":"Beta release: high level plan","text":"<p>Goal: team discussion on how we\u2019re approaching the beta, get to agreement and next steps.</p>"},{"location":"team/meeting-notes/2024/08/2024-08-08-meeting-notes/#release-candidate-approach","title":"\u201cRelease candidate\u201d approach","text":"<ul> <li>We\u2019ve been thinking of the beta as one big release.</li> <li>Instead, we can aim to get a release out ASAP, doesn\u2019t have to be perfect or \u201cthe beta\u201d.</li> <li>We can release a \u201crelease candidate\u201d version that doesn\u2019t need all of the QA and polish that our final beta will need.<ul> <li>Gives us something to work towards in the short term.</li> <li>Good opportunity to engage our community to help test.</li> </ul> </li> <li>We can continue releasing \u201crelease candidate\u201d versions until we are ready to release the actual beta version.<ul> <li>Each new release can have iterative improvements and bug fixes.</li> </ul> </li> <li>We will discuss what\u2019s absolutely essential for the release.<ul> <li>We should bias towards cutting scope and getting something out.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-08-meeting-notes/#scope-of-rc","title":"Scope of RC","text":"<ul> <li>Think of the RC as an alpha release for the beta release</li> <li>We do need to have Mathesar functional for this initial release<ul> <li>But we don\u2019t have to be at feature parity with 0.1.7, can hide some things.</li> <li>We don\u2019t have to have all bugs fixed.</li> </ul> </li> <li>Demo will be left on 0.1.7, any work on demo should be done after the RC.<ul> <li>Lots of work to do to get the demo more reliable.</li> <li>We are also considering getting rid of the demo to reduce maintenance burden.</li> <li>This will be discussed further as part of the beta launch plan.</li> </ul> </li> <li>We are not planning any publicity for the RC, just notifying our existing community.</li> <li>RPC backend work needs to be done, other than connections and users.<ul> <li>Are we keeping database connections?<ul> <li>No, we can delete that code.</li> </ul> </li> <li>We do need to update the types API</li> </ul> </li> <li>Frontend needs to be functional.<ul> <li>We can hide some features, but there shouldn\u2019t be visible errors right away.</li> </ul> </li> <li>Permissions work should be functional. </li> <li>Updating documentation and user guides<ul> <li>We should do this so they\u2019re accurate, but we don\u2019t have to perfect them.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-08-meeting-notes/#scope-related-discussions","title":"Scope-related discussions","text":"<p>What is going to be such a terrible UX for the RC that it\u2019s worth blocking on? </p> <p>We can\u2019t have errors that block the user from doing critical things.</p> <ul> <li>Sharing tables and explorations<ul> <li>Should we hide this?</li> <li>Backend implementation is quick, but there are some product decisions that need to be made.<ul> <li>Which role to use while sharing.</li> </ul> </li> <li>That\u2019s the meat of the work.</li> <li>Decision: let\u2019s hide this feature for RC and do the product work for a future release (but before beta)</li> </ul> </li> <li>Removing dead code in the backend<ul> <li>Nice to have, doesn\u2019t block RC.</li> <li>Can be done for beta.</li> <li>Can do this if backend is out of work and needs something to do.<ul> <li>Better than adding new features which could introduce bugs.</li> </ul> </li> </ul> </li> <li>Installation <ul> <li>Documentation should be up to date for RC</li> <li>Brent will take the lead on this, will investigate what needs to be done and send out a proposal.</li> <li>We need to make sure a fresh install with fresh conditions works really well, since this will be the default experience.</li> </ul> </li> <li>UI updates for permissions<ul> <li>Current permissions UI doesn\u2019t account for DB superuser being able to take any action.</li> <li>Installation flow might need UX updates to account for new permissions changes</li> <li>We need to explain how permissioning for explorations work </li> </ul> </li> <li>Other UI updates<ul> <li>Record summary UI might need updates to go with new implementation</li> <li>We should show FK ID for record summaries if we can\u2019t show the summary itself due to permissions issues.</li> </ul> </li> <li>Import page - we don\u2019t show UI for selecting an owner<ul> <li>Tables are owned by user who created the import</li> <li>Others may be able to see the table name but can\u2019t view the table</li> <li>Transferring ownership after creation should still work, should suffice for RC </li> </ul> </li> <li>Column extraction - treat as the same thing as import page</li> <li>Table cells should be non-editable if permissions don\u2019t allow editing<ul> <li>This should be in place for the RC.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-08-meeting-notes/#defer-until-after-rc","title":"Defer until after RC","text":"<ul> <li>Record summary templating<ul> <li>For the RC, record summaries will be read only.</li> <li>User wouldn\u2019t be able to configure the template, just have default record summaries.</li> <li>We can display an info message with a link to the GitHub issue</li> </ul> </li> <li>Superuser permissions UX changes<ul> <li>The operations will still work without any UX changes, the user might just be confused about why they\u2019re able to do something even though they\u2019re not the owner.</li> <li>Design work would just be to provide information.</li> <li>The frontend relies on the privileges provided by the backend to figure out what to disable, and the backend is providing the right information.</li> </ul> </li> <li>Explorations permissions UX changes<ul> <li>Anyone can create explorations, it uses the role of the user who creates it.</li> <li>Exploration will not run if they don\u2019t have privileges to see it.</li> <li>Exploration editing if you don\u2019t have permissions is wonky</li> <li>With some DB permission setups, users can end up in a state where they can create explorations that they can\u2019t run, since it uses their role.</li> </ul> </li> <li>Upgrade experience from alpha version</li> <li>Making table creation patterns across new, imported, extracting column etc. consistent in terms of showing the same permissions-related options<ul> <li>Set owner, etc.</li> <li>What happens if we don\u2019t implement - table will be created under user\u2019s role, and they can transfer ownership after creation</li> <li>Column extraction is less of an issue than import since there\u2019s no liminal table</li> <li>Moving columns will show a permission error if the user can\u2019t perform the operation but that\u2019s fine.</li> <li>Operations from inherited roles will make the new table under the inherited role rather than the original role<ul> <li>We can fix this for beta, not RC. Implementation might be tricky.</li> <li>Transfer ownership will still work for RC.</li> </ul> </li> </ul> </li> <li>Record selector - allow user to edit FK cell IDs if they can\u2019t see or edit record summaries.<ul> <li>We could also allow them not to edit the cell, but we should probably allow whatever PostgreSQL allows.</li> <li>This has an interaction with Postgres REFERENCES permissions, although that\u2019s probably irrelevant to this issue.</li> <li>Do nothing for the RC, probably not even for the beta, we\u2019ll figure this out then.</li> </ul> </li> <li>Record summary display<ul> <li>How does this work if we don\u2019t work on it any more?<ul> <li>The frontend already shows numerical FK if the record summary isn\u2019t given.</li> <li>Backend already returns columns that you have access to.</li> </ul> </li> </ul> </li> <li>Record page - how to deal with permissions issues<ul> <li>What if related tables are not visible?</li> <li>Better UX for this can wait until after RC, current behavior is not catastrophic.</li> <li>Current implementation will break if the user doesn\u2019t have access to some columns especially if there\u2019s a not null, both on the table and record page, but we can fix this for the beta, not the RC</li> <li>We probably also need to show columns that the user doesn\u2019t have access to with a special UI, but this is for the beta too not the RC.</li> </ul> </li> <li>Related records section on record page<ul> <li>Tables page changes should propagate to related records section</li> <li>It\u2019ll show an error, no changes needed for RC</li> <li>Frontend will still get the referent columns, so it will have enough information to render this.</li> <li>Getting column names doesn\u2019t require permissions.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-08-meeting-notes/#versioning-the-rc","title":"Versioning the RC","text":"<ul> <li>Maybe call it 0.2?</li> <li>Are we going to use semantic versioning?<ul> <li>Not sure if it\u2019s ideal for Mathesar anyway since we\u2019re not a library.</li> </ul> </li> <li>Haven\u2019t put a lot of thought into this yet.</li> <li>We may have to do some code work to account for the version name if we change the pattern from our current versioning.<ul> <li>Let\u2019s figure out the version based on what will be the least amount of work, if we need a number and a dot, we\u2019ll do that.</li> </ul> </li> <li>Tabling this discussion until later.</li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-08-meeting-notes/#release-process","title":"Release process","text":"<ul> <li>We\u2019ll generally follow our usual release process.</li> <li>We should update and run through the QA script.<ul> <li>Definitely needs to be updated to account for permissions.</li> <li>Ghislaine will update the script.</li> </ul> </li> <li>We don\u2019t necessarily have to fix most of the bugs we uncover during QA, since this is a testing release.<ul> <li>We\u2019ll triage the bugs on a case by case basis</li> <li>We will fix them before the beta</li> </ul> </li> <li>We don\u2019t need to do translations for this release.</li> <li>We will be doing QA internally for the RC, we\u2019re not going to look into outsourcing yet.</li> <li>All team members should be involved in QA.</li> <li>QA can be started before all of the frontend work is complete, we\u2019ll discuss how to structure that.</li> <li>We will create a QA plan.</li> <li>We need much more extensive QA than just the QA script, definitely for the beta, maybe for the RC.<ul> <li>High risk of regressions, we should spend time trying to find them.</li> </ul> </li> <li>It\u2019s okay to only do the QA script for the RC, the aim of releasing it is to get people to help test, bugs are expected.</li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-08-meeting-notes/#communicating-about-the-rc","title":"Communicating about the RC","text":"<ul> <li>If a new user installs Mathesar do we want them to try out RC or 0.1.7?<ul> <li>0.1.7 for now, since RC will have bugs.</li> </ul> </li> <li>We should make it clear that RC is a work in progress and is a testing build.<ul> <li>Things will be broken.</li> </ul> </li> <li>Where do we communicate about this?<ul> <li>Concerns about giving users the wrong impression.</li> </ul> </li> <li>We will be clear about it in blog, release notes, documentation, wherever we communicate about this.<ul> <li>It\u2019s something we can figure out when we get to it.</li> <li>We are still in alpha, users don\u2019t expect us to be perfect.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-08-meeting-notes/#overall-beta-planning","title":"Overall beta planning","text":"<ul> <li>We\u2019re first going to focus on planning the RC.</li> <li>We will plan remaining beta work after the RC is done.<ul> <li>Could involve more features that are critical for adoption (e.g. exporting)</li> <li>Could involve integrations with PaaS services, etc.</li> <li>Documentation and installation work.</li> <li>Consider implementing a testing strategy.</li> </ul> </li> <li>We won\u2019t discuss post-RC work now.</li> <li>We\u2019ll probably have a soft launch and a hard launch for the beta.<ul> <li>The RC is not the soft launch.</li> </ul> </li> <li>We\u2019ll discuss more at later meetings.</li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-08-meeting-notes/#design-and-product-work-needed-for-the-beta","title":"Design and product work needed for the beta","text":"<p>Collected from above discussions.</p> <ul> <li>Updating UI for the DB superuser</li> <li>Updating UI for explorations - explaining how permissions work (also on Ghislaine\u2019s work)</li> <li>Update post-installation UI to account for permissions</li> <li>Update record summary template configuration UI</li> <li>Ghislaine\u2019s document: https://hackmd.io/yVmQevNwTHa93R0VnzWEMw</li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-08-meeting-notes/#what-do-we-need-for-the-next-release-rc","title":"What do we need for the next release (\u201cRC\u201d)?","text":"<p>Collected from above discussions.</p> <ul> <li>Set users expectations if a new user is trying out Mathesar and sees that things aren\u2019t functional<ul> <li>In the UI</li> <li>In the release notes</li> </ul> </li> <li>QA script update</li> <li>Run through the QA script on the app</li> <li>RPC backend work done (as we\u2019ve specced out, no connections or users, etc.)<ul> <li>Delete RPC functions for connections</li> </ul> </li> <li>Ensure that numerical FKs are returned if the user doesn\u2019t have access to see related table for record summaries</li> <li>Frontend to be functional - whatever that entails<ul> <li>Moving things to RPC APIs</li> </ul> </li> <li>Non-public permissions fully done</li> <li>Update user guide on permissions (Ghislaine volunteered for this)</li> <li>Hide shares?<ul> <li>Will this speed up release?</li> <li>Yes, probably<ul> <li>Pavish: we need product level work on this to account for multiple shares with different users </li> <li>Brent: Backend implementation is quick, but the product level work is still pending, so we can\u2019t start implementing.<ul> <li>How we\u2019re going to decide what role we\u2019re using</li> </ul> </li> <li>We can also defer RPC backend changes</li> <li>Sean is fine with temporarily hiding them, Ghislaine is too. Anish too.</li> </ul> </li> </ul> </li> <li>Fix critical bugs from frontend consuming the RPC </li> <li>Installation documentation updates + any associated work on the product.<ul> <li>Brent will figure this out and let the team know proposal for changes, discuss with Pavish.</li> </ul> </li> <li>Table cell editing working correctly with permissions</li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-08-meeting-notes/#what-do-we-need-between-the-next-release-rc-and-the-beta","title":"What do we need between the next release (\u201cRC\u201d) and the beta?","text":"<p>Collected from above discussions.</p> <p>This is not a comprehensive list, this will be informed by our GTM work and further discussions after we release RC.</p> <ul> <li>Design and product work (see above)</li> <li>Work on shares.</li> <li>Remove vast swathes of dead code in the backend</li> <li>Translations</li> <li>Outsourcing QA?</li> <li>Very thorough QA, hammer at the app beyond the QA script</li> <li>Performance/stress testing</li> <li>testing strategy<ul> <li>We have a bunch of tests, but no overall strategy; so we have a slow testing suite that misses many things</li> <li>We should try to at least have a strategy in mind (if not completely implemented)</li> </ul> </li> <li>Smoothing upgrades</li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-08-meeting-notes/#action-items","title":"Action items","text":"<ul> <li>Ghislaine to update the QA script to add permissions</li> <li>Kailash to flag the discussion about the beta release candidate name</li> <li>Brent to draft a proposal for the installation work.</li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-08-meeting-notes/#velocity-mindset-discussion","title":"Velocity &amp; mindset discussion","text":"<p>Open ended discussion inspired by our development process over the last few months. Shifting from a feature-based mindset and \u201cit would be easy to build this\u201d to a user-based mindset \u201cwhat does the user want to do?\u201d</p> <ul> <li>This is not intended to be a final or comprehensive discussion, just an idea to think about. We\u2019ll discuss again closer to beta.</li> <li>Everything we do should be as simple as it can be. Related to all workflows. Important to build things simpler and tighter across the process.<ul> <li>Including tightening scope.</li> </ul> </li> <li>Don\u2019t have multiple competing goals.<ul> <li>e.g. component library for the frontend, DB library for the backend</li> <li>These might not be the best examples, because modularity has its own benefits and should be a goal.</li> <li>Another example was a usable REST API, making the frontend do more work to so we could architect an easier API for imaginary users.</li> <li>Modularity is a good goal, but encapsulation can go too far.<ul> <li>We don\u2019t need to encapsulate Postgres functionality that the frontend isn\u2019t using.</li> <li>Cut as many corners as we can in lower level things, don\u2019t handle all edge cases yet.</li> <li>Agreed with broader concept, but negotiating with frontend sometimes takes more time than just implementation.      Also consider maintenance burden.</li> </ul> </li> <li>Return values in RPC functions are not used by frontend, null returns would make future refactors easier by avoiding dependency chasing.</li> <li>Another example was the idea of reflecting types dynamically in the frontend, increased code complexity and time, but never done.</li> </ul> </li> <li>The goal is to release the simplest thing for the user.</li> <li>There\u2019s a difference between modularity being a goal and having multiple product / release goals when building a feature.</li> </ul> <p>Lots of strong opinions, but we ran out of time here, we will pick up the discussion in a future meeting closer to beta.  </p>"},{"location":"team/meeting-notes/2024/08/2024-08-28-meeting-notes/","title":"2024-08-28 maintainer meeting","text":""},{"location":"team/meeting-notes/2024/08/2024-08-28-meeting-notes/#record-summaries-update-and-plan","title":"Record summaries update and plan","text":"<ul> <li>We\u2019ve already decided won\u2019t have record summaries editable for the \u201cRC\u201d, but we do want them editable for the beta.</li> <li>Brent will explain the plan for what needs to be implemented to make summaries editable, in case it needs to be implemented when he\u2019s out.</li> <li>Goal for meeting:<ul> <li>Agree on plan.</li> <li>Decide who will implement if we need to when Brent is out.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-28-meeting-notes/#discussion","title":"Discussion","text":"<ul> <li>Team is in agreement that it\u2019s fine to have record summaries not be editable for the \u201cRC\u201d.</li> <li>Sean will look into the bare minimum change we can make to the UI that makes it clear that record summaries aren\u2019t editable / won\u2019t lead the user down a dead end. <ul> <li>Doesn\u2019t have to be a perfect UX.</li> <li>Could be as simple as hiding a section inside the table inspector.</li> </ul> </li> <li>We will need to communicate to users in the RC release notes that this feature is temporarily not working.</li> <li>Sean will be the person to implement once Brent is gone.</li> <li>Brent, Anish and Sean will discuss technical implementation details in a separate call.</li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-28-meeting-notes/#installation-work-plan","title":"Installation work plan","text":"<p>Brent investigated how well installation is working with the new permissions setup, his report is here (doc is private to Mathesar staff).</p> <p>Good news: we\u2019ll need to make fewer changes than originally anticipated.</p> <p>Goal of discussion: figure out a clear plan for installation-related work for the initial \u201cRC\u201d testing release.</p>"},{"location":"team/meeting-notes/2024/08/2024-08-28-meeting-notes/#work-needed-for-installation-configuration-changes","title":"Work needed for installation configuration changes","text":"<p>How much work do we need to ensure we don\u2019t need a superuser to install Mathesar?</p> <ul> <li>Not much.</li> <li>Current docs already say you don\u2019t need to be a superuser, just a database owner.</li> <li>We could make it even clearer, but that seems like work for the final beta, not the RC.</li> <li>For the beta, we should audit the documentation to make sure we\u2019re explaining the permissions we need in a friendly and obvious way.<ul> <li>\u2018What user you use Mathesar with\u2019 vs \u2018What user you install Mathesar with\u2019 needs to be explained</li> <li>Superuser role should be made clear</li> <li>We should also put some work into testing installation without a superuser</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-28-meeting-notes/#work-needed-for-upgrades","title":"Work needed for upgrades","text":"<p>Should we put effort into automating upgrades from 0.1.7 to RC?</p> <ul> <li>We\u2019d need some sort of wizard or clearly documented manual steps.</li> <li>Automating it will be very hard.</li> <li>The way we store database information has changed.<ul> <li>Do we delete database connections and ask the user to reenter?<ul> <li>They could lose data if they don\u2019t have their database password anymore.</li> <li>Not having their DB password seems like an edge case, do we need to even consider it?</li> <li>Even if it\u2019s an edge case, consequences are potentially dire.</li> <li>They\u2019ll also lose explorations and metadata connected to DBs.</li> <li>We could build the backup and restore function we\u2019ve been talking about forever\u2026</li> </ul> </li> <li>What will the experience look like if we migrate some database information?<ul> <li>Will we need new UI?</li> <li>No, the admin will see a list of databases, but they\u2019ll need to go to the roles configuration UI and configure a role.<ul> <li>What if they don\u2019t have create role privileges?</li> </ul> </li> <li>Could be a confusing experience.</li> </ul> </li> </ul> </li> <li>Do we even need to support upgrades?<ul> <li>RC is not really an \u201cupgrade\u201d, it\u2019s a testing build.</li> <li>We won\u2019t be at feature parity with 0.1.7, we won\u2019t have done thorough QA.</li> <li>This release is not for users who want the next version of Mathesar.</li> <li>People shouldn\u2019t be thinking of this as an upgrade.</li> </ul> </li> </ul> <p>Conclusion</p> <ul> <li>We won\u2019t put any work into upgrades for the RC.</li> <li>We won\u2019t be treating the RC as the \u201cnext\u201d release.<ul> <li>Maybe publish to a separate Docker repo, definitely don\u2019t use the \u201clatest\u201d tag</li> <li>Postgres, Python, etc. use the same Docker repo for testing builds, just use tags to differentiate</li> <li>We could even consider an invite-only release</li> </ul> </li> <li>Less work, better communicates the release purpose.</li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-28-meeting-notes/#documentation-updates-for-from-scratch-install","title":"Documentation updates for \u201cfrom scratch\u201d install","text":"<p>Brent ran into a 500 error when testing the \u201cfrom scratch\u201d install, who should work on resolving this?</p> <ul> <li>This is actually an error with the static file setup, not Mathesar.</li> <li>We don\u2019t have pre-built static files for current develop, but we will when we do the release.<ul> <li>That should fix the error.</li> </ul> </li> <li>No documentation updates should be needed.</li> <li>Our usual installation testing process for releases should be enough, it\u2019s already tracked in docs and Basecamp.</li> <li>Anish is most likely to work on this (not because of backend expertise, just based on workload).</li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-28-meeting-notes/#documentation-accuracy-updates","title":"Documentation accuracy updates","text":"<p>We need to go through docs.mathesar.org and ensure our documentation is accurate.</p> <ul> <li>Ghislaine will update user-facing documentation.</li> <li>One of the engineers will update admin-facing documentation, depending on availability.<ul> <li>Should we be setting the <code>OWNER</code> role here?  https://docs.mathesar.org/installation/build-from-source/#installation-steps</li> </ul> </li> <li>This needs to happen before RC.</li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-28-meeting-notes/#onboarding-ui-changes","title":"Onboarding UI changes","text":"<p>Do we need any changes in our onboarding user flow to account for the new permissions setup?</p> <p>We walked through the current process. - Once the user creates the superuser, they go to the database page.</p> <p>Conclusion: Nothing here blocks RC, we should probably consider improving usability for beta.</p>"},{"location":"team/meeting-notes/2024/08/2024-08-28-meeting-notes/#new-documentation","title":"New documentation","text":"<p>We need to make new documentation for how permissions work. Ghislaine will work on this as part of her work on user-facing documentation.</p>"},{"location":"team/meeting-notes/2024/08/2024-08-28-meeting-notes/#access-to-mathesar-schemas-for-public-role","title":"Access to Mathesar schemas for <code>PUBLIC</code> \u201crole\u201d","text":"<p>The Mathesar schemas <code>msar</code> and <code>_msar</code> should both be set up so that <code>PUBLIC</code> has access.</p> <ul> <li><code>PUBLIC</code> is a pseudo role that every role on the database automatically gets.<ul> <li>It\u2019s not shown as a role in the roles table, so needs special handling.</li> </ul> </li> <li>We want to set this up for current objects, but also for any object we create in those schemas in the future.</li> <li>Examples of things namespaced under these schemas:<ul> <li>Our TLD table </li> <li>Functions</li> <li>Sequences</li> </ul> </li> <li>Options for setting up <code>PUBLIC</code> access:<ul> <li>Get rid of everything and recreate after setting up default permissions.<ul> <li>This is part of the long term upgrade strategy, with some caveats.</li> </ul> </li> <li>Go through and do permissions on a per-object basis.</li> <li>Figure out how to upgrade SQL functions.</li> </ul> </li> <li>Getting rid of everything is a problem because we store e.g. record summaries / expressions / templates here.<ul> <li>We need a strategy for how to drop things and what to use <code>CASCADE</code> for.</li> </ul> </li> <li>Can we get away with doing it on a per object basis for now?<ul> <li>We don\u2019t have many tables</li> <li>Postgres automatically grants usage on types and execute on function - this covers a majority of what we have currently.</li> <li>We can just do it manually for now.</li> </ul> </li> <li>Idea: could we have <code>PUBLIC</code> be the owner?<ul> <li><code>PUBLIC</code> is not a true role, not sure if this would work.</li> <li>We\u2019d need to think through how that would work with upgrades.</li> <li>Upgrades need the same role as original installation, that\u2019s a requirement, we\u2019re okay with that.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-28-meeting-notes/#installation-plan-outcomes","title":"Installation plan outcomes","text":"<p>For \u201cRC\u201d</p> <ul> <li>Update documentation<ul> <li>UI documentation (Ghislaine)</li> <li>Installation document (fixing inaccurate - whoever\u2019s free on the engineering team)</li> </ul> </li> <li>Testing install (Anish)</li> <li>Double check <code>PUBLIC</code> permissions for usage on types and execute on function will work (Brent)</li> <li>individually update permissions on tables and usage on schemas for <code>PUBLIC</code> (Brent to create an issue)</li> </ul> <p>For Beta</p> <ul> <li>audit documentation for minimal permission usage<ul> <li>also explain that what Mathesar is installed with isn\u2019t what Mathesar uses day to day</li> </ul> </li> <li>Consider migration / upgrade path from alpha or beta</li> <li>Consider onboarding UI changes</li> <li><code>PUBLIC</code> permissions / ownership - full implementation</li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-29-meeting-notes/","title":"2024-08-29 maintainer meeting","text":""},{"location":"team/meeting-notes/2024/08/2024-08-29-meeting-notes/#typeslist","title":"<code>types.list</code>","text":"<p>What the heck is up with <code>types.list</code>??</p> <ul> <li>The corresponding REST endpoint sometimes takes 5+ seconds to resolve.</li> <li>But the RPC method returns a static blob</li> <li>And that static blob contains a ton of useless currency code data</li> </ul> <p>Do we even need an API for this? Can we hard-code that blob on the front end? And remove the currency codes?</p>"},{"location":"team/meeting-notes/2024/08/2024-08-29-meeting-notes/#discussion","title":"Discussion","text":"<ul> <li>There were 2 REST endpoint types, DB types and UI types.</li> <li>Front end was only using one, we identified the one we were using (UI types) and migrated it to <code>types.list</code> RPC</li> <li>Yes, <code>types.list</code> just returns a static blob</li> <li>Initially, we were going to return metadata about installed types and allow the UI to dynamically only show the types available on the server.</li> <li>That was never implemented.</li> <li>Ideally, we\u2019d do this, but it\u2019s not a priority for beta.</li> <li>DB types are not yet implemented, but it was a list of types in the SQLAlchemy engine.<ul> <li>All Postgres types except for Mathesar custom types.</li> </ul> </li> <li>Blob is not worth filtering dynamically - just data transmission savings.</li> <li>If it\u2019s just a static blob, we don\u2019t need an API at all, we can just store it on the frontend.<ul> <li>Everyone is fine with this.</li> </ul> </li> <li>Will also speed up page loading.</li> <li>Confirmed that types that we don\u2019t have first class support for yet (e.g. <code>CIRCLE</code>) will show correctly as \u201cOther\u201d in the UI.</li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-29-meeting-notes/#conclusion","title":"Conclusion","text":"<p>Move <code>types.list</code> to a static blob in the frontend, remove the API.</p> <p>Sean will trim the currency codes.</p>"},{"location":"team/meeting-notes/2024/08/2024-08-29-meeting-notes/#users-changing-their-own-privileges","title":"Users changing their own privileges","text":"<p>What should we do about user being able to change their own privileges?</p> <ul> <li>For the RC, do we display the owner in the \u2018Granted privileges\u2019 section in the permissions modals?</li> <li>We cannot fully prevent the user from changing their own privileges since the ownership could be inherited, but can be partially prevented by not showing the owning role in the privileges list.</li> <li>What should we do after RC?</li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-29-meeting-notes/#discussion_1","title":"Discussion","text":"<ul> <li>The team reviewed the current UI.</li> <li>We\u2019re fine with not showing the owner in the privileges list for RC.</li> <li>We should figure out a better solution for the beta, let\u2019s add to our \u201cdesign added\u201d list.</li> <li>Owner role may not have the privileges to actually delete the item.<ul> <li>We don\u2019t show the privileges the owner has anywhere.</li> <li>Consider doing this?</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-29-meeting-notes/#default-privileges","title":"Default privileges","text":"<p>We need to be able to display, set, and update default privileges for an object as it applies to all roles.</p> <ul> <li>Users would be able to perform operations on the object even though their roles are not displayed in the permissions modal.</li> <li>Do we need this for the RC?</li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-29-meeting-notes/#discussion_2","title":"Discussion","text":"<ul> <li>We don\u2019t display default privileges anywhere in the UI, it would be nice to do.</li> <li>Not an RC blocker, but let\u2019s track in our \u201cdesign needed\u201d list for beta.</li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-29-meeting-notes/#roles-member-vs-usage","title":"Roles: Member vs Usage","text":"<p>In the roles page, we display all members for a role. However, only members with <code>USAGE</code> access can actually use the parent role without having to explicitly make a <code>SET ROLE</code> query.</p> <ul> <li>Should we show all members on the roles page? (I think we should show them but differentiate them).</li> <li>In all other places where we show child roles (in the permissions modals), we ought to only show members with <code>USAGE</code>.</li> <li>How do we differentiate between members with and without <code>USAGE</code>.</li> <li>Do we need to worry about this for the RC?</li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-29-meeting-notes/#discussion_3","title":"Discussion","text":"<ul> <li>Roles can be inherited in two ways:<ul> <li>Using <code>INHERIT</code> - user gets privileges inherited without switching roles, these roles have <code>USAGE</code></li> <li>Using <code>INHERIT FALSE</code> - user needs to switch roles explicitly to use the role<ul> <li>We don\u2019t have a way to do this through our UI right now.</li> </ul> </li> </ul> </li> <li>For RC, we can only show the roles that use <code>INHERIT TRUE</code> / <code>INHERIT</code>.</li> <li>For beta, we should show both and figure out how to explain the distinction between the two.</li> <li>How do we handle adding child roles via our UI?<ul> <li>We grant with <code>INHERIT</code></li> <li>We need to make this explicit somehow.</li> </ul> </li> <li>What is the use case for this feature?<ul> <li>e.g. Multitenancy, role per client, explicit role switch means that information can\u2019t be leaked.</li> </ul> </li> <li>We could not make any changes for the RC, just explain this is a limitation.</li> <li>For now, only show roles with <code>INHERIT TRUE</code> everywhere, including on the permissions modal.</li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-29-meeting-notes/#conclusion_1","title":"Conclusion","text":"<ul> <li>Only show roles with usage (<code>INHERIT TRUE</code>) in the UI anywhere we show child roles.</li> <li>Track the larger UX issue (differentiate between different types of child roles) as a design issue for beta</li> <li>Pavish to make the necessary GitHub issues and Basecamp tasks for beta</li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-29-meeting-notes/#rolesdelete-complications","title":"<code>roles.delete</code> complications","text":"<p>Since roles are a server level concept in Postgres, a single role can own/have privileges on objects across multiple databases.</p> <ul> <li>To drop a role \u201cX\u201d in postgres, we are first required to reassign ownership of all the DB objects owned by the role \u201cX\u201d another role \u201cY\u201d.</li> <li>This reassignment needs to happen over every database on the database server which we might not have access to.</li> <li>This could make it impossible for us to drop a role if a role owns objects across databases we may have access to.</li> <li>How should Mathesar handle these situations?</li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-29-meeting-notes/#discussion_4","title":"Discussion","text":"<ul> <li>What kind of error should we show for this?<ul> <li>For now, we can just show the same error we get from Postgres.</li> <li>Error message says something like: \u2018This role has dependent objects\u2019</li> <li>Posgres returns all the objects owned by the role, not just the first one, so we can also display them if we\u2019d like to.</li> </ul> </li> <li>No need to track further work.<ul> <li>We can put more effort into better error messages if users give us feedback.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-29-meeting-notes/#visualux-improvements-pr","title":"Visual/UX Improvements PR","text":"<p>How to best submit visual improvements work for review? Here\u2019s the draft PR.</p>"},{"location":"team/meeting-notes/2024/08/2024-08-29-meeting-notes/#discussion_5","title":"Discussion","text":"<ul> <li>Should further work be committed to the same PR or kept separate?</li> <li>Logical separation between PR: table inspector vs. modal improvements</li> <li>Separate PRs are probably easier to review.</li> <li>Rather than attaching a private document, add all information / rationale / guidelines directly to the PR description.<ul> <li>More visible to the community, context all in one place.</li> </ul> </li> <li>Review process should involve one frontend engineer (for code) and Kriti (for visual review)</li> <li>Ghislaine should double check that changes to common components don\u2019t cause visual issues in other places that the component is used.</li> </ul>"},{"location":"team/meeting-notes/2024/08/2024-08-29-meeting-notes/#permissions-ux-comments","title":"Permissions UX comments","text":"<p>Some new minor comments on permissions UX Figma document, do we need to discuss them?</p>"},{"location":"team/meeting-notes/2024/08/2024-08-29-meeting-notes/#discussion_6","title":"Discussion","text":"<ul> <li>Comments are related to the icon, copy, and role indicator consistency.</li> <li>Can Pavish implement the most up-to-date version (after comments are resolved), or would that slow things down?<ul> <li>It won\u2019t slow things down, Pavish will implement.</li> </ul> </li> <li>No need to discuss the feedback here, we\u2019ll discuss async on Figma.</li> </ul>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/","title":"2024-09-18 release planning meeting","text":"<p>Attendees: Adam (partial), Anish, Ghislaine, Kailash, Kriti, Pavish, Sean</p>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#current-status-of-work","title":"Current status of work","text":""},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#seans-high-level-status-report","title":"Sean\u2019s high-level status report","text":"<ul> <li> <p>Database Page: \u2705</p> <ul> <li>RPC changes done</li> <li>Ready for QA except:<ul> <li>Permissions features (which I can\u2019t comment on)</li> </ul> </li> </ul> </li> <li> <p>Schema Page: \u2705</p> <ul> <li>RPC changes done</li> <li>Ready for QA except:<ul> <li>Explorations features</li> <li>Permissions features (which I can\u2019t comment on)</li> </ul> </li> </ul> </li> <li> <p>Import page: \u2705</p> <ul> <li>RPC changes done</li> <li>Ready for QA (I think we should perform extensive QA here)</li> </ul> </li> <li> <p>Explorations: \u274c</p> <ul> <li>RPC needs extensive front end work still, and likely some minor backend work too</li> <li>It\u2019s difficult to accurately estimate the remaining time. Best case: ready for QA Sept 25. Worst case: ready for QA Oct 8.</li> </ul> </li> <li> <p>Record selector: \u2705</p> <ul> <li>RPC changes done</li> <li>Ready for QA </li> </ul> </li> <li> <p>Table page: \ud83d\udfe1</p> <ul> <li>Most front end work done.</li> <li>Tiny bit of front end work blocked:<ul> <li>\u201csplit table\u201d &amp; \u201cmove columns\u201d features in draft PR with further front end progress blocked by backend issue Return value needed from data_modeling.split_table</li> </ul> </li> <li>Some QA could potentially begin, with knowledge of above limitations</li> </ul> </li> <li> <p>Record page: \ud83d\udfe1</p> <ul> <li>Front end work likely done.</li> <li>QA blocked by backend issue: Make records.get work with stringified PK values</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#pavishs-status-report-permissions","title":"Pavish\u2019s status report - permissions","text":"<ul> <li>Database page<ul> <li>Settings tab - Complete, ready for QA</li> <li>Permissions modal<ul> <li>\u2018Share\u2019 tab - Complete, ready for QA</li> <li>\u2018Transfer Ownership\u2019 - pending</li> </ul> </li> </ul> </li> <li>Schema page<ul> <li>Permissions modal<ul> <li>\u2018Share\u2019 tab - Complete, ready for QA</li> <li>\u2018Transfer Ownership\u2019 - pending</li> <li>Disable actions based on user\u2019s privileges - pending</li> </ul> </li> </ul> </li> <li>Table page<ul> <li>Permissions modal<ul> <li>\u2018Share\u2019 tab - Complete, PR open</li> <li>\u2018Transfer Ownership\u2019 - pending</li> <li>Disable actions based on user\u2019s privileges - pending</li> </ul> </li> </ul> </li> </ul> <p>ETA for getting PRs open for the above pending functionality.</p> <ul> <li>20th EOD.</li> <li>My current buffer is exhausted, so I might end up using the weekend as a buffer period if something comes up.</li> </ul>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#anishs-update","title":"Anish\u2019s update","text":"<ul> <li>All issues blocking Sean are resolved.</li> <li>Only 4-5 backend endpoints left for permissions, ETA Friday unless there\u2019s more blocking work from Sean.</li> </ul>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#ghislaines-update","title":"Ghislaine\u2019s update","text":"<ul> <li>QA script for permission is in review.</li> <li>Visual consistency / improvements work PRs are in progress or review, should be done by early next week.</li> <li>Hasn\u2019t started on visual improvements for permissions, planned for next week.</li> </ul>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#adams-availability","title":"Adam\u2019s availability","text":"<ul> <li>Adam is available to help with QA next week.</li> <li>Either in a session, or independently with instructions.</li> </ul>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#release-work-plan-and-timeline","title":"Release work plan and timeline","text":"<p>Here\u2019s the rough work plan and check-in points for the release.</p> <p>We won\u2019t have a specific date we\u2019re aiming for, since the work is pretty well defined but has some unknowns. - Instead, we\u2019ll set up several checkpoints, completing each checkpoint will also trigger beginning other work. - We\u2019ll also check in at the daily progress meetings and evaluate if we can cut scope.</p>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#individual-tasks-were-working-on-other-than-below-checkpoints","title":"Individual tasks we\u2019re working on, other than below checkpoints","text":"<ul> <li>QA script</li> <li>Visual improvements work</li> <li>Other small issues that may come up<ul> <li>Kriti will continue to look through the notes and flag anything we missed.</li> <li>No need to track record summary UI changes or hiding public shares, they are alrwady done.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#1-all-rpc-frontend-work-merged-except-explorations","title":"1. All RPC frontend work merged except explorations.","text":"<p>All balls for this currently in Sean\u2019s court. Once this is done:</p> <ul> <li>Ghislaine will start (unstructured) QA on the <code>develop</code> branch locally.<ul> <li>Mathesar should be set up in production mode for QA</li> <li>Pavish will help Ghislaine set it up. </li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#2-all-planned-work-on-permissions-is-merged","title":"2. All planned work on permissions is merged.","text":"<p>Pavish and Anish are working on this. This triggers:</p> <ul> <li>Kriti &amp; Ghislaine will do a visual review of permissions.</li> <li>Anish will deploy a QA server.</li> <li>Kailash will run through the QA script (except explorations).</li> <li>Adam will help with QA.</li> <li>Ghislaine will work on updating user documentation.</li> </ul>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#3-explorations-rpc-work-is-done","title":"3. Explorations RPC work is done.","text":"<ul> <li>QA on explorations begins,</li> <li>Everyone participates in QA.</li> </ul>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#4-installation-documentation-work-is-done","title":"4. Installation documentation work is done.","text":"<ul> <li>Administrator-focused QA begins.</li> <li>Triage of QA issues to figure out what to fix / what to defer.</li> <li>We fix critical QA issues.</li> <li>Review and fix issues with user documentation</li> </ul>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#5-qa-critical-fixes-complete","title":"5. QA + critical fixes complete","text":"<ul> <li>Release process begins</li> </ul>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#priorities-for-each-person","title":"Priorities for each person","text":""},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#adam","title":"Adam","text":"<ul> <li>Perform QA when ready.</li> </ul>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#anish","title":"Anish","text":"<ul> <li>Backend endpoints for permissions</li> <li>Unblock Sean with backend fixes as needed</li> <li>Installation testing &amp; docs<ul> <li>Talk to Kriti to break down task before getting started.</li> </ul> </li> <li>Perform QA when ready.</li> </ul>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#ghislaine","title":"Ghislaine","text":"<ul> <li>Wrap up visual improvements PRs ASAP to make room for other work.</li> <li>Finish QA script work so QA is unblocked.</li> <li>Review and visual improvements for permissions.</li> <li>User docs for permissions.<ul> <li>Talk to Kriti to break down task before getting started.</li> </ul> </li> <li>Perform QA when ready.</li> </ul>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#kailash","title":"Kailash","text":"<ul> <li>Review QA script from PoV of someone who will be using it.</li> <li>Perform QA when ready.</li> </ul>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#kriti","title":"Kriti","text":"<ul> <li>Continue release planning and organization</li> <li>Perform QA when ready.</li> </ul>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#pavish","title":"Pavish","text":"<ul> <li>Get permissions done.</li> <li>Perform QA when ready.</li> </ul>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#sean","title":"Sean","text":"<ul> <li>Merge non-explorations RPC work</li> <li>Explorations RPC frontend work</li> <li>Perform QA when ready,</li> </ul>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#release-logistics","title":"Release logistics","text":""},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#name","title":"Name","text":"<p>What do we call the release?</p> <ul> <li>\u201crelease candidate\u201d is probably not good, implies too much polish.</li> <li>Language like \u201ctesting build\u201d probably makes more sense.</li> <li>\u201cPre-beta testing build 1\u201d works for people.</li> </ul>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#version","title":"Version","text":"<ul> <li>Do we even need a version?<ul> <li>We\u2019re not supporting upgrades or tagging as <code>latest</code></li> </ul> </li> <li>Where do we use the version?<ul> <li>Someone should chase this down by looking at the code.</li> <li>Off the top of our heads:<ul> <li>GitHub release \u201cobject\u201d</li> <li>Docker build</li> <li>Docs, marketing updates, blog post, social media, etc.</li> <li>GitHub tag</li> </ul> </li> </ul> </li> <li>We need something to name the GitHub tag, etc.<ul> <li>Shouldn\u2019t be <code>0.1.7</code> since this is a very different Mathesar from last release, same version number doesn\u2019t indicate that.</li> <li>Should not be <code>0.1.8</code>, this is not an upgrade (yet)</li> <li>Should not follow <code>number.number.number</code> pattern to make it clear it\u2019s not a usual version.</li> </ul> </li> <li>Beta will probably be <code>0.2.0</code><ul> <li>Not <code>1.0-beta</code> because we don\u2019t have a fixed plan for 1.0.</li> </ul> </li> <li>We could do something like <code>0.2@next.1</code> if we went with how Svelte does things. They have a <code>4.2.19</code> version but also a <code>5.0.0@next.X</code> for next version testing builds.<ul> <li>The <code>@</code> is weird. Other options<ul> <li>0.2.0-testing-1</li> <li>0.2.0-testing.1</li> <li>0.2.0.testing-1</li> </ul> </li> </ul> </li> <li>DECISION: <code>0.2.0-testing.1</code> wins!</li> </ul>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#communication","title":"Communication","text":"<ul> <li>Do we need to make a GitHub release?<ul> <li>No, but GitHub does support marking releases as \u201cpre-releases\u201d and not showing as latest.<ul> <li>Should work for us without any code changes.</li> </ul> </li> <li>Having a GitHub release will make the build more visible.</li> <li>Let\u2019s do it.</li> <li>Sean to do some investigation to ensure that this doesn\u2019t screw up anything for <code>0.1.7</code> BEFORE we make the actual GitHub release changes.</li> </ul> </li> <li>We should do:<ul> <li>Matrix post</li> <li>Blog post</li> <li>Dev mailing list post</li> <li>Twitter post</li> </ul> </li> <li>We need to specify \u201cDO NOT UPGRADE\u201d prominently in all comms</li> <li>Communication ideas<ul> <li>We can use the concept of a \u201ccalf\u201d release (riffing off our elephant logo) to convey that the release is still a bit unsteady on its feet and needs to grow up. :)</li> <li>Good motif to use in comms</li> <li>Can also use \u201cmammoth\u201d motif for indicating final / stable version.</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#publication","title":"Publication","text":"<ul> <li>Where do we host testing instructions?<ul> <li>Blog post seems more appropriate than docs.</li> <li>But we need a place to host docs for the testing build.<ul> <li>New URL?</li> <li>mkdocs version switcher? (we\u2019ve been kicking that can down the road)<ul> <li>Django has development docs hosted this way.</li> </ul> </li> </ul> </li> <li>Let\u2019s do mkdocs version switcher unless it proves untenable.<ul> <li>Sean to try setting it up.</li> </ul> </li> <li>Instructions can live on the docs like the other releases, but the docs site will default to <code>0.1.7</code>.</li> <li>We can link to appropriate versioned docs for testing build when we make our comms about the release.</li> </ul> </li> <li>Docker repo<ul> <li>Can we use Mathesar debug, to indicate it\u2019s a testing build?<ul> <li>Yes, everyone\u2019s in agreement.</li> </ul> </li> <li>We should investigate turning on the debug logging like we have for other debug images<ul> <li>Only if it doesn\u2019t affect performance.</li> <li>We will investigate.</li> </ul> </li> <li>Aside: for final beta version, we should consider setting up <code>mathesar/mathesar</code> repo instead of <code>mathesar-prod</code></li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#community-engagement","title":"Community engagement","text":"<ul> <li>What to ask community for feedback on?<ul> <li>Performance improvements</li> <li>Permissions, how does this work for your use case, etc.</li> <li>Usability feedback?<ul> <li>Give them some hints / specific questions to guide feedback.</li> <li>Need to work on what those are.</li> </ul> </li> <li>That\u2019s enough, don\u2019t want to overwhelm.</li> </ul> </li> <li>How to collect feedback?<ul> <li>Multiple channels to make it easier for different kinds of users.</li> <li>Consider issue template on GitHub<ul> <li>plus issue form</li> <li>for people who prefer structured feedback (like Kriti)</li> </ul> </li> <li>Also encourage email or Matrix feedback that\u2019s unstructured for people who prefer that (like Sean)</li> <li>Can also open a single GitHub discussion thread for reactions on comments about the release.</li> </ul> </li> <li>We should reach out to specific users that we\u2019ve corresponded with and we think would be good fits to test.<ul> <li>Can look through our internal CRM.</li> <li>Kriti has some idea who to start with, should reduce work needed to look through CRM</li> </ul> </li> </ul>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#task-management","title":"Task management","text":"<p>We did not have time to look through GitHub &amp; Basecamp in the meeting, Kriti will follow up via email.</p>"},{"location":"team/meeting-notes/2024/09/2024-09-18-release-planning/#kritis-notes-on-this-topic","title":"Kriti\u2019s notes on this topic","text":"<ul> <li>Ensure 22 open items on Pre-beta test build #1 milestone belong there.</li> <li>Should we split items we\u2019re not doing for this release into new issues?<ul> <li>Architectural overhaul for beta</li> <li>Implement permissions revamp frontend</li> <li>Implement RPC API functions needed for Permissions revamp</li> <li>RPC front end implementation</li> </ul> </li> <li>Walk through work tracked in Basecamp, see if we need to put anything in GitHub</li> <li>Need to create issues for:<ul> <li>table / schema <code>PUBLIC</code> issue, needed for permissions to work</li> </ul> </li> <li>Could be more smaller issues, still going through all the meeting notes.</li> </ul>"}]}